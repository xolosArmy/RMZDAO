import { Unlocker, HashType, SignatureAlgorithm } from './interfaces.js';
export default class SignatureTemplate {
    private hashtype;
    private signatureAlgorithm;
    privateKey: Uint8Array;
    constructor(signer: Keypair | Uint8Array | string, hashtype?: HashType, signatureAlgorithm?: SignatureAlgorithm);
    generateSignature(payload: Uint8Array, bchForkId?: boolean): Uint8Array;
    getHashType(bchForkId?: boolean): number;
    getSignatureAlgorithm(): SignatureAlgorithm;
    getPublicKey(): Uint8Array;
    unlockP2PKH(): Unlocker;
}
interface Keypair {
    toWIF(): string;
}
export {};
