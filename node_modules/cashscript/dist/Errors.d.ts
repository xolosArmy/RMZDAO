import { Artifact, RequireStatement, Type } from '@cashscript/utils';
export declare class TypeError extends Error {
    constructor(actual: string, expected: Type);
}
export declare class OutputSatoshisTooSmallError extends Error {
    constructor(satoshis: bigint, minimumAmount: bigint);
}
export declare class TokensToNonTokenAddressError extends Error {
    constructor(address: string);
}
export declare class NoDebugInformationInArtifactError extends Error {
    constructor();
}
export declare class FailedTransactionError extends Error {
    reason: string;
    bitauthUri?: string | undefined;
    constructor(reason: string, bitauthUri?: string | undefined);
}
export declare class FailedTransactionEvaluationError extends FailedTransactionError {
    artifact: Artifact;
    failingInstructionPointer: number;
    inputIndex: number;
    bitauthUri: string;
    libauthErrorMessage: string;
    constructor(artifact: Artifact, failingInstructionPointer: number, inputIndex: number, bitauthUri: string, libauthErrorMessage: string);
}
export declare class FailedRequireError extends FailedTransactionError {
    artifact: Artifact;
    failingInstructionPointer: number;
    requireStatement: RequireStatement;
    inputIndex: number;
    bitauthUri: string;
    libauthErrorMessage?: string | undefined;
    constructor(artifact: Artifact, failingInstructionPointer: number, requireStatement: RequireStatement, inputIndex: number, bitauthUri: string, libauthErrorMessage?: string | undefined);
}
