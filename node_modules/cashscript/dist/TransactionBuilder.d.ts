import { Unlocker, Output, TransactionDetails, UnlockableUtxo, Utxo, InputOptions } from './interfaces.js';
import { NetworkProvider } from './network/index.js';
export interface TransactionBuilderOptions {
    provider: NetworkProvider;
}
export declare class TransactionBuilder {
    provider: NetworkProvider;
    inputs: UnlockableUtxo[];
    outputs: Output[];
    private locktime;
    private maxFee?;
    constructor(options: TransactionBuilderOptions);
    addInput(utxo: Utxo, unlocker: Unlocker, options?: InputOptions): this;
    addInputs(utxos: Utxo[], unlocker: Unlocker, options?: InputOptions): this;
    addInputs(utxos: UnlockableUtxo[]): this;
    addOutput(output: Output): this;
    addOutputs(outputs: Output[]): this;
    addOpReturnOutput(chunks: string[]): this;
    setLocktime(locktime: number): this;
    setMaxFee(maxFee: bigint): this;
    private checkMaxFee;
    build(): string;
    send(): Promise<TransactionDetails>;
    send(raw: true): Promise<string>;
    private getTxDetails;
}
