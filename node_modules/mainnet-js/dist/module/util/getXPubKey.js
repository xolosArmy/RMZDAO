import { deriveHdPrivateNodeFromSeed, deriveHdPath, deriveHdPublicNode, encodeHdPublicKey, hexToBin, } from "@bitauth/libauth";
export function getXPubKey(seed, derivationPath, network) {
    if (typeof seed === "string") {
        seed = hexToBin(seed);
    }
    let hdNode = deriveHdPrivateNodeFromSeed(seed);
    if (!hdNode.valid) {
        throw Error("Invalid private key derived from mnemonic seed");
    }
    let node = deriveHdPath(hdNode, derivationPath);
    if (typeof node === "string") {
        throw node;
    }
    let parentPublicNode = deriveHdPublicNode(node);
    let xPubKey = encodeHdPublicKey({
        network: network,
        node: parentPublicNode,
    });
    return xPubKey;
}
//# sourceMappingURL=getXPubKey.js.map