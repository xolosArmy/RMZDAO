import { WalletImportFormatType } from "@bitauth/libauth";
export interface PrivateKeyI {
    privateKey: Uint8Array;
    type: WalletImportFormatType;
}
export declare const Network: {
    MAINNET: "mainnet";
    TESTNET: "testnet";
    REGTEST: "regtest";
};
export declare type Network = typeof Network[keyof typeof Network];
export interface UtxoI {
    txid: string;
    vout: number;
    satoshis: number;
    height?: number;
    coinbase?: boolean;
    token?: TokenI;
}
export interface ElectrumBalanceI {
    confirmed: number;
    unconfirmed: number;
}
export interface TxI {
    tx_hash: string;
    height: number;
    fee?: number;
}
export interface HeaderI {
    height: number;
    hex: string;
}
export interface TokenI {
    amount: number;
    tokenId: string;
    capability?: NFTCapability;
    commitment?: string;
}
export declare const NFTCapability: {
    none: "none";
    mutable: "mutable";
    minting: "minting";
};
export declare type NFTCapability = typeof NFTCapability[keyof typeof NFTCapability];
//# sourceMappingURL=interface.d.ts.map