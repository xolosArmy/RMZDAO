import SqlProvider from "../db/SqlProvider.js";
import { RegisterWebhookParams } from "./interface.js";
import { Webhook } from "./Webhook";
export default class WebhookWorker {
    activeHooks: Map<number, Webhook>;
    callbacks: Map<number, (data: any | string | Array<string>) => void>;
    db: SqlProvider;
    checkInterval: any;
    private static _instance;
    static instance(): Promise<WebhookWorker>;
    constructor();
    init(): Promise<void>;
    destroy(): Promise<void>;
    pickupHooks(start?: boolean): Promise<void>;
    evictOldHooks(): Promise<void>;
    registerWebhook(params: RegisterWebhookParams, start?: boolean): Promise<number>;
    getWebhook(id: number): Promise<Webhook | undefined>;
    deleteWebhook(id: number): Promise<void>;
    deleteAllWebhooks(): Promise<void>;
    stopAll(): Promise<void>;
    stopHook(hook: Webhook): Promise<void>;
}
//# sourceMappingURL=WebhookWorker.d.ts.map