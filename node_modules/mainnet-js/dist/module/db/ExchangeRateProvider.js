import Dexie from "dexie";
export default class ExchangeRateProvider extends Dexie {
    constructor() {
        super("exchange-rate");
        this.version(3).stores({
            rate: "symbol",
        });
        this.fx = this.table("rate");
    }
    async init() {
        return this;
    }
    async close() {
        return this;
    }
    getInfo() {
        return "indexedDB";
    }
    /*
     *   Exchange Rate functions
     */
    async getRate(symbol) {
        let obj = await this.fx.get({ symbol: symbol });
        if (obj) {
            return obj;
        }
        else {
            return;
        }
    }
    async setRate(symbol, rate, ttl) {
        return this.transaction("rw", this.fx, async () => {
            // Add or replace the existing entry
            await this.fx.put({ symbol: symbol, rate: rate, ttl: ttl }).catch((e) => {
                throw Error(e);
            });
            return true;
        });
    }
}
//# sourceMappingURL=ExchangeRateProvider.js.map