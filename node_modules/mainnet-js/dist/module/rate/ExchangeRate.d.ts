export declare class ExchangeRate {
    symbol: string;
    rate: number;
    ttl: number;
    constructor({ symbol, rate, ttl, }: {
        symbol: string;
        rate: number;
        ttl: number;
    });
    static setupAxiosMock(mockUrl: any, responseData: any): void;
    static removeAxiosMock(mockUrl: any): void;
    toString(): void;
    static get(symbol: string, useCache?: boolean): Promise<number>;
    static getRateFromIndexedDb(symbol: any, useCache?: boolean): Promise<number>;
    static getRateFromGlobalScope(symbol: any, useCache?: boolean): Promise<number>;
    static cacheRateInGlobalScope(symbol: any, rate: any): void;
}
export declare function getTtl(): number;
export declare function getRateFromExchange(symbol: string): Promise<number>;
//# sourceMappingURL=ExchangeRate.d.ts.map