export declare const SlpAllUtxosTemplate: (slpaddr: string) => {
    v: number;
    q: {
        db: string[];
        aggregate: ({
            $match: {
                "graphTxn.outputs.address": string;
                "graphTxn.outputs.status": {
                    $in: string[];
                };
            };
            $unwind?: undefined;
        } | {
            $unwind: string;
            $match?: undefined;
        })[];
        limit: number;
    };
    r: {
        f: string;
    };
};
export declare const SlpAllOutpointsTemplate: (slpaddr: string) => {
    v: number;
    q: {
        db: string[];
        aggregate: ({
            $match: {
                "graphTxn.outputs.address": string;
                "graphTxn.outputs.status": {
                    $in: string[];
                };
            };
            $unwind?: undefined;
            $project?: undefined;
        } | {
            $unwind: string;
            $match?: undefined;
            $project?: undefined;
        } | {
            $project: {
                graphTxn: number;
            };
            $match?: undefined;
            $unwind?: undefined;
        })[];
        limit: number;
    };
    r: {
        f: string;
    };
};
export declare const SlpSpendableUtxosTemplate: (slpaddr: string, tokenId?: string | undefined) => {
    v: number;
    q: {
        db: string[];
        aggregate: ({
            $match: {
                "graphTxn.outputs.address": string;
                "graphTxn.outputs.status": string;
            };
            $unwind?: undefined;
            $lookup?: undefined;
        } | {
            $unwind: string;
            $match?: undefined;
            $lookup?: undefined;
        } | {
            $lookup: {
                from: string;
                localField: string;
                foreignField: string;
                as: string;
            };
            $match?: undefined;
            $unwind?: undefined;
        })[];
    };
    r: {
        f: string;
    };
};
export declare const SlpAllTokenBalancesTemplate: (slpaddr: string) => {
    v: number;
    q: {
        db: string[];
        aggregate: ({
            $match: {
                "graphTxn.outputs.status": string;
                "graphTxn.outputs.address": string;
                slpAmount?: undefined;
            };
            $unwind?: undefined;
            $group?: undefined;
            $sort?: undefined;
            $lookup?: undefined;
        } | {
            $unwind: string;
            $match?: undefined;
            $group?: undefined;
            $sort?: undefined;
            $lookup?: undefined;
        } | {
            $group: {
                _id: string;
                slpAmount: {
                    $sum: string;
                };
            };
            $match?: undefined;
            $unwind?: undefined;
            $sort?: undefined;
            $lookup?: undefined;
        } | {
            $sort: {
                slpAmount: number;
            };
            $match?: undefined;
            $unwind?: undefined;
            $group?: undefined;
            $lookup?: undefined;
        } | {
            $lookup: {
                from: string;
                localField: string;
                foreignField: string;
                as: string;
            };
            $match?: undefined;
            $unwind?: undefined;
            $group?: undefined;
            $sort?: undefined;
        } | {
            $match: {
                slpAmount: {
                    $gt: number;
                };
                "graphTxn.outputs.status"?: undefined;
                "graphTxn.outputs.address"?: undefined;
            };
            $unwind?: undefined;
            $group?: undefined;
            $sort?: undefined;
            $lookup?: undefined;
        })[];
        sort: {
            slpAmount: number;
        };
    };
    r: {
        f: string;
    };
};
export declare const SlpTokenBalanceTemplate: (slpaddr: string, tokenId: string) => {
    v: number;
    q: {
        db: string[];
        aggregate: ({
            $match: {
                "tokenDetails.tokenIdHex": string;
                "graphTxn.outputs.status"?: undefined;
                "graphTxn.outputs.address"?: undefined;
            };
            $unwind?: undefined;
            $group?: undefined;
            $sort?: undefined;
            $lookup?: undefined;
        } | {
            $match: {
                "graphTxn.outputs.status": string;
                "graphTxn.outputs.address": string;
                "tokenDetails.tokenIdHex"?: undefined;
            };
            $unwind?: undefined;
            $group?: undefined;
            $sort?: undefined;
            $lookup?: undefined;
        } | {
            $unwind: string;
            $match?: undefined;
            $group?: undefined;
            $sort?: undefined;
            $lookup?: undefined;
        } | {
            $group: {
                _id: string;
                slpAmount: {
                    $sum: string;
                };
            };
            $match?: undefined;
            $unwind?: undefined;
            $sort?: undefined;
            $lookup?: undefined;
        } | {
            $sort: {
                slpAmount: number;
            };
            $match?: undefined;
            $unwind?: undefined;
            $group?: undefined;
            $lookup?: undefined;
        } | {
            $lookup: {
                from: string;
                localField: string;
                foreignField: string;
                as: string;
            };
            $match?: undefined;
            $unwind?: undefined;
            $group?: undefined;
            $sort?: undefined;
        })[];
        sort: {
            slpAmount: number;
        };
    };
    r: {
        f: string;
    };
};
export declare const SlpAddressTransactionHistoryTemplate: (address: string, tokenId?: string | undefined, limit?: number, skip?: number) => {
    v: number;
    q: {
        db: string[];
        find: {
            $query: {
                $or: ({
                    "in.e.a": string;
                    "out.e.a"?: undefined;
                } | {
                    "out.e.a": string;
                    "in.e.a"?: undefined;
                })[];
                $and: {
                    "slp.valid": boolean;
                }[];
            };
        };
        sort: {
            "blk.i": number;
        };
        limit: number;
        skip: number;
    };
    r: {
        f: string;
    };
};
export declare const SlpWaitForTransactionTemplate: (slpaddr?: string | undefined, tokenId?: string | undefined) => {
    v: number;
    q: {
        db: string[];
        find: {};
    };
};
export declare const SlpTokenInfoTemplate: (tokenId?: string | undefined, limit?: number, skip?: number) => {
    v: number;
    q: {
        db: string[];
        find: {};
        sort: {
            "tokenStats.approx_txns_since_genesis": number;
        };
        limit: number;
        skip: number;
    };
    r: {
        f: string;
    };
};
export declare const SlpBatonUtxosTemplate: (slpaddr: string, tokenId?: string | undefined) => {
    v: number;
    q: {
        db: string[];
        aggregate: ({
            $match: {
                "graphTxn.outputs.address": string;
                "graphTxn.outputs.status": string;
            };
            $unwind?: undefined;
            $project?: undefined;
            $lookup?: undefined;
        } | {
            $unwind: string;
            $match?: undefined;
            $project?: undefined;
            $lookup?: undefined;
        } | {
            $project: {
                graphTxn: number;
            };
            $match?: undefined;
            $unwind?: undefined;
            $lookup?: undefined;
        } | {
            $lookup: {
                from: string;
                localField: string;
                foreignField: string;
                as: string;
            };
            $match?: undefined;
            $unwind?: undefined;
            $project?: undefined;
        })[];
    };
    r: {
        f: string;
    };
};
//# sourceMappingURL=SlpDbTemplates.d.ts.map