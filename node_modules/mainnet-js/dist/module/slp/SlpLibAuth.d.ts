import { Output } from "@bitauth/libauth";
import { SendRequest } from "../wallet/model.js";
import { SlpGenesisOptions, SlpMintOptions, SlpSendRequest, SlpUtxoI } from "../slp/interface.js";
export declare const bigIntToBinUint64BE: (value: any) => Uint8Array;
export declare const SlpGetGenesisOutputs: (options: SlpGenesisOptions) => Promise<{
    SlpOutputs: Output<Uint8Array, Uint8Array>[];
    FundingSlpUtxos: never[];
    BchSendRequests: SendRequest[];
}>;
export declare const SlpGetMintOutputs: (options: SlpMintOptions, slpBatonUtxos: SlpUtxoI[]) => Promise<{
    SlpOutputs: Output<Uint8Array, Uint8Array>[];
    FundingSlpUtxos: SlpUtxoI[];
    BchSendRequests: SendRequest[];
}>;
export declare const SlpGetSendOutputs: (changeSlpaddr: string, slpUtxos: SlpUtxoI[], sendRequests: SlpSendRequest[]) => Promise<{
    SlpOutputs: Output<Uint8Array, Uint8Array>[];
    FundingSlpUtxos: SlpUtxoI[];
    BchSendRequests: SendRequest[];
}>;
export declare const SlpTxoTemplate: {
    $schema: string;
    description: string;
    name: string;
    entities: {
        genesis_variables: {
            description: string;
            name: string;
            scripts: string[];
            variables: {
                g_token_type: {
                    description: string;
                    name: string;
                    type: string;
                };
                g_token_ticker: {
                    description: string;
                    name: string;
                    type: string;
                };
                g_token_name: {
                    description: string;
                    name: string;
                    type: string;
                };
                g_token_document_url: {
                    description: string;
                    name: string;
                    type: string;
                };
                g_token_document_hash: {
                    description: string;
                    name: string;
                    type: string;
                };
                g_decimals: {
                    description: string;
                    name: string;
                    type: string;
                };
                g_mint_baton_vout: {
                    description: string;
                    name: string;
                    type: string;
                };
                g_initial_token_mint_quantity: {
                    description: string;
                    name: string;
                    type: string;
                };
            };
        };
        send_variables: {
            description: string;
            name: string;
            scripts: string[];
            variables: {
                s_token_type: {
                    description: string;
                    name: string;
                    type: string;
                };
                s_token_id: {
                    description: string;
                    name: string;
                    type: string;
                };
                s_token_output_quantities: {
                    description: string;
                    name: string;
                    type: string;
                };
            };
        };
        mint_variables: {
            description: string;
            name: string;
            scripts: string[];
            variables: {
                m_token_type: {
                    description: string;
                    name: string;
                    type: string;
                };
                m_token_id: {
                    description: string;
                    name: string;
                    type: string;
                };
                m_mint_baton_vout: {
                    description: string;
                    name: string;
                    type: string;
                };
                m_additional_token_quantity: {
                    description: string;
                    name: string;
                    type: string;
                };
            };
        };
    };
    scenarios: {
        genesis: {
            data: {
                bytecode: {
                    g_token_type: string;
                    g_token_ticker: string;
                    g_token_name: string;
                    g_token_document_url: string;
                    g_token_document_hash: string;
                    g_decimals: string;
                    g_mint_baton_vout: string;
                    g_initial_token_mint_quantity: string;
                };
            };
            description: string;
            name: string;
            transaction: {
                locktime: number;
            };
        };
        send: {
            data: {
                bytecode: {
                    s_token_type: string;
                    s_token_id: string;
                    s_token_output_quantities: string;
                };
            };
            description: string;
            name: string;
            transaction: {
                locktime: number;
            };
        };
        mint: {
            data: {
                bytecode: {
                    m_token_type: string;
                    m_token_id: string;
                    m_mint_baton_vout: string;
                    m_additional_token_quantity: string;
                };
            };
            description: string;
            name: string;
            transaction: {
                locktime: number;
            };
        };
    };
    scripts: {
        genesis_unlock: {
            fails: string[];
            name: string;
            script: string;
            unlocks: string;
        };
        send_unlock: {
            fails: string[];
            name: string;
            script: string;
            unlocks: string;
        };
        mint_unlock: {
            fails: string[];
            name: string;
            script: string;
            unlocks: string;
        };
        genesis_lock: {
            lockingType: string;
            name: string;
            script: string;
        };
        send_lock: {
            lockingType: string;
            name: string;
            script: string;
        };
        mint_lock: {
            lockingType: string;
            name: string;
            script: string;
        };
    };
    supported: string[];
    version: number;
};
//# sourceMappingURL=SlpLibAuth.d.ts.map