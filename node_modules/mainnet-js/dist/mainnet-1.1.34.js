/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ var __webpack_modules__ = ({

/***/ "../../node_modules/axios/index.js":
/*!*****************************************!*\
  !*** ../../node_modules/axios/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./lib/axios */ \"../../node_modules/axios/lib/axios.js\");\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/index.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/adapters/xhr.js":
/*!****************************************************!*\
  !*** ../../node_modules/axios/lib/adapters/xhr.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"../../node_modules/axios/lib/core/settle.js\");\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"../../node_modules/axios/lib/helpers/cookies.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"../../node_modules/axios/lib/helpers/buildURL.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"../../node_modules/axios/lib/core/buildFullPath.js\");\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"../../node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"../../node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar createError = __webpack_require__(/*! ../core/createError */ \"../../node_modules/axios/lib/core/createError.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/adapters/xhr.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/axios.js":
/*!*********************************************!*\
  !*** ../../node_modules/axios/lib/axios.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"../../node_modules/axios/lib/utils.js\");\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"../../node_modules/axios/lib/helpers/bind.js\");\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"../../node_modules/axios/lib/core/Axios.js\");\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"../../node_modules/axios/lib/core/mergeConfig.js\");\nvar defaults = __webpack_require__(/*! ./defaults */ \"../../node_modules/axios/lib/defaults.js\");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"../../node_modules/axios/lib/cancel/Cancel.js\");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"../../node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"../../node_modules/axios/lib/cancel/isCancel.js\");\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"../../node_modules/axios/lib/helpers/spread.js\");\n\n// Expose isAxiosError\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"../../node_modules/axios/lib/helpers/isAxiosError.js\");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports[\"default\"] = axios;\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/axios.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/cancel/Cancel.js":
/*!*****************************************************!*\
  !*** ../../node_modules/axios/lib/cancel/Cancel.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/cancel/Cancel.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/cancel/CancelToken.js":
/*!**********************************************************!*\
  !*** ../../node_modules/axios/lib/cancel/CancelToken.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"../../node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/cancel/CancelToken.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/cancel/isCancel.js":
/*!*******************************************************!*\
  !*** ../../node_modules/axios/lib/cancel/isCancel.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/cancel/isCancel.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/core/Axios.js":
/*!**************************************************!*\
  !*** ../../node_modules/axios/lib/core/Axios.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"../../node_modules/axios/lib/helpers/buildURL.js\");\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"../../node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"../../node_modules/axios/lib/core/dispatchRequest.js\");\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"../../node_modules/axios/lib/core/mergeConfig.js\");\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"../../node_modules/axios/lib/helpers/validator.js\");\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/core/Axios.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/core/InterceptorManager.js":
/*!***************************************************************!*\
  !*** ../../node_modules/axios/lib/core/InterceptorManager.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/core/InterceptorManager.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/core/buildFullPath.js":
/*!**********************************************************!*\
  !*** ../../node_modules/axios/lib/core/buildFullPath.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"../../node_modules/axios/lib/helpers/isAbsoluteURL.js\");\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"../../node_modules/axios/lib/helpers/combineURLs.js\");\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/core/buildFullPath.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/core/createError.js":
/*!********************************************************!*\
  !*** ../../node_modules/axios/lib/core/createError.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"../../node_modules/axios/lib/core/enhanceError.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/core/createError.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/core/dispatchRequest.js":
/*!************************************************************!*\
  !*** ../../node_modules/axios/lib/core/dispatchRequest.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(/*! ./transformData */ \"../../node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"../../node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"../../node_modules/axios/lib/defaults.js\");\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/core/dispatchRequest.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/core/enhanceError.js":
/*!*********************************************************!*\
  !*** ../../node_modules/axios/lib/core/enhanceError.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/core/enhanceError.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/core/mergeConfig.js":
/*!********************************************************!*\
  !*** ../../node_modules/axios/lib/core/mergeConfig.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../../node_modules/axios/lib/utils.js\");\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/core/mergeConfig.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/core/settle.js":
/*!***************************************************!*\
  !*** ../../node_modules/axios/lib/core/settle.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar createError = __webpack_require__(/*! ./createError */ \"../../node_modules/axios/lib/core/createError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/core/settle.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/core/transformData.js":
/*!**********************************************************!*\
  !*** ../../node_modules/axios/lib/core/transformData.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\nvar defaults = __webpack_require__(/*! ./../defaults */ \"../../node_modules/axios/lib/defaults.js\");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/core/transformData.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/defaults.js":
/*!************************************************!*\
  !*** ../../node_modules/axios/lib/defaults.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"../../node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"../../node_modules/axios/lib/helpers/normalizeHeaderName.js\");\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"../../node_modules/axios/lib/core/enhanceError.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"../../node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ./adapters/http */ \"../../node_modules/axios/lib/adapters/xhr.js\");\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/defaults.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/bind.js":
/*!****************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/bind.js ***!
  \****************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/helpers/bind.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/buildURL.js":
/*!********************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/buildURL.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/helpers/buildURL.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/combineURLs.js":
/*!***********************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/combineURLs.js ***!
  \***********************************************************/
/***/ ((module) => {

eval("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/helpers/combineURLs.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/cookies.js":
/*!*******************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/cookies.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/helpers/cookies.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*************************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*************************************************************/
/***/ ((module) => {

eval("\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/helpers/isAbsoluteURL.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/isAxiosError.js":
/*!************************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/isAxiosError.js ***!
  \************************************************************/
/***/ ((module) => {

eval("\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/helpers/isAxiosError.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***************************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/helpers/isURLSameOrigin.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"../../node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/helpers/normalizeHeaderName.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/parseHeaders.js":
/*!************************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/parseHeaders.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"../../node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/helpers/parseHeaders.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/spread.js":
/*!******************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/spread.js ***!
  \******************************************************/
/***/ ((module) => {

eval("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/helpers/spread.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/helpers/validator.js":
/*!*********************************************************!*\
  !*** ../../node_modules/axios/lib/helpers/validator.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"../../node_modules/axios/package.json\");\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\nvar currentVerArr = pkg.version.split('.');\n\n/**\n * Compare package versions\n * @param {string} version\n * @param {string?} thanVersion\n * @returns {boolean}\n */\nfunction isOlderVersion(version, thanVersion) {\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\n  var destVer = version.split('.');\n  for (var i = 0; i < 3; i++) {\n    if (pkgVersionArr[i] > destVer[i]) {\n      return true;\n    } else if (pkgVersionArr[i] < destVer[i]) {\n      return false;\n    }\n  }\n  return false;\n}\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator\n * @param {string?} version\n * @param {string} message\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  var isDeprecated = version && isOlderVersion(version);\n\n  function formatMessage(opt, desc) {\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\n    }\n\n    if (isDeprecated && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  isOlderVersion: isOlderVersion,\n  assertOptions: assertOptions,\n  validators: validators\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/helpers/validator.js?");

/***/ }),

/***/ "../../node_modules/axios/lib/utils.js":
/*!*********************************************!*\
  !*** ../../node_modules/axios/lib/utils.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"../../node_modules/axios/lib/helpers/bind.js\");\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/lib/utils.js?");

/***/ }),

/***/ "../../node_modules/base-x/src/index.js":
/*!**********************************************!*\
  !*** ../../node_modules/base-x/src/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/base-x/src/index.js?");

/***/ }),

/***/ "../../node_modules/base64-js/index.js":
/*!*********************************************!*\
  !*** ../../node_modules/base64-js/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/base64-js/index.js?");

/***/ }),

/***/ "../../node_modules/bchaddrjs-slp/src/bchaddr.js":
/*!*******************************************************!*\
  !*** ../../node_modules/bchaddrjs-slp/src/bchaddr.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"../../node_modules/buffer/index.js\")[\"Buffer\"];\n/***\n * @license\n * https://github.com/bitcoincashjs/bchaddr\n * Copyright (c) 2018 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\nvar bs58check = __webpack_require__(/*! bs58check */ \"../../node_modules/bs58check/index.js\")\nvar cashaddr = __webpack_require__(/*! cashaddrjs-slp */ \"../../node_modules/cashaddrjs-slp/src/cashaddr.js\")\n\n/**\n * General purpose Bitcoin Cash address detection and translation.<br />\n * Supports all major Bitcoin Cash address formats.<br />\n * Currently:\n * <ul>\n *    <li> Legacy format </li>\n *    <li> Bitpay format </li>\n *    <li> Cashaddr format </li>\n * </ul>\n * @module bchaddr\n */\n\n/**\n * @static\n * Supported Bitcoin Cash address formats.\n */\nvar Format = {}\nFormat.Legacy = 'legacy'\nFormat.Bitpay = 'bitpay'\nFormat.Cashaddr = 'cashaddr'\nFormat.Slpaddr = 'slpaddr'\n\n/**\n * @static\n * Supported networks.\n */\nvar Network = {}\nNetwork.Mainnet = 'mainnet'\nNetwork.Testnet = 'testnet'\n\n/**\n * @static\n * Supported address types.\n */\nvar Type = {}\nType.P2PKH = 'p2pkh'\nType.P2SH = 'p2sh'\n\n/**\n * Returns a boolean indicating whether the given input is a valid Bitcoin Cash address.\n * @static\n * @param {*} input - Any input to check for validity.\n * @returns {boolean}\n */\nfunction isValidAddress (input) {\n  try {\n    decodeAddress(input)\n    return true\n  } catch (error) {\n    return false\n  }\n}\n\n/**\n * Detects what is the given address' format.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction detectAddressFormat (address) {\n  return decodeAddress(address).format\n}\n\n/**\n * Detects what is the given address' network.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction detectAddressNetwork (address) {\n  return decodeAddress(address).network\n}\n\n/**\n * Detects what is the given address' type.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction detectAddressType (address) {\n  return decodeAddress(address).type\n}\n\n/**\n * Translates the given address into legacy format.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction toLegacyAddress (address) {\n  var decoded = decodeAddress(address)\n  if (decoded.format === Format.Legacy) {\n    return address\n  }\n  return encodeAsLegacy(decoded)\n}\n\n/**\n * Translates the given address into bitpay format.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction toBitpayAddress (address) {\n  var decoded = decodeAddress(address)\n  if (decoded.format === Format.Bitpay) {\n    return address\n  }\n  return encodeAsBitpay(decoded)\n}\n\n/**\n * Translates the given address into cashaddr format.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction toCashAddress (address) {\n  var decoded = decodeAddress(address)\n  return encodeAsCashaddr(decoded)\n}\n\n/**\n * Translates the given address into cashaddr format.\n * @static\n * @param {string} address - A valid address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction toSlpAddress (address) {\n  var decoded = decodeAddress(address)\n  return encodeAsSlpaddr(decoded)\n}\n\n/**\n * Translates the given address into mainnet format.\n * @static\n * @param {string} address - A valid address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction toMainnetAddress (address) {\n  var decoded = decodeAddress(address)\n  return encodeAsMainnetaddr(decoded)\n}\n\n/**\n * Translates the given address into testnet format.\n * @static\n * @param {string} address - A valid address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction toTestnetAddress (address) {\n  var decoded = decodeAddress(address)\n  return encodeAsTestnetaddr(decoded)\n}\n\n/**\n * Translates the given address into regtest format.\n * @static\n * @param {string} address - A valid address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction toRegtestAddress (address) {\n  var decoded = decodeAddress(address)\n  return encodeAsRegtestaddr(decoded)\n}\n\n/**\n * Translates the given address into regtest format.\n * @static\n * @param {string} address - A valid address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction toSlpRegtestAddress (address) {\n  var decoded = decodeAddress(address)\n  return encodeAsSlpRegtestaddr(decoded)\n}\n\n/**\n * Version byte table for base58 formats.\n * @private\n */\nvar VERSION_BYTE = {}\nVERSION_BYTE[Format.Legacy] = {}\nVERSION_BYTE[Format.Legacy][Network.Mainnet] = {}\nVERSION_BYTE[Format.Legacy][Network.Mainnet][Type.P2PKH] = 0\nVERSION_BYTE[Format.Legacy][Network.Mainnet][Type.P2SH] = 5\nVERSION_BYTE[Format.Legacy][Network.Testnet] = {}\nVERSION_BYTE[Format.Legacy][Network.Testnet][Type.P2PKH] = 111\nVERSION_BYTE[Format.Legacy][Network.Testnet][Type.P2SH] = 196\nVERSION_BYTE[Format.Bitpay] = {}\nVERSION_BYTE[Format.Bitpay][Network.Mainnet] = {}\nVERSION_BYTE[Format.Bitpay][Network.Mainnet][Type.P2PKH] = 28\nVERSION_BYTE[Format.Bitpay][Network.Mainnet][Type.P2SH] = 40\nVERSION_BYTE[Format.Bitpay][Network.Testnet] = {}\nVERSION_BYTE[Format.Bitpay][Network.Testnet][Type.P2PKH] = 111\nVERSION_BYTE[Format.Bitpay][Network.Testnet][Type.P2SH] = 196\n\n/**\n * Decodes the given address into its constituting hash, format, network and type.\n * @private\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {object}\n * @throws {InvalidAddressError}\n */\nfunction decodeAddress (address) {\n  try {\n    return decodeBase58Address(address)\n  } catch (error) {\n  }\n  try {\n    return decodeCashAddress(address)\n  } catch (error) {\n  }\n  try {\n    return decodeSlpAddress(address)\n  } catch (error) {\n  }\n  throw new InvalidAddressError()\n}\n\n/**\n * Length of a valid base58check encoding payload: 1 byte for\n * the version byte plus 20 bytes for a RIPEMD-160 hash.\n * @private\n */\nvar BASE_58_CHECK_PAYLOAD_LENGTH = 21\n\n/**\n * Attempts to decode the given address assuming it is a base58 address.\n * @private\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {object}\n * @throws {InvalidAddressError}\n */\nfunction decodeBase58Address (address) {\n  try {\n    var payload = bs58check.decode(address)\n    if (payload.length !== BASE_58_CHECK_PAYLOAD_LENGTH) {\n      throw new InvalidAddressError()\n    }\n    var versionByte = payload[0]\n    var hash = Array.prototype.slice.call(payload, 1)\n    switch (versionByte) {\n      case VERSION_BYTE[Format.Legacy][Network.Mainnet][Type.P2PKH]:\n        return {\n          hash: hash,\n          format: Format.Legacy,\n          network: Network.Mainnet,\n          type: Type.P2PKH\n        }\n      case VERSION_BYTE[Format.Legacy][Network.Mainnet][Type.P2SH]:\n        return {\n          hash: hash,\n          format: Format.Legacy,\n          network: Network.Mainnet,\n          type: Type.P2SH\n        }\n      case VERSION_BYTE[Format.Legacy][Network.Testnet][Type.P2PKH]:\n        return {\n          hash: hash,\n          format: Format.Legacy,\n          network: Network.Testnet,\n          type: Type.P2PKH\n        }\n      case VERSION_BYTE[Format.Legacy][Network.Testnet][Type.P2SH]:\n        return {\n          hash: hash,\n          format: Format.Legacy,\n          network: Network.Testnet,\n          type: Type.P2SH\n        }\n      case VERSION_BYTE[Format.Bitpay][Network.Mainnet][Type.P2PKH]:\n        return {\n          hash: hash,\n          format: Format.Bitpay,\n          network: Network.Mainnet,\n          type: Type.P2PKH\n        }\n      case VERSION_BYTE[Format.Bitpay][Network.Mainnet][Type.P2SH]:\n        return {\n          hash: hash,\n          format: Format.Bitpay,\n          network: Network.Mainnet,\n          type: Type.P2SH\n        }\n    }\n  } catch (error) {\n  }\n  throw new InvalidAddressError()\n}\n\n/**\n * Attempts to decode the given address assuming it is a cashaddr address.\n * @private\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {object}\n * @throws {InvalidAddressError}\n */\nfunction decodeCashAddress (address) {\n  if (address.indexOf(':') !== -1) {\n    try {\n      return decodeCashAddressWithPrefix(address)\n    } catch (error) {\n    }\n  } else {\n    var prefixes = ['bitcoincash', 'bchtest', 'regtest', 'bchreg']\n    for (var i = 0; i < prefixes.length; ++i) {\n      try {\n        var prefix = prefixes[i]\n        return decodeCashAddressWithPrefix(prefix + ':' + address)\n      } catch (error) {\n      }\n    }\n  }\n  throw new InvalidAddressError()\n}\n\n/**\n * Attempts to decode the given address assuming it is a cashaddr address with explicit prefix.\n * @private\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {object}\n * @throws {InvalidAddressError}\n */\nfunction decodeCashAddressWithPrefix (address) {\n  try {\n    var decoded = cashaddr.decode(address)\n    var hash = Array.prototype.slice.call(decoded.hash, 0)\n    var type = decoded.type === 'P2PKH' ? Type.P2PKH : Type.P2SH\n    switch (decoded.prefix) {\n      case 'bitcoincash':\n        return {\n          hash: hash,\n          format: Format.Cashaddr,\n          network: Network.Mainnet,\n          type: type\n        }\n      case 'bchtest':\n      case 'regtest':\n      case 'bchreg':\n        return {\n          hash: hash,\n          format: Format.Cashaddr,\n          network: Network.Testnet,\n          type: type\n        }\n    }\n  } catch (error) {\n  }\n  throw new InvalidAddressError()\n}\n\n/**\n * Attempts to decode the given address assuming it is a slpaddr address.\n * @private\n * @param {string} address - A valid SLP address in any format.\n * @return {object}\n * @throws {InvalidAddressError}\n */\nfunction decodeSlpAddress (address) {\n  if (address.indexOf(':') !== -1) {\n    try {\n      return decodeSlpAddressWithPrefix(address)\n    } catch (error) {\n    }\n  } else {\n    var prefixes = ['simpleledger', 'slptest', 'slpreg']\n    for (var i = 0; i < prefixes.length; ++i) {\n      try {\n        var prefix = prefixes[i]\n        return decodeSlpAddressWithPrefix(prefix + ':' + address)\n      } catch (error) {\n      }\n    }\n  }\n  throw new InvalidAddressError()\n}\n\n/**\n * Attempts to decode the given address assuming it is a slpaddr address with explicit prefix.\n * @private\n * @param {string} address - A valid SLP address in any format.\n * @return {object}\n * @throws {InvalidAddressError}\n */\nfunction decodeSlpAddressWithPrefix (address) {\n  try {\n    var decoded = cashaddr.decode(address)\n    var hash = Array.prototype.slice.call(decoded.hash, 0)\n    var type = decoded.type === 'P2PKH' ? Type.P2PKH : Type.P2SH\n    switch (decoded.prefix) {\n      case 'simpleledger':\n        return {\n          hash: hash,\n          format: Format.Slpaddr,\n          network: Network.Mainnet,\n          type: type\n        }\n      case 'slptest':\n      case 'slpreg':\n        return {\n          hash: hash,\n          format: Format.Slpaddr,\n          network: Network.Testnet,\n          type: type\n        }\n    }\n  } catch (error) {\n  }\n  throw new InvalidAddressError()\n}\n\n/**\n * Encodes the given decoded address into legacy format.\n * @private\n * @param {object} decoded\n * @returns {string}\n */\nfunction encodeAsLegacy (decoded) {\n  var versionByte = VERSION_BYTE[Format.Legacy][decoded.network][decoded.type]\n  var buffer = Buffer.alloc(1 + decoded.hash.length)\n  buffer[0] = versionByte\n  buffer.set(decoded.hash, 1)\n  return bs58check.encode(buffer)\n}\n\n/**\n * Encodes the given decoded address into bitpay format.\n * @private\n * @param {object} decoded\n * @returns {string}\n */\nfunction encodeAsBitpay (decoded) {\n  var versionByte = VERSION_BYTE[Format.Bitpay][decoded.network][decoded.type]\n  var buffer = Buffer.alloc(1 + decoded.hash.length)\n  buffer[0] = versionByte\n  buffer.set(decoded.hash, 1)\n  return bs58check.encode(buffer)\n}\n\n/**\n * Encodes the given decoded address into cashaddr format.\n * @private\n * @param {object} decoded\n * @returns {string}\n */\nfunction encodeAsCashaddr (decoded) {\n  var prefix = decoded.network === Network.Mainnet ? 'bitcoincash' : 'bchtest'\n  var type = decoded.type === Type.P2PKH ? 'P2PKH' : 'P2SH'\n  var hash = Uint8Array.from(decoded.hash)\n  return cashaddr.encode(prefix, type, hash)\n}\n\n/**\n * Encodes the given decoded address into slpaddr format.\n * @private\n * @param {object} decoded\n * @returns {string}\n */\nfunction encodeAsSlpaddr (decoded) {\n  var prefix = decoded.network === Network.Mainnet ? 'simpleledger' : 'slptest'\n  var type = decoded.type === Type.P2PKH ? 'P2PKH' : 'P2SH'\n  var hash = Uint8Array.from(decoded.hash)\n  return cashaddr.encode(prefix, type, hash)\n}\n\n/**\n * Encodes the given decoded address into mainnet format.\n * @private\n * @param {object} decoded\n * @returns {string}\n */\nfunction encodeAsMainnetaddr (decoded) {\n  var prefix = 'bitcoincash'\n  var type = decoded.type === Type.P2PKH ? 'P2PKH' : 'P2SH'\n  var hash = Uint8Array.from(decoded.hash)\n  if (decoded.format === Format.Slpaddr) {\n    prefix = 'simpleledger'\n  }\n  return cashaddr.encode(prefix, type, hash)\n}\n\n/**\n * Encodes the given decoded address into testnet format.\n * @private\n * @param {object} decoded\n * @returns {string}\n */\nfunction encodeAsTestnetaddr (decoded) {\n  var prefix = 'bchtest'\n  var type = decoded.type === Type.P2PKH ? 'P2PKH' : 'P2SH'\n  var hash = Uint8Array.from(decoded.hash)\n  if (decoded.format === Format.Slpaddr) {\n    prefix = 'slptest'\n  }\n  return cashaddr.encode(prefix, type, hash)\n}\n\n/**\n * Encodes the given decoded address into regtest format.\n * @private\n * @param {object} decoded\n * @returns {string}\n */\nfunction encodeAsRegtestaddr (decoded) {\n  var prefix = 'bchreg'\n  var type = decoded.type === Type.P2PKH ? 'P2PKH' : 'P2SH'\n  var hash = Uint8Array.from(decoded.hash)\n  if (decoded.format === Format.Slpaddr) {\n    prefix = 'slpreg'\n  }\n  return cashaddr.encode(prefix, type, hash)\n}\n\n/**\n * Encodes the given decoded address into regtest format.\n * @private\n * @param {object} decoded\n * @returns {string}\n */\nfunction encodeAsSlpRegtestaddr (decoded) {\n  var prefix = 'slpreg'\n  var type = decoded.type === Type.P2PKH ? 'P2PKH' : 'P2SH'\n  var hash = Uint8Array.from(decoded.hash)\n  return cashaddr.encode(prefix, type, hash)\n}\n\n/**\n * Returns a boolean indicating whether the address is in legacy format.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @returns {boolean}\n * @throws {InvalidAddressError}\n */\nfunction isLegacyAddress (address) {\n  return detectAddressFormat(address) === Format.Legacy\n}\n\n/**\n * Returns a boolean indicating whether the address is in bitpay format.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @returns {boolean}\n * @throws {InvalidAddressError}\n */\nfunction isBitpayAddress (address) {\n  return detectAddressFormat(address) === Format.Bitpay\n}\n\n/**\n * Returns a boolean indicating whether the address is in cashaddr format.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @returns {boolean}\n * @throws {InvalidAddressError}\n */\nfunction isCashAddress (address) {\n  return detectAddressFormat(address) === Format.Cashaddr\n}\n\n/**\n * Returns a boolean indicating whether the address is in cashaddr format.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @returns {boolean}\n * @throws {InvalidAddressError}\n */\nfunction isSlpAddress (address) {\n  return detectAddressFormat(address) === Format.Slpaddr\n}\n\n/**\n * Returns a boolean indicating whether the address is a mainnet address.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @returns {boolean}\n * @throws {InvalidAddressError}\n */\nfunction isMainnetAddress (address) {\n  return detectAddressNetwork(address) === Network.Mainnet\n}\n\n/**\n * Returns a boolean indicating whether the address is a testnet address.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @returns {boolean}\n * @throws {InvalidAddressError}\n */\nfunction isTestnetAddress (address) {\n  return detectAddressNetwork(address) === Network.Testnet\n}\n\n/**\n * Returns a boolean indicating whether the address is a p2pkh address.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @returns {boolean}\n * @throws {InvalidAddressError}\n */\nfunction isP2PKHAddress (address) {\n  return detectAddressType(address) === Type.P2PKH\n}\n\n/**\n * Returns a boolean indicating whether the address is a p2sh address.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @returns {boolean}\n * @throws {InvalidAddressError}\n */\nfunction isP2SHAddress (address) {\n  return detectAddressType(address) === Type.P2SH\n}\n\n/**\n * Error thrown when the address given as input is not a valid Bitcoin Cash address.\n * @constructor\n * InvalidAddressError\n */\nfunction InvalidAddressError () {\n  var error = new Error()\n  this.name = error.name = 'InvalidAddressError'\n  this.message = error.message = 'Received an invalid Bitcoin Cash address as input.'\n  this.stack = error.stack\n}\n\nInvalidAddressError.prototype = Object.create(Error.prototype)\n\nmodule.exports = {\n  Format: Format,\n  Network: Network,\n  Type: Type,\n  isValidAddress: isValidAddress,\n  detectAddressFormat: detectAddressFormat,\n  detectAddressNetwork: detectAddressNetwork,\n  detectAddressType: detectAddressType,\n  decodeAddress: decodeAddress,\n  toLegacyAddress: toLegacyAddress,\n  toBitpayAddress: toBitpayAddress,\n  encodeAsCashaddr: encodeAsCashaddr,\n  toCashAddress: toCashAddress,\n  encodeAsSlpaddr: encodeAsSlpaddr,\n  toSlpAddress: toSlpAddress,\n  toMainnetAddress: toMainnetAddress,\n  toTestnetAddress: toTestnetAddress,\n  encodeAsMainnetaddr: encodeAsMainnetaddr,\n  encodeAsTestnetaddr: encodeAsTestnetaddr,\n  encodeAsRegtestaddr: encodeAsRegtestaddr,\n  toRegtestAddress: toRegtestAddress,\n  encodeAsSlpRegtestaddr: encodeAsSlpRegtestaddr,\n  toSlpRegtestAddress: toSlpRegtestAddress,\n  encodeAsLegacy: encodeAsLegacy,\n  isLegacyAddress: isLegacyAddress,\n  encodeAsBitpay: encodeAsBitpay,\n  isBitpayAddress: isBitpayAddress,\n  isCashAddress: isCashAddress,\n  isSlpAddress: isSlpAddress,\n  isMainnetAddress: isMainnetAddress,\n  isTestnetAddress: isTestnetAddress,\n  isP2PKHAddress: isP2PKHAddress,\n  isP2SHAddress: isP2SHAddress,\n  InvalidAddressError: InvalidAddressError\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/bchaddrjs-slp/src/bchaddr.js?");

/***/ }),

/***/ "../../node_modules/big-integer/BigInteger.js":
/*!****************************************************!*\
  !*** ../../node_modules/big-integer/BigInteger.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif ( true && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (true) {\r\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n        return bigInt;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n}\r\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/big-integer/BigInteger.js?");

/***/ }),

/***/ "../../node_modules/bignumber.js/bignumber.js":
/*!****************************************************!*\
  !*** ../../node_modules/bignumber.js/bignumber.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;;(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () { return BigNumber; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else {}\r\n})(this);\r\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/bignumber.js/bignumber.js?");

/***/ }),

/***/ "../../node_modules/bip39/src/_wordlists.js":
/*!**************************************************!*\
  !*** ../../node_modules/bip39/src/_wordlists.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n// browserify by default only pulls in files that are hard coded in requires\n// In order of last to first in this file, the default wordlist will be chosen\n// based on what is present. (Bundles may remove wordlists they don't need)\nconst wordlists = {};\nexports.wordlists = wordlists;\nlet _default;\nexports._default = _default;\ntry {\n    exports._default = _default = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './wordlists/czech.json'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n    wordlists.czech = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './wordlists/chinese_simplified.json'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n    wordlists.chinese_simplified = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './wordlists/chinese_traditional.json'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n    wordlists.chinese_traditional = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './wordlists/korean.json'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n    wordlists.korean = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './wordlists/french.json'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n    wordlists.french = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './wordlists/italian.json'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n    wordlists.italian = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './wordlists/spanish.json'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n    wordlists.spanish = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './wordlists/japanese.json'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n    wordlists.japanese = _default;\n    wordlists.JA = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './wordlists/portuguese.json'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n    wordlists.portuguese = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = __webpack_require__(/*! ./wordlists/english.json */ \"../../node_modules/bip39/src/wordlists/english.json\");\n    wordlists.english = _default;\n    wordlists.EN = _default;\n}\ncatch (err) { }\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/bip39/src/_wordlists.js?");

/***/ }),

/***/ "../../node_modules/bip39/src/index.js":
/*!*********************************************!*\
  !*** ../../node_modules/bip39/src/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var __webpack_unused_export__;\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"../../node_modules/buffer/index.js\")[\"Buffer\"];\n\n__webpack_unused_export__ = ({ value: true });\nconst createHash = __webpack_require__(/*! create-hash */ \"../../node_modules/create-hash/browser.js\");\nconst pbkdf2_1 = __webpack_require__(/*! pbkdf2 */ \"../../node_modules/pbkdf2/browser.js\");\nconst randomBytes = __webpack_require__(/*! randombytes */ \"../../node_modules/randombytes/browser.js\");\nconst _wordlists_1 = __webpack_require__(/*! ./_wordlists */ \"../../node_modules/bip39/src/_wordlists.js\");\nlet DEFAULT_WORDLIST = _wordlists_1._default;\nconst INVALID_MNEMONIC = 'Invalid mnemonic';\nconst INVALID_ENTROPY = 'Invalid entropy';\nconst INVALID_CHECKSUM = 'Invalid mnemonic checksum';\nconst WORDLIST_REQUIRED = 'A wordlist is required but a default could not be found.\\n' +\n    'Please pass a 2048 word array explicitly.';\nfunction pbkdf2Promise(password, saltMixin, iterations, keylen, digest) {\n    return Promise.resolve().then(() => new Promise((resolve, reject) => {\n        const callback = (err, derivedKey) => {\n            if (err) {\n                return reject(err);\n            }\n            else {\n                return resolve(derivedKey);\n            }\n        };\n        pbkdf2_1.pbkdf2(password, saltMixin, iterations, keylen, digest, callback);\n    }));\n}\nfunction normalize(str) {\n    return (str || '').normalize('NFKD');\n}\nfunction lpad(str, padString, length) {\n    while (str.length < length) {\n        str = padString + str;\n    }\n    return str;\n}\nfunction binaryToByte(bin) {\n    return parseInt(bin, 2);\n}\nfunction bytesToBinary(bytes) {\n    return bytes.map((x) => lpad(x.toString(2), '0', 8)).join('');\n}\nfunction deriveChecksumBits(entropyBuffer) {\n    const ENT = entropyBuffer.length * 8;\n    const CS = ENT / 32;\n    const hash = createHash('sha256')\n        .update(entropyBuffer)\n        .digest();\n    return bytesToBinary(Array.from(hash)).slice(0, CS);\n}\nfunction salt(password) {\n    return 'mnemonic' + (password || '');\n}\nfunction mnemonicToSeedSync(mnemonic, password) {\n    const mnemonicBuffer = Buffer.from(normalize(mnemonic), 'utf8');\n    const saltBuffer = Buffer.from(salt(normalize(password)), 'utf8');\n    return pbkdf2_1.pbkdf2Sync(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512');\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\nfunction mnemonicToSeed(mnemonic, password) {\n    return Promise.resolve().then(() => {\n        const mnemonicBuffer = Buffer.from(normalize(mnemonic), 'utf8');\n        const saltBuffer = Buffer.from(salt(normalize(password)), 'utf8');\n        return pbkdf2Promise(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512');\n    });\n}\n__webpack_unused_export__ = mnemonicToSeed;\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    const words = normalize(mnemonic).split(' ');\n    if (words.length % 3 !== 0) {\n        throw new Error(INVALID_MNEMONIC);\n    }\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map((word) => {\n        const index = wordlist.indexOf(word);\n        if (index === -1) {\n            throw new Error(INVALID_MNEMONIC);\n        }\n        return lpad(index.toString(2), '0', 11);\n    })\n        .join('');\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    const entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte);\n    if (entropyBytes.length < 16) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length > 32) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length % 4 !== 0) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    const entropy = Buffer.from(entropyBytes);\n    const newChecksum = deriveChecksumBits(entropy);\n    if (newChecksum !== checksumBits) {\n        throw new Error(INVALID_CHECKSUM);\n    }\n    return entropy.toString('hex');\n}\n__webpack_unused_export__ = mnemonicToEntropy;\nfunction entropyToMnemonic(entropy, wordlist) {\n    if (!Buffer.isBuffer(entropy)) {\n        entropy = Buffer.from(entropy, 'hex');\n    }\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    // 128 <= ENT <= 256\n    if (entropy.length < 16) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length > 32) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length % 4 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    const entropyBits = bytesToBinary(Array.from(entropy));\n    const checksumBits = deriveChecksumBits(entropy);\n    const bits = entropyBits + checksumBits;\n    const chunks = bits.match(/(.{1,11})/g);\n    const words = chunks.map((binary) => {\n        const index = binaryToByte(binary);\n        return wordlist[index];\n    });\n    return wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093' // Japanese wordlist\n        ? words.join('\\u3000')\n        : words.join(' ');\n}\n__webpack_unused_export__ = entropyToMnemonic;\nfunction generateMnemonic(strength, rng, wordlist) {\n    strength = strength || 128;\n    if (strength % 32 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    rng = rng || randomBytes;\n    return entropyToMnemonic(rng(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\n__webpack_unused_export__ = validateMnemonic;\nfunction setDefaultWordlist(language) {\n    const result = _wordlists_1.wordlists[language];\n    if (result) {\n        DEFAULT_WORDLIST = result;\n    }\n    else {\n        throw new Error('Could not find wordlist for language \"' + language + '\"');\n    }\n}\n__webpack_unused_export__ = setDefaultWordlist;\nfunction getDefaultWordlist() {\n    if (!DEFAULT_WORDLIST) {\n        throw new Error('No Default Wordlist set');\n    }\n    return Object.keys(_wordlists_1.wordlists).filter((lang) => {\n        if (lang === 'JA' || lang === 'EN') {\n            return false;\n        }\n        return _wordlists_1.wordlists[lang].every((word, index) => word === DEFAULT_WORDLIST[index]);\n    })[0];\n}\n__webpack_unused_export__ = getDefaultWordlist;\nvar _wordlists_2 = __webpack_require__(/*! ./_wordlists */ \"../../node_modules/bip39/src/_wordlists.js\");\n__webpack_unused_export__ = _wordlists_2.wordlists;\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/bip39/src/index.js?");

/***/ }),

/***/ "../../node_modules/bs58/index.js":
/*!****************************************!*\
  !*** ../../node_modules/bs58/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var basex = __webpack_require__(/*! base-x */ \"../../node_modules/base-x/src/index.js\")\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/bs58/index.js?");

/***/ }),

/***/ "../../node_modules/bs58check/base.js":
/*!********************************************!*\
  !*** ../../node_modules/bs58check/base.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar base58 = __webpack_require__(/*! bs58 */ \"../../node_modules/bs58/index.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var checksum = checksumFn(payload)\n\n    return base58.encode(Buffer.concat([\n      payload,\n      checksum\n    ], payload.length + 4))\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/bs58check/base.js?");

/***/ }),

/***/ "../../node_modules/bs58check/index.js":
/*!*********************************************!*\
  !*** ../../node_modules/bs58check/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar createHash = __webpack_require__(/*! create-hash */ \"../../node_modules/create-hash/browser.js\")\nvar bs58checkBase = __webpack_require__(/*! ./base */ \"../../node_modules/bs58check/base.js\")\n\n// SHA256(SHA256(buffer))\nfunction sha256x2 (buffer) {\n  var tmp = createHash('sha256').update(buffer).digest()\n  return createHash('sha256').update(tmp).digest()\n}\n\nmodule.exports = bs58checkBase(sha256x2)\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/bs58check/index.js?");

/***/ }),

/***/ "../../node_modules/buffer/index.js":
/*!******************************************!*\
  !*** ../../node_modules/buffer/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nconst base64 = __webpack_require__(/*! base64-js */ \"../../node_modules/base64-js/index.js\")\nconst ieee754 = __webpack_require__(/*! ieee754 */ \"../../node_modules/ieee754/index.js\")\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/buffer/index.js?");

/***/ }),

/***/ "../../node_modules/cashaddrjs-slp/src/base32.js":
/*!*******************************************************!*\
  !*** ../../node_modules/cashaddrjs-slp/src/base32.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * @license\n * https://github.com/bitcoincashjs/cashaddr\n * Copyright (c) 2017-2018 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n\n\nvar validate = (__webpack_require__(/*! ./validation */ \"../../node_modules/cashaddrjs-slp/src/validation.js\").validate);\n\n/**\n * Base32 encoding and decoding.\n *\n * @module base32\n */\n\n/**\n * Charset containing the 32 symbols used in the base32 encoding.\n * @private\n */\nvar CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n\n/**\n * Inverted index mapping each symbol into its index within the charset.\n * @private\n */\nvar CHARSET_INVERSE_INDEX = {\n  'q': 0, 'p': 1, 'z': 2, 'r': 3, 'y': 4, '9': 5, 'x': 6, '8': 7,\n  'g': 8, 'f': 9, '2': 10, 't': 11, 'v': 12, 'd': 13, 'w': 14, '0': 15,\n  's': 16, '3': 17, 'j': 18, 'n': 19, '5': 20, '4': 21, 'k': 22, 'h': 23,\n  'c': 24, 'e': 25, '6': 26, 'm': 27, 'u': 28, 'a': 29, '7': 30, 'l': 31,\n};\n\n/**\n * Encodes the given array of 5-bit integers as a base32-encoded string.\n *\n * @static\n * @param {Uint8Array} data Array of integers between 0 and 31 inclusive.\n * @returns {string}\n * @throws {ValidationError}\n */\nfunction encode(data) {\n  validate(data instanceof Uint8Array, 'Invalid data: ' + data + '.');\n  var base32 = '';\n  for (var i = 0; i < data.length; ++i) {\n    var value = data[i];\n    validate(0 <= value && value < 32, 'Invalid value: ' + value + '.');\n    base32 += CHARSET[value];\n  }\n  return base32;\n}\n\n/**\n * Decodes the given base32-encoded string into an array of 5-bit integers.\n *\n * @static\n * @param {string} string\n * @returns {Uint8Array}\n * @throws {ValidationError}\n */\nfunction decode(string) {\n  validate(typeof string === 'string', 'Invalid base32-encoded string: ' + string + '.');\n  var data = new Uint8Array(string.length);\n  for (var i = 0; i < string.length; ++i) {\n    var value = string[i];\n    validate(value in CHARSET_INVERSE_INDEX, 'Invalid value: ' + value + '.');\n    data[i] = CHARSET_INVERSE_INDEX[value];\n  }\n  return data;\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode,\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/cashaddrjs-slp/src/base32.js?");

/***/ }),

/***/ "../../node_modules/cashaddrjs-slp/src/cashaddr.js":
/*!*********************************************************!*\
  !*** ../../node_modules/cashaddrjs-slp/src/cashaddr.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * @license\n * https://github.com/bitcoincashjs/cashaddr\n * Copyright (c) 2017-2018 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n\n\nvar base32 = __webpack_require__(/*! ./base32 */ \"../../node_modules/cashaddrjs-slp/src/base32.js\");\nvar bigInt = __webpack_require__(/*! big-integer */ \"../../node_modules/big-integer/BigInteger.js\");\nvar convertBits = __webpack_require__(/*! ./convertBits */ \"../../node_modules/cashaddrjs-slp/src/convertBits.js\");\nvar validation = __webpack_require__(/*! ./validation */ \"../../node_modules/cashaddrjs-slp/src/validation.js\");\nvar validate = validation.validate;\n\n/**\n * Encoding and decoding of the new Cash Address format for Bitcoin Cash. <br />\n * Compliant with the original cashaddr specification:\n * {@link https://github.com/Bitcoin-UAHF/spec/blob/master/cashaddr.md}\n * @module cashaddr\n */\n\n/**\n * Encodes a hash from a given type into a Bitcoin Cash address with the given prefix.\n * \n * @static\n * @param {string} prefix Network prefix. E.g.: 'bitcoincash'.\n * @param {string} type Type of address to generate. Either 'P2PKH' or 'P2SH'.\n * @param {Uint8Array} hash Hash to encode represented as an array of 8-bit integers.\n * @returns {string}\n * @throws {ValidationError}\n */\nfunction encode(prefix, type, hash) {\n  validate(typeof prefix === 'string' && isValidPrefix(prefix), 'Invalid prefix: ' + prefix + '.');\n  validate(typeof type === 'string', 'Invalid type: ' + type + '.');\n  validate(hash instanceof Uint8Array, 'Invalid hash: ' + hash + '.');\n  var prefixData = concat(prefixToUint5Array(prefix), new Uint8Array(1));\n  var versionByte = getTypeBits(type) + getHashSizeBits(hash);\n  var payloadData = toUint5Array(concat(Uint8Array.of(versionByte), hash));\n  var checksumData = concat(concat(prefixData, payloadData), new Uint8Array(8));\n  var payload = concat(payloadData, checksumToUint5Array(polymod(checksumData)));\n  return prefix + ':' + base32.encode(payload);\n}\n\n/**\n * Decodes the given address into its constituting prefix, type and hash. See [#encode()]{@link encode}.\n * \n * @static\n * @param {string} address Address to decode. E.g.: 'bitcoincash:qpm2qsznhks23z7629mms6s4cwef74vcwvy22gdx6a'.\n * @returns {object}\n * @throws {ValidationError}\n */\nfunction decode(address) {\n  validate(typeof address === 'string' && hasSingleCase(address), 'Invalid address: ' + address + '.');\n  var pieces = address.toLowerCase().split(':');\n  validate(pieces.length === 2, 'Missing prefix: ' + address + '.');\n  var prefix = pieces[0];\n  var payload = base32.decode(pieces[1]);\n  validate(validChecksum(prefix, payload), 'Invalid checksum: ' + address + '.');\n  var payloadData = fromUint5Array(payload.slice(0, -8));\n  var versionByte = payloadData[0];\n  var hash = payloadData.slice(1);\n  validate(getHashSize(versionByte) === hash.length * 8, 'Invalid hash size: ' + address + '.');\n  var type = getType(versionByte);\n  return {\n    prefix: prefix,\n    type: type,\n    hash: hash,\n  };\n}\n\n/**\n * Error thrown when encoding or decoding fail due to invalid input.\n *\n * @constructor ValidationError\n * @param {string} message Error description.\n */\nvar ValidationError = validation.ValidationError;\n\n/**\n * Valid address prefixes.\n *\n * @private\n */\nvar VALID_PREFIXES = ['bitcoincash', 'bchtest', 'bchreg', 'simpleledger', 'slptest', 'slpreg'];\n\n/**\n * Checks whether a string is a valid prefix; ie., it has a single letter case\n * and is one of 'bitcoincash', 'bchtest', or 'bchreg'.\n *\n * @private\n * @param {string} prefix \n * @returns {boolean}\n */\nfunction isValidPrefix(prefix) {\n  return hasSingleCase(prefix) && VALID_PREFIXES.indexOf(prefix.toLowerCase()) !== -1;\n}\n\n/**\n * Derives an array from the given prefix to be used in the computation\n * of the address' checksum.\n *\n * @private\n * @param {string} prefix Network prefix. E.g.: 'bitcoincash'. \n * @returns {Uint8Array}\n */\nfunction prefixToUint5Array(prefix) {\n  var result = new Uint8Array(prefix.length);\n  for (var i = 0; i < prefix.length; ++i) {\n    result[i] = prefix[i].charCodeAt(0) & 31;\n  }\n  return result;\n}\n\n/**\n * Returns an array representation of the given checksum to be encoded\n * within the address' payload.\n *\n * @private\n * @param {BigInteger} checksum Computed checksum.\n * @returns {Uint8Array}\n */\nfunction checksumToUint5Array(checksum) {\n  var result = new Uint8Array(8);\n  for (var i = 0; i < 8; ++i) {\n    result[7 - i] = checksum.and(31).toJSNumber();\n    checksum = checksum.shiftRight(5);\n  }\n  return result;\n}\n\n/**\n * Returns the bit representation of the given type within the version\n * byte.\n *\n * @private\n * @param {string} type Address type. Either 'P2PKH' or 'P2SH'.\n * @returns {number}\n * @throws {ValidationError}\n */\nfunction getTypeBits(type) {\n  switch (type) {\n  case 'P2PKH':\n    return 0;\n  case 'P2SH':\n    return 8;\n  default:\n    throw new ValidationError('Invalid type: ' + type + '.');\n  }\n}\n\n/**\n * Retrieves the address type from its bit representation within the\n * version byte.\n *\n * @private\n * @param {number} versionByte\n * @returns {string}\n * @throws {ValidationError}\n */\nfunction getType(versionByte) {\n  switch (versionByte & 120) {\n  case 0:\n    return 'P2PKH';\n  case 8:\n    return 'P2SH';\n  default:\n    throw new ValidationError('Invalid address type in version byte: ' + versionByte + '.');\n  }\n}\n\n/**\n * Returns the bit representation of the length in bits of the given\n * hash within the version byte.\n *\n * @private\n * @param {Uint8Array} hash Hash to encode represented as an array of 8-bit integers.\n * @returns {number}\n * @throws {ValidationError}\n */\nfunction getHashSizeBits(hash) {\n  switch (hash.length * 8) {\n  case 160:\n    return 0;\n  case 192:\n    return 1;\n  case 224:\n    return 2;\n  case 256:\n    return 3;\n  case 320:\n    return 4;\n  case 384:\n    return 5;\n  case 448:\n    return 6;\n  case 512:\n    return 7;\n  default:\n    throw new ValidationError('Invalid hash size: ' + hash.length + '.');\n  }\n}\n\n/**\n * Retrieves the the length in bits of the encoded hash from its bit\n * representation within the version byte.\n *\n * @private\n * @param {number} versionByte\n * @returns {number}\n */\nfunction getHashSize(versionByte) {\n  switch (versionByte & 7) {\n  case 0:\n    return 160;\n  case 1:\n    return 192;\n  case 2:\n    return 224;\n  case 3:\n    return 256;\n  case 4:\n    return 320;\n  case 5:\n    return 384;\n  case 6:\n    return 448;\n  case 7:\n    return 512;\n  }\n}\n\n/**\n * Converts an array of 8-bit integers into an array of 5-bit integers,\n * right-padding with zeroes if necessary.\n *\n * @private\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n */\nfunction toUint5Array(data) {\n  return convertBits(data, 8, 5);\n}\n\n/**\n * Converts an array of 5-bit integers back into an array of 8-bit integers,\n * removing extra zeroes left from padding if necessary.\n * Throws a {@link ValidationError} if input is not a zero-padded array of 8-bit integers.\n *\n * @private\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n * @throws {ValidationError}\n */\nfunction fromUint5Array(data) {\n  return convertBits(data, 5, 8, true);\n}\n\n/**\n * Returns the concatenation a and b.\n *\n * @private\n * @param {Uint8Array} a \n * @param {Uint8Array} b \n * @returns {Uint8Array}\n * @throws {ValidationError}\n */\nfunction concat(a, b) {\n  var ab = new Uint8Array(a.length + b.length);\n  ab.set(a);\n  ab.set(b, a.length);\n  return ab;\n}\n\n/**\n * Computes a checksum from the given input data as specified for the CashAddr\n * format: https://github.com/Bitcoin-UAHF/spec/blob/master/cashaddr.md.\n *\n * @private\n * @param {Uint8Array} data Array of 5-bit integers over which the checksum is to be computed.\n * @returns {BigInteger}\n */\nfunction polymod(data) {\n  var GENERATOR = [0x98f2bc8e61, 0x79b76d99e2, 0xf33e5fb3c4, 0xae2eabe2a8, 0x1e4f43e470];\n  var checksum = bigInt(1);\n  for (var i = 0; i < data.length; ++i) {\n    var value = data[i];\n    var topBits = checksum.shiftRight(35);\n    checksum = checksum.and(0x07ffffffff).shiftLeft(5).xor(value);\n    for (var j = 0; j < GENERATOR.length; ++j) {\n      if (topBits.shiftRight(j).and(1).equals(1)) {\n        checksum = checksum.xor(GENERATOR[j]);\n      }\n    }\n  }\n  return checksum.xor(1);\n}\n\n/**\n * Verify that the payload has not been corrupted by checking that the\n * checksum is valid.\n * \n * @private\n * @param {string} prefix Network prefix. E.g.: 'bitcoincash'.\n * @param {Uint8Array} payload Array of 5-bit integers containing the address' payload.\n * @returns {boolean}\n */\nfunction validChecksum(prefix, payload) {\n  var prefixData = concat(prefixToUint5Array(prefix), new Uint8Array(1));\n  var checksumData = concat(prefixData, payload);\n  return polymod(checksumData).equals(0);\n}\n\n/**\n * Returns true if, and only if, the given string contains either uppercase\n * or lowercase letters, but not both.\n *\n * @private\n * @param {string} string Input string.\n * @returns {boolean}\n */\nfunction hasSingleCase(string) {\n  return string === string.toLowerCase() || string === string.toUpperCase();\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode,\n  ValidationError: ValidationError,\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/cashaddrjs-slp/src/cashaddr.js?");

/***/ }),

/***/ "../../node_modules/cashaddrjs-slp/src/convertBits.js":
/*!************************************************************!*\
  !*** ../../node_modules/cashaddrjs-slp/src/convertBits.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Copyright (c) 2017-2018 Emilio Almansi\n// Copyright (c) 2017 Pieter Wuille\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\nvar validate = (__webpack_require__(/*! ./validation */ \"../../node_modules/cashaddrjs-slp/src/validation.js\").validate);\n\n/**\n * Converts an array of integers made up of 'from' bits into an\n * array of integers made up of 'to' bits. The output array is\n * zero-padded if necessary, unless strict mode is true.\n * Throws a {@link ValidationError} if input is invalid.\n * Original by Pieter Wuille: https://github.com/sipa/bech32.\n *\n * @param {Uint8Array} data Array of integers made up of 'from' bits.\n * @param {number} from Length in bits of elements in the input array.\n * @param {number} to Length in bits of elements in the output array.\n * @param {bool} strictMode Require the conversion to be completed without padding.\n * @returns {Uint8Array}\n */\nmodule.exports = function(data, from, to, strictMode) {\n  var length = strictMode\n    ? Math.floor(data.length * from / to)\n    : Math.ceil(data.length * from / to);\n  var mask = (1 << to) - 1;\n  var result = new Uint8Array(length);\n  var index = 0;\n  var accumulator = 0;\n  var bits = 0;\n  for (var i = 0; i < data.length; ++i) {\n    var value = data[i];\n    validate(0 <= value && (value >> from) === 0, 'Invalid value: ' + value + '.');\n    accumulator = (accumulator << from) | value;\n    bits += from;\n    while (bits >= to) {\n      bits -= to;\n      result[index] = (accumulator >> bits) & mask;\n      ++index;\n    }\n  }\n  if (!strictMode) {\n    if (bits > 0) {\n      result[index] = (accumulator << (to - bits)) & mask;\n      ++index;\n    }\n  } else {\n    validate(\n      bits < from && ((accumulator << (to - bits)) & mask) === 0,\n      'Input cannot be converted to ' + to + ' bits without padding, but strict mode was used.'\n    );\n  }\n  return result;\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/cashaddrjs-slp/src/convertBits.js?");

/***/ }),

/***/ "../../node_modules/cashaddrjs-slp/src/validation.js":
/*!***********************************************************!*\
  !*** ../../node_modules/cashaddrjs-slp/src/validation.js ***!
  \***********************************************************/
/***/ ((module) => {

eval("/**\n * @license\n * https://github.com/bitcoincashjs/cashaddr\n * Copyright (c) 2017-2018 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n\n\n/**\n * Validation utility.\n *\n * @module validation\n */\n\n/**\n * Error thrown when encoding or decoding fail due to invalid input.\n *\n * @constructor ValidationError\n * @param {string} message Error description.\n */\nfunction ValidationError(message) {\n  var error = new Error();\n  this.name = error.name = 'ValidationError';\n  this.message = error.message = message;\n  this.stack = error.stack;\n}\n\nValidationError.prototype = Object.create(Error.prototype);\n\n/**\n * Validates a given condition, throwing a {@link ValidationError} if\n * the given condition does not hold.\n *\n * @static\n * @param {boolean} condition Condition to validate.\n * @param {string} message Error message in case the condition does not hold.\n */\nfunction validate(condition, message) {\n  if (!condition) {\n    throw new ValidationError(message);\n  }\n}\n\nmodule.exports = {\n  ValidationError: ValidationError,\n  validate: validate,\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/cashaddrjs-slp/src/validation.js?");

/***/ }),

/***/ "../../node_modules/cipher-base/index.js":
/*!***********************************************!*\
  !*** ../../node_modules/cipher-base/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\nvar Transform = (__webpack_require__(/*! stream */ \"../../node_modules/stream-browserify/index.js\").Transform)\nvar StringDecoder = (__webpack_require__(/*! string_decoder */ \"../../node_modules/string_decoder/index.js\").StringDecoder)\nvar inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/cipher-base/index.js?");

/***/ }),

/***/ "../../node_modules/create-hash/browser.js":
/*!*************************************************!*\
  !*** ../../node_modules/create-hash/browser.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")\nvar MD5 = __webpack_require__(/*! md5.js */ \"../../node_modules/md5.js/index.js\")\nvar RIPEMD160 = __webpack_require__(/*! ripemd160 */ \"../../node_modules/ripemd160/index.js\")\nvar sha = __webpack_require__(/*! sha.js */ \"../../node_modules/sha.js/index.js\")\nvar Base = __webpack_require__(/*! cipher-base */ \"../../node_modules/cipher-base/index.js\")\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/create-hash/browser.js?");

/***/ }),

/***/ "../../node_modules/create-hash/md5.js":
/*!*********************************************!*\
  !*** ../../node_modules/create-hash/md5.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var MD5 = __webpack_require__(/*! md5.js */ \"../../node_modules/md5.js/index.js\")\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/create-hash/md5.js?");

/***/ }),

/***/ "../../node_modules/debug/node_modules/ms/index.js":
/*!*********************************************************!*\
  !*** ../../node_modules/debug/node_modules/ms/index.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/debug/node_modules/ms/index.js?");

/***/ }),

/***/ "../../node_modules/debug/src/browser.js":
/*!***********************************************!*\
  !*** ../../node_modules/debug/src/browser.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"../../node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/debug/src/browser.js?");

/***/ }),

/***/ "../../node_modules/debug/src/common.js":
/*!**********************************************!*\
  !*** ../../node_modules/debug/src/common.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"../../node_modules/debug/node_modules/ms/index.js\");\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/debug/src/common.js?");

/***/ }),

/***/ "../../node_modules/electrum-cash/dist/index.mjs.js":
/*!**********************************************************!*\
  !*** ../../node_modules/electrum-cash/dist/index.mjs.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ClusterOrder\": () => (/* binding */ ClusterOrder),\n/* harmony export */   \"ConnectionStatus\": () => (/* binding */ ConnectionStatus),\n/* harmony export */   \"ElectrumClient\": () => (/* binding */ ElectrumClient),\n/* harmony export */   \"ElectrumCluster\": () => (/* binding */ ElectrumCluster),\n/* harmony export */   \"ElectrumTransport\": () => (/* binding */ ElectrumTransport)\n/* harmony export */ });\n/* unused harmony exports ClientState, ClusterDistribution, ClusterStatus, DefaultParameters, isVersionNegotiated, isVersionRejected */\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"../../node_modules/debug/src/browser.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"../../node_modules/events/events.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var tls__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tls */ \"?8c91\");\n/* harmony import */ var tls__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(tls__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var net__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! net */ \"?2cc1\");\n/* harmony import */ var net__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(net__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var isomorphic_ws__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! isomorphic-ws */ \"../../node_modules/isomorphic-ws/browser.js\");\n/* harmony import */ var isomorphic_ws__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(isomorphic_ws__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var async_mutex__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! async-mutex */ \"../../node_modules/async-mutex/index.mjs\");\n\n\n\n\n\n\n\n// Create the debug logs.\nconst debug = {\n    client: (0,debug__WEBPACK_IMPORTED_MODULE_0__.debug)('electrum-cash:client '),\n    cluster: (0,debug__WEBPACK_IMPORTED_MODULE_0__.debug)('electrum-cash:cluster'),\n    errors: (0,debug__WEBPACK_IMPORTED_MODULE_0__.debug)('electrum-cash:error  '),\n    warning: (0,debug__WEBPACK_IMPORTED_MODULE_0__.debug)('electrum-cash:warning'),\n    network: (0,debug__WEBPACK_IMPORTED_MODULE_0__.debug)('electrum-cash:network'),\n    ping: (0,debug__WEBPACK_IMPORTED_MODULE_0__.debug)('electrum-cash:pulses '),\n};\n// Set log colors.\ndebug.client.color = '2';\ndebug.cluster.color = '3';\ndebug.errors.color = '9';\ndebug.warning.color = '13';\ndebug.network.color = '4';\ndebug.ping.color = '8';\n\n/**\n * Grouping of utilities that simplifies implementation of the Electrum protocol.\n *\n * @ignore\n */\nclass ElectrumProtocol {\n    /**\n     * Helper function that builds an Electrum request object.\n     *\n     * @param {string} method       method to call.\n     * @param {array}  parameters   method parameters for the call.\n     * @param {string} requestId    unique string or number referencing this request.\n     *\n     * @returns a properly formatted Electrum request string.\n     */\n    static buildRequestObject(method, parameters, requestId) {\n        // Return the formatted request object.\n        // NOTE: Electrum either uses JsonRPC strictly or loosely.\n        //       If we specify protocol identifier without being 100% compliant, we risk being disconnected/blacklisted.\n        //       For this reason, we omit the protocol identifier to avoid issues.\n        return JSON.stringify({ method: method, params: parameters, id: requestId });\n    }\n    /**\n     * Constant used to verify if a provided string is a valid version number.\n     *\n     * @returns a regular expression that matches valid version numbers.\n     */\n    static get versionRegexp() {\n        return /^\\d+(\\.\\d+)+$/;\n    }\n    /**\n     * Constant used to separate statements/messages in a stream of data.\n     *\n     * @returns the delimiter used by Electrum to separate statements.\n     */\n    static get statementDelimiter() {\n        return '\\n';\n    }\n}\n\nconst isVersionRejected = function (object) {\n    return 'error' in object;\n};\nconst isVersionNegotiated = function (object) {\n    return 'software' in object && 'protocol' in object;\n};\n\n// Disable indent rule for this file because it is broken (https://github.com/typescript-eslint/typescript-eslint/issues/1824)\n/* eslint-disable @typescript-eslint/indent */\n/**\n * Enum that denotes the ordering to use in an ElectrumCluster.\n * @enum {number}\n * @property {0} RANDOM     Send requests to randomly selected servers in the cluster.\n * @property {1} PRIORITY   Send requests to servers in the cluster in the order they were added.\n */\nvar ClusterOrder;\n(function (ClusterOrder) {\n    ClusterOrder[ClusterOrder[\"RANDOM\"] = 0] = \"RANDOM\";\n    ClusterOrder[ClusterOrder[\"PRIORITY\"] = 1] = \"PRIORITY\";\n})(ClusterOrder || (ClusterOrder = {}));\n/**\n * Enum that denotes the distribution setting to use in an ElectrumCluster.\n * @enum {number}\n * @property {0} ALL   Send requests to all servers in the cluster.\n */\nvar ClusterDistribution;\n(function (ClusterDistribution) {\n    ClusterDistribution[ClusterDistribution[\"ALL\"] = 0] = \"ALL\";\n})(ClusterDistribution || (ClusterDistribution = {}));\n/**\n * Enum that denotes the ready status of an ElectrumCluster.\n * @enum {number}\n * @property {0} DISABLED    The cluster is disabled and unusable.\n * @property {1} DEGRADED    The cluster is degraded but still usable.\n * @property {2} READY       The cluster is healthy and ready for use.\n */\nvar ClusterStatus;\n(function (ClusterStatus) {\n    ClusterStatus[ClusterStatus[\"DISABLED\"] = 0] = \"DISABLED\";\n    ClusterStatus[ClusterStatus[\"DEGRADED\"] = 1] = \"DEGRADED\";\n    ClusterStatus[ClusterStatus[\"READY\"] = 2] = \"READY\";\n})(ClusterStatus || (ClusterStatus = {}));\n/**\n * Enum that denotes the availability of an ElectrumClient.\n * @enum {number}\n * @property {0} UNAVAILABLE   The client is currently not available.\n * @property {1} AVAILABLE     The client is available for use.\n */\nvar ClientState;\n(function (ClientState) {\n    ClientState[ClientState[\"UNAVAILABLE\"] = 0] = \"UNAVAILABLE\";\n    ClientState[ClientState[\"AVAILABLE\"] = 1] = \"AVAILABLE\";\n})(ClientState || (ClientState = {}));\n/**\n * Enum that denotes the connection status of an ElectrumConnection.\n * @enum {number}\n * @property {0} DISCONNECTED    The connection is disconnected.\n * @property {1} AVAILABLE       The connection is connected.\n * @property {2} DISCONNECTING   The connection is disconnecting.\n * @property {3} CONNECTING      The connection is connecting.\n * @property {4} RECONNECTING    The connection is restarting.\n */\nvar ConnectionStatus;\n(function (ConnectionStatus) {\n    ConnectionStatus[ConnectionStatus[\"DISCONNECTED\"] = 0] = \"DISCONNECTED\";\n    ConnectionStatus[ConnectionStatus[\"CONNECTED\"] = 1] = \"CONNECTED\";\n    ConnectionStatus[ConnectionStatus[\"DISCONNECTING\"] = 2] = \"DISCONNECTING\";\n    ConnectionStatus[ConnectionStatus[\"CONNECTING\"] = 3] = \"CONNECTING\";\n    ConnectionStatus[ConnectionStatus[\"RECONNECTING\"] = 4] = \"RECONNECTING\";\n})(ConnectionStatus || (ConnectionStatus = {}));\n\n/**\n * Object containing the commonly used ports and schemes for specific Transports.\n * @example const electrum = new ElectrumClient('Electrum client example', '1.4.1', 'bch.imaginary.cash', Transport.WSS.Port, Transport.WSS.Scheme);\n *\n * @property {object} TCP       Port and Scheme to use unencrypted TCP sockets.\n * @property {object} TCP_TLS   Port and Scheme to use TLS-encrypted TCP sockets.\n * @property {object} WS        Port and Scheme to use unencrypted WebSockets.\n * @property {object} WSS       Port and Scheme to use TLS-encrypted WebSockets.\n */\nconst ElectrumTransport = {\n    TCP: { Port: 50001, Scheme: 'tcp' },\n    TCP_TLS: { Port: 50002, Scheme: 'tcp_tls' },\n    WS: { Port: 50003, Scheme: 'ws' },\n    WSS: { Port: 50004, Scheme: 'wss' },\n};\nconst DefaultParameters = {\n    // Port number for TCP TLS connections\n    PORT: ElectrumTransport.TCP_TLS.Port,\n    // Transport to connect to the Electrum server\n    TRANSPORT_SCHEME: ElectrumTransport.TCP_TLS.Scheme,\n    // How long to wait before attempting to reconnect, in milliseconds.\n    RECONNECT: 15 * 1000,\n    // How long to wait for network operations before following up, in milliseconds.\n    TIMEOUT: 120 * 1000,\n    // Time between ping messages, in milliseconds. Pinging keeps the connection alive.\n    // The reason for pinging this frequently is to detect connection problems early.\n    PING_INTERVAL: 3 * 1000,\n    // How many servers are required before we trust information provided.\n    CLUSTER_CONFIDENCE: 1,\n    // How many servers we send requests to.\n    CLUSTER_DISTRIBUTION: ClusterDistribution.ALL,\n    // What order we select servers to send requests to.\n    CLUSTER_ORDER: ClusterOrder.RANDOM,\n};\n\n/**\n * Isomorphic Socket interface supporting TCP sockets and WebSockets (Node and browser).\n * The interface is a subset of the TLSSocket interface with some slight modifications.\n * It can be expanded when more socket functionality is needed in the rest of the\n * electrum-cash code. Changes from the TLSSocket interface (besides it being a subset):\n * - Event 'close' -> 'disconnect'\n * - New function socket.disconnect()\n *\n * @ignore\n */\nclass ElectrumSocket extends events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n    // Declare an empty TCP socket.\n    tcpSocket;\n    // Declare an empty WebSocket.\n    webSocket;\n    // Declare timers for keep-alive pings and reconnection\n    timers = {};\n    // Initialize boolean that indicates whether the onConnect function has run (initialize to false).\n    onConnectHasRun = false;\n    // Initialize event forwarding functions.\n    eventForwarders = {\n        disconnect: () => this.emit('disconnect'),\n        tcpData: (data) => this.emit('data', data),\n        wsData: (event) => this.emit('data', `${event.data}\\n`),\n        tcpError: (err) => this.emit('error', err),\n        wsError: (event) => this.emit('error', event.error),\n    };\n    /**\n     * Connect to host:port using the specified transport\n     *\n     * @param {string} host              Fully qualified domain name or IP address of the host\n     * @param {number} port              Network port for the host to connect to\n     * @param {TransportScheme} scheme   Transport scheme to use\n     * @param {number} timeout           If no connection is established after `timeout` ms, the connection is terminated\n     *\n     * @throws {Error} if an incorrect transport scheme is specified\n     */\n    connect(host, port, scheme, timeout) {\n        // Check that no existing socket exists before initiating a new connection.\n        if (this.tcpSocket || this.webSocket) {\n            throw (new Error('Cannot initiate a new socket connection when an existing connection exists'));\n        }\n        // Set a timer to force disconnect after `timeout` seconds\n        this.timers.disconnect = setTimeout(() => this.disconnectOnTimeout(host, port, timeout), timeout);\n        // Remove the timer if a connection is successfully established\n        this.once('connect', this.clearDisconnectTimerOnTimeout);\n        // Define how to refer to the connection scheme in debug output.\n        const socketTypes = {\n            [ElectrumTransport.TCP.Scheme]: 'a TCP Socket',\n            [ElectrumTransport.TCP_TLS.Scheme]: 'an encrypted TCP socket',\n            [ElectrumTransport.WS.Scheme]: 'a WebSocket',\n            [ElectrumTransport.WSS.Scheme]: 'an encrypted WebSocket',\n        };\n        // Log that we are trying to establish a connection.\n        debug.network(`Initiating ${socketTypes[scheme]} connection to '${host}:${port}'.`);\n        if (scheme === ElectrumTransport.TCP.Scheme || scheme === ElectrumTransport.TCP_TLS.Scheme) {\n            if (scheme === ElectrumTransport.TCP_TLS.Scheme) {\n                // Initialize connection options.\n                const connectionOptions = { rejectUnauthorized: false };\n                // If the hostname is not an IP address..\n                if (!net__WEBPACK_IMPORTED_MODULE_3___default().isIP(host)) {\n                    // Set the servername option which enables support for SNI.\n                    // NOTE: SNI enables a server that hosts multiple domains to provide the appropriate TLS certificate.\n                    connectionOptions.serverName = host;\n                }\n                // Initialize this.tcpSocket (allowing self-signed certificates).\n                this.tcpSocket = tls__WEBPACK_IMPORTED_MODULE_2___default().connect(port, host, connectionOptions);\n                // Add a 'secureConnect' listener that checks the authorization status of\n                // the socket, and logs a warning when it uses a self signed certificate.\n                this.tcpSocket.once('secureConnect', () => {\n                    // Cannot happen, since this event callback *only* exists on TLSSocket\n                    if (!(this.tcpSocket instanceof (tls__WEBPACK_IMPORTED_MODULE_2___default().TLSSocket)))\n                        return;\n                    // Force cast authorizationError from Error to string (through unknown)\n                    // because it is incorrectly typed as an Error\n                    const authorizationError = this.tcpSocket.authorizationError;\n                    if (authorizationError === 'DEPTH_ZERO_SELF_SIGNED_CERT') {\n                        debug.warning(`Connection to ${host}:${port} uses a self-signed certificate`);\n                    }\n                });\n                // Trigger successful connection events.\n                this.tcpSocket.on('secureConnect', this.onConnect.bind(this, socketTypes[scheme], host, port));\n            }\n            else {\n                // Initialize this.tcpSocket.\n                this.tcpSocket = net__WEBPACK_IMPORTED_MODULE_3___default().connect({ host, port });\n                // Trigger successful connection events.\n                this.tcpSocket.on('connect', this.onConnect.bind(this, socketTypes[scheme], host, port));\n            }\n            // Configure encoding.\n            this.tcpSocket.setEncoding('utf8');\n            // Enable persistent connections with an initial delay of 0.\n            this.tcpSocket.setKeepAlive(true, 0);\n            // Disable buffering of outgoing data.\n            this.tcpSocket.setNoDelay(true);\n            // Forward the encountered errors.\n            this.tcpSocket.on('error', this.eventForwarders.tcpError);\n        }\n        else if (scheme === ElectrumTransport.WS.Scheme || scheme === ElectrumTransport.WSS.Scheme) {\n            if (scheme === ElectrumTransport.WSS.Scheme) {\n                // Initialize this.webSocket (rejecting self-signed certificates).\n                // We reject self-signed certificates to match functionality of browsers.\n                this.webSocket = new (isomorphic_ws__WEBPACK_IMPORTED_MODULE_4___default())(`wss://${host}:${port}`);\n            }\n            else {\n                // Initialize this.webSocket.\n                this.webSocket = new (isomorphic_ws__WEBPACK_IMPORTED_MODULE_4___default())(`ws://${host}:${port}`);\n            }\n            // Trigger successful connection events.\n            this.webSocket.addEventListener('open', this.onConnect.bind(this, socketTypes[scheme], host, port));\n            // Forward the encountered errors.\n            this.webSocket.addEventListener('error', this.eventForwarders.wsError);\n        }\n        else {\n            // Throw an error if an incorrect transport is specified\n            throw (new Error('Incorrect transport specified'));\n        }\n    }\n    /**\n     * Sets up forwarding of events related to the connection.\n     *\n     * @param {string} connectionType   Name of the connection/transport type, used for logging.\n     * @param {string} host             Fully qualified domain name or IP address of the host\n     * @param {number} port             Network port for the host to connect to\n     */\n    onConnect(connectionType, host, port) {\n        // If the onConnect function has already run, do not execute it again.\n        if (this.onConnectHasRun)\n            return;\n        // Log that the connection has been established.\n        debug.network(`Established ${connectionType} connection with '${host}:${port}'.`);\n        if (typeof this.tcpSocket !== 'undefined') {\n            // Forward the socket events\n            this.tcpSocket.addListener('close', this.eventForwarders.disconnect);\n            this.tcpSocket.addListener('data', this.eventForwarders.tcpData);\n        }\n        else if (typeof this.webSocket !== 'undefined') {\n            // Forward the socket events\n            this.webSocket.addEventListener('close', this.eventForwarders.disconnect);\n            this.webSocket.addEventListener('message', this.eventForwarders.wsData);\n        }\n        // Indicate that the onConnect function has run.\n        this.onConnectHasRun = true;\n        // Emit the connect event.\n        this.emit('connect');\n    }\n    /**\n     * Clears the disconnect timer if it is still active.\n     */\n    clearDisconnectTimerOnTimeout() {\n        // Clear the retry timer if it is still active.\n        if (this.timers.disconnect) {\n            clearTimeout(this.timers.disconnect);\n        }\n    }\n    /**\n     * Forcibly terminate the connection.\n     *\n     * @throws {Error} if no connection was found\n     */\n    disconnect() {\n        // Clear the disconnect timer so that the socket does not try to disconnect again later.\n        this.clearDisconnectTimerOnTimeout();\n        // Handle disconnect based differently depending on socket type.\n        if (this.tcpSocket) {\n            // Remove all event forwarders.\n            this.tcpSocket.removeListener('close', this.eventForwarders.disconnect);\n            this.tcpSocket.removeListener('data', this.eventForwarders.tcpData);\n            this.tcpSocket.removeListener('error', this.eventForwarders.tcpError);\n            // Terminate the connection.\n            this.tcpSocket.destroy();\n            // Remove the stored socket.\n            this.tcpSocket = undefined;\n        }\n        else if (this.webSocket) {\n            try {\n                // Remove all event forwarders.\n                this.webSocket.removeEventListener('close', this.eventForwarders.disconnect);\n                this.webSocket.removeEventListener('message', this.eventForwarders.wsData);\n                this.webSocket.removeEventListener('error', this.eventForwarders.wsError);\n                // Gracefully terminate the connection.\n                this.webSocket.close();\n            }\n            catch (ignored) {\n                // close() will throw an error if the connection has not been established yet.\n                // We ignore this error, since no similar error gets thrown in the TLS Socket.\n            }\n            finally {\n                // Remove the stored socket regardless of any thrown errors.\n                this.webSocket = undefined;\n            }\n        }\n        // Indicate that the onConnect function has not run and it has to be run again.\n        this.onConnectHasRun = false;\n        // Emit a disconnect event\n        this.emit('disconnect');\n    }\n    /**\n     * Write data to the socket\n     *\n     * @param {Uint8Array | string} data   Data to be written to the socket\n     * @param {function} callback          Callback function to be called when the write has completed\n     *\n     * @throws {Error} if no connection was found\n     * @returns true if the message was fully flushed to the socket, false if part of the message\n     * is queued in the user memory\n     */\n    write(data, callback) {\n        if (this.tcpSocket) {\n            // Write data to the TLS Socket and return the status indicating whether the\n            // full message was flushed to the socket\n            return this.tcpSocket.write(data, callback);\n        }\n        if (this.webSocket) {\n            // Write data to the WebSocket\n            this.webSocket.send(data, callback);\n            // WebSockets always fit everything in a single request, so we return true\n            return true;\n        }\n        // Throw an error if no active connection is found\n        throw (new Error('Cannot write to socket when there is no active connection'));\n    }\n    /**\n     * Force a disconnection if no connection is established after `timeout` milliseconds.\n     *\n     * @param {string} host      Host of the connection that timed out\n     * @param {number} port      Port of the connection that timed out\n     * @param {number} timeout   Elapsed milliseconds\n     */\n    disconnectOnTimeout(host, port, timeout) {\n        // Remove the connect listener.\n        this.removeListener('connect', this.clearDisconnectTimerOnTimeout);\n        // Create a new timeout error.\n        const timeoutError = { code: 'ETIMEDOUT', message: `Connection to '${host}:${port}' timed out after ${timeout} milliseconds` };\n        // Emit an error event so that connect is rejected upstream.\n        this.emit('error', timeoutError);\n        // Forcibly disconnect to clean up the connection on timeout\n        this.disconnect();\n    }\n}\n\n/**\n * Wrapper around TLS/WSS sockets that gracefully separates a network stream into Electrum protocol messages.\n *\n * @ignore\n */\nclass ElectrumConnection extends events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n    application;\n    version;\n    host;\n    port;\n    scheme;\n    timeout;\n    pingInterval;\n    // Declare an empty socket.\n    socket;\n    // Declare empty timestamps\n    lastReceivedTimestamp;\n    // Declare timers for keep-alive pings and reconnection\n    timers = {};\n    // Initialize an empty array of connection verification timers.\n    // eslint-disable-next-line no-undef\n    verifications = [];\n    // Initialize the connected flag to false to indicate that there is no connection\n    status = ConnectionStatus.DISCONNECTED;\n    // Initialize messageBuffer to an empty string\n    messageBuffer = '';\n    /**\n     * Sets up network configuration for an Electrum client connection.\n     *\n     * @param {string} application       your application name, used to identify to the electrum host.\n     * @param {string} version           protocol version to use with the host.\n     * @param {string} host              fully qualified domain name or IP number of the host.\n     * @param {number} port              the network port of the host.\n     * @param {TransportScheme} scheme   the transport scheme to use for connection\n     * @param {number} timeout           how long network delays we will wait for before taking action, in milliseconds.\n     * @param {number} pingInterval      the time between sending pings to the electrum host, in milliseconds.\n     *\n     * @throws {Error} if `version` is not a valid version string.\n     */\n    constructor(application, version, host, port = DefaultParameters.PORT, scheme = DefaultParameters.TRANSPORT_SCHEME, timeout = DefaultParameters.TIMEOUT, pingInterval = DefaultParameters.PING_INTERVAL) {\n        // Initialize the event emitter.\n        super();\n        this.application = application;\n        this.version = version;\n        this.host = host;\n        this.port = port;\n        this.scheme = scheme;\n        this.timeout = timeout;\n        this.pingInterval = pingInterval;\n        // Check if the provided version is a valid version number.\n        if (!ElectrumProtocol.versionRegexp.test(version)) {\n            // Throw an error since the version number was not valid.\n            throw (new Error(`Provided version string (${version}) is not a valid protocol version number.`));\n        }\n        // Create an initial network socket.\n        this.createSocket();\n    }\n    /**\n     * Returns a string for the host identifier for usage in debug messages.\n     */\n    get hostIdentifier() {\n        return `${this.host}:${this.port}`;\n    }\n    /**\n     * Create and configures a fresh socket and attaches all relevant listeners.\n     */\n    createSocket() {\n        // Initialize a new ElectrumSocket\n        this.socket = new ElectrumSocket();\n        // Set up handlers for connection and disconnection.\n        this.socket.on('connect', this.onSocketConnect.bind(this));\n        this.socket.on('disconnect', this.onSocketDisconnect.bind(this));\n        // Set up handler for incoming data.\n        this.socket.on('data', this.parseMessageChunk.bind(this));\n    }\n    /**\n     * Shuts down and destroys the current socket.\n     */\n    destroySocket() {\n        // Close the socket connection and destroy the socket.\n        this.socket.disconnect();\n    }\n    /**\n     * Assembles incoming data into statements and hands them off to the message parser.\n     *\n     * @param {string} data   data to append to the current message buffer, as a string.\n     *\n     * @throws {SyntaxError} if the passed statement parts are not valid JSON.\n     */\n    parseMessageChunk(data) {\n        // Update the timestamp for when we last received data.\n        this.lastReceivedTimestamp = Date.now();\n        // Clear and remove all verification timers.\n        this.verifications.forEach((timer) => clearTimeout(timer));\n        this.verifications.length = 0;\n        // Add the message to the current message buffer.\n        this.messageBuffer += data;\n        // Check if the new message buffer contains the statement delimiter.\n        while (this.messageBuffer.includes(ElectrumProtocol.statementDelimiter)) {\n            // Split message buffer into statements.\n            const statementParts = this.messageBuffer.split(ElectrumProtocol.statementDelimiter);\n            // For as long as we still have statements to parse..\n            while (statementParts.length > 1) {\n                // Move the first statement to its own variable.\n                const currentStatementList = String(statementParts.shift());\n                // Parse the statement into an object or list of objects.\n                let statementList = JSON.parse(currentStatementList);\n                // Wrap the statement in an array if it is not already a batched statement list.\n                if (!Array.isArray(statementList)) {\n                    statementList = [statementList];\n                }\n                // For as long as there is statements in the result set..\n                while (statementList.length > 0) {\n                    // Move the first statement from the batch to its own variable.\n                    const currentStatement = statementList.shift();\n                    // If the current statement is a version negotiation response..\n                    if (currentStatement.id === 'versionNegotiation') {\n                        if (currentStatement.error) {\n                            // Then emit a failed version negotiation response signal.\n                            this.emit('version', { error: currentStatement.error });\n                        }\n                        else {\n                            // Emit a successful version negotiation response signal.\n                            this.emit('version', { software: currentStatement.result[0], protocol: currentStatement.result[1] });\n                        }\n                        // Consider this statement handled.\n                        continue;\n                    }\n                    // If the current statement is a keep-alive response..\n                    if (currentStatement.id === 'keepAlive') {\n                        // Do nothing and consider this statement handled.\n                        continue;\n                    }\n                    // Emit the statements for handling higher up in the stack.\n                    this.emit('statement', currentStatement);\n                }\n            }\n            // Store the remaining statement as the current message buffer.\n            this.messageBuffer = statementParts.shift() || '';\n        }\n    }\n    /**\n     * Sends a keep-alive message to the host.\n     *\n     * @returns true if the ping message was fully flushed to the socket, false if\n     * part of the message is queued in the user memory\n     */\n    ping() {\n        // Write a log message.\n        debug.ping(`Sending keep-alive ping to '${this.hostIdentifier}'`);\n        // Craft a keep-alive message.\n        const message = ElectrumProtocol.buildRequestObject('server.ping', [], 'keepAlive');\n        // Send the keep-alive message.\n        const status = this.send(message);\n        // Return the ping status.\n        return status;\n    }\n    /**\n     * Initiates the network connection negotiates a protocol version. Also emits the 'connect' signal if successful.\n     *\n     * @throws {Error} if the socket connection fails.\n     * @returns a promise resolving when the connection is established\n     */\n    async connect() {\n        // If we are already connected return true.\n        if (this.status === ConnectionStatus.CONNECTED) {\n            return;\n        }\n        // Indicate that the connection is connecting\n        this.status = ConnectionStatus.CONNECTING;\n        // Define a function to wrap connection as a promise.\n        const connectionResolver = (resolve, reject) => {\n            const rejector = (error) => {\n                // Set the status back to disconnected\n                this.status = ConnectionStatus.DISCONNECTED;\n                // Reject with the error as reason\n                reject(error);\n            };\n            // Replace previous error handlers to reject the promise on failure.\n            this.socket.removeAllListeners('error');\n            this.socket.once('error', rejector);\n            // Define a function to wrap version negotiation as a callback.\n            const versionNegotiator = () => {\n                // Write a log message to show that we have started version negotiation.\n                debug.network(`Requesting protocol version ${this.version} with '${this.hostIdentifier}'.`);\n                // remove the one-time error handler since no error was detected.\n                this.socket.removeListener('error', rejector);\n                // Build a version negotiation message.\n                const versionMessage = ElectrumProtocol.buildRequestObject('server.version', [this.application, this.version], 'versionNegotiation');\n                // Define a function to wrap version validation as a function.\n                const versionValidator = (version) => {\n                    // Check if version negotiation failed.\n                    if (isVersionRejected(version)) {\n                        // Disconnect from the host.\n                        this.disconnect(true);\n                        // Declare an error message.\n                        const errorMessage = 'unsupported protocol version.';\n                        // Log the error.\n                        debug.errors(`Failed to connect with ${this.hostIdentifier} due to ${errorMessage}`);\n                        // Reject the connection with false since version negotiation failed.\n                        reject(errorMessage);\n                    }\n                    // Check if the host supports our requested protocol version.\n                    else if (version.protocol !== this.version) {\n                        // Disconnect from the host.\n                        this.disconnect(true);\n                        // Declare an error message.\n                        const errorMessage = `incompatible protocol version negotiated (${version.protocol} !== ${this.version}).`;\n                        // Log the error.\n                        debug.errors(`Failed to connect with ${this.hostIdentifier} due to ${errorMessage}`);\n                        // Reject the connection with false since version negotiation failed.\n                        reject(errorMessage);\n                    }\n                    else {\n                        // Write a log message.\n                        debug.network(`Negotiated protocol version ${version.protocol} with '${this.hostIdentifier}', powered by ${version.software}.`);\n                        // Set connection status to connected\n                        this.status = ConnectionStatus.CONNECTED;\n                        // Emit a connect event now that the connection is usable.\n                        this.emit('connect');\n                        // Resolve the connection promise since we successfully connected and negotiated protocol version.\n                        resolve();\n                    }\n                };\n                // Listen for version negotiation once.\n                this.once('version', versionValidator);\n                // Send the version negotiation message.\n                this.send(versionMessage);\n            };\n            // Prepare the version negotiation.\n            this.socket.once('connect', versionNegotiator);\n            // Set up handler for network errors.\n            this.socket.on('error', this.onSocketError.bind(this));\n            // Connect to the server.\n            this.socket.connect(this.host, this.port, this.scheme, this.timeout);\n        };\n        // Wait until connection is established and version negotiation succeeds.\n        await new Promise(connectionResolver);\n    }\n    /**\n     * Restores the network connection.\n     */\n    async reconnect() {\n        // If a reconnect timer is set, remove it\n        await this.clearReconnectTimer();\n        // Write a log message.\n        debug.network(`Trying to reconnect to '${this.hostIdentifier}'..`);\n        // Set the status to reconnecting for more accurate log messages.\n        this.status = ConnectionStatus.RECONNECTING;\n        // Destroy and recreate the socket to get a clean slate.\n        this.destroySocket();\n        this.createSocket();\n        try {\n            // Try to connect again.\n            await this.connect();\n        }\n        catch (error) {\n            // Do nothing as the error should be handled via the disconnect and error signals.\n        }\n    }\n    /**\n     * Removes the current reconnect timer.\n     */\n    clearReconnectTimer() {\n        // If a reconnect timer is set, remove it\n        if (this.timers.reconnect) {\n            clearTimeout(this.timers.reconnect);\n        }\n        // Reset the timer reference.\n        this.timers.reconnect = undefined;\n    }\n    /**\n     * Removes the current keep-alive timer.\n     */\n    clearKeepAliveTimer() {\n        // If a keep-alive timer is set, remove it\n        if (this.timers.keepAlive) {\n            clearTimeout(this.timers.keepAlive);\n        }\n        // Reset the timer reference.\n        this.timers.keepAlive = undefined;\n    }\n    /**\n     * Initializes the keep alive timer loop.\n     */\n    setupKeepAliveTimer() {\n        // If the keep-alive timer loop is not currently set up..\n        if (!this.timers.keepAlive) {\n            // Set a new keep-alive timer.\n            this.timers.keepAlive = setTimeout(this.ping.bind(this), this.pingInterval);\n        }\n    }\n    /**\n     * Tears down the current connection and removes all event listeners on disconnect.\n     *\n     * @param {boolean} force   disconnect even if the connection has not been fully established yet.\n     *\n     * @returns true if successfully disconnected, or false if there was no connection.\n     */\n    async disconnect(force = false) {\n        // Return early when there is nothing to disconnect from\n        if (this.status === ConnectionStatus.DISCONNECTED && !force) {\n            // Return false to indicate that there was nothing to disconnect from.\n            return false;\n        }\n        // Set connection status to null to indicate tear-down is currently happening.\n        this.status = ConnectionStatus.DISCONNECTING;\n        // If a keep-alive timer is set, remove it.\n        await this.clearKeepAliveTimer();\n        // If a reconnect timer is set, remove it\n        await this.clearReconnectTimer();\n        const disconnectResolver = (resolve) => {\n            // Resolve to true after the connection emits a disconnect\n            this.once('disconnect', () => resolve(true));\n            // Close the connection and destroy the socket.\n            this.destroySocket();\n        };\n        // Return true to indicate that we disconnected.\n        return new Promise(disconnectResolver);\n    }\n    /**\n     * Sends an arbitrary message to the server.\n     *\n     * @param {string} message   json encoded request object to send to the server, as a string.\n     *\n     * @returns true if the message was fully flushed to the socket, false if part of the message\n     * is queued in the user memory\n     */\n    send(message) {\n        // Remove the current keep-alive timer if it exists.\n        this.clearKeepAliveTimer();\n        // Get the current timestamp in milliseconds.\n        const currentTime = Date.now();\n        // Follow up and verify that the message got sent..\n        const verificationTimer = setTimeout(this.verifySend.bind(this, currentTime), this.timeout);\n        // Store the verification timer locally so that it can be cleared when data has been received.\n        this.verifications.push(verificationTimer);\n        // Set a new keep-alive timer.\n        this.setupKeepAliveTimer();\n        // Write the message to the network socket.\n        return this.socket.write(message + ElectrumProtocol.statementDelimiter);\n    }\n    // --- Event managers. --- //\n    /**\n     * Marks the connection as timed out and schedules reconnection if we have not\n     * received data within the expected time frame.\n     */\n    verifySend(sentTimestamp) {\n        // If we haven't received any data since we last sent data out..\n        if (Number(this.lastReceivedTimestamp) < sentTimestamp) {\n            // If this connection is already disconnected, we do not change anything\n            if ((this.status === ConnectionStatus.DISCONNECTED) || (this.status === ConnectionStatus.DISCONNECTING)) {\n                debug.errors(`Tried to verify already disconnected connection to '${this.hostIdentifier}'`);\n                return;\n            }\n            // Remove the current keep-alive timer if it exists.\n            this.clearKeepAliveTimer();\n            // Write a notification to the logs.\n            debug.network(`Connection to '${this.hostIdentifier}' timed out.`);\n            // Close the connection to avoid re-use.\n            // NOTE: This initiates reconnection routines if the connection has not\n            //       been marked as intentionally disconnected.\n            this.socket.disconnect();\n        }\n    }\n    /**\n     * Updates the connection status when a connection is confirmed.\n     */\n    onSocketConnect() {\n        // If a reconnect timer is set, remove it.\n        this.clearReconnectTimer();\n        // Set up the initial timestamp for when we last received data from the server.\n        this.lastReceivedTimestamp = Date.now();\n        // Set up the initial keep-alive timer.\n        this.setupKeepAliveTimer();\n        // Clear all temporary error listeners.\n        this.socket.removeAllListeners('error');\n        // Set up handler for network errors.\n        this.socket.on('error', this.onSocketError.bind(this));\n    }\n    /**\n     * Updates the connection status when a connection is ended.\n     */\n    onSocketDisconnect() {\n        // Send a disconnect signal higher up the stack.\n        this.emit('disconnect');\n        // Remove the current keep-alive timer if it exists.\n        this.clearKeepAliveTimer();\n        // If this is a connection we're trying to tear down..\n        if (this.status === ConnectionStatus.DISCONNECTING) {\n            // If a reconnect timer is set, remove it.\n            this.clearReconnectTimer();\n            // Remove all event listeners\n            this.removeAllListeners();\n            // Mark the connection as disconnected.\n            this.status = ConnectionStatus.DISCONNECTED;\n            // Write a log message.\n            debug.network(`Disconnected from '${this.hostIdentifier}'.`);\n        }\n        else {\n            // If this is for an established connection..\n            if (this.status === ConnectionStatus.CONNECTED) {\n                // Write a notification to the logs.\n                debug.errors(`Connection with '${this.hostIdentifier}' was closed, trying to reconnect in ${DefaultParameters.RECONNECT / 1000} seconds.`);\n            }\n            // Mark the connection as disconnected for now..\n            this.status = ConnectionStatus.DISCONNECTED;\n            // If we don't have a pending reconnection timer..\n            if (!this.timers.reconnect) {\n                // Attempt to reconnect after one keep-alive duration.\n                this.timers.reconnect = setTimeout(this.reconnect.bind(this), DefaultParameters.RECONNECT);\n            }\n        }\n    }\n    /**\n     * Notify administrator of any unexpected errors.\n     */\n    onSocketError(error) {\n        // Report a generic error if no error information is present.\n        // NOTE: When using WSS, the error event explicitly\n        //       only allows to send a \"simple\" event without data.\n        //       https://stackoverflow.com/a/18804298\n        if (typeof error === 'undefined') {\n            // Do nothing, and instead rely on the socket disconnect event for further information.\n            return;\n        }\n        // If the DNS lookup failed.\n        if (error.code === 'EAI_AGAIN') {\n            debug.errors(`Failed to look up DNS records for '${this.host}'.`);\n            return;\n        }\n        // If the connection timed out..\n        if (error.code === 'ETIMEDOUT') {\n            // Log the provided timeout message.\n            debug.errors(error.message);\n            return;\n        }\n        // Log unknown error\n        debug.errors(`Unknown network error ('${this.hostIdentifier}'): `, error);\n    }\n}\n\nconst isRPCErrorResponse = function (message) {\n    return 'id' in message && 'error' in message;\n};\nconst isRPCNotification = function (message) {\n    return !('id' in message) && 'method' in message;\n};\n\n/**\n * Triggers when the underlying connection is established.\n *\n * @event ElectrumClient#connected\n */\n/**\n * Triggers when the underlying connection is lost.\n *\n * @event ElectrumClient#disconnected\n */\n/**\n * High-level Electrum client that lets applications send requests and subscribe to notification events from a server.\n */\nclass ElectrumClient extends events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n    // Declare instance variables\n    connection;\n    // Initialize an empty list of subscription metadata.\n    subscriptionMethods = {};\n    subscriptionCallbacks = new WeakMap();\n    // Start counting the request IDs from 0\n    requestId = 0;\n    // Initialize an empty dictionary for keeping track of request resolvers\n    requestResolvers = {};\n    /**\n     * Initializes an Electrum client.\n     *\n     * @param {string} application       your application name, used to identify to the electrum host.\n     * @param {string} version           protocol version to use with the host.\n     * @param {string} host              fully qualified domain name or IP number of the host.\n     * @param {number} port              the TCP network port of the host.\n     * @param {TransportScheme} scheme   the transport scheme to use for connection\n     * @param {number} timeout           how long network delays we will wait for before taking action, in milliseconds.\n     * @param {number} pingInterval      the time between sending pings to the electrum host, in milliseconds.\n     *\n     * @throws {Error} if `version` is not a valid version string.\n     */\n    constructor(application, version, host, port = DefaultParameters.PORT, scheme = DefaultParameters.TRANSPORT_SCHEME, timeout = DefaultParameters.TIMEOUT, pingInterval = DefaultParameters.PING_INTERVAL) {\n        // Initialize the event emitter.\n        super();\n        // Set up a connection to an electrum server.\n        this.connection = new ElectrumConnection(application, version, host, port, scheme, timeout, pingInterval);\n    }\n    /**\n     * Connects to the remote server.\n     *\n     * @throws {Error} if the socket connection fails.\n     * @returns a promise resolving when the connection is established.\n     */\n    async connect() {\n        // Listen for parsed statements.\n        this.connection.on('statement', this.response.bind(this));\n        // Hook up resubscription on connection.\n        this.connection.on('connect', this.resubscribeOnConnect.bind(this));\n        // Relay connect and disconnect events.\n        this.connection.on('connect', this.emit.bind(this, 'connected'));\n        this.connection.on('disconnect', this.onConnectionDisconnect.bind(this));\n        // Relay error events.\n        this.connection.on('error', this.emit.bind(this, 'error'));\n        // Connect with the server.\n        await this.connection.connect();\n    }\n    /**\n     * Disconnects from the remote server and removes all event listeners/subscriptions and open requests.\n     *\n     * @param {boolean} force                 disconnect even if the connection has not been fully established yet.\n     * @param {boolean} retainSubscriptions   retain subscription data so they will be restored on reconnection.\n     *\n     * @returns true if successfully disconnected, or false if there was no connection.\n     */\n    async disconnect(force = false, retainSubscriptions = false) {\n        if (!retainSubscriptions) {\n            // Cancel all event listeners.\n            this.removeAllListeners();\n            // Remove all subscription data\n            this.subscriptionMethods = {};\n        }\n        // For each pending request..\n        for (const index in this.requestResolvers) {\n            // Reject the request.\n            const requestResolver = this.requestResolvers[index];\n            requestResolver(new Error('Manual disconnection'));\n            // Remove the request.\n            delete this.requestResolvers[index];\n        }\n        // Disconnect from the remove server.\n        return this.connection.disconnect(force);\n    }\n    /**\n     * Calls a method on the remote server with the supplied parameters.\n     *\n     * @param {string} method          name of the method to call.\n     * @param {...string} parameters   one or more parameters for the method.\n     *\n     * @throws {Error} if the client is disconnected.\n     * @returns a promise that resolves with the result of the method or an Error.\n     */\n    async request(method, ...parameters) {\n        // If we are not connected to a server..\n        if (this.connection.status !== ConnectionStatus.CONNECTED) {\n            // Reject the request with a disconnected error message.\n            throw (new Error(`Unable to send request to a disconnected server '${this.connection.host}'.`));\n        }\n        // Increase the request ID by one.\n        this.requestId += 1;\n        // Store a copy of the request id.\n        const id = this.requestId;\n        // Format the arguments as an electrum request object.\n        const message = ElectrumProtocol.buildRequestObject(method, parameters, id);\n        // Define a function to wrap the request in a promise.\n        const requestResolver = (resolve) => {\n            // Add a request resolver for this promise to the list of requests.\n            this.requestResolvers[id] = (error, data) => {\n                // If the resolution failed..\n                if (error) {\n                    // Resolve the promise with the error for the application to handle.\n                    resolve(error);\n                }\n                else {\n                    // Resolve the promise with the request results.\n                    resolve(data);\n                }\n            };\n            // Send the request message to the remote server.\n            this.connection.send(message);\n        };\n        // Write a log message.\n        debug.network(`Sending request '${method}' to '${this.connection.host}'`);\n        // return a promise to deliver results later.\n        return new Promise(requestResolver);\n    }\n    /**\n     * Subscribes to the method at the server and attaches the callback function to the event feed.\n     *\n     * @param {function}  callback     a function that should get notification messages.\n     * @param {string}    method       one of the subscribable methods the server supports.\n     * @param {...string} parameters   one or more parameters for the method.\n     *\n     * @throws {Error} if the client is disconnected.\n     * @returns a promise resolving to true when the subscription is set up.\n     */\n    async subscribe(callback, method, ...parameters) {\n        // Define a function resolve the subscription setup process.\n        const subscriptionResolver = async (resolve) => {\n            // If this method is not yet being listened on with this callback..\n            if (!this.listeners(method).includes(callback)) {\n                // Set up event listener for this subscription.\n                this.addListener(method, callback);\n            }\n            // If this method has never been subscribed to before..\n            if (!this.subscriptionMethods[method]) {\n                // Initialize an empty subscription payload list for this method.\n                this.subscriptionMethods[method] = [];\n            }\n            // Store the subscription parameters to track what data we have subscribed to.\n            this.subscriptionMethods[method].push(JSON.stringify(parameters));\n            // Get the currently subscribed payloads for this callback, or an empty array if none exist.\n            const subscriptionCallbackPayloads = this.subscriptionCallbacks.get(callback) || [];\n            // Update the subscription parameters to track what data this callback is listening on.\n            subscriptionCallbackPayloads.push({ method, payload: JSON.stringify(parameters) });\n            // Store the subscription parameters.\n            this.subscriptionCallbacks.set(callback, subscriptionCallbackPayloads);\n            // Send initial subscription request.\n            const requestData = await this.request(method, ...parameters);\n            // Manually send the initial request data to the callback.\n            callback(requestData);\n            // Resolve the subscription promise.\n            resolve(true);\n        };\n        // Return a promise that resolves when the subscription is set up.\n        return new Promise(subscriptionResolver);\n    }\n    /**\n     * Unsubscribes to the method at the server and removes any callback functions\n     * when there are no more subscriptions for the method.\n     *\n     * @param {function}  callback     a function that has previously been subscribed for this method.\n     * @param {string}    method       a previously subscribed to method.\n     * @param {...string} parameters   one or more parameters for the method.\n     *\n     * @throws {Error} if no subscriptions exist for the combination of the passed `callback`, `method` and `parameters.\n     * @throws {Error} if the client is disconnected.\n     * @returns a promise that resolves to true when the subscription has been cancelled.\n     */\n    async unsubscribe(callback, method, ...parameters) {\n        // Throw an error if the client is disconnected.\n        if (this.connection.status !== ConnectionStatus.CONNECTED) {\n            throw (new Error(`Unable to send unsubscribe request to a disconnected server '${this.connection.host}'.`));\n        }\n        // Define a function resolve the subscription setup process.\n        const subscriptionResolver = async (resolve) => {\n            // Pack up the parameters as a long string.\n            const subscriptionParameters = JSON.stringify(parameters);\n            // If this method has no subscriptions..\n            if (!this.subscriptionMethods[method]) {\n                // Reject this promise with an explanation.\n                throw (new Error(`Cannot unsubscribe from '${method}' since the method has no subscriptions.`));\n            }\n            // If this callback has no subscriptions..\n            if (!this.subscriptionCallbacks.has(callback)) {\n                // Reject this promise with an explanation.\n                throw (new Error(`Cannot unsubscribe with '${callback.name}' since the callback has no subscriptions.`));\n            }\n            // Count the number of methods subscribed to this payload.\n            const serverMethodPayloadCount = Object.values(this.subscriptionMethods[method])\n                .filter((payload) => payload === subscriptionParameters).length;\n            // Count the number of callbacks attached to this method.\n            const callbackMethodPayloadCount = (this.subscriptionCallbacks.get(callback) || [])\n                .filter((value) => value.method === method).length;\n            // Locate the method and callback subscription index.\n            const serverMethodPayloadIndex = this.subscriptionMethods[method].indexOf(subscriptionParameters);\n            const callbackMethodPayloadIndex = (this.subscriptionCallbacks.get(callback) || [])\n                .findIndex((value) => (value.method === method && value.payload === subscriptionParameters));\n            // If the method payload could not be located..\n            if (serverMethodPayloadIndex < 0) {\n                // Reject this promise with an explanation.\n                throw (new Error(`Cannot unsubscribe from '${method}' since it has no subscription with the given parameters.`));\n            }\n            // If the callback payload could not be located..\n            if (callbackMethodPayloadIndex < 0) {\n                // Reject this promise with an explanation.\n                throw (new Error(`Cannot unsubscribe with '${callback.name}' since it has no subscription with the given method and parameters.`));\n            }\n            // If this is the last payload that any callback has for this method..\n            if (serverMethodPayloadCount === 1) {\n                // Remove this specific subscription payload from internal tracking.\n                this.subscriptionMethods[method].splice(serverMethodPayloadIndex, 1);\n                // If the subscription conforms to expected naming standards..\n                if (method.endsWith('.subscribe')) {\n                    // Send unsubscription request to the server.\n                    await this.request(method.replace('.subscribe', '.unsubscribe'), ...parameters);\n                }\n            }\n            // If this is the last payload that this specific callback has to this method..\n            if (callbackMethodPayloadCount === 1) {\n                // Remove the current callback from listening to given method.\n                this.removeListener(method, callback);\n            }\n            // Get the currently subscribed payloads for this callback, or an empty array if none exist.\n            const subscriptionCallbackPayloads = this.subscriptionCallbacks.get(callback) || [];\n            // Remove the internal tracking of this callbacks specific method and payload combination.\n            this.subscriptionCallbacks.set(callback, subscriptionCallbackPayloads.splice(callbackMethodPayloadIndex, 1));\n            // Write a log message.\n            debug.client(`Unsubscribed callback '${callback.name}' from '${String(method)}' for the '${subscriptionParameters}' parameters.`);\n            // Resolve the subscription promise.\n            resolve(true);\n        };\n        // Return a promise that resolves when the subscription is torn down.\n        return new Promise(subscriptionResolver);\n    }\n    /**\n     * Restores existing subscriptions without updating status or triggering manual callbacks.\n     *\n     * @throws {Error} if subscription data cannot be found for all stored event names.\n     * @throws {Error} if the client is disconnected.\n     * @returns a promise resolving to true when the subscriptions are restored.\n     *\n     * @ignore\n     */\n    async resubscribeOnConnect() {\n        // Write a log message.\n        debug.client(`Connected to '${this.connection.hostIdentifier}'.`);\n        // For each method we have a listener for..\n        for (const method of this.eventNames()) {\n            // Ignore the connected, disconnected and error method/signals..\n            if (method === 'connected' || method === 'disconnected' || method === 'error') {\n                continue;\n            }\n            // Check that we really have a subscription to restore.\n            if (!this.subscriptionMethods[String(method)]) {\n                // Throw an error since this breaks our expectations.\n                throw (new Error(`Unable to resubscribe to ${String(method)} at ${this.connection.hostIdentifier} due to missing subscription data.`));\n            }\n            // .. and for each parameter we have previously been subscribed to..\n            for (const parameterJSON of this.subscriptionMethods[String(method)]) {\n                // restore the parameters from JSON.\n                const parameters = JSON.parse(parameterJSON);\n                // Send a subscription request.\n                await this.request(String(method), ...parameters);\n            }\n            // Write a log message.\n            debug.client(`Restored ${this.subscriptionMethods[String(method)].length} previous '${String(method)}' subscriptions for '${this.connection.hostIdentifier}'`);\n        }\n        // Resolve the subscription promise.\n        return true;\n    }\n    /**\n     * Parser messages from the remote server to resolve request promises and emit subscription events.\n     *\n     * @param {RPCNotification | RPCResponse} message   the response message\n     *\n     * @throws {Error} if the message ID does not match an existing request.\n     * @ignore\n     */\n    response(message) {\n        // If the received message is a notification, we forward it to all event listeners\n        if (isRPCNotification(message)) {\n            // Write a log message.\n            debug.client(`Received notification for '${message.method}' from '${this.connection.host}'`);\n            // Forward the message content to all event listeners.\n            this.emit(message.method, message.params);\n            // Return since it does not have an associated request resolver\n            return;\n        }\n        // If the response ID is null we cannot use it to index our request resolvers\n        if (message.id === null) {\n            // Throw an internal error, this should not happen.\n            throw (new Error('Internal error: Received an RPC response with ID null.'));\n        }\n        // Look up which request promise we should resolve this.\n        const requestResolver = this.requestResolvers[message.id];\n        // If we do not have a request resolver for this response message..\n        if (!requestResolver) {\n            // Throw an internal error, this should not happen.\n            throw (new Error('Internal error: Callback for response not available.'));\n        }\n        // Remove the promise from the request list.\n        delete this.requestResolvers[message.id];\n        // If the message contains an error..\n        if (isRPCErrorResponse(message)) {\n            // Forward the message error to the request resolver and omit the `result` parameter.\n            requestResolver(new Error(message.error.message));\n        }\n        else {\n            // Forward the message content to the request resolver and omit the `error` parameter\n            // (by setting it to undefined).\n            requestResolver(undefined, message.result);\n        }\n    }\n    /**\n     * Callback function that is called when connection to the Electrum server is lost.\n     * Aborts all active requests with an error message indicating that connection was lost.\n     *\n     * @ignore\n     */\n    onConnectionDisconnect() {\n        // Emit a disconnection signal to any listeners.\n        this.emit('disconnected');\n        // Loop over active requests\n        for (const resolverId in this.requestResolvers) {\n            // Extract request resolver for readability\n            const requestResolver = this.requestResolvers[resolverId];\n            // Resolve the active request with an error indicating that the connection was lost.\n            requestResolver(new Error('Connection lost'));\n            // Remove the promise from the request list.\n            delete this.requestResolvers[resolverId];\n        }\n    }\n}\n\n/**\n * Triggers when the cluster connects to enough servers to satisfy both the cluster confidence and distribution policies.\n *\n * @event ElectrumCluster#ready\n */\n/**\n * Triggers when the cluster loses a connection and can no longer satisfy the cluster distribution policy.\n *\n * @event ElectrumCluster#degraded\n */\n/**\n * Triggers when the cluster loses a connection and can no longer satisfy the cluster confidence policy.\n *\n * @event ElectrumCluster#disabled\n */\n/**\n * High-level electrum client that provides transparent load balancing, confidence checking and/or low-latency polling.\n */\nclass ElectrumCluster extends events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n    application;\n    version;\n    timeout;\n    pingInterval;\n    // Declare instance variables\n    strategy;\n    // Initialize an empty dictionary of clients in the cluster\n    clients = {};\n    // Start at 0 connected clients\n    connections = 0;\n    // Set up an empty set of notification data.\n    notifications = {};\n    // Start the cluster in DISABLED state\n    status = ClusterStatus.DISABLED;\n    // Start counting request IDs at 0\n    requestCounter = 0;\n    // Initialize an empty dictionary for keeping track of request resolvers\n    requestPromises = {};\n    // Lock to prevent concurrency race conditions when sending requests.\n    requestLock = new async_mutex__WEBPACK_IMPORTED_MODULE_5__.Mutex();\n    // Lock to prevent concurrency race conditions when receiving responses.\n    responseLock = new async_mutex__WEBPACK_IMPORTED_MODULE_5__.Mutex();\n    /**\n     * @param {string} application    your application name, used to identify to the electrum hosts.\n     * @param {string} version        protocol version to use with the hosts.\n     * @param {number} confidence     wait for this number of hosts to provide identical results.\n     * @param {number} distribution   request information from this number of hosts.\n     * @param {ClusterOrder} order    select hosts to communicate with in this order.\n     * @param {number} timeout        how long network delays we will wait for before taking action, in milliseconds.\n     * @param {number} pingInterval      the time between sending pings to the electrum host, in milliseconds.\n     */\n    constructor(application, version, confidence = DefaultParameters.CLUSTER_CONFIDENCE, distribution = DefaultParameters.CLUSTER_DISTRIBUTION, order = DefaultParameters.CLUSTER_ORDER, timeout = DefaultParameters.TIMEOUT, pingInterval = DefaultParameters.PING_INTERVAL) {\n        // Initialize the event emitter.\n        super();\n        this.application = application;\n        this.version = version;\n        this.timeout = timeout;\n        this.pingInterval = pingInterval;\n        // Initialize strategy.\n        this.strategy =\n            {\n                distribution: distribution,\n                confidence: confidence,\n                order: order,\n            };\n        // Write a log message.\n        debug.cluster(`Initialized empty cluster (${confidence} of ${distribution || 'ALL'})`);\n        // Print out a warning if we cannot guarantee consensus for subscription notifications.\n        // Case 1: we don't know how many servers will be used, so warning just to be safe\n        // Case 2: we know the number of servers needed to trust a response is less than 50%.\n        if ((distribution === ClusterDistribution.ALL) || (confidence / distribution <= 0.50)) {\n            debug.warning(`Subscriptions might return multiple valid responses when confidence (${confidence}) is less than 51% of distribution.`);\n        }\n    }\n    /**\n     * Adds a server to the cluster.\n     *\n     * @param {string} host              fully qualified domain name or IP number of the host.\n     * @param {number} port              the TCP network port of the host.\n     * @param {TransportScheme} scheme   the transport scheme to use for connection\n     * @param {boolean} autoConnect      flag indicating whether the server should automatically connect (default true)\n     *\n     * @throws {Error} if the cluster's version is not a valid version string.\n     * @returns a promise that resolves when the connection has been initiated.\n     */\n    async addServer(host, port = DefaultParameters.PORT, scheme = DefaultParameters.TRANSPORT_SCHEME, autoConnect = true) {\n        // Set up a new electrum client.\n        const client = new ElectrumClient(this.application, this.version, host, port, scheme, this.timeout, this.pingInterval);\n        // Store this client.\n        this.clients[`${host}:${port}`] =\n            {\n                state: ClientState.UNAVAILABLE,\n                connection: client,\n            };\n        /**\n         * Define a helper function to evaluate and log cluster status.\n         *\n         * @fires ElectrumCluster#ready\n         * @fires ElectrumCluster#degraded\n         * @fires ElectrumCluster#disabled\n         */\n        const updateClusterStatus = () => {\n            // Calculate the required distribution, taking into account that distribution to all is represented with 0.\n            const distribution = Math.max(this.strategy.confidence, this.strategy.distribution);\n            // Check if we have enough connections to saturate distribution.\n            if (this.connections >= distribution) {\n                // If the cluster is not currently considered ready..\n                if (this.status !== ClusterStatus.READY) {\n                    // Mark the cluster as ready.\n                    this.status = ClusterStatus.READY;\n                    // Emit the ready signal to indicate the cluster is running in a ready mode.\n                    this.emit('ready');\n                    // Write a log message with an update on the current cluster status.\n                    debug.cluster(`Cluster status is ready (currently ${this.connections} of ${distribution} connections available.)`);\n                }\n            }\n            // If we still have enough available connections to reach confidence..\n            else if (this.connections >= this.strategy.confidence) {\n                // If the cluster is not currently considered degraded..\n                if (this.status !== ClusterStatus.DEGRADED) {\n                    // Mark the cluster as degraded.\n                    this.status = ClusterStatus.DEGRADED;\n                    // Emit the degraded signal to indicate the cluster is running in a degraded mode.\n                    this.emit('degraded');\n                    // Write a log message with an update on the current cluster status.\n                    debug.cluster(`Cluster status is degraded (only ${this.connections} of ${distribution} connections available.)`);\n                }\n            }\n            // If we don't have enough connections to reach confidence..\n            // .. and the cluster is not currently considered disabled..\n            else if (this.status !== ClusterStatus.DISABLED) {\n                // Mark the cluster as disabled.\n                this.status = ClusterStatus.DISABLED;\n                // Emit the degraded signal to indicate the cluster is disabled.\n                this.emit('disabled');\n                // Write a log message with an update on the current cluster status.\n                debug.cluster(`Cluster status is disabled (only ${this.connections} of the ${distribution} connections are available.)`);\n            }\n        };\n        // Define a function to run when client has connects.\n        const onConnect = async () => {\n            // Wrap in a try-catch so we can ignore errors.\n            try {\n                // Check connection status\n                const connectionStatus = client.connection.status;\n                // If the connection is fine..\n                if (connectionStatus === ConnectionStatus.CONNECTED) {\n                    // If this was from an unavailable connection..\n                    if (this.clients[`${host}:${port}`].state === ClientState.UNAVAILABLE) {\n                        // Update connection counter.\n                        this.connections += 1;\n                    }\n                    // Set client state to available.\n                    this.clients[`${host}:${port}`].state = ClientState.AVAILABLE;\n                    // update the cluster status.\n                    updateClusterStatus();\n                }\n            }\n            catch (error) {\n                // Do nothing.\n            }\n        };\n        // Define a function to run when client disconnects.\n        const onDisconnect = () => {\n            // If this was from an established connection..\n            if (this.clients[`${host}:${port}`].state === ClientState.AVAILABLE) {\n                // Update connection counter.\n                this.connections -= 1;\n            }\n            // Set client state to unavailable.\n            this.clients[`${host}:${port}`].state = ClientState.UNAVAILABLE;\n            // update the cluster status.\n            updateClusterStatus();\n        };\n        // Set up handlers for connection and disconnection.\n        client.connection.on('connect', onConnect.bind(this));\n        client.connection.on('disconnect', onDisconnect.bind(this));\n        // Connect if auto-connect is set to true, returning the connection result.\n        if (autoConnect) {\n            // Set up the connection.\n            await client.connect();\n        }\n    }\n    /**\n     * Calls a method on the remote server with the supplied parameters.\n     *\n     * @param {string}    method       name of the method to call.\n     * @param {...string} parameters   one or more parameters for the method.\n     *\n     * @throws {Error} if not enough clients are connected\n     * @throws {Error} if no response is received with sufficient integrity\n     * @returns a promise that resolves with the result of the method.\n     */\n    async request(method, ...parameters) {\n        // Check if the cluster is unable to serve requests.\n        if (this.status === ClusterStatus.DISABLED) {\n            throw (new Error(`Cannot request '${method}' when available clients (${this.connections}) is less than required confidence (${this.strategy.confidence}).`));\n        }\n        // Lock this request method temporarily.\n        const unlock = await this.requestLock.acquire();\n        // Declare requestId outside of try-catch scope.\n        let requestId = 0;\n        // NOTE: If this async method is called very rapidly, it's theoretically possible that the parts below could interfere.\n        try {\n            // Increase the current request counter.\n            this.requestCounter += 1;\n            // Copy the request counter so we can work with the copy and know it won't change\n            // even if the request counter is raised from concurrent requests.\n            requestId = this.requestCounter;\n        }\n        finally {\n            // Unlock this request method now that the concurrency sensitive condition is completed.\n            unlock();\n        }\n        // Initialize an empty list of request promises.\n        this.requestPromises[requestId] = [];\n        // Extract all available client IDs\n        const availableClientIDs = Object.keys(this.clients)\n            .filter((clientID) => this.clients[clientID].state === ClientState.AVAILABLE);\n        // Initialize a sent counter.\n        let sentCounter = 0;\n        // Determine the number of clients we need to send to, taking ClusterDistribution.ALL (=0) into account.\n        let requiredDistribution = (this.strategy.distribution || availableClientIDs.length);\n        // If the cluster is in degraded status, we do not have enough available clients to\n        // match distribution, but still enough to reach consensus, so we use the clients we have.\n        if (this.status === ClusterStatus.DEGRADED) {\n            requiredDistribution = availableClientIDs.length;\n        }\n        // Repeat until we have sent the request to the desired number of clients.\n        while (sentCounter < requiredDistribution) {\n            // Pick an array index according to our ordering strategy.\n            let currentIndex = 0;\n            // Use a random array index when cluster order is set to RANDOM\n            if (this.strategy.order === ClusterOrder.RANDOM) {\n                currentIndex = Math.floor(Math.random() * availableClientIDs.length);\n            }\n            // Move a client identity from the client list to its own variable.\n            const [currentClient] = availableClientIDs.splice(currentIndex, 1);\n            // Send the request to the client and store the request promise.\n            const requestPromise = this.clients[currentClient].connection.request(method, ...parameters);\n            this.requestPromises[requestId].push(requestPromise);\n            // Increase the sent counter.\n            sentCounter += 1;\n        }\n        // Define a function to poll for request responses.\n        const pollResponse = (resolve, reject) => {\n            // Define a function to resolve request responses based on integrity.\n            const resolveRequest = async () => {\n                // Set up an empty set of response data.\n                const responseData = {};\n                // Set up a counter to keep track of how many responses we have checked.\n                let checkedResponses = 0;\n                // For each server we issued a request to..\n                for (const currentPromise in this.requestPromises[requestId]) {\n                    // Race the request promise against a pre-resolved request to determine promise status.\n                    const promises = [this.requestPromises[requestId][currentPromise], Promise.resolve(undefined)];\n                    const response = await Promise.race(promises);\n                    // If the promise is settled..\n                    if (response !== undefined) {\n                        // Calculate a unique identifier for this notification data.\n                        const responseDataIdentifier = JSON.stringify(response);\n                        // Increase the counter for checked responses.\n                        checkedResponses += 1;\n                        // Either set the response data counter or increase it.\n                        if (responseData[responseDataIdentifier] === undefined) {\n                            responseData[responseDataIdentifier] = 1;\n                        }\n                        else {\n                            responseData[responseDataIdentifier] += 1;\n                        }\n                        // Check if this response has enough integrity according to our confidence strategy.\n                        if (responseData[responseDataIdentifier] === this.strategy.confidence) {\n                            // Write log entry.\n                            debug.cluster(`Validated response for '${method}' with sufficient integrity (${this.strategy.confidence}).`);\n                            // Resolve the request with this response.\n                            resolve(response);\n                            // Return after resolving since we do not want to continue the execution.\n                            return;\n                        }\n                    }\n                }\n                // If all clients have responded but we failed to reach desired integrity..\n                if (checkedResponses === this.requestPromises[requestId].length) {\n                    // Reject this request with an error message.\n                    reject(new Error(`Unable to complete request for '${method}', response failed to reach sufficient integrity (${this.strategy.confidence}).`));\n                    // Return after rejecting since we do not want to continue the execution.\n                    return;\n                }\n                // If we are not ready, but have not timed out and should wait more..\n                setTimeout(resolveRequest, 1000);\n            };\n            // Attempt the initial resolution of the request.\n            resolveRequest();\n        };\n        // return some kind of promise that resolves when integrity number of clients results match.\n        return new Promise(pollResponse);\n    }\n    /**\n     * Subscribes to the method at the cluster and attaches the callback function to the event feed.\n     *\n     * @param {function}  callback     a function that should get notification messages.\n     * @param {string}    method       one of the subscribable methods the server supports.\n     * @param {...string} parameters   one or more parameters for the method.\n     *\n     * @throws {Error} if not enough clients are connected\n     * @throws {Error} if no response is received with sufficient integrity for the initial request\n     * @returns a promise resolving to true when the subscription is set up.\n     */\n    async subscribe(callback, method, ...parameters) {\n        // Define a function resolve the subscription setup process.\n        const subscriptionResolver = async (resolve) => {\n            // Define a callback function to validate server notifications and pass\n            // them to the subscribe callback.\n            const subscriptionResponder = async (data) => {\n                // Lock this response method temporarily.\n                const unlock = await this.responseLock.acquire();\n                try {\n                    // Calculate a unique identifier for this notification data.\n                    const responseDataIdentifier = JSON.stringify(data);\n                    // Either set the notification counter or increase it.\n                    if (this.notifications[responseDataIdentifier] === undefined) {\n                        this.notifications[responseDataIdentifier] = 1;\n                    }\n                    else {\n                        this.notifications[responseDataIdentifier] += 1;\n                    }\n                    // Check if this notification has enough integrity according to our confidence strategy.\n                    if (this.notifications[responseDataIdentifier] === this.strategy.confidence) {\n                        // Write log entry.\n                        debug.cluster(`Validated notification for '${method}' with sufficient integrity (${this.strategy.confidence}).`);\n                        // Send the notification data to the callback function.\n                        callback(data);\n                    }\n                }\n                finally {\n                    // Unlock the response method so it can handle the next set of data.\n                    unlock();\n                }\n            };\n            // Set up event listener for this subscription.\n            for (const currentClient in this.clients) {\n                // Copy the current client for brevity.\n                const client = this.clients[currentClient].connection;\n                // If this method is not yet being listened on..\n                if (!client.listeners(method).includes(subscriptionResponder)) {\n                    // Set up event listener for this subscription.\n                    client.addListener(method, subscriptionResponder);\n                }\n                // If this method has never been subscribed to before..\n                if (!client.subscriptionMethods[method]) {\n                    // Initialize an empty subscription payload list for this method.\n                    client.subscriptionMethods[method] = [];\n                }\n                // Store the subscription parameters to track what data we have subscribed to.\n                client.subscriptionMethods[method].push(JSON.stringify(parameters));\n                // Get the currently subscribed payloads for this callback, or an empty array if none exist.\n                const subscriptionCallbackPayloads = client.subscriptionCallbacks.get(callback) || [];\n                // Update the subscription parameters to track what data this callback is listening on.\n                subscriptionCallbackPayloads.push({ method, payload: JSON.stringify(parameters) });\n                // Store the subscription parameters.\n                client.subscriptionCallbacks.set(callback, subscriptionCallbackPayloads);\n            }\n            // Send initial subscription request.\n            const requestData = await this.request(method, ...parameters);\n            // Manually send the initial request data to the callback.\n            callback(requestData);\n            // Resolve the subscription promise.\n            resolve(true);\n        };\n        // Return a promise that resolves when the subscription is set up.\n        return new Promise(subscriptionResolver);\n    }\n    /**\n     * Unsubscribes to the method at the cluster and removes any callback functions\n     * when there are no more subscriptions for the method.\n     *\n     * @param {function}  callback     a function that has previously been subscribed for this method.\n     * @param {string}    method       one of the subscribable methods the server supports.\n     * @param {...string} parameters   one or more parameters for the method.\n     *\n     * @throws {Error} if, for any of the clients, no subscriptions exist for the combination of the\n     * passed `callback`, `method` and `parameters.\n     * @returns a promise resolving to true when the subscription has been cancelled.\n     */\n    async unsubscribe(callback, method, ...parameters) {\n        // Define a function resolve the subscription setup process.\n        const subscriptionResolver = async (resolve) => {\n            // For each client..\n            for (const currentClient in this.clients) {\n                // Store client in variable for brevity\n                const client = this.clients[currentClient].connection;\n                // Log a warning if one of the clients is disconnected, but don't throw an error\n                if (client.connection.status !== ConnectionStatus.CONNECTED) {\n                    debug.warning(`Client with server ${client.connection.host} could not be reached to unsubscribe`);\n                    continue;\n                }\n                // unsubscribe this client.\n                client.unsubscribe(callback, method, ...parameters);\n            }\n            // Resolve the subscription promise.\n            resolve(true);\n        };\n        // Return a promise that resolves when the subscription is set up.\n        return new Promise(subscriptionResolver);\n    }\n    /**\n     * Provides a method to check or wait for the cluster to become ready.\n     *\n     * @returns a promise that resolves when the required servers are available.\n     */\n    async ready() {\n        // Store the current timestamp.\n        const readyTimestamp = Date.now();\n        // Define a function to poll for availability of the cluster.\n        const availabilityPoller = (resolve) => {\n            // Define a function to check if the cluster is ready to be used.\n            const connectionAvailabilityVerifier = () => {\n                // Check if the cluster is active..\n                if (this.status === ClusterStatus.READY) {\n                    // Resolve with true to indicate that the cluster is ready to use.\n                    resolve(true);\n                    // Return after resolving since we do not want to continue the execution.\n                    return;\n                }\n                // Calculate how long we have waited, in milliseconds.\n                const timeWaited = (Date.now() - readyTimestamp);\n                // Check if we have waited longer than our timeout setting.\n                if (timeWaited > this.timeout) {\n                    // Resolve with false to indicate that we did not get ready in time.\n                    resolve(false);\n                    // Return after resolving since we do not want to continue the execution.\n                    return;\n                }\n                // If we are not ready, but have not timed out and should wait more..\n                setTimeout(connectionAvailabilityVerifier, 50);\n            };\n            // Run the initial verification.\n            connectionAvailabilityVerifier();\n        };\n        // Return a promise that resolves when the available clients is sufficient.\n        return new Promise(availabilityPoller);\n    }\n    /**\n     * Connects all servers from the cluster and attaches event listeners and handlers\n     * for all underlying clients and connections.\n     *\n     * @throws {Error} if the cluster's version is not a valid version string.\n     */\n    async startup() {\n        // Write a log message.\n        debug.cluster('Starting up cluster.');\n        // Keep track of all connections\n        const connections = [];\n        // Loop over all clients and reconnect them if they're disconnected\n        for (const clientKey in this.clients) {\n            // Retrieve connection information for the client\n            const { host, port, scheme } = this.clients[clientKey].connection.connection;\n            // Only connect currently unavailable/disconnected clients\n            if (this.clients[clientKey].state === ClientState.AVAILABLE) {\n                // Warn when a server is already connected when calling startup()\n                debug.warning(`Called startup(), but server ${host}:${port} is already connected`);\n            }\n            else {\n                // Call the addServer() function with the existing connection data\n                // This effectively reconnects the server and re-instates all event listeners\n                connections.push(this.addServer(host, port, scheme));\n            }\n        }\n        // Await all connections\n        return Promise.all(connections);\n    }\n    /**\n     * Disconnects all servers from the cluster. Removes all event listeners and\n     * handlers from all underlying clients and connections. This includes all\n     * active subscriptions, unless retainSubscriptions is set to true.\n     *\n     * @param {boolean} retainSubscriptions   retain subscription data so they will be restored on reconnection.\n     *\n     * @returns a list with the disconnection result for every client\n     */\n    async shutdown(retainSubscriptions = false) {\n        // Write a log message.\n        debug.cluster('Shutting down cluster.');\n        // Set up a list of disconnections to wait for.\n        const disconnections = [];\n        const disconnectResolver = (resolve) => {\n            // Resolve once the cluster is marked as disabled\n            this.once('disabled', () => resolve(Promise.all(disconnections)));\n            // For each client in this cluster..\n            for (const clientIndex in this.clients) {\n                // Force disconnection regardless of current status.\n                disconnections.push(this.clients[clientIndex].connection.disconnect(true, retainSubscriptions));\n            }\n        };\n        // Return a list of booleans indicating disconnections from all clients\n        return new Promise(disconnectResolver);\n    }\n}\n\n\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/electrum-cash/dist/index.mjs.js?");

/***/ }),

/***/ "../../node_modules/events/events.js":
/*!*******************************************!*\
  !*** ../../node_modules/events/events.js ***!
  \*******************************************/
/***/ ((module) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/events/events.js?");

/***/ }),

/***/ "../../node_modules/hash-base/index.js":
/*!*********************************************!*\
  !*** ../../node_modules/hash-base/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\nvar Transform = (__webpack_require__(/*! readable-stream */ \"../../node_modules/readable-stream/readable-browser.js\").Transform)\nvar inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/hash-base/index.js?");

/***/ }),

/***/ "../../node_modules/ieee754/index.js":
/*!*******************************************!*\
  !*** ../../node_modules/ieee754/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/ieee754/index.js?");

/***/ }),

/***/ "../../node_modules/inherits/inherits_browser.js":
/*!*******************************************************!*\
  !*** ../../node_modules/inherits/inherits_browser.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "../../node_modules/isomorphic-ws/browser.js":
/*!***************************************************!*\
  !*** ../../node_modules/isomorphic-ws/browser.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof __webpack_require__.g !== 'undefined') {\n  ws = __webpack_require__.g.WebSocket || __webpack_require__.g.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nmodule.exports = ws\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/isomorphic-ws/browser.js?");

/***/ }),

/***/ "../../node_modules/md5.js/index.js":
/*!******************************************!*\
  !*** ../../node_modules/md5.js/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")\nvar HashBase = __webpack_require__(/*! hash-base */ \"../../node_modules/hash-base/index.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/md5.js/index.js?");

/***/ }),

/***/ "../../node_modules/pbkdf2/browser.js":
/*!********************************************!*\
  !*** ../../node_modules/pbkdf2/browser.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.pbkdf2 = __webpack_require__(/*! ./lib/async */ \"../../node_modules/pbkdf2/lib/async.js\")\nexports.pbkdf2Sync = __webpack_require__(/*! ./lib/sync */ \"../../node_modules/pbkdf2/lib/sync-browser.js\")\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/pbkdf2/browser.js?");

/***/ }),

/***/ "../../node_modules/pbkdf2/lib/async.js":
/*!**********************************************!*\
  !*** ../../node_modules/pbkdf2/lib/async.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\n\nvar checkParameters = __webpack_require__(/*! ./precondition */ \"../../node_modules/pbkdf2/lib/precondition.js\")\nvar defaultEncoding = __webpack_require__(/*! ./default-encoding */ \"../../node_modules/pbkdf2/lib/default-encoding.js\")\nvar sync = __webpack_require__(/*! ./sync */ \"../../node_modules/pbkdf2/lib/sync-browser.js\")\nvar toBuffer = __webpack_require__(/*! ./to-buffer */ \"../../node_modules/pbkdf2/lib/to-buffer.js\")\n\nvar ZERO_BUF\nvar subtle = __webpack_require__.g.crypto && __webpack_require__.g.crypto.subtle\nvar toBrowser = {\n  sha: 'SHA-1',\n  'sha-1': 'SHA-1',\n  sha1: 'SHA-1',\n  sha256: 'SHA-256',\n  'sha-256': 'SHA-256',\n  sha384: 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  sha512: 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (__webpack_require__.g.process && !__webpack_require__.g.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\nvar nextTick\nfunction getNextTick () {\n  if (nextTick) {\n    return nextTick\n  }\n  if (__webpack_require__.g.process && __webpack_require__.g.process.nextTick) {\n    nextTick = __webpack_require__.g.process.nextTick\n  } else if (__webpack_require__.g.queueMicrotask) {\n    nextTick = __webpack_require__.g.queueMicrotask\n  } else if (__webpack_require__.g.setImmediate) {\n    nextTick = __webpack_require__.g.setImmediate\n  } else {\n    nextTick = __webpack_require__.g.setTimeout\n  }\n  return nextTick\n}\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    getNextTick()(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    getNextTick()(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof __webpack_require__.g.Promise !== 'function') {\n    getNextTick()(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n    return\n  }\n\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/pbkdf2/lib/async.js?");

/***/ }),

/***/ "../../node_modules/pbkdf2/lib/default-encoding.js":
/*!*********************************************************!*\
  !*** ../../node_modules/pbkdf2/lib/default-encoding.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var defaultEncoding\n/* istanbul ignore next */\nif (__webpack_require__.g.process && __webpack_require__.g.process.browser) {\n  defaultEncoding = 'utf-8'\n} else if (__webpack_require__.g.process && __webpack_require__.g.process.version) {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n} else {\n  defaultEncoding = 'utf-8'\n}\nmodule.exports = defaultEncoding\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/pbkdf2/lib/default-encoding.js?");

/***/ }),

/***/ "../../node_modules/pbkdf2/lib/precondition.js":
/*!*****************************************************!*\
  !*** ../../node_modules/pbkdf2/lib/precondition.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nmodule.exports = function (iterations, keylen) {\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/pbkdf2/lib/precondition.js?");

/***/ }),

/***/ "../../node_modules/pbkdf2/lib/sync-browser.js":
/*!*****************************************************!*\
  !*** ../../node_modules/pbkdf2/lib/sync-browser.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var md5 = __webpack_require__(/*! create-hash/md5 */ \"../../node_modules/create-hash/md5.js\")\nvar RIPEMD160 = __webpack_require__(/*! ripemd160 */ \"../../node_modules/ripemd160/index.js\")\nvar sha = __webpack_require__(/*! sha.js */ \"../../node_modules/sha.js/index.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\n\nvar checkParameters = __webpack_require__(/*! ./precondition */ \"../../node_modules/pbkdf2/lib/precondition.js\")\nvar defaultEncoding = __webpack_require__(/*! ./default-encoding */ \"../../node_modules/pbkdf2/lib/default-encoding.js\")\nvar toBuffer = __webpack_require__(/*! ./to-buffer */ \"../../node_modules/pbkdf2/lib/to-buffer.js\")\n\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n  function rmd160Func (data) {\n    return new RIPEMD160().update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/pbkdf2/lib/sync-browser.js?");

/***/ }),

/***/ "../../node_modules/pbkdf2/lib/to-buffer.js":
/*!**************************************************!*\
  !*** ../../node_modules/pbkdf2/lib/to-buffer.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\n\nmodule.exports = function (thing, encoding, name) {\n  if (Buffer.isBuffer(thing)) {\n    return thing\n  } else if (typeof thing === 'string') {\n    return Buffer.from(thing, encoding)\n  } else if (ArrayBuffer.isView(thing)) {\n    return Buffer.from(thing.buffer)\n  } else {\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\n  }\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/pbkdf2/lib/to-buffer.js?");

/***/ }),

/***/ "../../node_modules/qrcode-svg/lib/qrcode.js":
/*!***************************************************!*\
  !*** ../../node_modules/qrcode-svg/lib/qrcode.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * @fileoverview\n * - modified davidshimjs/qrcodejs library for use in node.js\n * - Using the 'QRCode for Javascript library'\n * - Fixed dataset of 'QRCode for Javascript library' for support full-spec.\n * - this library has no dependencies.\n *\n * @version 0.9.1 (2016-02-12)\n * @author davidshimjs, papnkukn\n * @see <a href=\"http://www.d-project.com/\" target=\"_blank\">http://www.d-project.com/</a>\n * @see <a href=\"http://jeromeetienne.github.com/jquery-qrcode/\" target=\"_blank\">http://jeromeetienne.github.com/jquery-qrcode/</a>\n * @see <a href=\"https://github.com/davidshimjs/qrcodejs\" target=\"_blank\">https://github.com/davidshimjs/qrcodejs</a>\n */\n\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of \n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\nfunction QR8bitByte(data) {\n  this.mode = QRMode.MODE_8BIT_BYTE;\n  this.data = data;\n  this.parsedData = [];\n\n  // Added to support UTF-8 Characters\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    var byteArray = [];\n    var code = this.data.charCodeAt(i);\n\n    if (code > 0x10000) {\n      byteArray[0] = 0xF0 | ((code & 0x1C0000) >>> 18);\n      byteArray[1] = 0x80 | ((code & 0x3F000) >>> 12);\n      byteArray[2] = 0x80 | ((code & 0xFC0) >>> 6);\n      byteArray[3] = 0x80 | (code & 0x3F);\n    } else if (code > 0x800) {\n      byteArray[0] = 0xE0 | ((code & 0xF000) >>> 12);\n      byteArray[1] = 0x80 | ((code & 0xFC0) >>> 6);\n      byteArray[2] = 0x80 | (code & 0x3F);\n    } else if (code > 0x80) {\n      byteArray[0] = 0xC0 | ((code & 0x7C0) >>> 6);\n      byteArray[1] = 0x80 | (code & 0x3F);\n    } else {\n      byteArray[0] = code;\n    }\n\n    this.parsedData.push(byteArray);\n  }\n\n  this.parsedData = Array.prototype.concat.apply([], this.parsedData);\n\n  if (this.parsedData.length != this.data.length) {\n    this.parsedData.unshift(191);\n    this.parsedData.unshift(187);\n    this.parsedData.unshift(239);\n  }\n}\n\nQR8bitByte.prototype = {\n  getLength: function (buffer) {\n    return this.parsedData.length;\n  },\n  write: function (buffer) {\n    for (var i = 0, l = this.parsedData.length; i < l; i++) {\n      buffer.put(this.parsedData[i], 8);\n    }\n  }\n};\n\nfunction QRCodeModel(typeNumber, errorCorrectLevel) {\n  this.typeNumber = typeNumber;\n  this.errorCorrectLevel = errorCorrectLevel;\n  this.modules = null;\n  this.moduleCount = 0;\n  this.dataCache = null;\n  this.dataList = [];\n}\n\nQRCodeModel.prototype={addData:function(data){var newData=new QR8bitByte(data);this.dataList.push(newData);this.dataCache=null;},isDark:function(row,col){if(row<0||this.moduleCount<=row||col<0||this.moduleCount<=col){throw new Error(row+\",\"+col);}\nreturn this.modules[row][col];},getModuleCount:function(){return this.moduleCount;},make:function(){this.makeImpl(false,this.getBestMaskPattern());},makeImpl:function(test,maskPattern){this.moduleCount=this.typeNumber*4+17;this.modules=new Array(this.moduleCount);for(var row=0;row<this.moduleCount;row++){this.modules[row]=new Array(this.moduleCount);for(var col=0;col<this.moduleCount;col++){this.modules[row][col]=null;}}\nthis.setupPositionProbePattern(0,0);this.setupPositionProbePattern(this.moduleCount-7,0);this.setupPositionProbePattern(0,this.moduleCount-7);this.setupPositionAdjustPattern();this.setupTimingPattern();this.setupTypeInfo(test,maskPattern);if(this.typeNumber>=7){this.setupTypeNumber(test);}\nif(this.dataCache==null){this.dataCache=QRCodeModel.createData(this.typeNumber,this.errorCorrectLevel,this.dataList);}\nthis.mapData(this.dataCache,maskPattern);},setupPositionProbePattern:function(row,col){for(var r=-1;r<=7;r++){if(row+r<=-1||this.moduleCount<=row+r)continue;for(var c=-1;c<=7;c++){if(col+c<=-1||this.moduleCount<=col+c)continue;if((0<=r&&r<=6&&(c==0||c==6))||(0<=c&&c<=6&&(r==0||r==6))||(2<=r&&r<=4&&2<=c&&c<=4)){this.modules[row+r][col+c]=true;}else{this.modules[row+r][col+c]=false;}}}},getBestMaskPattern:function(){var minLostPoint=0;var pattern=0;for(var i=0;i<8;i++){this.makeImpl(true,i);var lostPoint=QRUtil.getLostPoint(this);if(i==0||minLostPoint>lostPoint){minLostPoint=lostPoint;pattern=i;}}\nreturn pattern;},createMovieClip:function(target_mc,instance_name,depth){var qr_mc=target_mc.createEmptyMovieClip(instance_name,depth);var cs=1;this.make();for(var row=0;row<this.modules.length;row++){var y=row*cs;for(var col=0;col<this.modules[row].length;col++){var x=col*cs;var dark=this.modules[row][col];if(dark){qr_mc.beginFill(0,100);qr_mc.moveTo(x,y);qr_mc.lineTo(x+cs,y);qr_mc.lineTo(x+cs,y+cs);qr_mc.lineTo(x,y+cs);qr_mc.endFill();}}}\nreturn qr_mc;},setupTimingPattern:function(){for(var r=8;r<this.moduleCount-8;r++){if(this.modules[r][6]!=null){continue;}\nthis.modules[r][6]=(r%2==0);}\nfor(var c=8;c<this.moduleCount-8;c++){if(this.modules[6][c]!=null){continue;}\nthis.modules[6][c]=(c%2==0);}},setupPositionAdjustPattern:function(){var pos=QRUtil.getPatternPosition(this.typeNumber);for(var i=0;i<pos.length;i++){for(var j=0;j<pos.length;j++){var row=pos[i];var col=pos[j];if(this.modules[row][col]!=null){continue;}\nfor(var r=-2;r<=2;r++){for(var c=-2;c<=2;c++){if(r==-2||r==2||c==-2||c==2||(r==0&&c==0)){this.modules[row+r][col+c]=true;}else{this.modules[row+r][col+c]=false;}}}}}},setupTypeNumber:function(test){var bits=QRUtil.getBCHTypeNumber(this.typeNumber);for(var i=0;i<18;i++){var mod=(!test&&((bits>>i)&1)==1);this.modules[Math.floor(i/3)][i%3+this.moduleCount-8-3]=mod;}\nfor(var i=0;i<18;i++){var mod=(!test&&((bits>>i)&1)==1);this.modules[i%3+this.moduleCount-8-3][Math.floor(i/3)]=mod;}},setupTypeInfo:function(test,maskPattern){var data=(this.errorCorrectLevel<<3)|maskPattern;var bits=QRUtil.getBCHTypeInfo(data);for(var i=0;i<15;i++){var mod=(!test&&((bits>>i)&1)==1);if(i<6){this.modules[i][8]=mod;}else if(i<8){this.modules[i+1][8]=mod;}else{this.modules[this.moduleCount-15+i][8]=mod;}}\nfor(var i=0;i<15;i++){var mod=(!test&&((bits>>i)&1)==1);if(i<8){this.modules[8][this.moduleCount-i-1]=mod;}else if(i<9){this.modules[8][15-i-1+1]=mod;}else{this.modules[8][15-i-1]=mod;}}\nthis.modules[this.moduleCount-8][8]=(!test);},mapData:function(data,maskPattern){var inc=-1;var row=this.moduleCount-1;var bitIndex=7;var byteIndex=0;for(var col=this.moduleCount-1;col>0;col-=2){if(col==6)col--;while(true){for(var c=0;c<2;c++){if(this.modules[row][col-c]==null){var dark=false;if(byteIndex<data.length){dark=(((data[byteIndex]>>>bitIndex)&1)==1);}\nvar mask=QRUtil.getMask(maskPattern,row,col-c);if(mask){dark=!dark;}\nthis.modules[row][col-c]=dark;bitIndex--;if(bitIndex==-1){byteIndex++;bitIndex=7;}}}\nrow+=inc;if(row<0||this.moduleCount<=row){row-=inc;inc=-inc;break;}}}}};QRCodeModel.PAD0=0xEC;QRCodeModel.PAD1=0x11;QRCodeModel.createData=function(typeNumber,errorCorrectLevel,dataList){var rsBlocks=QRRSBlock.getRSBlocks(typeNumber,errorCorrectLevel);var buffer=new QRBitBuffer();for(var i=0;i<dataList.length;i++){var data=dataList[i];buffer.put(data.mode,4);buffer.put(data.getLength(),QRUtil.getLengthInBits(data.mode,typeNumber));data.write(buffer);}\nvar totalDataCount=0;for(var i=0;i<rsBlocks.length;i++){totalDataCount+=rsBlocks[i].dataCount;}\nif(buffer.getLengthInBits()>totalDataCount*8){throw new Error(\"code length overflow. (\"\n+buffer.getLengthInBits()\n+\">\"\n+totalDataCount*8\n+\")\");}\nif(buffer.getLengthInBits()+4<=totalDataCount*8){buffer.put(0,4);}\nwhile(buffer.getLengthInBits()%8!=0){buffer.putBit(false);}\nwhile(true){if(buffer.getLengthInBits()>=totalDataCount*8){break;}\nbuffer.put(QRCodeModel.PAD0,8);if(buffer.getLengthInBits()>=totalDataCount*8){break;}\nbuffer.put(QRCodeModel.PAD1,8);}\nreturn QRCodeModel.createBytes(buffer,rsBlocks);};QRCodeModel.createBytes=function(buffer,rsBlocks){var offset=0;var maxDcCount=0;var maxEcCount=0;var dcdata=new Array(rsBlocks.length);var ecdata=new Array(rsBlocks.length);for(var r=0;r<rsBlocks.length;r++){var dcCount=rsBlocks[r].dataCount;var ecCount=rsBlocks[r].totalCount-dcCount;maxDcCount=Math.max(maxDcCount,dcCount);maxEcCount=Math.max(maxEcCount,ecCount);dcdata[r]=new Array(dcCount);for(var i=0;i<dcdata[r].length;i++){dcdata[r][i]=0xff&buffer.buffer[i+offset];}\noffset+=dcCount;var rsPoly=QRUtil.getErrorCorrectPolynomial(ecCount);var rawPoly=new QRPolynomial(dcdata[r],rsPoly.getLength()-1);var modPoly=rawPoly.mod(rsPoly);ecdata[r]=new Array(rsPoly.getLength()-1);for(var i=0;i<ecdata[r].length;i++){var modIndex=i+modPoly.getLength()-ecdata[r].length;ecdata[r][i]=(modIndex>=0)?modPoly.get(modIndex):0;}}\nvar totalCodeCount=0;for(var i=0;i<rsBlocks.length;i++){totalCodeCount+=rsBlocks[i].totalCount;}\nvar data=new Array(totalCodeCount);var index=0;for(var i=0;i<maxDcCount;i++){for(var r=0;r<rsBlocks.length;r++){if(i<dcdata[r].length){data[index++]=dcdata[r][i];}}}\nfor(var i=0;i<maxEcCount;i++){for(var r=0;r<rsBlocks.length;r++){if(i<ecdata[r].length){data[index++]=ecdata[r][i];}}}\nreturn data;};var QRMode={MODE_NUMBER:1<<0,MODE_ALPHA_NUM:1<<1,MODE_8BIT_BYTE:1<<2,MODE_KANJI:1<<3};var QRErrorCorrectLevel={L:1,M:0,Q:3,H:2};var QRMaskPattern={PATTERN000:0,PATTERN001:1,PATTERN010:2,PATTERN011:3,PATTERN100:4,PATTERN101:5,PATTERN110:6,PATTERN111:7};var QRUtil={PATTERN_POSITION_TABLE:[[],[6,18],[6,22],[6,26],[6,30],[6,34],[6,22,38],[6,24,42],[6,26,46],[6,28,50],[6,30,54],[6,32,58],[6,34,62],[6,26,46,66],[6,26,48,70],[6,26,50,74],[6,30,54,78],[6,30,56,82],[6,30,58,86],[6,34,62,90],[6,28,50,72,94],[6,26,50,74,98],[6,30,54,78,102],[6,28,54,80,106],[6,32,58,84,110],[6,30,58,86,114],[6,34,62,90,118],[6,26,50,74,98,122],[6,30,54,78,102,126],[6,26,52,78,104,130],[6,30,56,82,108,134],[6,34,60,86,112,138],[6,30,58,86,114,142],[6,34,62,90,118,146],[6,30,54,78,102,126,150],[6,24,50,76,102,128,154],[6,28,54,80,106,132,158],[6,32,58,84,110,136,162],[6,26,54,82,110,138,166],[6,30,58,86,114,142,170]],G15:(1<<10)|(1<<8)|(1<<5)|(1<<4)|(1<<2)|(1<<1)|(1<<0),G18:(1<<12)|(1<<11)|(1<<10)|(1<<9)|(1<<8)|(1<<5)|(1<<2)|(1<<0),G15_MASK:(1<<14)|(1<<12)|(1<<10)|(1<<4)|(1<<1),getBCHTypeInfo:function(data){var d=data<<10;while(QRUtil.getBCHDigit(d)-QRUtil.getBCHDigit(QRUtil.G15)>=0){d^=(QRUtil.G15<<(QRUtil.getBCHDigit(d)-QRUtil.getBCHDigit(QRUtil.G15)));}\nreturn((data<<10)|d)^QRUtil.G15_MASK;},getBCHTypeNumber:function(data){var d=data<<12;while(QRUtil.getBCHDigit(d)-QRUtil.getBCHDigit(QRUtil.G18)>=0){d^=(QRUtil.G18<<(QRUtil.getBCHDigit(d)-QRUtil.getBCHDigit(QRUtil.G18)));}\nreturn(data<<12)|d;},getBCHDigit:function(data){var digit=0;while(data!=0){digit++;data>>>=1;}\nreturn digit;},getPatternPosition:function(typeNumber){return QRUtil.PATTERN_POSITION_TABLE[typeNumber-1];},getMask:function(maskPattern,i,j){switch(maskPattern){case QRMaskPattern.PATTERN000:return(i+j)%2==0;case QRMaskPattern.PATTERN001:return i%2==0;case QRMaskPattern.PATTERN010:return j%3==0;case QRMaskPattern.PATTERN011:return(i+j)%3==0;case QRMaskPattern.PATTERN100:return(Math.floor(i/2)+Math.floor(j/3))%2==0;case QRMaskPattern.PATTERN101:return(i*j)%2+(i*j)%3==0;case QRMaskPattern.PATTERN110:return((i*j)%2+(i*j)%3)%2==0;case QRMaskPattern.PATTERN111:return((i*j)%3+(i+j)%2)%2==0;default:throw new Error(\"bad maskPattern:\"+maskPattern);}},getErrorCorrectPolynomial:function(errorCorrectLength){var a=new QRPolynomial([1],0);for(var i=0;i<errorCorrectLength;i++){a=a.multiply(new QRPolynomial([1,QRMath.gexp(i)],0));}\nreturn a;},getLengthInBits:function(mode,type){if(1<=type&&type<10){switch(mode){case QRMode.MODE_NUMBER:return 10;case QRMode.MODE_ALPHA_NUM:return 9;case QRMode.MODE_8BIT_BYTE:return 8;case QRMode.MODE_KANJI:return 8;default:throw new Error(\"mode:\"+mode);}}else if(type<27){switch(mode){case QRMode.MODE_NUMBER:return 12;case QRMode.MODE_ALPHA_NUM:return 11;case QRMode.MODE_8BIT_BYTE:return 16;case QRMode.MODE_KANJI:return 10;default:throw new Error(\"mode:\"+mode);}}else if(type<41){switch(mode){case QRMode.MODE_NUMBER:return 14;case QRMode.MODE_ALPHA_NUM:return 13;case QRMode.MODE_8BIT_BYTE:return 16;case QRMode.MODE_KANJI:return 12;default:throw new Error(\"mode:\"+mode);}}else{throw new Error(\"type:\"+type);}},getLostPoint:function(qrCode){var moduleCount=qrCode.getModuleCount();var lostPoint=0;for(var row=0;row<moduleCount;row++){for(var col=0;col<moduleCount;col++){var sameCount=0;var dark=qrCode.isDark(row,col);for(var r=-1;r<=1;r++){if(row+r<0||moduleCount<=row+r){continue;}\nfor(var c=-1;c<=1;c++){if(col+c<0||moduleCount<=col+c){continue;}\nif(r==0&&c==0){continue;}\nif(dark==qrCode.isDark(row+r,col+c)){sameCount++;}}}\nif(sameCount>5){lostPoint+=(3+sameCount-5);}}}\nfor(var row=0;row<moduleCount-1;row++){for(var col=0;col<moduleCount-1;col++){var count=0;if(qrCode.isDark(row,col))count++;if(qrCode.isDark(row+1,col))count++;if(qrCode.isDark(row,col+1))count++;if(qrCode.isDark(row+1,col+1))count++;if(count==0||count==4){lostPoint+=3;}}}\nfor(var row=0;row<moduleCount;row++){for(var col=0;col<moduleCount-6;col++){if(qrCode.isDark(row,col)&&!qrCode.isDark(row,col+1)&&qrCode.isDark(row,col+2)&&qrCode.isDark(row,col+3)&&qrCode.isDark(row,col+4)&&!qrCode.isDark(row,col+5)&&qrCode.isDark(row,col+6)){lostPoint+=40;}}}\nfor(var col=0;col<moduleCount;col++){for(var row=0;row<moduleCount-6;row++){if(qrCode.isDark(row,col)&&!qrCode.isDark(row+1,col)&&qrCode.isDark(row+2,col)&&qrCode.isDark(row+3,col)&&qrCode.isDark(row+4,col)&&!qrCode.isDark(row+5,col)&&qrCode.isDark(row+6,col)){lostPoint+=40;}}}\nvar darkCount=0;for(var col=0;col<moduleCount;col++){for(var row=0;row<moduleCount;row++){if(qrCode.isDark(row,col)){darkCount++;}}}\nvar ratio=Math.abs(100*darkCount/moduleCount/moduleCount-50)/5;lostPoint+=ratio*10;return lostPoint;}};var QRMath={glog:function(n){if(n<1){throw new Error(\"glog(\"+n+\")\");}\nreturn QRMath.LOG_TABLE[n];},gexp:function(n){while(n<0){n+=255;}\nwhile(n>=256){n-=255;}\nreturn QRMath.EXP_TABLE[n];},EXP_TABLE:new Array(256),LOG_TABLE:new Array(256)};for(var i=0;i<8;i++){QRMath.EXP_TABLE[i]=1<<i;}\nfor(var i=8;i<256;i++){QRMath.EXP_TABLE[i]=QRMath.EXP_TABLE[i-4]^QRMath.EXP_TABLE[i-5]^QRMath.EXP_TABLE[i-6]^QRMath.EXP_TABLE[i-8];}\nfor(var i=0;i<255;i++){QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]]=i;}\nfunction QRPolynomial(num,shift){if(num.length==undefined){throw new Error(num.length+\"/\"+shift);}\nvar offset=0;while(offset<num.length&&num[offset]==0){offset++;}\nthis.num=new Array(num.length-offset+shift);for(var i=0;i<num.length-offset;i++){this.num[i]=num[i+offset];}}\nQRPolynomial.prototype={get:function(index){return this.num[index];},getLength:function(){return this.num.length;},multiply:function(e){var num=new Array(this.getLength()+e.getLength()-1);for(var i=0;i<this.getLength();i++){for(var j=0;j<e.getLength();j++){num[i+j]^=QRMath.gexp(QRMath.glog(this.get(i))+QRMath.glog(e.get(j)));}}\nreturn new QRPolynomial(num,0);},mod:function(e){if(this.getLength()-e.getLength()<0){return this;}\nvar ratio=QRMath.glog(this.get(0))-QRMath.glog(e.get(0));var num=new Array(this.getLength());for(var i=0;i<this.getLength();i++){num[i]=this.get(i);}\nfor(var i=0;i<e.getLength();i++){num[i]^=QRMath.gexp(QRMath.glog(e.get(i))+ratio);}\nreturn new QRPolynomial(num,0).mod(e);}};function QRRSBlock(totalCount,dataCount){this.totalCount=totalCount;this.dataCount=dataCount;}\nQRRSBlock.RS_BLOCK_TABLE=[[1,26,19],[1,26,16],[1,26,13],[1,26,9],[1,44,34],[1,44,28],[1,44,22],[1,44,16],[1,70,55],[1,70,44],[2,35,17],[2,35,13],[1,100,80],[2,50,32],[2,50,24],[4,25,9],[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],[2,86,68],[4,43,27],[4,43,19],[4,43,15],[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],[3,145,115,1,146,116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12],[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,43,15,10,44,16],[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],[8,152,122,4,153,123],[22,73,45,3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,55,25],[11,45,15,46,46,16],[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,45,15,67,46,16],[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]];QRRSBlock.getRSBlocks=function(typeNumber,errorCorrectLevel){var rsBlock=QRRSBlock.getRsBlockTable(typeNumber,errorCorrectLevel);if(rsBlock==undefined){throw new Error(\"bad rs block @ typeNumber:\"+typeNumber+\"/errorCorrectLevel:\"+errorCorrectLevel);}\nvar length=rsBlock.length/3;var list=[];for(var i=0;i<length;i++){var count=rsBlock[i*3+0];var totalCount=rsBlock[i*3+1];var dataCount=rsBlock[i*3+2];for(var j=0;j<count;j++){list.push(new QRRSBlock(totalCount,dataCount));}}\nreturn list;};QRRSBlock.getRsBlockTable=function(typeNumber,errorCorrectLevel){switch(errorCorrectLevel){case QRErrorCorrectLevel.L:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber-1)*4+0];case QRErrorCorrectLevel.M:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber-1)*4+1];case QRErrorCorrectLevel.Q:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber-1)*4+2];case QRErrorCorrectLevel.H:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber-1)*4+3];default:return undefined;}};function QRBitBuffer(){this.buffer=[];this.length=0;}\nQRBitBuffer.prototype={get:function(index){var bufIndex=Math.floor(index/8);return((this.buffer[bufIndex]>>>(7-index%8))&1)==1;},put:function(num,length){for(var i=0;i<length;i++){this.putBit(((num>>>(length-i-1))&1)==1);}},getLengthInBits:function(){return this.length;},putBit:function(bit){var bufIndex=Math.floor(this.length/8);if(this.buffer.length<=bufIndex){this.buffer.push(0);}\nif(bit){this.buffer[bufIndex]|=(0x80>>>(this.length%8));}\nthis.length++;}};var QRCodeLimitLength=[[17,14,11,7],[32,26,20,14],[53,42,32,24],[78,62,46,34],[106,84,60,44],[134,106,74,58],[154,122,86,64],[192,152,108,84],[230,180,130,98],[271,213,151,119],[321,251,177,137],[367,287,203,155],[425,331,241,177],[458,362,258,194],[520,412,292,220],[586,450,322,250],[644,504,364,280],[718,560,394,310],[792,624,442,338],[858,666,482,382],[929,711,509,403],[1003,779,565,439],[1091,857,611,461],[1171,911,661,511],[1273,997,715,535],[1367,1059,751,593],[1465,1125,805,625],[1528,1190,868,658],[1628,1264,908,698],[1732,1370,982,742],[1840,1452,1030,790],[1952,1538,1112,842],[2068,1628,1168,898],[2188,1722,1228,958],[2303,1809,1283,983],[2431,1911,1351,1051],[2563,1989,1423,1093],[2699,2099,1499,1139],[2809,2213,1579,1219],[2953,2331,1663,1273]];\n\n\n/** Constructor */\nfunction QRCode(options) {\n  var instance = this;\n  \n  //Default options\n  this.options = {\n    padding: 4,\n    width: 256, \n    height: 256,\n    typeNumber: 4,\n    color: \"#000000\",\n    background: \"#ffffff\",\n    ecl: \"M\"\n  };\n  \n  //In case the options is string\n  if (typeof options === 'string') {\n    options = {\n      content: options\n    };\n  }\n  \n  //Merge options\n  if (options) {\n    for (var i in options) {\n      this.options[i] = options[i];\n    }\n  }\n  \n  if (typeof this.options.content !== 'string') {\n    throw new Error(\"Expected 'content' as string!\");\n  }\n  \n  if (this.options.content.length === 0 /* || this.options.content.length > 7089 */) {\n    throw new Error(\"Expected 'content' to be non-empty!\");\n  }\n  \n  if (!(this.options.padding >= 0)) {\n    throw new Error(\"Expected 'padding' value to be non-negative!\");\n  }\n  \n  if (!(this.options.width > 0) || !(this.options.height > 0)) {\n    throw new Error(\"Expected 'width' or 'height' value to be higher than zero!\");\n  }\n  \n  //Gets the error correction level\n  function _getErrorCorrectLevel(ecl) {\n    switch (ecl) {\n        case \"L\":\n          return QRErrorCorrectLevel.L;\n          \n        case \"M\":\n          return QRErrorCorrectLevel.M;\n          \n        case \"Q\":\n          return QRErrorCorrectLevel.Q;\n          \n        case \"H\":\n          return QRErrorCorrectLevel.H;\n          \n        default:\n          throw new Error(\"Unknwon error correction level: \" + ecl);\n      }\n  }\n  \n  //Get type number\n  function _getTypeNumber(content, ecl) {      \n    var length = _getUTF8Length(content);\n    \n    var type = 1;\n    var limit = 0;\n    for (var i = 0, len = QRCodeLimitLength.length; i <= len; i++) {\n      var table = QRCodeLimitLength[i];\n      if (!table) {\n        throw new Error(\"Content too long: expected \" + limit + \" but got \" + length);\n      }\n      \n      switch (ecl) {\n        case \"L\":\n          limit = table[0];\n          break;\n          \n        case \"M\":\n          limit = table[1];\n          break;\n          \n        case \"Q\":\n          limit = table[2];\n          break;\n          \n        case \"H\":\n          limit = table[3];\n          break;\n          \n        default:\n          throw new Error(\"Unknwon error correction level: \" + ecl);\n      }\n      \n      if (length <= limit) {\n        break;\n      }\n      \n      type++;\n    }\n    \n    if (type > QRCodeLimitLength.length) {\n      throw new Error(\"Content too long\");\n    }\n    \n    return type;\n  }\n\n  //Gets text length\n  function _getUTF8Length(content) {\n    var result = encodeURI(content).toString().replace(/\\%[0-9a-fA-F]{2}/g, 'a');\n    return result.length + (result.length != content ? 3 : 0);\n  }\n  \n  //Generate QR Code matrix\n  var content = this.options.content;\n  var type = _getTypeNumber(content, this.options.ecl);\n  var ecl = _getErrorCorrectLevel(this.options.ecl);\n  this.qrcode = new QRCodeModel(type, ecl);\n  this.qrcode.addData(content);\n  this.qrcode.make();\n}\n\n/** Generates QR Code as SVG image */\nQRCode.prototype.svg = function(opt) {\n  var options = this.options || { };\n  var modules = this.qrcode.modules;\n  \n  if (typeof opt == \"undefined\") {\n    opt = { container: options.container || \"svg\" };\n  }\n  \n  //Apply new lines and indents in SVG?\n  var pretty = typeof options.pretty != \"undefined\" ? !!options.pretty : true;\n  \n  var indent = pretty ? '  ' : '';\n  var EOL = pretty ? '\\r\\n' : '';\n  var width = options.width;\n  var height = options.height;\n  var length = modules.length;\n  var xsize = width / (length + 2 * options.padding);\n  var ysize = height / (length + 2 * options.padding);\n  \n  //Join (union, merge) rectangles into one shape?\n  var join = typeof options.join != \"undefined\" ? !!options.join : false;\n  \n  //Swap the X and Y modules, pull request #2\n  var swap = typeof options.swap != \"undefined\" ? !!options.swap : false;\n  \n  //Apply <?xml...?> declaration in SVG?\n  var xmlDeclaration = typeof options.xmlDeclaration != \"undefined\" ? !!options.xmlDeclaration : true;\n  \n  //Populate with predefined shape instead of \"rect\" elements, thanks to @kkocdko\n  var predefined = typeof options.predefined != \"undefined\" ? !!options.predefined : false;\n  var defs = predefined ? indent + '<defs><path id=\"qrmodule\" d=\"M0 0 h' + ysize + ' v' + xsize + ' H0 z\" style=\"fill:' + options.color + ';shape-rendering:crispEdges;\" /></defs>' + EOL : '';\n  \n  //Background rectangle\n  var bgrect = indent + '<rect x=\"0\" y=\"0\" width=\"' + width + '\" height=\"' + height + '\" style=\"fill:' + options.background + ';shape-rendering:crispEdges;\"/>' + EOL;\n  \n  //Rectangles representing modules\n  var modrect = '';\n  var pathdata = '';\n\n  for (var y = 0; y < length; y++) {\n    for (var x = 0; x < length; x++) {\n      var module = modules[x][y];\n      if (module) {\n        \n        var px = (x * xsize + options.padding * xsize);\n        var py = (y * ysize + options.padding * ysize);\n        \n        //Some users have had issues with the QR Code, thanks to @danioso for the solution\n        if (swap) {\n          var t = px;\n          px = py;\n          py = t;\n        }\n        \n        if (join) {\n          //Module as a part of svg path data, thanks to @danioso\n          var w = xsize + px\n          var h = ysize + py\n\n          px = (Number.isInteger(px))? Number(px): px.toFixed(2);\n          py = (Number.isInteger(py))? Number(py): py.toFixed(2);\n          w = (Number.isInteger(w))? Number(w): w.toFixed(2);\n          h = (Number.isInteger(h))? Number(h): h.toFixed(2);\n\n          pathdata += ('M' + px + ',' + py + ' V' + h + ' H' + w + ' V' + py + ' H' + px + ' Z ');\n        }\n        else if (predefined) {\n          //Module as a predefined shape, thanks to @kkocdko\n          modrect += indent + '<use x=\"' + px.toString() + '\" y=\"' + py.toString() + '\" href=\"#qrmodule\" />' + EOL;\n        }\n        else {\n          //Module as rectangle element\n          modrect += indent + '<rect x=\"' + px.toString() + '\" y=\"' + py.toString() + '\" width=\"' + xsize + '\" height=\"' + ysize + '\" style=\"fill:' + options.color + ';shape-rendering:crispEdges;\"/>' + EOL;\n        }\n      }\n    }\n  }\n  \n  if (join) {\n    modrect = indent + '<path x=\"0\" y=\"0\" style=\"fill:' + options.color + ';shape-rendering:crispEdges;\" d=\"' + pathdata + '\" />';\n  }\n\n  var svg = \"\";\n  switch (opt.container) {\n    //Wrapped in SVG document\n    case \"svg\":\n      if (xmlDeclaration) {\n        svg += '<?xml version=\"1.0\" standalone=\"yes\"?>' + EOL;\n      }\n      svg += '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"' + width + '\" height=\"' + height + '\">' + EOL;\n      svg += defs + bgrect + modrect;\n      svg += '</svg>';\n      break;\n      \n    //Viewbox for responsive use in a browser, thanks to @danioso\n    case \"svg-viewbox\":\n      if (xmlDeclaration) {\n        svg += '<?xml version=\"1.0\" standalone=\"yes\"?>' + EOL;\n      }\n      svg += '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 ' + width + ' ' + height + '\">' + EOL;\n      svg += defs + bgrect + modrect;\n      svg += '</svg>';\n      break;\n      \n    \n    //Wrapped in group element    \n    case \"g\":\n      svg += '<g width=\"' + width + '\" height=\"' + height + '\">' + EOL;\n      svg += defs + bgrect + modrect;\n      svg += '</g>';\n      break;\n      \n    //Without a container\n    default:\n      svg += (defs + bgrect + modrect).replace(/^\\s+/, \"\"); //Clear indents on each line\n      break;\n  }\n  \n  return svg;\n};\n\n/** Writes QR Code image to a file */\nQRCode.prototype.save = function(file, callback) {\n  var data = this.svg();\n  if (typeof callback != \"function\") {\n    callback = function(error, result) { };\n  }\n  try {\n    //Package 'fs' is available in node.js but not in a web browser\n    var fs = __webpack_require__(/*! fs */ \"?a231\");\n    fs.writeFile(file, data, callback);\n  }\n  catch (e) {\n    //Sorry, 'fs' is not available\n    callback(e);\n  }\n};\n\nif (true) {\n  module.exports = QRCode;\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/qrcode-svg/lib/qrcode.js?");

/***/ }),

/***/ "../../node_modules/randombytes/browser.js":
/*!*************************************************!*\
  !*** ../../node_modules/randombytes/browser.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\nvar crypto = __webpack_require__.g.crypto || __webpack_require__.g.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/randombytes/browser.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/errors-browser.js":
/*!************************************************************!*\
  !*** ../../node_modules/readable-stream/errors-browser.js ***!
  \************************************************************/
/***/ ((module) => {

eval("\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/errors-browser.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/lib/_stream_duplex.js":
/*!****************************************************************!*\
  !*** ../../node_modules/readable-stream/lib/_stream_duplex.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = __webpack_require__(/*! ./_stream_readable */ \"../../node_modules/readable-stream/lib/_stream_readable.js\");\n\nvar Writable = __webpack_require__(/*! ./_stream_writable */ \"../../node_modules/readable-stream/lib/_stream_writable.js\");\n\n__webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/lib/_stream_duplex.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/lib/_stream_passthrough.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(/*! ./_stream_transform */ \"../../node_modules/readable-stream/lib/_stream_transform.js\");\n\n__webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/lib/_stream_passthrough.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/lib/_stream_readable.js":
/*!******************************************************************!*\
  !*** ../../node_modules/readable-stream/lib/_stream_readable.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = (__webpack_require__(/*! events */ \"../../node_modules/events/events.js\").EventEmitter);\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"../../node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n\nvar Buffer = (__webpack_require__(/*! buffer */ \"../../node_modules/buffer/index.js\").Buffer);\n\nvar OurUint8Array = __webpack_require__.g.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = __webpack_require__(/*! util */ \"?983a\");\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = __webpack_require__(/*! ./internal/streams/buffer_list */ \"../../node_modules/readable-stream/lib/internal/streams/buffer_list.js\");\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"../../node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nvar _require = __webpack_require__(/*! ./internal/streams/state */ \"../../node_modules/readable-stream/lib/internal/streams/state.js\"),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = (__webpack_require__(/*! ../errors */ \"../../node_modules/readable-stream/errors-browser.js\").codes),\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\n__webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../../node_modules/readable-stream/lib/_stream_duplex.js\");\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ \"../../node_modules/readable-stream/node_modules/string_decoder/lib/string_decoder.js\").StringDecoder);\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../../node_modules/readable-stream/lib/_stream_duplex.js\");\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ \"../../node_modules/readable-stream/node_modules/string_decoder/lib/string_decoder.js\").StringDecoder);\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = __webpack_require__(/*! ./internal/streams/async_iterator */ \"../../node_modules/readable-stream/lib/internal/streams/async_iterator.js\");\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = __webpack_require__(/*! ./internal/streams/from */ \"../../node_modules/readable-stream/lib/internal/streams/from-browser.js\");\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/lib/_stream_readable.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/lib/_stream_transform.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/readable-stream/lib/_stream_transform.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\nmodule.exports = Transform;\n\nvar _require$codes = (__webpack_require__(/*! ../errors */ \"../../node_modules/readable-stream/errors-browser.js\").codes),\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = __webpack_require__(/*! ./_stream_duplex */ \"../../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n__webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/lib/_stream_transform.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/lib/_stream_writable.js":
/*!******************************************************************!*\
  !*** ../../node_modules/readable-stream/lib/_stream_writable.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: __webpack_require__(/*! util-deprecate */ \"../../node_modules/util-deprecate/browser.js\")\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"../../node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n\nvar Buffer = (__webpack_require__(/*! buffer */ \"../../node_modules/buffer/index.js\").Buffer);\n\nvar OurUint8Array = __webpack_require__.g.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"../../node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nvar _require = __webpack_require__(/*! ./internal/streams/state */ \"../../node_modules/readable-stream/lib/internal/streams/state.js\"),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = (__webpack_require__(/*! ../errors */ \"../../node_modules/readable-stream/errors-browser.js\").codes),\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\n__webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../../node_modules/readable-stream/lib/_stream_duplex.js\");\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../../node_modules/readable-stream/lib/_stream_duplex.js\"); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/lib/_stream_writable.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/lib/internal/streams/async_iterator.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/readable-stream/lib/internal/streams/async_iterator.js ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = __webpack_require__(/*! ./end-of-stream */ \"../../node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/lib/internal/streams/async_iterator.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/lib/internal/streams/buffer_list.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/readable-stream/lib/internal/streams/buffer_list.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = __webpack_require__(/*! buffer */ \"../../node_modules/buffer/index.js\"),\n    Buffer = _require.Buffer;\n\nvar _require2 = __webpack_require__(/*! util */ \"?1dff\"),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/lib/internal/streams/buffer_list.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \**************************************************************************/
/***/ ((module) => {

eval(" // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/lib/internal/streams/destroy.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/lib/internal/streams/end-of-stream.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/readable-stream/lib/internal/streams/end-of-stream.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n\nvar ERR_STREAM_PREMATURE_CLOSE = (__webpack_require__(/*! ../../../errors */ \"../../node_modules/readable-stream/errors-browser.js\").codes.ERR_STREAM_PREMATURE_CLOSE);\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/lib/internal/streams/end-of-stream.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/lib/internal/streams/from-browser.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/readable-stream/lib/internal/streams/from-browser.js ***!
  \*******************************************************************************/
/***/ ((module) => {

eval("module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/lib/internal/streams/from-browser.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/lib/internal/streams/pipeline.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/readable-stream/lib/internal/streams/pipeline.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = (__webpack_require__(/*! ../../../errors */ \"../../node_modules/readable-stream/errors-browser.js\").codes),\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = __webpack_require__(/*! ./end-of-stream */ \"../../node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/lib/internal/streams/pipeline.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/lib/internal/streams/state.js":
/*!************************************************************************!*\
  !*** ../../node_modules/readable-stream/lib/internal/streams/state.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar ERR_INVALID_OPT_VALUE = (__webpack_require__(/*! ../../../errors */ \"../../node_modules/readable-stream/errors-browser.js\").codes.ERR_INVALID_OPT_VALUE);\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/lib/internal/streams/state.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! events */ \"../../node_modules/events/events.js\").EventEmitter;\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/lib/internal/streams/stream-browser.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/node_modules/string_decoder/lib/string_decoder.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/readable-stream/node_modules/string_decoder/lib/string_decoder.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer);\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/node_modules/string_decoder/lib/string_decoder.js?");

/***/ }),

/***/ "../../node_modules/readable-stream/readable-browser.js":
/*!**************************************************************!*\
  !*** ../../node_modules/readable-stream/readable-browser.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ \"../../node_modules/readable-stream/lib/_stream_readable.js\");\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ \"../../node_modules/readable-stream/lib/_stream_writable.js\");\nexports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"../../node_modules/readable-stream/lib/_stream_duplex.js\");\nexports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ \"../../node_modules/readable-stream/lib/_stream_transform.js\");\nexports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ \"../../node_modules/readable-stream/lib/_stream_passthrough.js\");\nexports.finished = __webpack_require__(/*! ./lib/internal/streams/end-of-stream.js */ \"../../node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\nexports.pipeline = __webpack_require__(/*! ./lib/internal/streams/pipeline.js */ \"../../node_modules/readable-stream/lib/internal/streams/pipeline.js\");\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/readable-stream/readable-browser.js?");

/***/ }),

/***/ "../../node_modules/ripemd160/index.js":
/*!*********************************************!*\
  !*** ../../node_modules/ripemd160/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar Buffer = (__webpack_require__(/*! buffer */ \"../../node_modules/buffer/index.js\").Buffer)\nvar inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")\nvar HashBase = __webpack_require__(/*! hash-base */ \"../../node_modules/hash-base/index.js\")\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/ripemd160/index.js?");

/***/ }),

/***/ "../../node_modules/safe-buffer/index.js":
/*!***********************************************!*\
  !*** ../../node_modules/safe-buffer/index.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"../../node_modules/buffer/index.js\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/safe-buffer/index.js?");

/***/ }),

/***/ "../../node_modules/sha.js/hash.js":
/*!*****************************************!*\
  !*** ../../node_modules/sha.js/hash.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/sha.js/hash.js?");

/***/ }),

/***/ "../../node_modules/sha.js/index.js":
/*!******************************************!*\
  !*** ../../node_modules/sha.js/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = __webpack_require__(/*! ./sha */ \"../../node_modules/sha.js/sha.js\")\nexports.sha1 = __webpack_require__(/*! ./sha1 */ \"../../node_modules/sha.js/sha1.js\")\nexports.sha224 = __webpack_require__(/*! ./sha224 */ \"../../node_modules/sha.js/sha224.js\")\nexports.sha256 = __webpack_require__(/*! ./sha256 */ \"../../node_modules/sha.js/sha256.js\")\nexports.sha384 = __webpack_require__(/*! ./sha384 */ \"../../node_modules/sha.js/sha384.js\")\nexports.sha512 = __webpack_require__(/*! ./sha512 */ \"../../node_modules/sha.js/sha512.js\")\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/sha.js/index.js?");

/***/ }),

/***/ "../../node_modules/sha.js/sha.js":
/*!****************************************!*\
  !*** ../../node_modules/sha.js/sha.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../../node_modules/sha.js/hash.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/sha.js/sha.js?");

/***/ }),

/***/ "../../node_modules/sha.js/sha1.js":
/*!*****************************************!*\
  !*** ../../node_modules/sha.js/sha1.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../../node_modules/sha.js/hash.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/sha.js/sha1.js?");

/***/ }),

/***/ "../../node_modules/sha.js/sha224.js":
/*!*******************************************!*\
  !*** ../../node_modules/sha.js/sha224.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")\nvar Sha256 = __webpack_require__(/*! ./sha256 */ \"../../node_modules/sha.js/sha256.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../../node_modules/sha.js/hash.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/sha.js/sha224.js?");

/***/ }),

/***/ "../../node_modules/sha.js/sha256.js":
/*!*******************************************!*\
  !*** ../../node_modules/sha.js/sha256.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../../node_modules/sha.js/hash.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/sha.js/sha256.js?");

/***/ }),

/***/ "../../node_modules/sha.js/sha384.js":
/*!*******************************************!*\
  !*** ../../node_modules/sha.js/sha384.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")\nvar SHA512 = __webpack_require__(/*! ./sha512 */ \"../../node_modules/sha.js/sha512.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../../node_modules/sha.js/hash.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/sha.js/sha384.js?");

/***/ }),

/***/ "../../node_modules/sha.js/sha512.js":
/*!*******************************************!*\
  !*** ../../node_modules/sha.js/sha512.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"../../node_modules/sha.js/hash.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer)\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/sha.js/sha512.js?");

/***/ }),

/***/ "../../node_modules/slp-parser/dist/index.js":
/*!***************************************************!*\
  !*** ../../node_modules/slp-parser/dist/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"../../node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst bignumber_js_1 = __importDefault(__webpack_require__(/*! bignumber.js */ \"../../node_modules/bignumber.js/bignumber.js\"));\nexports.BN = bignumber_js_1.default;\n;\n;\n;\n;\n;\nexports.parseSLP = (scriptpubkey) => {\n    if (typeof scriptpubkey === \"string\") {\n        scriptpubkey = Buffer.from(scriptpubkey, 'hex');\n    }\n    let it = 0; // position in itObj\n    let itObj = scriptpubkey; // object it refers to\n    const OP_0 = 0x00;\n    const OP_16 = 0x60;\n    const OP_RETURN = 0x6a;\n    const OP_PUSHDATA1 = 0x4c;\n    const OP_PUSHDATA2 = 0x4d;\n    const OP_PUSHDATA4 = 0x4e;\n    const PARSE_CHECK = (v, str) => {\n        if (v) {\n            throw Error(str);\n        }\n    };\n    const extractU8 = () => {\n        const r = itObj.readUInt8(it);\n        it += 1;\n        return new bignumber_js_1.default(r);\n    };\n    const extractU16 = () => {\n        const r = itObj.readUInt16LE(it);\n        it += 2;\n        return new bignumber_js_1.default(r);\n    };\n    const extractU32 = () => {\n        const r = itObj.readUInt32LE(it);\n        it += 4;\n        return new bignumber_js_1.default(r);\n    };\n    const extractU64 = () => {\n        const r1 = itObj.readUInt32LE(it);\n        it += 4;\n        const r2 = itObj.readUInt32LE(it);\n        it += 4;\n        return new bignumber_js_1.default(r2).multipliedBy(Math.pow(2, 32)).plus(r1);\n    };\n    PARSE_CHECK(itObj.length === 0, \"scriptpubkey cannot be empty\");\n    PARSE_CHECK(itObj[it] !== OP_RETURN, \"scriptpubkey not op_return\");\n    PARSE_CHECK(itObj.length < 10, \"scriptpubkey too small\"); // TODO what is correct minimum size?\n    ++it;\n    const extractPushdata = () => {\n        if (it === itObj.length) {\n            return -1;\n        }\n        const cnt = extractU8().toNumber();\n        if (cnt > OP_0 && cnt < OP_PUSHDATA1) {\n            if (it + cnt > itObj.length) {\n                --it;\n                return -1;\n            }\n            return cnt;\n        }\n        else if (cnt === OP_PUSHDATA1) {\n            if (it + 1 >= itObj.length) {\n                --it;\n                return -1;\n            }\n            return extractU8().toNumber();\n        }\n        else if (cnt === OP_PUSHDATA2) {\n            if (it + 2 >= itObj.length) {\n                --it;\n                return -1;\n            }\n            return extractU16().toNumber();\n        }\n        else if (cnt === OP_PUSHDATA4) {\n            if (it + 4 >= itObj.length) {\n                --it;\n                return -1;\n            }\n            return extractU32().toNumber();\n        }\n        // other opcodes not allowed\n        --it;\n        return -1;\n    };\n    const bufferToBN = () => {\n        if (itObj.length === 1)\n            return extractU8();\n        if (itObj.length === 2)\n            return extractU16();\n        if (itObj.length === 4)\n            return extractU32();\n        if (itObj.length === 8)\n            return extractU64();\n        throw new Error('extraction of number from buffer failed');\n    };\n    const checkValidTokenId = (tokenId) => tokenId.length === 32;\n    const chunks = [];\n    for (let len = extractPushdata(); len >= 0; len = extractPushdata()) {\n        const buf = itObj.slice(it, it + len);\n        PARSE_CHECK(it + len > itObj.length, \"pushdata data extraction failed\");\n        it += len;\n        chunks.push(buf);\n        if (chunks.length === 1) {\n            const lokadIdStr = chunks[0];\n            PARSE_CHECK(lokadIdStr.length !== 4, \"lokad id wrong size\");\n            PARSE_CHECK(lokadIdStr[0] !== 'S'.charCodeAt(0)\n                || lokadIdStr[1] !== 'L'.charCodeAt(0)\n                || lokadIdStr[2] !== 'P'.charCodeAt(0)\n                || lokadIdStr[3] !== 0x00, \"SLP not in first chunk\");\n        }\n    }\n    PARSE_CHECK(it !== itObj.length, \"trailing data\");\n    PARSE_CHECK(chunks.length === 0, \"chunks empty\");\n    let cit = 0;\n    const CHECK_NEXT = () => {\n        ++cit;\n        PARSE_CHECK(cit === chunks.length, \"parsing ended early\");\n        it = 0;\n        itObj = chunks[cit];\n    };\n    CHECK_NEXT(); // for quick exit check done above\n    const tokenTypeBuf = itObj.reverse();\n    PARSE_CHECK(tokenTypeBuf.length !== 1 && tokenTypeBuf.length !== 2, \"token_type string length must be 1 or 2\");\n    const tokenType = bufferToBN().toNumber();\n    PARSE_CHECK(![0x01, 0x41, 0x81].includes(tokenType), \"token_type not token-type1, nft1-group, or nft1-child\");\n    CHECK_NEXT();\n    const transactionType = itObj.toString();\n    if (transactionType === 'GENESIS') {\n        PARSE_CHECK(chunks.length !== 10, \"wrong number of chunks\");\n        CHECK_NEXT();\n        const ticker = itObj;\n        CHECK_NEXT();\n        const name = itObj;\n        CHECK_NEXT();\n        const documentUri = itObj;\n        CHECK_NEXT();\n        const documentHash = itObj;\n        PARSE_CHECK(!(documentHash.length === 0 || documentHash.length === 32), \"document_hash must be size 0 or 32\");\n        CHECK_NEXT();\n        const decimalsBuf = itObj;\n        PARSE_CHECK(decimalsBuf.length !== 1, \"decimals string length must be 1\");\n        const decimals = bufferToBN().toNumber();\n        PARSE_CHECK(decimals > 9, \"decimals bigger than 9\");\n        CHECK_NEXT();\n        const mintBatonVoutBuf = itObj;\n        let mintBatonVout = 0;\n        PARSE_CHECK(mintBatonVoutBuf.length >= 2, \"mint_baton_vout string length must be 0 or 1\");\n        if (mintBatonVoutBuf.length > 0) {\n            mintBatonVout = bufferToBN().toNumber();\n            PARSE_CHECK(mintBatonVout < 2, \"mint_baton_vout must be at least 2\");\n        }\n        CHECK_NEXT();\n        const qtyBuf = itObj.reverse();\n        PARSE_CHECK(qtyBuf.length !== 8, \"initial_qty must be provided as an 8-byte buffer\");\n        const qty = bufferToBN();\n        if (tokenType === 0x41) {\n            PARSE_CHECK(decimals !== 0, \"NFT1 child token must have divisibility set to 0 decimal places\");\n            PARSE_CHECK(mintBatonVout !== 0, \"NFT1 child token must not have a minting baton\");\n            PARSE_CHECK(!qty.isEqualTo(1), \"NFT1 child token must have quantity of 1\");\n        }\n        const actionData = {\n            ticker,\n            name,\n            documentUri,\n            documentHash,\n            decimals,\n            mintBatonVout,\n            qty\n        };\n        return {\n            tokenType,\n            transactionType,\n            data: actionData\n        };\n    }\n    else if (transactionType === \"MINT\") {\n        PARSE_CHECK(tokenType === 0x41, \"NFT1 Child cannot have MINT transaction type.\");\n        PARSE_CHECK(chunks.length !== 6, \"wrong number of chunks\");\n        CHECK_NEXT();\n        const tokenId = itObj;\n        PARSE_CHECK(!checkValidTokenId(tokenId), \"tokenId invalid size\");\n        CHECK_NEXT();\n        const mintBatonVoutBuf = itObj;\n        let mintBatonVout = 0;\n        PARSE_CHECK(mintBatonVoutBuf.length >= 2, \"mint_baton_vout string length must be 0 or 1\");\n        if (mintBatonVoutBuf.length > 0) {\n            mintBatonVout = bufferToBN().toNumber();\n            PARSE_CHECK(mintBatonVout < 2, \"mint_baton_vout must be at least 2\");\n        }\n        CHECK_NEXT();\n        const additionalQtyBuf = itObj.reverse();\n        PARSE_CHECK(additionalQtyBuf.length !== 8, \"additional_qty must be provided as an 8-byte buffer\");\n        const qty = bufferToBN();\n        const actionData = {\n            tokenId,\n            mintBatonVout,\n            qty\n        };\n        return {\n            tokenType,\n            transactionType,\n            data: actionData\n        };\n    }\n    else if (transactionType === \"SEND\") {\n        PARSE_CHECK(chunks.length < 4, \"wrong number of chunks\");\n        CHECK_NEXT();\n        const tokenId = itObj;\n        PARSE_CHECK(!checkValidTokenId(tokenId), \"tokenId invalid size\");\n        CHECK_NEXT();\n        const amounts = [];\n        while (cit !== chunks.length) {\n            const amountBuf = itObj.reverse();\n            PARSE_CHECK(amountBuf.length !== 8, \"amount string size not 8 bytes\");\n            const value = bufferToBN();\n            amounts.push(value);\n            ++cit;\n            itObj = chunks[cit];\n            it = 0;\n        }\n        PARSE_CHECK(amounts.length === 0, \"token_amounts size is 0\");\n        PARSE_CHECK(amounts.length > 19, \"token_amounts size is greater than 19\");\n        const actionData = {\n            tokenId,\n            amounts\n        };\n        return {\n            tokenType,\n            transactionType,\n            data: actionData\n        };\n    }\n    else {\n        PARSE_CHECK(true, \"unknown action type\");\n    }\n    // unreachable code\n    return {\n        tokenType,\n        transactionType,\n        data: {}\n    };\n};\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/slp-parser/dist/index.js?");

/***/ }),

/***/ "../../node_modules/stream-browserify/index.js":
/*!*****************************************************!*\
  !*** ../../node_modules/stream-browserify/index.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = (__webpack_require__(/*! events */ \"../../node_modules/events/events.js\").EventEmitter);\nvar inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\");\n\ninherits(Stream, EE);\nStream.Readable = __webpack_require__(/*! readable-stream/lib/_stream_readable.js */ \"../../node_modules/readable-stream/lib/_stream_readable.js\");\nStream.Writable = __webpack_require__(/*! readable-stream/lib/_stream_writable.js */ \"../../node_modules/readable-stream/lib/_stream_writable.js\");\nStream.Duplex = __webpack_require__(/*! readable-stream/lib/_stream_duplex.js */ \"../../node_modules/readable-stream/lib/_stream_duplex.js\");\nStream.Transform = __webpack_require__(/*! readable-stream/lib/_stream_transform.js */ \"../../node_modules/readable-stream/lib/_stream_transform.js\");\nStream.PassThrough = __webpack_require__(/*! readable-stream/lib/_stream_passthrough.js */ \"../../node_modules/readable-stream/lib/_stream_passthrough.js\");\nStream.finished = __webpack_require__(/*! readable-stream/lib/internal/streams/end-of-stream.js */ \"../../node_modules/readable-stream/lib/internal/streams/end-of-stream.js\")\nStream.pipeline = __webpack_require__(/*! readable-stream/lib/internal/streams/pipeline.js */ \"../../node_modules/readable-stream/lib/internal/streams/pipeline.js\")\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/stream-browserify/index.js?");

/***/ }),

/***/ "../../node_modules/string_decoder/index.js":
/*!**************************************************!*\
  !*** ../../node_modules/string_decoder/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = (__webpack_require__(/*! buffer */ \"../../node_modules/buffer/index.js\").Buffer);\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/string_decoder/index.js?");

/***/ }),

/***/ "./src/chain.ts":
/*!**********************!*\
  !*** ./src/chain.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bchParam\": () => (/* binding */ bchParam)\n/* harmony export */ });\nconst bchParam = {\n    subUnits: 100000000,\n};\n\n\n//# sourceURL=webpack://mainnet-js/./src/chain.ts?");

/***/ }),

/***/ "./src/config.ts":
/*!***********************!*\
  !*** ./src/config.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Config\": () => (/* binding */ Config)\n/* harmony export */ });\nclass Config {\n}\n// enforces all token-related methods to specify tokenaddr as recepient and change cashaddr\nConfig.EnforceCashTokenReceiptAddresses = false;\nConfig.DefaultParentDerivationPath = \"m/44'/0'/0'\";\n\n\n//# sourceURL=webpack://mainnet-js/./src/config.ts?");

/***/ }),

/***/ "./src/constant.ts":
/*!*************************!*\
  !*** ./src/constant.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DELIMITER\": () => (/* binding */ DELIMITER),\n/* harmony export */   \"DERIVATION_PATHS\": () => (/* binding */ DERIVATION_PATHS),\n/* harmony export */   \"DUST_UTXO_THRESHOLD\": () => (/* binding */ DUST_UTXO_THRESHOLD),\n/* harmony export */   \"EXCHANGE_RATE_TTL\": () => (/* binding */ EXCHANGE_RATE_TTL),\n/* harmony export */   \"MEMPOOL_CHAIN_LIMIT\": () => (/* binding */ MEMPOOL_CHAIN_LIMIT)\n/* harmony export */ });\nconst DELIMITER = \":\";\n// Min amount utxo can be to be accepted by the network\nconst DUST_UTXO_THRESHOLD = 546;\n// Current chained tx limit\nconst MEMPOOL_CHAIN_LIMIT = 50;\n// time in milliseconds to cache the usd exchange rate\nconst EXCHANGE_RATE_TTL = 250000;\n// list of common derivation paths\n// a la: https://github.com/Electron-Cash/Electron-Cash/blob/1de24c509992cfebc22217a2a77c862c2b02bc54/electroncash_gui/qt/installwizard.py#L624\nconst DERIVATION_PATHS = [\n    \"m/0\",\n    \"m/0'\",\n    \"m/0'/0\",\n    \"m/0'/0'\",\n    \"m/0'/0'/0'\",\n    \"m/44'/0'/0'\",\n    \"m/44'/0'/0'/0\",\n    \"m/44'/145'/0'\",\n    \"m/44'/145'/0'/0\",\n    \"m/44'/245'/0\",\n    \"m/44'/245'/0'\",\n    \"m/44'/245'/0'/0\",\n];\n\n\n//# sourceURL=webpack://mainnet-js/./src/constant.ts?");

/***/ }),

/***/ "./src/db/ExchangeRateProvider.ts":
/*!****************************************!*\
  !*** ./src/db/ExchangeRateProvider.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ExchangeRateProvider)\n/* harmony export */ });\n/* harmony import */ var dexie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dexie */ \"../../node_modules/dexie/dist/modern/dexie.mjs\");\n\nclass ExchangeRateProvider extends dexie__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(\"exchange-rate\");\n        this.version(3).stores({\n            rate: \"symbol\",\n        });\n        this.fx = this.table(\"rate\");\n    }\n    async init() {\n        return this;\n    }\n    async close() {\n        return this;\n    }\n    getInfo() {\n        return \"indexedDB\";\n    }\n    /*\n     *   Exchange Rate functions\n     */\n    async getRate(symbol) {\n        let obj = await this.fx.get({ symbol: symbol });\n        if (obj) {\n            return obj;\n        }\n        else {\n            return;\n        }\n    }\n    async setRate(symbol, rate, ttl) {\n        return this.transaction(\"rw\", this.fx, async () => {\n            // Add or replace the existing entry\n            await this.fx.put({ symbol: symbol, rate: rate, ttl: ttl }).catch((e) => {\n                throw Error(e);\n            });\n            return true;\n        });\n    }\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/db/ExchangeRateProvider.ts?");

/***/ }),

/***/ "./src/db/IndexedDBProvider.ts":
/*!*************************************!*\
  !*** ./src/db/IndexedDBProvider.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IndexedDBProvider)\n/* harmony export */ });\n/* harmony import */ var dexie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dexie */ \"../../node_modules/dexie/dist/modern/dexie.mjs\");\n\nclass IndexedDBProvider extends dexie__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(dbName) {\n        super(dbName);\n        this.version(3).stores({\n            wallet: \"name\",\n        });\n        this.db = this.table(\"wallet\");\n    }\n    async init() {\n        return this;\n    }\n    async close() {\n        return this;\n    }\n    getInfo() {\n        return \"indexedDB\";\n    }\n    async addWallet(name, walletId) {\n        return this.transaction(\"rw\", this.db, async () => {\n            if ((await this.db.where({ name: name }).count()) === 0) {\n                await this.db.add({ name: name, wallet: walletId }).catch((e) => {\n                    throw Error(e);\n                });\n                return true;\n            }\n            else {\n                return false;\n            }\n        }).catch((e) => {\n            throw e.stack || e;\n        });\n    }\n    async getWallet(name) {\n        let obj = await this.db.get({ name: name });\n        if (obj) {\n            return obj;\n        }\n        else {\n            return;\n        }\n    }\n    async getWallets() {\n        let walletObjects = await this.transaction(\"r\", this.db, async () => {\n            return await this.db.where(\"id\").above(0).toArray();\n        });\n        if (walletObjects) {\n            const WalletArray = await Promise.all(walletObjects.map(async (obj) => {\n                return obj;\n            }));\n            return WalletArray;\n        }\n        else {\n            return [];\n        }\n    }\n    async updateWallet(name, walletId) {\n        this.transaction(\"rw\", this.db, async () => {\n            const collection = this.db.where({ name: name });\n            if ((await collection.count()) === 0) {\n                return false;\n            }\n            else {\n                const wallet = (await collection.first());\n                await this.db\n                    .put({ id: wallet.id, name: name, wallet: walletId }, wallet.id)\n                    .catch((e) => {\n                    throw Error(e);\n                });\n                return true;\n            }\n        }).catch((e) => {\n            throw e.stack || e;\n        });\n    }\n    async walletExists(name) {\n        return (await this.getWallet(name)) !== undefined;\n    }\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/db/IndexedDBProvider.ts?");

/***/ }),

/***/ "./src/db/SqlProvider.ts":
/*!*******************************!*\
  !*** ./src/db/SqlProvider.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SqlProvider)\n/* harmony export */ });\n/* harmony import */ var _webhook_Webhook_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../webhook/Webhook.js */ \"./src/webhook/Webhook.ts\");\n/* harmony import */ var _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/bchaddr.js */ \"../../node_modules/bchaddrjs-slp/src/bchaddr.js\");\n/* harmony import */ var _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util.js */ \"./src/db/util.ts\");\n/* harmony import */ var parse_database_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! parse-database-url */ \"?a3a2\");\n/* harmony import */ var parse_database_url__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(parse_database_url__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pg */ \"?0b82\");\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(pg__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var pg_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pg-format */ \"?28a0\");\n/* harmony import */ var pg_format__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(pg_format__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n\n\nclass SqlProvider {\n    constructor(walletTable) {\n        this.webhookTable = \"webhook\";\n        this.faucetQueueTable = \"faucet_queue\";\n        this.isInit = false;\n        this.walletTable = walletTable ? walletTable : \"wallet\";\n        if (!process.env.DATABASE_URL) {\n            throw new Error(\"Named wallets and webhooks require a postgres DATABASE_URL environment variable to be set\");\n        }\n        let dbConfig = parse_database_url__WEBPACK_IMPORTED_MODULE_0___default()(process.env.DATABASE_URL);\n        let ssl = (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.getSslConfig)();\n        if (ssl) {\n            dbConfig.ssl = ssl;\n        }\n        this.config = dbConfig;\n        const Pool = (pg__WEBPACK_IMPORTED_MODULE_1___default().Pool);\n        this.db = new Pool(dbConfig);\n        this.formatter = (pg_format__WEBPACK_IMPORTED_MODULE_2___default());\n    }\n    getConfig() {\n        return this.config;\n    }\n    async init() {\n        if (!this.isInit) {\n            this.isInit = true;\n            await this.db;\n            await this.formatter;\n            let createWalletTable = this.formatter(\"CREATE TABLE IF NOT EXISTS %I (id SERIAL, name TEXT PRIMARY KEY, wallet TEXT );\", this.walletTable);\n            const resWallet = await this.db.query(createWalletTable);\n            let createWebhookTable = this.formatter(\"CREATE TABLE IF NOT EXISTS %I (\" +\n                \"id SERIAL PRIMARY KEY,\" +\n                \"cashaddr TEXT,\" +\n                \"type TEXT,\" +\n                \"recurrence TEXT,\" +\n                \"url TEXT,\" +\n                \"status TEXT,\" +\n                \"tx_seen JSON,\" +\n                \"last_height INTEGER,\" +\n                \"token_id TEXT,\" +\n                \"expires_at TIMESTAMPTZ\" +\n                \");\", this.webhookTable);\n            const resWebhook = await this.db.query(createWebhookTable);\n            let createFaucetQueueTable = this.formatter(\"CREATE TABLE IF NOT EXISTS %I (\" +\n                \"id SERIAL PRIMARY KEY,\" +\n                \"address TEXT,\" +\n                \"token TEXT,\" +\n                \"value TEXT\" +\n                \");\", this.faucetQueueTable);\n            const resFaucetQueue = await this.db.query(createFaucetQueueTable);\n            if (!resWallet || !resWebhook || !resFaucetQueue)\n                throw new Error(\"Failed to init SqlProvider\");\n        }\n        return this;\n    }\n    async close() {\n        await this.db.end();\n        return this;\n    }\n    getInfo() {\n        return this.info;\n    }\n    async addWallet(name, walletId) {\n        let text = this.formatter(\"INSERT into %I (name,wallet) VALUES ($1, $2);\", this.walletTable);\n        return await this.db.query(text, [name, walletId]);\n    }\n    async getWallets() {\n        let text = this.formatter(\"SELECT * FROM %I;\", this.walletTable);\n        let result = await this.db.query(text);\n        if (result) {\n            const WalletArray = await Promise.all(result.rows.map(async (obj) => {\n                return obj;\n            }));\n            return WalletArray;\n        }\n        else {\n            return [];\n        }\n    }\n    async getWallet(name) {\n        let text = this.formatter(\"SELECT * FROM %I WHERE name = $1;\", this.walletTable);\n        let result = await this.db.query(text, [name]);\n        let w = result.rows[0];\n        return w;\n    }\n    async updateWallet(name, walletId) {\n        let text = this.formatter(\"UPDATE %I SET wallet = $1 WHERE name = $2;\", this.walletTable);\n        await this.db.query(text, [walletId, name]);\n    }\n    async walletExists(name) {\n        return (await this.getWallet(name)) !== undefined;\n    }\n    async webhookFromDb(hook) {\n        // map tokenId field from postgres\n        hook.tokenId = hook.token_id;\n        delete hook.token_id;\n        if (hook.type.indexOf(\"slp\") === 0) {\n            const { WebhookSlp } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../webhook/WebhookSlp.js */ \"./src/webhook/WebhookSlp.ts\"));\n            return new WebhookSlp(hook);\n        }\n        else if ((0,_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_4__.isCashAddress)(hook.cashaddr)) {\n            const { WebhookBch } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../webhook/WebhookBch.js */ \"./src/webhook/WebhookBch.ts\"));\n            return new WebhookBch(hook);\n        }\n        throw new Error(`Unsupported or incorrect hook address ${hook.cashaddr}`);\n    }\n    async addWebhook(params) {\n        // init db if it was not, useful for external api calls\n        await this.init();\n        params.type = params.type || _webhook_Webhook_js__WEBPACK_IMPORTED_MODULE_5__.WebhookType.transactionInOut;\n        params.recurrence = params.recurrence || _webhook_Webhook_js__WEBPACK_IMPORTED_MODULE_5__.WebhookRecurrence.once;\n        const expireTimeout = Number(process.env.WEBHOOK_EXPIRE_TIMEOUT_SECONDS) || 86400;\n        params.duration_sec = params.duration_sec || expireTimeout;\n        params.duration_sec =\n            params.duration_sec > expireTimeout ? expireTimeout : params.duration_sec;\n        params.tokenId = params.tokenId || \"\";\n        if (params.type.indexOf(\"slp\") === 0 && !params.tokenId) {\n            throw new Error(\"'tokenId' parameter is required for SLP webhooks\");\n        }\n        const expires_at = new Date(new Date().getTime() + params.duration_sec * 1000);\n        let text = this.formatter(\"INSERT into %I (cashaddr,type,recurrence,url,status,tx_seen,last_height,token_id,expires_at) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9) RETURNING *;\", this.webhookTable);\n        const result = await this.db.query(text, [\n            params.cashaddr,\n            params.type,\n            params.recurrence,\n            params.url,\n            \"\",\n            \"[]\",\n            0,\n            params.tokenId,\n            expires_at.toISOString(),\n        ]);\n        const hook = await this.webhookFromDb(result.rows[0]);\n        hook.db = this;\n        return hook;\n    }\n    async getWebhooks() {\n        let text = this.formatter(\"SELECT * FROM %I;\", this.webhookTable);\n        let result = await this.db.query(text);\n        if (result) {\n            const WebhookArray = await Promise.all(result.rows.map(async (obj) => {\n                obj = await this.webhookFromDb(obj);\n                obj.db = this;\n                return obj;\n            }));\n            return WebhookArray;\n        }\n        else {\n            return [];\n        }\n    }\n    async getWebhook(id) {\n        const text = this.formatter(\"SELECT * FROM %I WHERE id = $1;\", this.webhookTable);\n        const result = await this.db.query(text, [id]);\n        let hook = result.rows[0];\n        if (hook) {\n            hook = this.webhookFromDb(hook);\n            hook.db = this;\n        }\n        return hook;\n    }\n    async setWebhookStatus(id, status) {\n        let text = this.formatter(\"UPDATE %I SET status = $1 WHERE id = $2;\", this.webhookTable);\n        await this.db.query(text, [status, id]);\n    }\n    async setWebhookSeenTxLastHeight(id, tx_seen, last_height) {\n        let text = this.formatter(\"UPDATE %I SET tx_seen = $1, last_height = $2 WHERE id = $3;\", this.webhookTable);\n        await this.db.query(text, [JSON.stringify(tx_seen), last_height, id]);\n    }\n    async deleteWebhook(id) {\n        let text = this.formatter(\"DELETE FROM %I WHERE id = $1;\", this.webhookTable);\n        await this.db.query(text, [id]);\n    }\n    async clearWebhooks() {\n        let text = this.formatter(\"DELETE FROM %I;\", this.webhookTable);\n        await this.db.query(text);\n    }\n    async addFaucetQueueItem(address, tokenId, value) {\n        let text = this.formatter(\"INSERT into %I (address,token,value) VALUES ($1, $2, $3);\", this.faucetQueueTable);\n        return await this.db.query(text, [address, tokenId, value]);\n    }\n    async getFaucetQueue() {\n        let text = this.formatter(\"SELECT * FROM %I;\", this.faucetQueueTable);\n        let result = await this.db.query(text);\n        if (result) {\n            const FaucetQueueItemArray = await Promise.all(result.rows.map(async (obj) => {\n                return obj;\n            }));\n            return FaucetQueueItemArray;\n        }\n        else {\n            return [];\n        }\n    }\n    async deleteFaucetQueueItems(items) {\n        const ids = items.map((val) => val.id);\n        let text = this.formatter(\"DELETE FROM %I WHERE id IN (%L);\", this.faucetQueueTable, ids);\n        let result = await this.db.query(text);\n        return result;\n    }\n    async beginTransaction() {\n        return await this.db.query(\"BEGIN\");\n    }\n    async commitTransaction() {\n        return await this.db.query(\"COMMIT\");\n    }\n    async rollbackTransaction() {\n        return await this.db.query(\"ROLLBACK\");\n    }\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/db/SqlProvider.ts?");

/***/ }),

/***/ "./src/db/getStorageProvider.ts":
/*!**************************************!*\
  !*** ./src/db/getStorageProvider.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getStorageProvider\": () => (/* binding */ getStorageProvider)\n/* harmony export */ });\n/* harmony import */ var _util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/getRuntimePlatform.js */ \"./src/util/getRuntimePlatform.ts\");\n/* harmony import */ var _IndexedDBProvider_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IndexedDBProvider.js */ \"./src/db/IndexedDBProvider.ts\");\n/* harmony import */ var _SqlProvider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SqlProvider.js */ \"./src/db/SqlProvider.ts\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ \"./src/db/util.ts\");\n\n\n\n\nfunction getStorageProvider(dbName) {\n    if ((0,_util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_0__.getRuntimePlatform)() !== \"node\" && (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.indexedDbIsAvailable)()) {\n        return new _IndexedDBProvider_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](dbName);\n    }\n    else {\n        if (\"DATABASE_URL\" in process.env) {\n            return new _SqlProvider_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](dbName);\n        }\n        else {\n            console.warn(\"DATABASE_URL was not configured, storage unavailable\");\n            return;\n        }\n    }\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/db/getStorageProvider.ts?");

/***/ }),

/***/ "./src/db/index.ts":
/*!*************************!*\
  !*** ./src/db/index.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IndexedDBProvider\": () => (/* reexport safe */ _IndexedDBProvider_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   \"SqlProvider\": () => (/* reexport safe */ _SqlProvider_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _IndexedDBProvider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./IndexedDBProvider.js */ \"./src/db/IndexedDBProvider.ts\");\n/* harmony import */ var _SqlProvider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SqlProvider.js */ \"./src/db/SqlProvider.ts\");\n\n\n\n\n//# sourceURL=webpack://mainnet-js/./src/db/index.ts?");

/***/ }),

/***/ "./src/db/util.ts":
/*!************************!*\
  !*** ./src/db/util.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getSslConfig\": () => (/* binding */ getSslConfig),\n/* harmony export */   \"indexedDbIsAvailable\": () => (/* binding */ indexedDbIsAvailable)\n/* harmony export */ });\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"../../node_modules/buffer/index.js\")[\"Buffer\"];\nfunction indexedDbIsAvailable() {\n    return \"indexedDB\" in globalThis;\n}\nfunction getSslConfig() {\n    const ca = process.env.DATABASE_SSL_CA\n        ? Buffer.from(process.env.DATABASE_SSL_CA, \"base64\").toString(\"ascii\")\n        : undefined;\n    const key = process.env.DATABASE_SSL_KEY\n        ? Buffer.from(process.env.DATABASE_SSL_KEY, \"base64\").toString(\"ascii\")\n        : undefined;\n    const cert = process.env.DATABASE_SSL_CERT\n        ? Buffer.from(process.env.DATABASE_SSL_CERT, \"base64\").toString(\"ascii\")\n        : undefined;\n    let ssl = {\n        rejectUnauthorized: process.env.DATABASE_SSL_REJECT_UNAUTHORIZED == \"false\" ? false : true,\n        ca: ca,\n        key: key,\n        cert: cert,\n    };\n    if (ssl.ca || ssl.cert || ssl.key) {\n        return ssl;\n    }\n    else {\n        return;\n    }\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/db/util.ts?");

/***/ }),

/***/ "./src/enum.ts":
/*!*********************!*\
  !*** ./src/enum.ts ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NetworkType\": () => (/* binding */ NetworkType),\n/* harmony export */   \"UnitEnum\": () => (/* binding */ UnitEnum),\n/* harmony export */   \"networkPrefixMap\": () => (/* binding */ networkPrefixMap),\n/* harmony export */   \"prefixFromNetworkMap\": () => (/* binding */ prefixFromNetworkMap)\n/* harmony export */ });\n/* unused harmony export NetworkEnum */\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/address/cash-address.js\");\n\nvar NetworkType;\n(function (NetworkType) {\n    NetworkType[\"Mainnet\"] = \"mainnet\";\n    NetworkType[\"Testnet\"] = \"testnet\";\n    NetworkType[\"Regtest\"] = \"regtest\";\n})(NetworkType || (NetworkType = {}));\nvar NetworkEnum;\n(function (NetworkEnum) {\n    NetworkEnum[NetworkEnum[\"Mainnet\"] = \"mainnet\"] = \"Mainnet\";\n    NetworkEnum[NetworkEnum[\"Testnet\"] = \"testnet\"] = \"Testnet\";\n    NetworkEnum[NetworkEnum[\"Regtest\"] = \"regtest\"] = \"Regtest\";\n    NetworkEnum[NetworkEnum[\"Simtest\"] = \"simtest\"] = \"Simtest\";\n})(NetworkEnum || (NetworkEnum = {}));\nconst networkPrefixMap = {\n    bitcoincash: \"mainnet\",\n    bchtest: \"testnet\",\n    bchreg: \"regtest\",\n};\nconst prefixFromNetworkMap = {\n    mainnet: _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.CashAddressNetworkPrefix.mainnet,\n    testnet: _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.CashAddressNetworkPrefix.testnet,\n    regtest: _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.CashAddressNetworkPrefix.regtest,\n};\nconst literal = (l) => l;\nconst UnitEnum = {\n    BCH: literal(\"bch\"),\n    USD: literal(\"usd\"),\n    BIT: literal(\"bit\"),\n    BITS: literal(\"bits\"),\n    SAT: literal(\"sat\"),\n    SATS: literal(\"sats\"),\n    SATOSHI: literal(\"satoshi\"),\n    SATOSHIS: literal(\"satoshis\"),\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/enum.ts?");

/***/ }),

/***/ "./src/history/electrumTransformer.ts":
/*!********************************************!*\
  !*** ./src/history/electrumTransformer.ts ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAddressHistory\": () => (/* binding */ getAddressHistory)\n/* harmony export */ });\n/* unused harmony export getDetailedHistory */\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/address/locking-bytecode.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/message/transaction-encoding.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/derivePublicKeyHash.js */ \"./src/util/derivePublicKeyHash.ts\");\n/* harmony import */ var _util_convert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/convert.js */ \"./src/util/convert.ts\");\n/* harmony import */ var _chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chain.js */ \"./src/chain.ts\");\n/* harmony import */ var _util_floor_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/floor.js */ \"./src/util/floor.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_util_convert_js__WEBPACK_IMPORTED_MODULE_0__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__, _util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_5__]);\n([_util_convert_js__WEBPACK_IMPORTED_MODULE_0__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__, _util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nasync function getAddressHistory(cashaddr, provider, unit = \"sat\", start = 0, count = 25, collapseChange = true) {\n    // Get an array of raw transactions as hex\n    let txnHashes = await provider.getHistory(cashaddr);\n    // Assume transaction hashes will be served in chronological order\n    // Slice count in from the end and count to the provided inputs\n    let len = txnHashes.length;\n    txnHashes = txnHashes.slice(len - start - count, len - start);\n    // get the current balance in satoshis\n    let currentBalance = await provider.getBalance(cashaddr);\n    // Transform the hex transactions to and array of histroy item array promises.\n    let txItemPromises = txnHashes.map((tx) => {\n        return getDetailedHistory(cashaddr, tx.tx_hash, tx.height, provider, collapseChange);\n    });\n    // await the history array promises\n    let items = await Promise.all(txItemPromises);\n    // flatten the array of responses\n    let preprocessedTxns = Array.prototype.concat.apply([], items);\n    // Reverse chronological order (again), so list appear as newest first.\n    preprocessedTxns = preprocessedTxns.reverse();\n    // Get the factor to apply the requested unit of measure\n    let factor = (await (0,_util_convert_js__WEBPACK_IMPORTED_MODULE_0__.convert)(_chain_js__WEBPACK_IMPORTED_MODULE_1__.bchParam.subUnits, \"sat\", unit)) / _chain_js__WEBPACK_IMPORTED_MODULE_1__.bchParam.subUnits;\n    // Apply the unit factor and\n    let txns = applyBalance(preprocessedTxns, currentBalance, unit, factor);\n    return {\n        transactions: txns,\n    };\n}\nasync function getDetailedHistory(cashaddr, hash, height, provider, collapseChange) {\n    let transactionHex = await provider.getRawTransaction(hash);\n    collapseChange;\n    let addressBytecode = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.cashAddressToLockingBytecode)(cashaddr);\n    if (typeof addressBytecode === \"string\")\n        throw Error(addressBytecode);\n    let transaction = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.decodeTransaction)((0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.hexToBin)(transactionHex));\n    if (typeof transaction === \"string\")\n        throw Error(transaction);\n    let r = [];\n    r.push(...(await getMatchingInputs(transaction, cashaddr, height, hash, provider, collapseChange)));\n    return r;\n}\nasync function getMatchingInputs(transaction, cashaddr, height, hash, provider, collapseChange) {\n    let addressBytecode = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.cashAddressToLockingBytecode)(cashaddr);\n    if (typeof addressBytecode === \"string\")\n        throw Error(addressBytecode);\n    let lockingBytecodeHex = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToHex)(addressBytecode.bytecode);\n    let prefix = (0,_util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_5__.derivePrefix)(cashaddr);\n    let inputUtxos = await getInputTransactions(transaction, provider);\n    let fee = getFee(inputUtxos, transaction.outputs, lockingBytecodeHex, collapseChange);\n    let r = [];\n    let txIds = [];\n    for (let input of transaction.inputs) {\n        let outpoint = inputUtxos[transaction.inputs.indexOf(input)];\n        // if the utxo of the input matches the address in question\n        if ((0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToHex)(outpoint.lockingBytecode) === lockingBytecodeHex) {\n            for (let output of transaction.outputs) {\n                let idx = transaction.outputs.indexOf(output);\n                let from = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.lockingBytecodeToCashAddress)(outpoint.lockingBytecode, prefix);\n                // the output was change\n                if ((0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToHex)(output.lockingBytecode) === lockingBytecodeHex) {\n                    if (!collapseChange) {\n                        r.push({\n                            from: from,\n                            to: cashaddr,\n                            unit: \"sat\",\n                            index: idx,\n                            blockheight: height,\n                            txn: `${hash}`,\n                            txId: `${hash}:i:${idx}`,\n                            value: -Number(output.valueSatoshis),\n                            fee: 0,\n                        });\n                    }\n                }\n                else {\n                    if (!txIds.find((str) => str === `${hash}:i:${idx}`)) {\n                        // the utxo was sent to another address\n                        let to = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.lockingBytecodeToCashAddress)(output.lockingBytecode, prefix);\n                        r.push({\n                            from: from,\n                            to: to,\n                            unit: \"sat\",\n                            index: idx,\n                            blockheight: height,\n                            txn: `${hash}`,\n                            txId: `${hash}:i:${idx}`,\n                            value: -Number(output.valueSatoshis),\n                            fee: fee,\n                        });\n                        txIds.push(`${hash}:i:${idx}`);\n                    }\n                }\n            }\n        }\n    }\n    // check the transaction outputs for receiving transactions\n    for (let output of transaction.outputs) {\n        // the output was a utxo for the address in question\n        if ((0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToHex)(output.lockingBytecode) === lockingBytecodeHex) {\n            // the input was from a single address\n            if (transaction.inputs.length == 1) {\n                const input = transaction.inputs[0];\n                const inHash = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToHex)(input.outpointTransactionHash);\n                const transactionHex = await provider.getRawTransaction(inHash);\n                const inTransaction = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.decodeTransaction)((0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.hexToBin)(transactionHex));\n                if (typeof inTransaction === \"string\")\n                    throw Error(inTransaction);\n                let outpoint = inTransaction.outputs[input.outpointIndex];\n                let from = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.lockingBytecodeToCashAddress)(outpoint.lockingBytecode, prefix);\n                // if the utxo was from a different address and change is not being output...\n                if (from !== cashaddr || !collapseChange) {\n                    r.push({\n                        from: from,\n                        to: cashaddr,\n                        unit: \"sat\",\n                        index: transaction.outputs.indexOf(output),\n                        blockheight: height,\n                        txn: `${hash}`,\n                        txId: `${hash}:o:${transaction.outputs.indexOf(output)}`,\n                        value: Number(output.valueSatoshis),\n                    });\n                }\n            }\n            else {\n                let from = transaction.inputs\n                    .map((i) => `${(0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToHex)(i.outpointTransactionHash)}:o:${i.outpointIndex}`)\n                    .join(\";\");\n                r.push({\n                    from: from,\n                    to: cashaddr,\n                    unit: \"sat\",\n                    index: transaction.outputs.indexOf(output),\n                    blockheight: height,\n                    txn: `${hash}`,\n                    txId: `${hash}:o:${transaction.outputs.indexOf(output)}`,\n                    value: Number(output.valueSatoshis),\n                    // incoming transactions pay no fee.\n                    fee: 0,\n                });\n            }\n        }\n    }\n    return r;\n}\nasync function getInputTransactions(transaction, provider) {\n    let inputTransactions = [];\n    for (let input of transaction.inputs) {\n        let inHash = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToHex)(input.outpointTransactionHash);\n        let transactionHex = await provider.getRawTransaction(inHash);\n        let inTransaction = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.decodeTransaction)((0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.hexToBin)(transactionHex));\n        if (typeof inTransaction === \"string\")\n            throw Error(inTransaction);\n        inputTransactions.push(inTransaction.outputs[input.outpointIndex]);\n    }\n    return inputTransactions;\n}\nfunction getFee(inputUtxos, utxos, lockingBytecodeHex, collapseChange) {\n    let inValues = 0;\n    for (let outpoint of inputUtxos) {\n        if ((0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToHex)(outpoint.lockingBytecode)) {\n            inValues += Number(outpoint.valueSatoshis);\n        }\n    }\n    const outValues = utxos\n        .map((utxo) => Number(utxo.valueSatoshis))\n        .reduce((a, b) => a + b, 0);\n    let fee = 0;\n    if (collapseChange) {\n        const nonChangeOutputs = utxos\n            .map((output) => (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToHex)(output.lockingBytecode) === lockingBytecodeHex ? 0 : 1)\n            .reduce((a, b) => a + b, 0);\n        fee = (0,_util_floor_js__WEBPACK_IMPORTED_MODULE_6__.floor)((inValues - outValues) / nonChangeOutputs, 0);\n    }\n    else {\n        fee = (0,_util_floor_js__WEBPACK_IMPORTED_MODULE_6__.floor)((inValues - outValues) / utxos.length, 0);\n    }\n    return fee;\n}\nfunction applyBalance(preprocessedTxns, currentBalance, unit, factor) {\n    // balance in satoshis\n    let bal = currentBalance;\n    let r = [];\n    for (let txn of preprocessedTxns) {\n        // set the balance to the current balance in the appropriate unit\n        txn.balance = bal;\n        // If fee is not defined, configure it to zero.\n        txn.fee = txn.fee ? txn.fee : 0;\n        // update the running balance in satoshis for the next record\n        // a receiving value is positive, a send is negative\n        // The sign is reversed in cronological order from the current balance.\n        bal -= txn.value;\n        bal += txn.fee;\n        // transform the value of the transaction\n        txn.value = txn.value * factor;\n        txn.fee = txn.fee * factor;\n        // If unit is usd, round to two decimal places.\n        if (unit.toLowerCase() == \"usd\") {\n            txn.value = (0,_util_floor_js__WEBPACK_IMPORTED_MODULE_6__.floor)(txn.value, 2);\n            txn.fee = (0,_util_floor_js__WEBPACK_IMPORTED_MODULE_6__.floor)(txn.fee, 2);\n        }\n        // note the unit\n        txn.unit = unit;\n        r.push(txn);\n    }\n    return r;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/history/electrumTransformer.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BCMR\": () => (/* reexport safe */ _wallet_Bcmr_js__WEBPACK_IMPORTED_MODULE_6__.BCMR),\n/* harmony export */   \"BalanceResponse\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.BalanceResponse),\n/* harmony export */   \"BaseWallet\": () => (/* reexport safe */ _wallet_Base_js__WEBPACK_IMPORTED_MODULE_9__.BaseWallet),\n/* harmony export */   \"BigNumber\": () => (/* reexport safe */ _slp_index_js__WEBPACK_IMPORTED_MODULE_2__.BigNumber),\n/* harmony export */   \"CONST\": () => (/* reexport module object */ _constant_js__WEBPACK_IMPORTED_MODULE_20__),\n/* harmony export */   \"Config\": () => (/* reexport safe */ _config_js__WEBPACK_IMPORTED_MODULE_13__.Config),\n/* harmony export */   \"Connection\": () => (/* reexport safe */ _network_index_js__WEBPACK_IMPORTED_MODULE_7__.Connection),\n/* harmony export */   \"DefaultProvider\": () => (/* reexport safe */ _network_configuration_js__WEBPACK_IMPORTED_MODULE_12__.DefaultProvider),\n/* harmony export */   \"ElectrumNetworkProvider\": () => (/* reexport safe */ _network_index_js__WEBPACK_IMPORTED_MODULE_7__.ElectrumNetworkProvider),\n/* harmony export */   \"ExchangeRate\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.ExchangeRate),\n/* harmony export */   \"GsppProvider\": () => (/* reexport safe */ _slp_index_js__WEBPACK_IMPORTED_MODULE_2__.GsppProvider),\n/* harmony export */   \"IndexedDBProvider\": () => (/* reexport safe */ _db_index_js__WEBPACK_IMPORTED_MODULE_0__.IndexedDBProvider),\n/* harmony export */   \"Mainnet\": () => (/* reexport module object */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__),\n/* harmony export */   \"NFTCapability\": () => (/* reexport safe */ _interface_js__WEBPACK_IMPORTED_MODULE_21__.NFTCapability),\n/* harmony export */   \"Network\": () => (/* reexport safe */ _interface_js__WEBPACK_IMPORTED_MODULE_21__.Network),\n/* harmony export */   \"NetworkType\": () => (/* reexport safe */ _enum_js__WEBPACK_IMPORTED_MODULE_14__.NetworkType),\n/* harmony export */   \"OpReturnData\": () => (/* reexport safe */ _wallet_model_js__WEBPACK_IMPORTED_MODULE_16__.OpReturnData),\n/* harmony export */   \"RegTestWallet\": () => (/* reexport safe */ _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_10__.RegTestWallet),\n/* harmony export */   \"RegTestWatchWallet\": () => (/* reexport safe */ _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_10__.RegTestWatchWallet),\n/* harmony export */   \"RegTestWifWallet\": () => (/* reexport safe */ _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_10__.RegTestWifWallet),\n/* harmony export */   \"RuntimePlatform\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.RuntimePlatform),\n/* harmony export */   \"SendRequest\": () => (/* reexport safe */ _wallet_model_js__WEBPACK_IMPORTED_MODULE_16__.SendRequest),\n/* harmony export */   \"SendResponse\": () => (/* reexport safe */ _wallet_model_js__WEBPACK_IMPORTED_MODULE_16__.SendResponse),\n/* harmony export */   \"SignedMessage\": () => (/* reexport safe */ _message_signed_js__WEBPACK_IMPORTED_MODULE_8__.SignedMessage),\n/* harmony export */   \"SlpDbProvider\": () => (/* reexport safe */ _slp_index_js__WEBPACK_IMPORTED_MODULE_2__.SlpDbProvider),\n/* harmony export */   \"SlpTokenType\": () => (/* reexport safe */ _slp_index_js__WEBPACK_IMPORTED_MODULE_2__.SlpTokenType),\n/* harmony export */   \"SqlProvider\": () => (/* reexport safe */ _db_index_js__WEBPACK_IMPORTED_MODULE_0__.SqlProvider),\n/* harmony export */   \"TestNetWallet\": () => (/* reexport safe */ _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_10__.TestNetWallet),\n/* harmony export */   \"TestNetWatchWallet\": () => (/* reexport safe */ _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_10__.TestNetWatchWallet),\n/* harmony export */   \"TestNetWifWallet\": () => (/* reexport safe */ _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_10__.TestNetWifWallet),\n/* harmony export */   \"TokenBurnRequest\": () => (/* reexport safe */ _wallet_model_js__WEBPACK_IMPORTED_MODULE_16__.TokenBurnRequest),\n/* harmony export */   \"TokenGenesisRequest\": () => (/* reexport safe */ _wallet_model_js__WEBPACK_IMPORTED_MODULE_16__.TokenGenesisRequest),\n/* harmony export */   \"TokenMintRequest\": () => (/* reexport safe */ _wallet_model_js__WEBPACK_IMPORTED_MODULE_16__.TokenMintRequest),\n/* harmony export */   \"TokenSendRequest\": () => (/* reexport safe */ _wallet_model_js__WEBPACK_IMPORTED_MODULE_16__.TokenSendRequest),\n/* harmony export */   \"UnitEnum\": () => (/* reexport safe */ _enum_js__WEBPACK_IMPORTED_MODULE_14__.UnitEnum),\n/* harmony export */   \"Wallet\": () => (/* reexport safe */ _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_10__.Wallet),\n/* harmony export */   \"WalletTypeEnum\": () => (/* reexport safe */ _wallet_enum_js__WEBPACK_IMPORTED_MODULE_15__.WalletTypeEnum),\n/* harmony export */   \"WatchWallet\": () => (/* reexport safe */ _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_10__.WatchWallet),\n/* harmony export */   \"Webhook\": () => (/* reexport safe */ _webhook_index_js__WEBPACK_IMPORTED_MODULE_5__.Webhook),\n/* harmony export */   \"WebhookBch\": () => (/* reexport safe */ _webhook_index_js__WEBPACK_IMPORTED_MODULE_5__.WebhookBch),\n/* harmony export */   \"WebhookRecurrence\": () => (/* reexport safe */ _webhook_index_js__WEBPACK_IMPORTED_MODULE_5__.WebhookRecurrence),\n/* harmony export */   \"WebhookSlp\": () => (/* reexport safe */ _webhook_index_js__WEBPACK_IMPORTED_MODULE_5__.WebhookSlp),\n/* harmony export */   \"WebhookType\": () => (/* reexport safe */ _webhook_index_js__WEBPACK_IMPORTED_MODULE_5__.WebhookType),\n/* harmony export */   \"WebhookWorker\": () => (/* reexport safe */ _webhook_index_js__WEBPACK_IMPORTED_MODULE_5__.WebhookWorker),\n/* harmony export */   \"WifWallet\": () => (/* reexport safe */ _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_10__.WifWallet),\n/* harmony export */   \"XPubKey\": () => (/* reexport safe */ _wallet_model_js__WEBPACK_IMPORTED_MODULE_16__.XPubKey),\n/* harmony export */   \"amountInSatoshi\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.amountInSatoshi),\n/* harmony export */   \"asSendRequestObject\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.asSendRequestObject),\n/* harmony export */   \"atob\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.atob),\n/* harmony export */   \"balanceFromSatoshi\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.balanceFromSatoshi),\n/* harmony export */   \"balanceResponseFromSatoshi\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.balanceResponseFromSatoshi),\n/* harmony export */   \"binToBase64\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.binToBase64),\n/* harmony export */   \"binToHex\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.binToHex),\n/* harmony export */   \"btoa\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.btoa),\n/* harmony export */   \"checkTokenaddr\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.checkTokenaddr),\n/* harmony export */   \"convert\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.convert),\n/* harmony export */   \"convertObject\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.convertObject),\n/* harmony export */   \"createSlpWallet\": () => (/* reexport safe */ _wallet_createWallet_js__WEBPACK_IMPORTED_MODULE_11__.createSlpWallet),\n/* harmony export */   \"createSlpWalletResponse\": () => (/* reexport safe */ _wallet_createWallet_js__WEBPACK_IMPORTED_MODULE_11__.createSlpWalletResponse),\n/* harmony export */   \"createWallet\": () => (/* reexport safe */ _wallet_createWallet_js__WEBPACK_IMPORTED_MODULE_11__.createWallet),\n/* harmony export */   \"createWalletResponse\": () => (/* reexport safe */ _wallet_createWallet_js__WEBPACK_IMPORTED_MODULE_11__.createWalletResponse),\n/* harmony export */   \"cube\": () => (/* binding */ cube),\n/* harmony export */   \"delay\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.delay),\n/* harmony export */   \"deriveCashaddr\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.deriveCashaddr),\n/* harmony export */   \"derivePublicKeyHash\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.derivePublicKeyHash),\n/* harmony export */   \"deriveTokenaddr\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.deriveTokenaddr),\n/* harmony export */   \"derivedNetwork\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.derivedNetwork),\n/* harmony export */   \"disconnectProviders\": () => (/* reexport safe */ _network_index_js__WEBPACK_IMPORTED_MODULE_7__.disconnectProviders),\n/* harmony export */   \"expect\": () => (/* reexport safe */ _test_expect_js__WEBPACK_IMPORTED_MODULE_3__.expect),\n/* harmony export */   \"fromUtxoId\": () => (/* reexport safe */ _wallet_model_js__WEBPACK_IMPORTED_MODULE_16__.fromUtxoId),\n/* harmony export */   \"getAddrsByXpubKey\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.getAddrsByXpubKey),\n/* harmony export */   \"getAddrsByXpubKeyObject\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.getAddrsByXpubKeyObject),\n/* harmony export */   \"getNetworkProvider\": () => (/* reexport safe */ _network_index_js__WEBPACK_IMPORTED_MODULE_7__.getNetworkProvider),\n/* harmony export */   \"getRandomInt\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.getRandomInt),\n/* harmony export */   \"getRuntimePlatform\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.getRuntimePlatform),\n/* harmony export */   \"getUsdRate\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.getUsdRate),\n/* harmony export */   \"getXPubKey\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.getXPubKey),\n/* harmony export */   \"getXpubKeyInfo\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.getXpubKeyInfo),\n/* harmony export */   \"getXpubKeyInfoObject\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.getXpubKeyInfoObject),\n/* harmony export */   \"hash160\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.hash160),\n/* harmony export */   \"hexToBin\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.hexToBin),\n/* harmony export */   \"initProviders\": () => (/* reexport safe */ _network_index_js__WEBPACK_IMPORTED_MODULE_7__.initProviders),\n/* harmony export */   \"isCashAddress\": () => (/* reexport safe */ _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_22__.isCashAddress),\n/* harmony export */   \"isSlpAddress\": () => (/* reexport safe */ _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_22__.isSlpAddress),\n/* harmony export */   \"isTokenaddr\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.isTokenaddr),\n/* harmony export */   \"isValidAddress\": () => (/* reexport safe */ _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_22__.isValidAddress),\n/* harmony export */   \"libauth\": () => (/* reexport module object */ _libauth_js__WEBPACK_IMPORTED_MODULE_18__),\n/* harmony export */   \"mine\": () => (/* reexport safe */ _mine_index_js__WEBPACK_IMPORTED_MODULE_1__.mine),\n/* harmony export */   \"namedWallet\": () => (/* reexport safe */ _wallet_createWallet_js__WEBPACK_IMPORTED_MODULE_11__.namedWallet),\n/* harmony export */   \"namedWalletExists\": () => (/* reexport safe */ _wallet_createWallet_js__WEBPACK_IMPORTED_MODULE_11__.namedWalletExists),\n/* harmony export */   \"qrAddress\": () => (/* reexport safe */ _qr_Qr_js__WEBPACK_IMPORTED_MODULE_19__.qrAddress),\n/* harmony export */   \"randomValues\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.randomValues),\n/* harmony export */   \"removeAxiosMock\": () => (/* reexport safe */ _test_axios_js__WEBPACK_IMPORTED_MODULE_4__.removeAxiosMock),\n/* harmony export */   \"replaceNamedWallet\": () => (/* reexport safe */ _wallet_createWallet_js__WEBPACK_IMPORTED_MODULE_11__.replaceNamedWallet),\n/* harmony export */   \"sanitizeAddress\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.sanitizeAddress),\n/* harmony export */   \"sanitizeUnit\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.sanitizeUnit),\n/* harmony export */   \"setupAxiosMock\": () => (/* reexport safe */ _test_axios_js__WEBPACK_IMPORTED_MODULE_4__.setupAxiosMock),\n/* harmony export */   \"sha256\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.sha256),\n/* harmony export */   \"sumUtxoValue\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.sumUtxoValue),\n/* harmony export */   \"toCashAddress\": () => (/* reexport safe */ _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_22__.toCashAddress),\n/* harmony export */   \"toCashaddr\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.toCashaddr),\n/* harmony export */   \"toSlpAddress\": () => (/* reexport safe */ _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_22__.toSlpAddress),\n/* harmony export */   \"toTokenaddr\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.toTokenaddr),\n/* harmony export */   \"toUtxoId\": () => (/* reexport safe */ _wallet_model_js__WEBPACK_IMPORTED_MODULE_16__.toUtxoId),\n/* harmony export */   \"utf8ToBin\": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_17__.utf8ToBin),\n/* harmony export */   \"walletClassMap\": () => (/* reexport safe */ _wallet_createWallet_js__WEBPACK_IMPORTED_MODULE_11__.walletClassMap),\n/* harmony export */   \"walletFromId\": () => (/* reexport safe */ _wallet_createWallet_js__WEBPACK_IMPORTED_MODULE_11__.walletFromId)\n/* harmony export */ });\n/* harmony import */ var _db_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./db/index.js */ \"./src/db/index.ts\");\n/* harmony import */ var _mine_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mine/index.js */ \"./src/mine/index.ts\");\n/* harmony import */ var _slp_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./slp/index.js */ \"./src/slp/index.ts\");\n/* harmony import */ var _test_expect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./test/expect.js */ \"./src/test/expect.ts\");\n/* harmony import */ var _test_axios_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./test/axios.js */ \"./src/test/axios.ts\");\n/* harmony import */ var _webhook_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./webhook/index.js */ \"./src/webhook/index.ts\");\n/* harmony import */ var _wallet_Bcmr_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./wallet/Bcmr.js */ \"./src/wallet/Bcmr.ts\");\n/* harmony import */ var _network_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./network/index.js */ \"./src/network/index.ts\");\n/* harmony import */ var _message_signed_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./message/signed.js */ \"./src/message/signed.ts\");\n/* harmony import */ var _wallet_Base_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./wallet/Base.js */ \"./src/wallet/Base.ts\");\n/* harmony import */ var _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./wallet/Wif.js */ \"./src/wallet/Wif.ts\");\n/* harmony import */ var _wallet_createWallet_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./wallet/createWallet.js */ \"./src/wallet/createWallet.ts\");\n/* harmony import */ var _network_configuration_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./network/configuration.js */ \"./src/network/configuration.ts\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./config.js */ \"./src/config.ts\");\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./enum.js */ \"./src/enum.ts\");\n/* harmony import */ var _wallet_enum_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./wallet/enum.js */ \"./src/wallet/enum.ts\");\n/* harmony import */ var _wallet_model_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./wallet/model.js */ \"./src/wallet/model.ts\");\n/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./util/index.js */ \"./src/util/index.ts\");\n/* harmony import */ var _libauth_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./libauth.js */ \"./src/libauth.ts\");\n/* harmony import */ var _qr_Qr_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./qr/Qr.js */ \"./src/qr/Qr.ts\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./constant.js */ \"./src/constant.ts\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./interface.js */ \"./src/interface.ts\");\n/* harmony import */ var _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./util/bchaddr.js */ \"./src/util/bchaddr.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_slp_index_js__WEBPACK_IMPORTED_MODULE_2__, _webhook_index_js__WEBPACK_IMPORTED_MODULE_5__, _wallet_Bcmr_js__WEBPACK_IMPORTED_MODULE_6__, _network_index_js__WEBPACK_IMPORTED_MODULE_7__, _message_signed_js__WEBPACK_IMPORTED_MODULE_8__, _wallet_Base_js__WEBPACK_IMPORTED_MODULE_9__, _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_10__, _wallet_createWallet_js__WEBPACK_IMPORTED_MODULE_11__, _network_configuration_js__WEBPACK_IMPORTED_MODULE_12__, _enum_js__WEBPACK_IMPORTED_MODULE_14__, _wallet_model_js__WEBPACK_IMPORTED_MODULE_16__, _util_index_js__WEBPACK_IMPORTED_MODULE_17__, _libauth_js__WEBPACK_IMPORTED_MODULE_18__, _qr_Qr_js__WEBPACK_IMPORTED_MODULE_19__]);\n([_slp_index_js__WEBPACK_IMPORTED_MODULE_2__, _webhook_index_js__WEBPACK_IMPORTED_MODULE_5__, _wallet_Bcmr_js__WEBPACK_IMPORTED_MODULE_6__, _network_index_js__WEBPACK_IMPORTED_MODULE_7__, _message_signed_js__WEBPACK_IMPORTED_MODULE_8__, _wallet_Base_js__WEBPACK_IMPORTED_MODULE_9__, _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_10__, _wallet_createWallet_js__WEBPACK_IMPORTED_MODULE_11__, _network_configuration_js__WEBPACK_IMPORTED_MODULE_12__, _enum_js__WEBPACK_IMPORTED_MODULE_14__, _wallet_model_js__WEBPACK_IMPORTED_MODULE_16__, _util_index_js__WEBPACK_IMPORTED_MODULE_17__, _libauth_js__WEBPACK_IMPORTED_MODULE_18__, _qr_Qr_js__WEBPACK_IMPORTED_MODULE_19__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\n\n\n// provider\n\n// config\n\n// Enum\n\n\n// models\n\n// utils\n\n\n\n// libauth\n\n// qr\n\n// constants\n\n\n// interfaces\n\n// TODO move this up to util (Mainnet) ?\n\nfunction cube(x) {\n    return x * x * x;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/index.ts?");

/***/ }),

/***/ "./src/interface.ts":
/*!**************************!*\
  !*** ./src/interface.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NFTCapability\": () => (/* binding */ NFTCapability),\n/* harmony export */   \"Network\": () => (/* binding */ Network)\n/* harmony export */ });\n// Weird setup to allow both Enum parameters, as well as literal strings\n// https://stackoverflow.com/questions/51433319/typescript-constructor-accept-string-for-enum\nconst literal = (l) => l;\nconst Network = {\n    MAINNET: literal(\"mainnet\"),\n    TESTNET: literal(\"testnet\"),\n    REGTEST: literal(\"regtest\"),\n};\nconst NFTCapability = {\n    none: literal(\"none\"),\n    mutable: literal(\"mutable\"),\n    minting: literal(\"minting\"),\n};\n\n\n//# sourceURL=webpack://mainnet-js/./src/interface.ts?");

/***/ }),

/***/ "./src/libauth.ts":
/*!************************!*\
  !*** ./src/libauth.ts ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"authenticationTemplateP2pkh\": () => (/* reexport safe */ _bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.authenticationTemplateP2pkh),\n/* harmony export */   \"authenticationTemplateP2pkhNonHd\": () => (/* reexport safe */ _bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.authenticationTemplateP2pkhNonHd),\n/* harmony export */   \"authenticationTemplateToCompilerBCH\": () => (/* reexport safe */ _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.authenticationTemplateToCompilerBCH),\n/* harmony export */   \"cashAddressToLockingBytecode\": () => (/* reexport safe */ _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.cashAddressToLockingBytecode),\n/* harmony export */   \"decodeTransaction\": () => (/* reexport safe */ _bitauth_libauth__WEBPACK_IMPORTED_MODULE_6__.decodeTransaction),\n/* harmony export */   \"encodeTransaction\": () => (/* reexport safe */ _bitauth_libauth__WEBPACK_IMPORTED_MODULE_6__.encodeTransaction),\n/* harmony export */   \"generateTransaction\": () => (/* reexport safe */ _bitauth_libauth__WEBPACK_IMPORTED_MODULE_5__.generateTransaction),\n/* harmony export */   \"hexToBin\": () => (/* reexport safe */ _bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.hexToBin),\n/* harmony export */   \"importAuthenticationTemplate\": () => (/* reexport safe */ _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.importAuthenticationTemplate)\n/* harmony export */ });\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/schema/authentication-template.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/compiler/standard/p2pkh.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-bch/compiler-bch.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/address/locking-bytecode.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/transaction/generate-transaction.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/message/transaction-encoding.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_5__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_6__]);\n([_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_5__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/libauth.ts?");

/***/ }),

/***/ "./src/message/signed.ts":
/*!*******************************!*\
  !*** ./src/message/signed.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SignedMessage\": () => (/* binding */ SignedMessage)\n/* harmony export */ });\n/* unused harmony export hash_message */\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/utf8.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/sha256.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/secp256k1.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/base64.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/address/cash-address.js\");\n/* harmony import */ var _util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/derivePublicKeyHash.js */ \"./src/util/derivePublicKeyHash.ts\");\n/* harmony import */ var _util_hash160_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/hash160.js */ \"./src/util/hash160.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_util_hash160_js__WEBPACK_IMPORTED_MODULE_5__, _util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_6__]);\n([_util_hash160_js__WEBPACK_IMPORTED_MODULE_5__, _util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n/**\n * message_magic - Add \"Magic\", per standard bitcoin message signing.\n *\n * In this case, the magic is simply adding the number 24 as binary \"\\x16\", and \"Bitcoin Signed Message\\n\" followed\n * by the size of the message in binary followed by the message encoded as binary.\n *\n * @param {str} string    The string to add the magic syntax to.\n *\n * @returns a promise to the string as binary array with magic syntax\n */\n// see    https://github.com/Electron-Cash/Electron-Cash/blob/49f9f672364f50053a026e4a5cb30e92db2d195d/electroncash/bitcoin.py#L524\nfunction message_magic(str) {\n    const length = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.utf8ToBin)(str).length.toString(16);\n    let payload = `\\x18Bitcoin Signed Message:\\n`;\n    return new Uint8Array([\n        ...(0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.utf8ToBin)(payload),\n        ...(0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.hexToBin)(length),\n        ...(0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.utf8ToBin)(str),\n    ]);\n}\n/**\n * hash_magic - Return the hash of the string that has undergone standard formatting\n *\n * @param {str} string    The string to hash\n *\n * @returns a promise to the hash of the string.\n */\nasync function hash_message(str) {\n    const h = (await (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.instantiateSha256)()).hash;\n    return h(h(message_magic(str)));\n}\nclass SignedMessage {\n    /**\n     * sign - Calculate the recoverable signed checksum of a string message.\n     *\n     * @param {message} string          The\n     * @param {privateKey} Uint8Array   The private key to sign the message with\n     *\n     * @returns a promise to signature as a string\n     */\n    async sign(message, privateKey) {\n        const secp256k1 = await (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.instantiateSecp256k1)();\n        let messageHash = await hash_message(message);\n        let rs = secp256k1.signMessageHashRecoverableCompact(privateKey, messageHash);\n        if (typeof rs === \"string\") {\n            throw new Error(rs);\n        }\n        let sigDer = secp256k1.signMessageHashDER(privateKey, messageHash);\n        let sigSchnorr = secp256k1.signMessageHashSchnorr(privateKey, messageHash);\n        let electronEncoding = new Uint8Array([\n            ...[31 + rs.recoveryId],\n            ...rs.signature,\n        ]);\n        return {\n            raw: {\n                ecdsa: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToBase64)(rs.signature),\n                schnorr: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToBase64)(sigSchnorr),\n                der: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToBase64)(sigDer),\n            },\n            details: {\n                recoveryId: rs.recoveryId,\n                compressed: true,\n                messageHash: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToBase64)(messageHash),\n            },\n            signature: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToBase64)(electronEncoding),\n        };\n    }\n    static async sign(message, privateKey) {\n        return new this().sign(message, privateKey);\n    }\n    /**\n     * verify - Validate that the message is valid against a given signature\n     *\n     * @param {message} string     The message to verify as a utf8 string\n     * @param {signature} string   The signature as a base64 encoded string\n     * @param {cashaddr} string    The cashaddr to validate the signature against a recoverable signature.\n     * @param {publicKey} string    If publicKey is not recoverable from the signature type, the publicKey must be passed.\n     *\n     * @returns a promise to signature as a string\n     */\n    async verify(message, signature, cashaddr, publicKey) {\n        // Check that the signature is valid for the given message.\n        const secp256k1 = await (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.instantiateSecp256k1)();\n        let messageHash = await hash_message(message);\n        let sig = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.base64ToBin)(signature);\n        let valid = false;\n        let pkhMatch = false;\n        let pkh, signatureType;\n        if (sig.length === 65) {\n            let rawSig = sig.length === 65 ? sig.slice(1) : sig;\n            let recoveryId = sig.slice(0, 1)[0] - 31;\n            let recoveredPk = secp256k1.recoverPublicKeyCompressed(rawSig, recoveryId, messageHash);\n            if (typeof recoveredPk === \"string\") {\n                throw new Error(recoveredPk);\n            }\n            pkh = await (0,_util_hash160_js__WEBPACK_IMPORTED_MODULE_5__.hash160)(recoveredPk);\n            signatureType = \"recoverable\";\n            valid = secp256k1.verifySignatureCompact(rawSig, recoveredPk, messageHash);\n            if (cashaddr) {\n                // Validate that the signature actually matches the provided cashaddr\n                let prefix = (0,_util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_6__.derivePrefix)(cashaddr);\n                let resultingCashaddr = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_7__.encodeCashAddress)(prefix, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_7__.CashAddressType.p2pkh, pkh);\n                if (resultingCashaddr === cashaddr) {\n                    pkhMatch = true;\n                }\n            }\n        }\n        else if (publicKey) {\n            if (secp256k1.verifySignatureDER(sig, publicKey, messageHash)) {\n                signatureType = \"der\";\n                valid = true;\n            }\n            else if (secp256k1.verifySignatureSchnorr(sig, publicKey, messageHash)) {\n                signatureType = \"schnorr\";\n                valid = true;\n            }\n            else if (secp256k1.verifySignatureCompact(sig, publicKey, messageHash)) {\n                signatureType = \"ecdsa\";\n                valid = true;\n            }\n            else {\n                signatureType = \"na\";\n            }\n        }\n        return {\n            valid: valid,\n            details: {\n                signatureValid: valid,\n                signatureType: signatureType,\n                messageHash: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToBase64)(messageHash),\n                publicKeyHashMatch: pkhMatch,\n            },\n        };\n    }\n    static async verify(message, signature, cashaddr, publicKey) {\n        return new this().verify(message, signature, cashaddr, publicKey);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/message/signed.ts?");

/***/ }),

/***/ "./src/mine/index.ts":
/*!***************************!*\
  !*** ./src/mine/index.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mine\": () => (/* reexport safe */ _mine_js__WEBPACK_IMPORTED_MODULE_0__.mine)\n/* harmony export */ });\n/* harmony import */ var _mine_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mine.js */ \"./src/mine/mine.ts\");\n\n\n\n//# sourceURL=webpack://mainnet-js/./src/mine/index.ts?");

/***/ }),

/***/ "./src/mine/mine.ts":
/*!**************************!*\
  !*** ./src/mine/mine.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mine\": () => (/* binding */ mine)\n/* harmony export */ });\n/* harmony import */ var _util_browserNotSupported_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/browserNotSupported.js */ \"./src/util/browserNotSupported.ts\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"?67af\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/**\n * Mine blocks to a regtest address\n *\n * @param cashaddr - the address to mine to\n * @param blocks - the number of blocks to mine\n *\n * @remarks\n * This function assumes a local regtest bitcoin node with RPC_* matching the docker configuration\n */\nasync function mine({ cashaddr, blocks, }) {\n    // node only\n    (0,_util_browserNotSupported_js__WEBPACK_IMPORTED_MODULE_1__.browserNotSupported)();\n    const generateArgs = [\n        `exec`,\n        `bitcoind`,\n        `bitcoin-cli`,\n        `--rpcconnect=${process.env.RPC_HOST}`,\n        `--rpcuser=${process.env.RPC_USER}`,\n        `--rpcpassword=${process.env.RPC_PASS}`,\n        `--rpcport=${process.env.RPC_PORT}`,\n        `generatetoaddress`,\n        blocks,\n        cashaddr,\n    ];\n    const cli = child_process__WEBPACK_IMPORTED_MODULE_0___default().spawnSync(`docker`, generateArgs);\n    if (cli.stderr.length > 0) {\n        return console.log(\"Mine Error: \" + cli.stderr.toString());\n    }\n    return JSON.parse(cli.stdout.toString());\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/mine/mine.ts?");

/***/ }),

/***/ "./src/network/Connection.ts":
/*!***********************************!*\
  !*** ./src/network/Connection.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Connection\": () => (/* binding */ Connection),\n/* harmony export */   \"disconnectProviders\": () => (/* binding */ disconnectProviders),\n/* harmony export */   \"initProvider\": () => (/* binding */ initProvider),\n/* harmony export */   \"initProviders\": () => (/* binding */ initProviders)\n/* harmony export */ });\n/* harmony import */ var _default_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./default.js */ \"./src/network/default.ts\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant.js */ \"./src/network/constant.ts\");\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enum.js */ \"./src/enum.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_default_js__WEBPACK_IMPORTED_MODULE_0__, _enum_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_default_js__WEBPACK_IMPORTED_MODULE_0__, _enum_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nasync function initProvider(network) {\n    if (!(0,_default_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalProvider)(network)) {\n        const conn = new Connection(network);\n        const provider = (await conn.ready()).networkProvider;\n        (0,_default_js__WEBPACK_IMPORTED_MODULE_0__.setGlobalProvider)(network, provider);\n        return provider;\n    }\n    return (0,_default_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalProvider)(network);\n}\nasync function initProviders(networks) {\n    networks = networks ? networks : Object.keys(_constant_js__WEBPACK_IMPORTED_MODULE_1__.networkTickerMap);\n    let initPromises = networks.map((n) => initProvider(n));\n    await Promise.all(initPromises).catch((e) => {\n        console.warn(`Warning, couldn't establish a connection for ${e}`);\n    });\n}\nasync function disconnectProvider(network) {\n    const provider = (0,_default_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalProvider)(network);\n    if (provider) {\n        await provider.disconnect();\n        (0,_default_js__WEBPACK_IMPORTED_MODULE_0__.removeGlobalProvider)(network);\n        return;\n    }\n    else {\n        // console.warn(\n        //   `Ignoring attempt to disconnect non-existent ${network} provider`\n        // );\n        return true;\n    }\n}\nasync function disconnectProviders(networks) {\n    networks = networks ? networks : Object.keys(_constant_js__WEBPACK_IMPORTED_MODULE_1__.networkTickerMap);\n    let disconnectPromises = networks.map((n) => disconnectProvider(n));\n    await Promise.all(disconnectPromises);\n}\nclass Connection {\n    constructor(network, servers) {\n        this.network = network ? network : \"mainnet\";\n        this.networkPrefix = _enum_js__WEBPACK_IMPORTED_MODULE_2__.prefixFromNetworkMap[this.network];\n        this.networkProvider = (0,_default_js__WEBPACK_IMPORTED_MODULE_0__.getNetworkProvider)(this.network, servers, true);\n    }\n    async ready() {\n        await this.networkProvider.connect();\n        await this.networkProvider.ready();\n        return this;\n    }\n    async disconnect() {\n        await this.networkProvider.disconnect();\n        return this;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/network/Connection.ts?");

/***/ }),

/***/ "./src/network/ElectrumNetworkProvider.ts":
/*!************************************************!*\
  !*** ./src/network/ElectrumNetworkProvider.ts ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ElectrumNetworkProvider)\n/* harmony export */ });\n/* harmony import */ var electrum_cash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! electrum-cash */ \"../../node_modules/electrum-cash/dist/index.mjs.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../interface.js */ \"./src/interface.ts\");\n/* harmony import */ var _util_delay_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/delay.js */ \"./src/util/delay.ts\");\n/* harmony import */ var _util_transaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/transaction.js */ \"./src/util/transaction.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_util_transaction_js__WEBPACK_IMPORTED_MODULE_2__]);\n_util_transaction_js__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\nclass ElectrumNetworkProvider {\n    constructor(electrum, network = _interface_js__WEBPACK_IMPORTED_MODULE_1__.Network.MAINNET, manualConnectionManagement) {\n        this.network = network;\n        this.manualConnectionManagement = manualConnectionManagement;\n        this.subscriptions = 0;\n        this.blockHeight = 0;\n        if (electrum) {\n            this.electrum = electrum;\n            this.connectPromise = this.getConnectPromise();\n            if (this.electrum instanceof electrum_cash__WEBPACK_IMPORTED_MODULE_0__.ElectrumCluster) {\n                this.version = this.electrum.version;\n            }\n            else {\n                this.version = this.electrum.connection.version;\n            }\n        }\n        else {\n            throw new Error(`A electrum-cash cluster or client is required.`);\n        }\n    }\n    async getConnectPromise(_timeout = 3000) {\n        // connects to the electrum cash and waits until the connection is ready to accept requests\n        let timeoutHandle;\n        await Promise.race([\n            new Promise(async (resolve) => {\n                this.connectPromise = undefined;\n                if (this.electrum instanceof electrum_cash__WEBPACK_IMPORTED_MODULE_0__.ElectrumCluster) {\n                    try {\n                        await this.connectCluster();\n                    }\n                    catch (e) {\n                        console.warn(`Unable to connect to one or more electrum-cash hosts: ${JSON.stringify(e)}`);\n                    }\n                    resolve(await this.readyCluster());\n                }\n                else {\n                    resolve(await this.connectClient());\n                }\n            }),\n            // new Promise(\n            //   (_resolve, reject) =>\n            //     (timeoutHandle = setTimeout(() => {\n            //       reject(\n            //         new Error(`Timeout connecting to electrum network: ${this.network}`)\n            //       );\n            //     }, _timeout))\n            // ),\n        ]);\n        clearTimeout(timeoutHandle);\n    }\n    async getUtxos(cashaddr) {\n        const result = (await this.performRequest(\"blockchain.address.listunspent\", cashaddr, \"include_tokens\"));\n        return result.map((utxo) => ({\n            txid: utxo.tx_hash,\n            vout: utxo.tx_pos,\n            satoshis: utxo.value,\n            height: utxo.height,\n            token: utxo.token_data\n                ? {\n                    amount: Number(utxo.token_data.amount),\n                    tokenId: utxo.token_data.category,\n                    capability: utxo.token_data.nft?.capability,\n                    commitment: utxo.token_data.nft?.commitment,\n                }\n                : undefined,\n        }));\n    }\n    async getBalance(cashaddr) {\n        const result = (await this.performRequest(\"blockchain.address.get_balance\", cashaddr));\n        return result.confirmed + result.unconfirmed;\n    }\n    async getBlockHeight() {\n        return (await this.performRequest(\"blockchain.headers.get_tip\"))\n            .height;\n    }\n    async getRawTransaction(txHash, verbose = false, loadInputValues = false) {\n        const key = `${this.network}-${txHash}-${verbose}-${loadInputValues}`;\n        if (ElectrumNetworkProvider.rawTransactionCache[key]) {\n            return ElectrumNetworkProvider.rawTransactionCache[key];\n        }\n        try {\n            const transaction = (await this.performRequest(\"blockchain.transaction.get\", txHash, verbose));\n            ElectrumNetworkProvider.rawTransactionCache[key] = transaction;\n            if (verbose && loadInputValues) {\n                // get unique transaction hashes\n                const hashes = [...new Set(transaction.vin.map((val) => val.txid))];\n                const transactions = await Promise.all(hashes.map((hash) => this.getRawTransactionObject(hash, false)));\n                const transactionMap = new Map();\n                transactions.forEach((val) => transactionMap.set(val.hash, val));\n                transaction.vin.forEach((input) => {\n                    const output = transactionMap\n                        .get(input.txid)\n                        .vout.find((val) => val.n === input.vout);\n                    input.address = output.scriptPubKey.addresses[0];\n                    input.value = output.value;\n                    input.tokenData = output.tokenData;\n                });\n            }\n            return transaction;\n        }\n        catch (error) {\n            if (error.message.indexOf(\"No such mempool or blockchain transaction.\") > -1)\n                throw Error(`Could not decode transaction ${txHash}. It might not exist on the current blockchain (${this.network}).`);\n            else\n                throw error;\n        }\n    }\n    // gets the decoded transaction in human readable form\n    async getRawTransactionObject(txHash, loadInputValues = false) {\n        return (await this.getRawTransaction(txHash, true, loadInputValues));\n    }\n    async sendRawTransaction(txHex, awaitPropagation = true) {\n        return new Promise(async (resolve, reject) => {\n            let txHash = await (0,_util_transaction_js__WEBPACK_IMPORTED_MODULE_2__.getTransactionHash)(txHex);\n            if (!awaitPropagation) {\n                this.performRequest(\"blockchain.transaction.broadcast\", txHex);\n                resolve(txHash);\n            }\n            else {\n                const waitForTransactionCallback = async (data) => {\n                    if (data && data[0] === txHash) {\n                        this.unsubscribeFromTransaction(txHash, waitForTransactionCallback);\n                        resolve(txHash);\n                    }\n                };\n                this.subscribeToTransaction(txHash, waitForTransactionCallback);\n                this.performRequest(\"blockchain.transaction.broadcast\", txHex).catch((error) => {\n                    this.unsubscribeFromTransaction(txHash, waitForTransactionCallback);\n                    reject(error);\n                });\n            }\n        });\n    }\n    // Get transaction history of a given cashaddr\n    async getHistory(cashaddr) {\n        const result = (await this.performRequest(\"blockchain.address.get_history\", cashaddr));\n        return result;\n    }\n    // Get the minimum fee a low-priority transaction must pay in order to be accepted to the daemon's memory pool.\n    async getRelayFee() {\n        const result = (await this.performRequest(\"blockchain.relayfee\"));\n        return result;\n    }\n    watchAddressStatus(cashaddr, callback) {\n        const watchAddressStatusCallback = async (data) => {\n            // subscription acknowledgement is the latest known status or null if no status is known\n            // status is an array: [ cashaddr, statusHash ]\n            if (data instanceof Array) {\n                const addr = data[0];\n                if (addr !== cashaddr) {\n                    return;\n                }\n                const status = data[1];\n                callback(status);\n            }\n        };\n        this.subscribeToAddress(cashaddr, watchAddressStatusCallback);\n        return async () => {\n            await this.unsubscribeFromAddress(cashaddr, watchAddressStatusCallback);\n        };\n    }\n    watchAddress(cashaddr, callback) {\n        const historyMap = {};\n        this.getHistory(cashaddr).then((history) => history.forEach((val) => (historyMap[val.tx_hash] = true)));\n        const watchAddressStatusCallback = async () => {\n            const newHistory = await this.getHistory(cashaddr);\n            // sort history to put unconfirmed transactions in the beginning, then transactions in block height descenting order\n            const txHashes = newHistory\n                .sort((a, b) => a.height <= 0 || b.height <= 0 ? -1 : b.height - a.height)\n                .map((val) => val.tx_hash);\n            for (const hash of txHashes) {\n                if (!(hash in historyMap)) {\n                    historyMap[hash] = true;\n                    callback(hash);\n                    // exit early to prevent further map lookups\n                    break;\n                }\n            }\n        };\n        return this.watchAddressStatus(cashaddr, watchAddressStatusCallback);\n    }\n    watchAddressTransactions(cashaddr, callback) {\n        return this.watchAddress(cashaddr, async (txHash) => {\n            const tx = await this.getRawTransactionObject(txHash);\n            callback(tx);\n        });\n    }\n    watchAddressTokenTransactions(cashaddr, callback) {\n        return this.watchAddress(cashaddr, async (txHash) => {\n            const tx = await this.getRawTransactionObject(txHash, true);\n            if (tx.vin.some((val) => val.tokenData) ||\n                tx.vout.some((val) => val.tokenData)) {\n                callback(tx);\n            }\n        });\n    }\n    // Wait for the next block or a block at given blockchain height.\n    watchBlocks(callback) {\n        let acknowledged = false;\n        const waitForBlockCallback = (_header) => {\n            if (!acknowledged) {\n                acknowledged = true;\n                return;\n            }\n            _header = _header instanceof Array ? _header[0] : _header;\n            callback(_header);\n        };\n        this.subscribeToHeaders(waitForBlockCallback);\n        return async () => {\n            this.unsubscribeFromHeaders(waitForBlockCallback);\n        };\n    }\n    // Wait for the next block or a block at given blockchain height.\n    async waitForBlock(height) {\n        return new Promise(async (resolve) => {\n            const cancelWatch = this.watchBlocks(async (header) => {\n                if (height === undefined || header.height >= height) {\n                    await cancelWatch();\n                    resolve(header);\n                }\n            });\n        });\n    }\n    // subscribe to notifications sent when new block is found, the block header is sent to callback\n    async subscribeToHeaders(callback) {\n        await this.subscribeRequest(\"blockchain.headers.subscribe\", callback);\n    }\n    // unsubscribe to notifications sent when new block is found\n    async unsubscribeFromHeaders(callback) {\n        await this.unsubscribeRequest(\"blockchain.headers.subscribe\", callback);\n    }\n    async subscribeToAddress(cashaddr, callback) {\n        await this.subscribeRequest(\"blockchain.address.subscribe\", callback, cashaddr);\n    }\n    async unsubscribeFromAddress(cashaddr, callback) {\n        await this.unsubscribeRequest(\"blockchain.address.subscribe\", callback, cashaddr);\n    }\n    async subscribeToAddressTransactions(cashaddr, callback) {\n        await this.subscribeRequest(\"blockchain.address.transactions.subscribe\", callback, cashaddr);\n    }\n    async unsubscribeFromAddressTransactions(cashaddr, callback) {\n        await this.unsubscribeRequest(\"blockchain.address.transactions.subscribe\", callback, cashaddr);\n    }\n    async subscribeToTransaction(txHash, callback) {\n        await this.subscribeRequest(\"blockchain.transaction.subscribe\", callback, txHash);\n    }\n    async unsubscribeFromTransaction(txHash, callback) {\n        await this.unsubscribeRequest(\"blockchain.transaction.subscribe\", callback, txHash);\n    }\n    async performRequest(name, ...parameters) {\n        await this.ready();\n        const requestTimeout = new Promise(function (_resolve, reject) {\n            setTimeout(function () {\n                reject(\"electrum-cash request timed out, retrying\");\n            }, 30000);\n        }).catch(function (e) {\n            throw e;\n        });\n        const request = this.electrum.request(name, ...parameters);\n        return await Promise.race([request, requestTimeout])\n            .then((value) => {\n            if (value instanceof Error)\n                throw value;\n            let result = value;\n            return result;\n        })\n            .catch(async () => {\n            // console.warn(\n            //   \"initial electrum-cash request attempt timed out, retrying...\"\n            // );\n            return await Promise.race([request, requestTimeout])\n                .then((value) => {\n                if (value instanceof Error)\n                    throw value;\n                let result = value;\n                return result;\n            })\n                .catch(function (e) {\n                throw e;\n            });\n        });\n    }\n    async subscribeRequest(methodName, callback, ...parameters) {\n        await this.ready();\n        const result = await this.electrum.subscribe(callback, methodName, ...parameters);\n        this.subscriptions++;\n        return result;\n    }\n    async unsubscribeRequest(methodName, callback, ...parameters) {\n        await this.ready();\n        const result = this.electrum.unsubscribe(callback, methodName, ...parameters);\n        this.subscriptions--;\n        return result;\n    }\n    async ready() {\n        return (await this.connect());\n    }\n    async connect() {\n        return await this.connectPromise;\n    }\n    disconnect() {\n        if (this.subscriptions > 0) {\n            // console.warn(\n            //   `Trying to disconnect a network provider with ${this.subscriptions} active subscriptions. This is in most cases a bad idea.`\n            // );\n        }\n        return this.isElectrumClient()\n            ? this.disconnectClient()\n            : this.disconnectCluster();\n    }\n    isElectrumClient() {\n        return this.electrum.hasOwnProperty(\"connection\");\n    }\n    async readyClient(timeout) {\n        timeout = typeof timeout !== \"undefined\" ? timeout : 3000;\n        let connectPromise = async () => {\n            while (this.electrum.connection.status !==\n                electrum_cash__WEBPACK_IMPORTED_MODULE_0__.ConnectionStatus.CONNECTED) {\n                await (0,_util_delay_js__WEBPACK_IMPORTED_MODULE_3__.delay)(100);\n            }\n            return true;\n        };\n        return connectPromise;\n    }\n    async readyCluster(timeout) {\n        timeout;\n        return this.electrum.ready();\n    }\n    async connectCluster() {\n        return this.electrum.startup();\n    }\n    async connectClient() {\n        let connectionPromise = async () => {\n            try {\n                return await this.electrum.connect();\n            }\n            catch (e) {\n                console.warn(`Warning: Failed to connect to client on ${this.network} at ${this.electrum.connection.host}.`, e);\n                return;\n            }\n        };\n        return [await connectionPromise()];\n    }\n    async disconnectCluster() {\n        return this.electrum.shutdown();\n    }\n    async disconnectClient() {\n        return [await this.electrum.disconnect(true)];\n    }\n}\nElectrumNetworkProvider.rawTransactionCache = {};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/network/ElectrumNetworkProvider.ts?");

/***/ }),

/***/ "./src/network/configuration.ts":
/*!**************************************!*\
  !*** ./src/network/configuration.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultProvider\": () => (/* binding */ DefaultProvider),\n/* harmony export */   \"getConfidence\": () => (/* binding */ getConfidence),\n/* harmony export */   \"getDefaultServers\": () => (/* binding */ getDefaultServers),\n/* harmony export */   \"getUserAgent\": () => (/* binding */ getUserAgent)\n/* harmony export */ });\n/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/index.js */ \"./src/util/getRuntimePlatform.ts\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant.js */ \"./src/network/constant.ts\");\n\n\nlet mainnetServers, testnetServers, regtestServers;\nclass DefaultProvider {\n}\nDefaultProvider.servers = {\n    mainnet: [],\n    testnet: [],\n    regtest: [],\n};\nfunction getDefaultServers(network) {\n    let env;\n    if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.getRuntimePlatform)() == \"node\") {\n        env = process.env;\n    }\n    else {\n        env = {};\n    }\n    mainnetServers = DefaultProvider.servers.mainnet.length\n        ? DefaultProvider.servers.mainnet\n        : env.ELECTRUM\n            ? env.ELECTRUM.split(\",\")\n            : _constant_js__WEBPACK_IMPORTED_MODULE_1__.mainnetServers;\n    testnetServers = DefaultProvider.servers.testnet.length\n        ? DefaultProvider.servers.testnet\n        : env.ELECTRUM_TESTNET\n            ? env.ELECTRUM_TESTNET.split(\",\")\n            : _constant_js__WEBPACK_IMPORTED_MODULE_1__.testnetServers;\n    regtestServers = DefaultProvider.servers.regtest.length\n        ? DefaultProvider.servers.regtest\n        : env.ELECTRUM_REGTEST\n            ? env.ELECTRUM_REGTEST.split(\",\")\n            : _constant_js__WEBPACK_IMPORTED_MODULE_1__.regtestServers;\n    return {\n        mainnet: mainnetServers,\n        testnet: testnetServers,\n        regtest: regtestServers,\n    }[network];\n}\nfunction getUserAgent() {\n    // Allow users to configure the cluster confidence\n    let ua;\n    if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.getRuntimePlatform)() === \"node\") {\n        ua = process.env.ELECTRUM_USER_AGENT\n            ? process.env.ELECTRUM_USER_AGENT\n            : \"mainnet-js-\" + (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.getRuntimePlatform)();\n    }\n    else {\n        ua = \"mainnet-js-\" + (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.getRuntimePlatform)();\n    }\n    return ua;\n}\nfunction getConfidence() {\n    // Allow users to configure the cluster confidence\n    let confidence;\n    if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.getRuntimePlatform)() === \"node\") {\n        confidence = process.env.ELECTRUM_CONFIDENCE\n            ? parseInt(process.env.ELECTRUM_CONFIDENCE)\n            : 1;\n    }\n    else {\n        confidence = 1;\n    }\n    return confidence;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/network/configuration.ts?");

/***/ }),

/***/ "./src/network/constant.ts":
/*!*********************************!*\
  !*** ./src/network/constant.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ELECTRUM_CASH_PROTOCOL_VERSION\": () => (/* binding */ ELECTRUM_CASH_PROTOCOL_VERSION),\n/* harmony export */   \"clusterParams\": () => (/* binding */ clusterParams),\n/* harmony export */   \"mainnetServers\": () => (/* binding */ mainnetServers),\n/* harmony export */   \"networkTickerMap\": () => (/* binding */ networkTickerMap),\n/* harmony export */   \"regtestServers\": () => (/* binding */ regtestServers),\n/* harmony export */   \"testnetServers\": () => (/* binding */ testnetServers)\n/* harmony export */ });\n/* unused harmony export defaultServers */\n/* harmony import */ var electrum_cash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! electrum-cash */ \"../../node_modules/electrum-cash/dist/index.mjs.js\");\n\nconst ELECTRUM_CASH_PROTOCOL_VERSION = \"1.5\";\nconst networkTickerMap = {\n    mainnet: \"BCH\",\n    testnet: \"tBCH\",\n    regtest: \"rBCH\",\n};\nconst mainnetServers = [\n    \"wss://bch.imaginary.cash:50004\",\n    //\"wss://blackie.c3-soft.com:50004\",\n    // \"wss://electrum.imaginary.cash:50004\",\n    // \"wss://fulcrum.fountainhead.cash\",\n];\n// export const testnetServers = [\n//   // \"wss://tbch.loping.net:60004\",\n//   \"wss://blackie.c3-soft.com:60004\",\n//   // \"wss://testnet.bitcoincash.network:60004\",\n//   //,\"wss://unavailable.invalid:50004\"\n// ];\n// testnet4\n// export const testnetServers = [\n//   //\"wss://t4fork.c3-soft.com:61004\",\n//   \"wss://testnet4.imaginary.cash:50004\",\n//   //,\"wss://unavailable.invalid:50004\"\n// ];\n// chipnet\nconst testnetServers = [\n    \"wss://chipnet.imaginary.cash:50004\",\n    //\"wss://blackie.c3-soft.com:64004\", // chipnet with protocol 1.5.0\n    //\"wss://chipnet.bch.ninja:50004\"\n];\nconst regtestServers = [\"ws://127.0.0.1:60003\"];\nconst defaultServers = {\n    mainnet: mainnetServers,\n    testnet: testnetServers,\n    regtest: regtestServers,\n};\nconst clusterParams = {\n    mainnet: {\n        confidence: 1,\n        distribution: 1,\n        order: electrum_cash__WEBPACK_IMPORTED_MODULE_0__.ClusterOrder.RANDOM,\n        timeout: 45000,\n    },\n    testnet: {\n        confidence: 1,\n        distribution: 1,\n        order: electrum_cash__WEBPACK_IMPORTED_MODULE_0__.ClusterOrder.RANDOM,\n        timeout: 30000,\n    },\n    regtest: {\n        confidence: 1,\n        distribution: 1,\n        order: electrum_cash__WEBPACK_IMPORTED_MODULE_0__.ClusterOrder.PRIORITY,\n        timeout: 3000,\n    },\n};\n\n\n//# sourceURL=webpack://mainnet-js/./src/network/constant.ts?");

/***/ }),

/***/ "./src/network/default.ts":
/*!********************************!*\
  !*** ./src/network/default.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getGlobalProvider\": () => (/* binding */ getGlobalProvider),\n/* harmony export */   \"getNetworkProvider\": () => (/* binding */ getNetworkProvider),\n/* harmony export */   \"removeGlobalProvider\": () => (/* binding */ removeGlobalProvider),\n/* harmony export */   \"setGlobalProvider\": () => (/* binding */ setGlobalProvider)\n/* harmony export */ });\n/* harmony import */ var _ElectrumNetworkProvider_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ElectrumNetworkProvider.js */ \"./src/network/ElectrumNetworkProvider.ts\");\n/* harmony import */ var electrum_cash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! electrum-cash */ \"../../node_modules/electrum-cash/dist/index.mjs.js\");\n/* harmony import */ var _configuration_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./configuration.js */ \"./src/network/configuration.ts\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util.js */ \"./src/network/util.ts\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../interface.js */ \"./src/interface.ts\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant.js */ \"./src/network/constant.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_configuration_js__WEBPACK_IMPORTED_MODULE_3__, _ElectrumNetworkProvider_js__WEBPACK_IMPORTED_MODULE_4__]);\n([_configuration_js__WEBPACK_IMPORTED_MODULE_3__, _ElectrumNetworkProvider_js__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\nfunction setGlobalProvider(network, provider) {\n    const accessor = _constant_js__WEBPACK_IMPORTED_MODULE_1__.networkTickerMap[network];\n    globalThis[accessor] = provider;\n    return provider;\n}\nfunction getGlobalProvider(network) {\n    const accessor = _constant_js__WEBPACK_IMPORTED_MODULE_1__.networkTickerMap[network];\n    return globalThis[accessor];\n}\nfunction removeGlobalProvider(network) {\n    const accessor = _constant_js__WEBPACK_IMPORTED_MODULE_1__.networkTickerMap[network];\n    if (accessor in globalThis) {\n        delete globalThis[accessor];\n    }\n}\nfunction getNetworkProvider(network = _interface_js__WEBPACK_IMPORTED_MODULE_2__.Network.MAINNET, servers, manualConnectionManagement, options) {\n    const globalContext = servers === undefined &&\n        manualConnectionManagement === undefined &&\n        options === undefined;\n    if (globalContext) {\n        const globalProvider = getGlobalProvider(network);\n        if (globalProvider) {\n            return globalProvider;\n        }\n    }\n    let useCluster;\n    manualConnectionManagement = manualConnectionManagement\n        ? manualConnectionManagement\n        : false;\n    servers = servers ? servers : (0,_configuration_js__WEBPACK_IMPORTED_MODULE_3__.getDefaultServers)(network);\n    // If the user has passed a single string, assume a single client connection\n    if (typeof servers === \"string\") {\n        servers = [servers];\n        useCluster = false;\n    }\n    // Otherwise, assume a list of servers has been passed\n    else {\n        servers = servers;\n        useCluster = servers.length > 1;\n    }\n    // There were server(s)\n    if (servers) {\n        let clusterOrClient;\n        // There were multiple servers\n        if (useCluster) {\n            let clusterParam = _constant_js__WEBPACK_IMPORTED_MODULE_1__.clusterParams[network];\n            clusterParam[\"confidence\"] = (0,_configuration_js__WEBPACK_IMPORTED_MODULE_3__.getConfidence)();\n            clusterParam = Object.assign({}, clusterParam, options);\n            clusterOrClient = getCluster(servers, clusterParam, network);\n        }\n        // The server is a single string in an array\n        else {\n            clusterOrClient = getClient(servers, network);\n        }\n        let provider = new _ElectrumNetworkProvider_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](clusterOrClient, network, manualConnectionManagement);\n        if (globalContext) {\n            return setGlobalProvider(network, provider);\n        }\n        return provider;\n    }\n    else {\n        throw Error(\"No servers provided, defaults not available.\");\n    }\n}\n// Create a cluster give a list of servers and parameters\nfunction getCluster(servers, params, network) {\n    let electrum = getElectrumCluster(params, network);\n    for (const s of servers) {\n        let url = (0,_util_js__WEBPACK_IMPORTED_MODULE_5__.parseElectrumUrl)(s);\n        try {\n            electrum.addServer(url.host, url.port, url.scheme, false);\n        }\n        catch (error) {\n            console.log(`Error connecting ${url.host}:${url.port} over ${url.scheme}`);\n        }\n    }\n    return electrum;\n}\n// create a client with a list of servers\nfunction getClient(servers, network) {\n    let url = (0,_util_js__WEBPACK_IMPORTED_MODULE_5__.parseElectrumUrl)(servers[0]);\n    return getElectrumClient(url, 120000, network);\n}\nfunction getElectrumCluster(params, network) {\n    return new electrum_cash__WEBPACK_IMPORTED_MODULE_0__.ElectrumCluster((0,_configuration_js__WEBPACK_IMPORTED_MODULE_3__.getUserAgent)(), _constant_js__WEBPACK_IMPORTED_MODULE_1__.ELECTRUM_CASH_PROTOCOL_VERSION, params.confidence, params.distribution, params.order, params.timeout);\n}\nfunction getElectrumClient(params, timeout, network) {\n    return new electrum_cash__WEBPACK_IMPORTED_MODULE_0__.ElectrumClient((0,_configuration_js__WEBPACK_IMPORTED_MODULE_3__.getUserAgent)(), _constant_js__WEBPACK_IMPORTED_MODULE_1__.ELECTRUM_CASH_PROTOCOL_VERSION, params.host, params.port, params.scheme, timeout);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/network/default.ts?");

/***/ }),

/***/ "./src/network/getRelayFeeCache.ts":
/*!*****************************************!*\
  !*** ./src/network/getRelayFeeCache.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getRelayFeeCache\": () => (/* binding */ getRelayFeeCache)\n/* harmony export */ });\n/* harmony import */ var _chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chain.js */ \"./src/chain.ts\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ \"./src/network/constant.ts\");\n\n\nasync function getRelayFeeCache(provider) {\n    let relayFeePerKbInCoins;\n    if (_constant_js__WEBPACK_IMPORTED_MODULE_0__.networkTickerMap[provider.network] + \"_RELAY_FEE\" in globalThis) {\n        // Stores the fee in BCH_RELAY_FEE, tBCH_RELAY_FEE, etc\n        relayFeePerKbInCoins =\n            globalThis[_constant_js__WEBPACK_IMPORTED_MODULE_0__.networkTickerMap[provider.network] + \"_RELAY_FEE\"];\n    }\n    if (typeof relayFeePerKbInCoins !== \"number\") {\n        relayFeePerKbInCoins = await provider.getRelayFee();\n        globalThis[_constant_js__WEBPACK_IMPORTED_MODULE_0__.networkTickerMap[provider.network] + \"_RELAY_FEE\"] =\n            relayFeePerKbInCoins;\n    }\n    if (typeof relayFeePerKbInCoins === \"number\") {\n        return Math.round(relayFeePerKbInCoins * _chain_js__WEBPACK_IMPORTED_MODULE_1__.bchParam.subUnits) / 1000;\n    }\n    else {\n        console.warn(\"Couldn't get min relay fee, using default instead\");\n        return Math.round(0.00001 * _chain_js__WEBPACK_IMPORTED_MODULE_1__.bchParam.subUnits) / 1000;\n    }\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/network/getRelayFeeCache.ts?");

/***/ }),

/***/ "./src/network/index.ts":
/*!******************************!*\
  !*** ./src/network/index.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Connection\": () => (/* reexport safe */ _Connection_js__WEBPACK_IMPORTED_MODULE_1__.Connection),\n/* harmony export */   \"ElectrumNetworkProvider\": () => (/* reexport safe */ _ElectrumNetworkProvider_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   \"disconnectProviders\": () => (/* reexport safe */ _Connection_js__WEBPACK_IMPORTED_MODULE_1__.disconnectProviders),\n/* harmony export */   \"getNetworkProvider\": () => (/* reexport safe */ _default_js__WEBPACK_IMPORTED_MODULE_0__.getNetworkProvider),\n/* harmony export */   \"initProviders\": () => (/* reexport safe */ _Connection_js__WEBPACK_IMPORTED_MODULE_1__.initProviders)\n/* harmony export */ });\n/* harmony import */ var _default_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./default.js */ \"./src/network/default.ts\");\n/* harmony import */ var _Connection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Connection.js */ \"./src/network/Connection.ts\");\n/* harmony import */ var _ElectrumNetworkProvider_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ElectrumNetworkProvider.js */ \"./src/network/ElectrumNetworkProvider.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_default_js__WEBPACK_IMPORTED_MODULE_0__, _Connection_js__WEBPACK_IMPORTED_MODULE_1__, _ElectrumNetworkProvider_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_default_js__WEBPACK_IMPORTED_MODULE_0__, _Connection_js__WEBPACK_IMPORTED_MODULE_1__, _ElectrumNetworkProvider_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/network/index.ts?");

/***/ }),

/***/ "./src/network/util.ts":
/*!*****************************!*\
  !*** ./src/network/util.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseElectrumUrl\": () => (/* binding */ parseElectrumUrl)\n/* harmony export */ });\n/* harmony import */ var electrum_cash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! electrum-cash */ \"../../node_modules/electrum-cash/dist/index.mjs.js\");\n\nfunction parseElectrumUrl(givenUrl) {\n    let url = new URL(givenUrl);\n    let port = parseInt(url.port || \"443\");\n    let scheme = getElectrumScheme(url.protocol);\n    return { host: url.hostname, port: port, scheme: scheme };\n}\nfunction getElectrumScheme(protocol) {\n    let transport;\n    switch (protocol) {\n        case \"http:\":\n            transport = electrum_cash__WEBPACK_IMPORTED_MODULE_0__.ElectrumTransport.TCP.Scheme;\n            break;\n        case \"https:\":\n            transport = electrum_cash__WEBPACK_IMPORTED_MODULE_0__.ElectrumTransport.TCP_TLS.Scheme;\n            break;\n        case \"ws:\":\n            transport = electrum_cash__WEBPACK_IMPORTED_MODULE_0__.ElectrumTransport.WS.Scheme;\n            break;\n        case \"wss:\":\n            transport = electrum_cash__WEBPACK_IMPORTED_MODULE_0__.ElectrumTransport.WSS.Scheme;\n            break;\n        default:\n            throw Error(\"Electrum transport protocol not understood.\");\n    }\n    return transport;\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/network/util.ts?");

/***/ }),

/***/ "./src/qr/Qr.ts":
/*!**********************!*\
  !*** ./src/qr/Qr.ts ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"qrAddress\": () => (/* binding */ qrAddress)\n/* harmony export */ });\n/* harmony import */ var qrcode_svg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! qrcode-svg */ \"../../node_modules/qrcode-svg/lib/qrcode.js\");\n/* harmony import */ var qrcode_svg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(qrcode_svg__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _util_base64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/base64.js */ \"./src/util/base64.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_util_base64_js__WEBPACK_IMPORTED_MODULE_1__]);\n_util_base64_js__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n/**\n * qrAddress returns a qr code for a given cashaddress as raw utf-8 svg\n * @param  {string} address\n * @param  {} size=256 The width and height of the returned image\n * @returns Image\n */\nfunction qrAddress(address, size = 256) {\n    let svg = new (qrcode_svg__WEBPACK_IMPORTED_MODULE_0___default())({\n        content: address,\n        width: size,\n        height: size,\n    }).svg();\n    let svgB64 = (0,_util_base64_js__WEBPACK_IMPORTED_MODULE_1__.btoa)(svg);\n    return {\n        src: `data:image/svg+xml;base64,${svgB64}`,\n        title: address,\n        alt: \"a Bitcoin Cash address QR Code\",\n    };\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/qr/Qr.ts?");

/***/ }),

/***/ "./src/rate/ExchangeRate.ts":
/*!**********************************!*\
  !*** ./src/rate/ExchangeRate.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ExchangeRate\": () => (/* binding */ ExchangeRate)\n/* harmony export */ });\n/* unused harmony exports getTtl, getRateFromExchange */\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constant.js */ \"./src/constant.ts\");\n/* harmony import */ var _util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/getRuntimePlatform.js */ \"./src/util/getRuntimePlatform.ts\");\n/* harmony import */ var _db_ExchangeRateProvider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../db/ExchangeRateProvider.js */ \"./src/db/ExchangeRateProvider.ts\");\n/* harmony import */ var _db_util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../db/util.js */ \"./src/db/util.ts\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"../../node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n\n\nclass ExchangeRate {\n    constructor({ symbol, rate, ttl, }) {\n        this.symbol = symbol;\n        this.rate = rate;\n        this.ttl = ttl;\n    }\n    static setupAxiosMock(mockUrl, responseData) {\n        if (!(axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.mocks)) {\n            (axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.mocks) = {};\n            // install our interceptors\n            axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.request.use((config) => {\n                const url = config.url;\n                if ((axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.mocks)[url]) {\n                    // if we have set up a mocked response for this url, cancel the actual request with a cancelToken containing our mocked data\n                    const mockedResponse = (axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.mocks)[url];\n                    return {\n                        ...config,\n                        cancelToken: new (axios__WEBPACK_IMPORTED_MODULE_0___default().CancelToken)((cancel) => cancel({ status: 200, data: mockedResponse })),\n                    };\n                }\n                // otherwise proceed with usual request\n                return config;\n            });\n            axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.response.use(function (response) {\n                return response;\n            }, function (error) {\n                // resolve response with our mocked data\n                if (axios__WEBPACK_IMPORTED_MODULE_0___default().isCancel(error)) {\n                    return Promise.resolve(error.message);\n                }\n                // handle all other errors gracefully\n                return Promise.reject(error);\n            });\n        }\n        (axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.mocks)[mockUrl] = responseData;\n    }\n    static removeAxiosMock(mockUrl) {\n        delete ((axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.mocks) || {})[mockUrl];\n    }\n    toString() {\n        this.rate.toFixed(2);\n    }\n    static async get(symbol, useCache = true) {\n        const platform = (0,_util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_1__.getRuntimePlatform)();\n        if (platform !== _util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_1__.RuntimePlatform.node && (0,_db_util_js__WEBPACK_IMPORTED_MODULE_2__.indexedDbIsAvailable)()) {\n            try {\n                return await this.getRateFromIndexedDb(symbol, useCache);\n            }\n            catch {\n                return await this.getRateFromGlobalScope(symbol, useCache);\n            }\n        }\n        else {\n            return await this.getRateFromGlobalScope(symbol, useCache);\n        }\n    }\n    static async getRateFromIndexedDb(symbol, useCache = true) {\n        if (!useCache) {\n            return await getRateFromExchange(symbol);\n        }\n        let cache = new _db_ExchangeRateProvider_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n        let cacheRate = await cache.getRate(symbol);\n        if (cacheRate) {\n            // if the cache is still good, return it\n            if (cacheRate.ttl > Date.now()) {\n                return cacheRate.rate;\n            }\n            // else fall through\n        }\n        let freshRate = await getRateFromExchange(symbol);\n        cache.setRate(symbol, freshRate, getTtl());\n        return freshRate;\n    }\n    static async getRateFromGlobalScope(symbol, useCache = true) {\n        if (!useCache) {\n            return await getRateFromExchange(symbol);\n        }\n        if (globalThis.RATE) {\n            let rateObject = globalThis.RATE;\n            if (symbol in rateObject) {\n                let cachedRate = rateObject[symbol];\n                // If the cache is still good return ie\n                if (cachedRate.ttl > Date.now()) {\n                    return cachedRate.rate;\n                }\n            }\n        }\n        let freshRate = await getRateFromExchange(symbol);\n        this.cacheRateInGlobalScope(symbol, freshRate);\n        return freshRate;\n    }\n    static cacheRateInGlobalScope(symbol, rate) {\n        if (!globalThis.RATE) {\n            globalThis.RATE = {};\n        }\n        else {\n            globalThis.RATE[symbol] = {\n                symbol: symbol,\n                rate: rate,\n                ttl: getTtl(),\n            };\n        }\n    }\n}\nfunction getTtl() {\n    return Math.trunc(Date.now() + _constant_js__WEBPACK_IMPORTED_MODULE_4__.EXCHANGE_RATE_TTL);\n}\n// Attempt to get the usd rate from some web app\nasync function getRateFromExchange(symbol) {\n    if (symbol.length > 0) {\n        symbol = symbol.toLocaleLowerCase();\n    }\n    switch (symbol) {\n        case \"usd\":\n            try {\n                let response = await axios__WEBPACK_IMPORTED_MODULE_0___default().get(\"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin-cash&vs_currencies=usd\");\n                return response.data[\"bitcoin-cash\"].usd;\n            }\n            catch (e1) {\n                try {\n                    let response = await axios__WEBPACK_IMPORTED_MODULE_0___default().get(\"https://markets.api.bitcoin.com/live/bitcoin\");\n                    return response.data[\"data\"][\"BCH\"];\n                }\n                catch (e2) {\n                    return e2;\n                }\n            }\n        default:\n            throw Error(\"Support for giving an amount in '${symbol}' is not supported.\");\n    }\n}\nawait ExchangeRate.get(\"usd\");\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);\n\n//# sourceURL=webpack://mainnet-js/./src/rate/ExchangeRate.ts?");

/***/ }),

/***/ "./src/slp/GsppProvider.ts":
/*!*********************************!*\
  !*** ./src/slp/GsppProvider.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GsppProvider\": () => (/* binding */ GsppProvider)\n/* harmony export */ });\n/* unused harmony exports _convertBalanceBigNumbers, _convertUtxoBigNumbers, _convertSlpTokenInfo */\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../interface.js */ \"./src/interface.ts\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bignumber.js */ \"../../node_modules/bignumber.js/bignumber.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _SlpProvider_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SlpProvider.js */ \"./src/slp/SlpProvider.ts\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"../../node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _util_base64_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/base64.js */ \"./src/util/base64.ts\");\n/* harmony import */ var _util_eventsource_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/eventsource.js */ \"./src/util/eventsource.ts\");\n/* harmony import */ var _util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/getRuntimePlatform.js */ \"./src/util/getRuntimePlatform.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_util_base64_js__WEBPACK_IMPORTED_MODULE_6__]);\n_util_base64_js__WEBPACK_IMPORTED_MODULE_6__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n//import EventSource from \"../../polyfill/eventsource.js\";\n\n\nclass GsppProvider {\n    constructor(network = _interface_js__WEBPACK_IMPORTED_MODULE_3__.Network.MAINNET) {\n        this.network = network;\n        this.servers = { ...GsppProvider.defaultServers };\n        this.caching = false;\n        if ((0,_util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_4__.getRuntimePlatform)() === _util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_4__.RuntimePlatform.node) {\n            if (process.env.GSPP_MAINNET_DATA)\n                this.servers.mainnet.dataSource = process.env.GSPP_MAINNET_DATA;\n            if (process.env.GSPP_MAINNET_EVENTS)\n                this.servers.mainnet.eventSource = process.env.GSPP_MAINNET_EVENTS;\n            if (process.env.GSPP_TESTNET_DATA)\n                this.servers.testnet.dataSource = process.env.GSPP_TESTNET_DATA;\n            if (process.env.GSPP_TESTNET_EVENTS)\n                this.servers.testnet.eventSource = process.env.GSPP_TESTNET_EVENTS;\n            if (process.env.GSPP_REGTEST_DATA)\n                this.servers.regtest.dataSource = process.env.GSPP_REGTEST_DATA;\n            if (process.env.GSPP_REGTEST_EVENTS)\n                this.servers.regtest.eventSource = process.env.GSPP_REGTEST_EVENTS;\n        }\n    }\n    // all oupoints, including mint batons\n    async SlpOutpoints(slpaddr) {\n        return (await this.GsppQuery({ cashaddr: slpaddr }, \"v1/graphsearch/slpoutpoints\")).outpoints;\n    }\n    // all utxos, including mint batons\n    async SlpUtxos(slpaddr) {\n        const response = (await this.GsppQuery({ cashaddr: slpaddr }, \"v1/graphsearch/slputxos\")).utxos;\n        if (!response) {\n            return [];\n        }\n        return _convertUtxoBigNumbers(response);\n    }\n    // safe-spendable token utxos, without baton\n    async SlpSpendableUtxos(slpaddr, tokenId) {\n        return (await this.SlpUtxos(slpaddr)).filter((val) => val.isBaton === false && (tokenId ? val.tokenId === tokenId : true));\n    }\n    // token mint baton utxos\n    async SlpBatonUtxos(slpaddr, tokenId) {\n        return (await this.SlpUtxos(slpaddr)).filter((val) => val.isBaton === true && (tokenId ? val.tokenId === tokenId : true));\n    }\n    // look up the token information\n    async SlpTokenInfo(tokenId) {\n        const info = (await this.GsppQuery({ tokenId: tokenId }, \"v1/graphsearch/slptokeninfo\"));\n        return _convertSlpTokenInfo(info);\n    }\n    // get all token balances\n    async SlpAllTokenBalances(slpaddr) {\n        return _convertBalanceBigNumbers(((await this.GsppQuery({ cashaddr: slpaddr }, \"v1/graphsearch/slpalltokenbalances\")).balances || []));\n    }\n    // get specific token balance\n    async SlpTokenBalance(slpaddr, tokenId) {\n        const response = await this.GsppQuery({ cashaddr: slpaddr, tokenId: tokenId }, \"v1/graphsearch/slptokenbalance\");\n        if (!response) {\n            return (0,_SlpProvider_js__WEBPACK_IMPORTED_MODULE_5__._emptyTokenBalance)(tokenId);\n        }\n        const balances = _convertBalanceBigNumbers([response]);\n        if (balances[0].value.isZero()) {\n            return (0,_SlpProvider_js__WEBPACK_IMPORTED_MODULE_5__._emptyTokenBalance)(tokenId);\n        }\n        return balances[0];\n    }\n    // get all slp transactions of this address\n    async SlpAddressTransactionHistory(_slpaddr, _tokenId, _limit = 100, _skip = 0) {\n        throw \"Not implemented\";\n    }\n    // waits for next slp transaction to appear in mempool, code execution is halted\n    async SlpWaitForTransaction(slpaddr, tokenId) {\n        return new Promise(async (resolve) => {\n            const cancelFn = this.SlpWatchTransactions(async (tx) => {\n                await cancelFn();\n                resolve(tx);\n            }, slpaddr, tokenId);\n        });\n    }\n    // waits for a certain slp token balance to be available in this wallet, code execution is halted\n    async SlpWaitForBalance(value, slpaddr, tokenId) {\n        return new Promise((resolve) => {\n            const cancelFn = this.SlpWatchBalance(async (balance) => {\n                if (balance.value.isGreaterThanOrEqualTo(new (bignumber_js__WEBPACK_IMPORTED_MODULE_0___default())(value))) {\n                    await cancelFn();\n                    resolve(balance);\n                }\n            }, slpaddr, tokenId);\n        });\n    }\n    // sets up a callback to be executed each time the token balance of the wallet is changed\n    SlpWatchBalance(callback, slpaddr, tokenId) {\n        return this.SlpWatchTransactions(async () => {\n            const balance = await this.SlpTokenBalance(slpaddr, tokenId);\n            callback(balance);\n        }, slpaddr, tokenId);\n    }\n    // sets up a callback to be executed each time a new transaction associated with this wallet's address is entering the mempool\n    SlpWatchTransactions(callback, slpaddr, tokenId) {\n        const eventSource = this.SlpSocketEventSource({\n            query: { slpaddr, tokenId },\n        });\n        const cancelFn = async () => {\n            eventSource.close();\n        };\n        eventSource.addEventListener(\"message\", async (txEvent) => {\n            const data = JSON.parse(txEvent.data);\n            if (data.type === \"rawtx\") {\n                const tx = {\n                    tx_hash: data.data.txHash,\n                    height: 0,\n                    details: data.data,\n                };\n                callback(tx);\n            }\n        }, false);\n        return cancelFn;\n    }\n    GsppQuery(queryObject, endpoint) {\n        if (this.caching) {\n            axiosInstance.defaults.headers = {};\n        }\n        else {\n            axiosInstance.defaults.headers = noCacheHeaders;\n        }\n        // console.log(queryObject, endpoint);\n        return new Promise((resolve, reject) => {\n            const url = `${this.servers[this.network].dataSource}/${endpoint}`;\n            fetch_retry(url, queryObject)\n                .then((response) => {\n                resolve(response.data);\n            })\n                .catch((error) => {\n                if (error.isAxiosError) {\n                    // console.trace(JSON.stringify(error, null, 2));\n                    reject(error.response.data);\n                }\n                reject(error);\n            });\n        });\n    }\n    SlpSocketEventSource(queryObject) {\n        const url = `${this.servers[this.network].eventSource}/s/${B64QueryString(queryObject)}`;\n        return new _util_eventsource_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](url);\n    }\n}\nGsppProvider.defaultServers = {\n    mainnet: {\n        dataSource: \"https://gs.fountainhead.cash\",\n        eventSource: \"https://slpsocket.fountainhead.cash\",\n    },\n    testnet: {\n        dataSource: \"https://gs-testnet.fountainhead.cash\",\n        eventSource: \"https://slpsocket-testnet.fountainhead.cash\",\n    },\n    regtest: {\n        dataSource: \"http://localhost:12400\",\n        eventSource: \"http://localhost:12401\",\n    },\n};\nconst noCacheHeaders = {\n    \"Cache-Control\": \"no-cache\",\n    Pragma: \"no-cache\",\n    Expires: \"0\",\n};\nconst axiosInstance = axios__WEBPACK_IMPORTED_MODULE_1___default().create({\n    headers: noCacheHeaders,\n});\nconst fetch_retry = (url, data = {}, n = 1) => axiosInstance.post(url, data).catch(function (error) {\n    if (n === 0) {\n        throw error;\n    }\n    return new Promise((resolve) => {\n        setTimeout(() => resolve(fetch_retry(url, data, n - 1)), 1000);\n    });\n});\nconst B64QueryString = function (queryObject) {\n    if (!queryObject || !Object.keys(queryObject).length) {\n        throw new Error(\"Empty query\");\n    }\n    return (0,_util_base64_js__WEBPACK_IMPORTED_MODULE_6__.btoa)(JSON.stringify(queryObject));\n};\nfunction _convertBalanceBigNumbers(balances) {\n    balances.forEach((val) => (val.value = new (bignumber_js__WEBPACK_IMPORTED_MODULE_0___default())(val.value).shiftedBy(-1 * val.decimals)));\n    return balances;\n}\nfunction _convertUtxoBigNumbers(utxos) {\n    utxos.forEach((val) => {\n        val.value = new (bignumber_js__WEBPACK_IMPORTED_MODULE_0___default())(val.value).shiftedBy(-1 * val.decimals);\n        val.satoshis = Number(val.satoshis);\n    });\n    return utxos;\n}\nfunction _convertSlpTokenInfo(tokenInfo) {\n    if (!tokenInfo)\n        return tokenInfo;\n    tokenInfo.initialAmount = new (bignumber_js__WEBPACK_IMPORTED_MODULE_0___default())(tokenInfo.initialAmount).shiftedBy(-1 * tokenInfo.decimals);\n    tokenInfo.parentTokenId = tokenInfo.groupId;\n    return tokenInfo;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/slp/GsppProvider.ts?");

/***/ }),

/***/ "./src/slp/SlpDbProvider.ts":
/*!**********************************!*\
  !*** ./src/slp/SlpDbProvider.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SlpDbProvider\": () => (/* binding */ SlpDbProvider)\n/* harmony export */ });\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../interface.js */ \"./src/interface.ts\");\n/* harmony import */ var _SlpDbTemplates_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SlpDbTemplates.js */ \"./src/slp/SlpDbTemplates.ts\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bignumber.js */ \"../../node_modules/bignumber.js/bignumber.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _SlpProvider_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SlpProvider.js */ \"./src/slp/SlpProvider.ts\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"../../node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _util_base64_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/base64.js */ \"./src/util/base64.ts\");\n/* harmony import */ var _util_eventsource_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/eventsource.js */ \"./src/util/eventsource.ts\");\n/* harmony import */ var _util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/getRuntimePlatform.js */ \"./src/util/getRuntimePlatform.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_util_base64_js__WEBPACK_IMPORTED_MODULE_7__]);\n_util_base64_js__WEBPACK_IMPORTED_MODULE_7__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n//import EventSource from \"../../polyfill/eventsource.js\";\n\n\nclass SlpDbProvider {\n    constructor(network = _interface_js__WEBPACK_IMPORTED_MODULE_3__.Network.MAINNET) {\n        this.network = network;\n        this.servers = { ...SlpDbProvider.defaultServers };\n        this.caching = false;\n        if ((0,_util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_4__.getRuntimePlatform)() === _util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_4__.RuntimePlatform.node) {\n            if (process.env.SLPDB_MAINNET_DATA)\n                this.servers.mainnet.dataSource = process.env.SLPDB_MAINNET_DATA;\n            if (process.env.SLPDB_MAINNET_EVENTS)\n                this.servers.mainnet.eventSource = process.env.SLPDB_MAINNET_EVENTS;\n            if (process.env.SLPDB_TESTNET_DATA)\n                this.servers.testnet.dataSource = process.env.SLPDB_TESTNET_DATA;\n            if (process.env.SLPDB_TESTNET_EVENTS)\n                this.servers.testnet.eventSource = process.env.SLPDB_TESTNET_EVENTS;\n            if (process.env.SLPDB_REGTEST_DATA)\n                this.servers.regtest.dataSource = process.env.SLPDB_REGTEST_DATA;\n            if (process.env.SLPDB_REGTEST_EVENTS)\n                this.servers.regtest.eventSource = process.env.SLPDB_REGTEST_EVENTS;\n        }\n    }\n    // all oupoints, including mint batons\n    async SlpOutpoints(slpaddr) {\n        return (await this.SlpDbQuery((0,_SlpDbTemplates_js__WEBPACK_IMPORTED_MODULE_5__.SlpAllOutpointsTemplate)(slpaddr)))\n            .g;\n    }\n    // all utxos, including mint batons\n    async SlpUtxos(slpaddr) {\n        return (0,_SlpProvider_js__WEBPACK_IMPORTED_MODULE_6__._convertUtxoBigNumbers)((await this.SlpDbQuery((0,_SlpDbTemplates_js__WEBPACK_IMPORTED_MODULE_5__.SlpAllUtxosTemplate)(slpaddr))).g);\n    }\n    // look up the token information\n    async SlpTokenInfo(tokenId) {\n        const infos = (await this.SlpDbQuery((0,_SlpDbTemplates_js__WEBPACK_IMPORTED_MODULE_5__.SlpTokenInfoTemplate)(tokenId)))\n            .t;\n        return (0,_SlpProvider_js__WEBPACK_IMPORTED_MODULE_6__._convertSlpTokenInfo)(infos[0]);\n    }\n    // safe-spendable token utxos, without baton\n    async SlpSpendableUtxos(slpaddr, tokenId) {\n        return (0,_SlpProvider_js__WEBPACK_IMPORTED_MODULE_6__._convertUtxoBigNumbers)((await this.SlpDbQuery((0,_SlpDbTemplates_js__WEBPACK_IMPORTED_MODULE_5__.SlpSpendableUtxosTemplate)(slpaddr, tokenId)))\n            .g);\n    }\n    // token mint baton utxos\n    async SlpBatonUtxos(slpaddr, tokenId) {\n        return (0,_SlpProvider_js__WEBPACK_IMPORTED_MODULE_6__._convertUtxoBigNumbers)((await this.SlpDbQuery((0,_SlpDbTemplates_js__WEBPACK_IMPORTED_MODULE_5__.SlpBatonUtxosTemplate)(slpaddr, tokenId)))\n            .g);\n    }\n    // get all token balances\n    async SlpAllTokenBalances(slpaddr) {\n        return (0,_SlpProvider_js__WEBPACK_IMPORTED_MODULE_6__._convertBalanceBigNumbers)((await this.SlpDbQuery((0,_SlpDbTemplates_js__WEBPACK_IMPORTED_MODULE_5__.SlpAllTokenBalancesTemplate)(slpaddr)))\n            .g);\n    }\n    // get specific token balance\n    async SlpTokenBalance(slpaddr, tokenId) {\n        const balances = (0,_SlpProvider_js__WEBPACK_IMPORTED_MODULE_6__._convertBalanceBigNumbers)((await this.SlpDbQuery((0,_SlpDbTemplates_js__WEBPACK_IMPORTED_MODULE_5__.SlpTokenBalanceTemplate)(slpaddr, tokenId)))\n            .g);\n        return balances[0] || (0,_SlpProvider_js__WEBPACK_IMPORTED_MODULE_6__._emptyTokenBalance)(tokenId);\n    }\n    // get all slp transactions of this address\n    async SlpAddressTransactionHistory(slpaddr, tokenId, limit = 100, skip = 0) {\n        const response = await this.SlpDbQuery((0,_SlpDbTemplates_js__WEBPACK_IMPORTED_MODULE_5__.SlpAddressTransactionHistoryTemplate)(slpaddr, tokenId, limit, skip));\n        return response.c.concat(response.u);\n    }\n    // waits for next slp transaction to appear in mempool, code execution is halted\n    async SlpWaitForTransaction(slpaddr, tokenId) {\n        return new Promise(async (resolve) => {\n            const cancelFn = this.SlpWatchTransactions(async (tx) => {\n                await cancelFn();\n                resolve(tx);\n            }, slpaddr, tokenId);\n        });\n    }\n    // waits for a certain slp token balance to be available in this wallet, code execution is halted\n    async SlpWaitForBalance(value, slpaddr, tokenId) {\n        return new Promise((resolve) => {\n            const cancelFn = this.SlpWatchBalance(async (balance) => {\n                if (balance.value.isGreaterThanOrEqualTo(new (bignumber_js__WEBPACK_IMPORTED_MODULE_0___default())(value))) {\n                    await cancelFn();\n                    resolve(balance);\n                }\n            }, slpaddr, tokenId);\n        });\n    }\n    // set's up a callback to be executed each time the token balance of the wallet is changed\n    SlpWatchBalance(callback, slpaddr, tokenId) {\n        return this.SlpWatchTransactions(async () => {\n            const balance = await this.SlpTokenBalance(slpaddr, tokenId);\n            callback(balance);\n        }, slpaddr, tokenId);\n    }\n    // sets up a callback to be executed each time a new transaction associated with this wallet's address is entering the mempool\n    SlpWatchTransactions(callback, slpaddr, tokenId) {\n        const eventSource = this.SlpSocketEventSource((0,_SlpDbTemplates_js__WEBPACK_IMPORTED_MODULE_5__.SlpWaitForTransactionTemplate)(slpaddr, tokenId));\n        const cancelFn = async () => {\n            eventSource.close();\n        };\n        eventSource.addEventListener(\"message\", async (txEvent) => {\n            const data = JSON.parse(txEvent.data);\n            if (data.data && data.data.length) {\n                const tx = {\n                    tx_hash: data.data[0].tx.h,\n                    height: 0,\n                    details: data.data[0],\n                };\n                callback(tx);\n            }\n        }, false);\n        return cancelFn;\n    }\n    SlpDbQuery(queryObject) {\n        if (this.caching) {\n            axiosInstance.defaults.headers = {};\n        }\n        else {\n            axiosInstance.defaults.headers = noCacheHeaders;\n        }\n        return new Promise((resolve, reject) => {\n            const url = `${this.servers[this.network].dataSource}/q/${B64QueryString(queryObject)}`;\n            fetch_retry(url).then((response) => {\n                if (response.hasOwnProperty(\"error\")) {\n                    reject(new Error(response[\"error\"]));\n                }\n                resolve(response.data);\n            });\n        });\n    }\n    SlpSocketEventSource(queryObject) {\n        const url = `${this.servers[this.network].eventSource}/s/${B64QueryString(queryObject)}`;\n        return new _util_eventsource_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](url);\n    }\n}\nSlpDbProvider.defaultServers = {\n    mainnet: {\n        dataSource: \"https://slpdb.fountainhead.cash\",\n        eventSource: \"https://slpsocket.fountainhead.cash\",\n    },\n    testnet: {\n        dataSource: \"https://slpdb-testnet.fountainhead.cash\",\n        eventSource: \"https://slpsocket-testnet.fountainhead.cash\",\n    },\n    regtest: {\n        dataSource: \"http://localhost:12300\",\n        eventSource: \"http://localhost:12301\",\n    },\n};\nconst noCacheHeaders = {\n    \"Cache-Control\": \"no-cache\",\n    Pragma: \"no-cache\",\n    Expires: \"0\",\n};\nconst axiosInstance = axios__WEBPACK_IMPORTED_MODULE_1___default().create({\n    headers: noCacheHeaders,\n});\nconst fetch_retry = (url, options = {}, n = 5) => axiosInstance.get(url, options).catch(function (error) {\n    if (n === 0) {\n        throw error;\n    }\n    return new Promise((resolve) => {\n        setTimeout(() => resolve(fetch_retry(url, options, n - 1)), 1000);\n    });\n});\nconst B64QueryString = function (queryObject) {\n    if (!queryObject || !Object.keys(queryObject).length) {\n        throw new Error(\"Empty SLPDB query\");\n    }\n    return (0,_util_base64_js__WEBPACK_IMPORTED_MODULE_7__.btoa)(JSON.stringify(queryObject));\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/slp/SlpDbProvider.ts?");

/***/ }),

/***/ "./src/slp/SlpDbTemplates.ts":
/*!***********************************!*\
  !*** ./src/slp/SlpDbTemplates.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SlpAddressTransactionHistoryTemplate\": () => (/* binding */ SlpAddressTransactionHistoryTemplate),\n/* harmony export */   \"SlpAllOutpointsTemplate\": () => (/* binding */ SlpAllOutpointsTemplate),\n/* harmony export */   \"SlpAllTokenBalancesTemplate\": () => (/* binding */ SlpAllTokenBalancesTemplate),\n/* harmony export */   \"SlpAllUtxosTemplate\": () => (/* binding */ SlpAllUtxosTemplate),\n/* harmony export */   \"SlpBatonUtxosTemplate\": () => (/* binding */ SlpBatonUtxosTemplate),\n/* harmony export */   \"SlpSpendableUtxosTemplate\": () => (/* binding */ SlpSpendableUtxosTemplate),\n/* harmony export */   \"SlpTokenBalanceTemplate\": () => (/* binding */ SlpTokenBalanceTemplate),\n/* harmony export */   \"SlpTokenInfoTemplate\": () => (/* binding */ SlpTokenInfoTemplate),\n/* harmony export */   \"SlpWaitForTransactionTemplate\": () => (/* binding */ SlpWaitForTransactionTemplate)\n/* harmony export */ });\n// Slp Utxos for bch operation, to prevent accident burning of tokens and baton\n// prettier-ignore\nconst SlpAllUtxosTemplate = (slpaddr) => ({\n    \"v\": 3,\n    \"q\": {\n        \"db\": [\"g\"],\n        \"aggregate\": [\n            {\n                \"$match\": {\n                    \"graphTxn.outputs.address\": slpaddr,\n                    \"graphTxn.outputs.status\": {\n                        \"$in\": [\n                            \"UNSPENT\",\n                            \"BATON_UNSPENT\"\n                        ]\n                    }\n                }\n            },\n            {\n                \"$unwind\": \"$graphTxn.outputs\"\n            },\n            {\n                \"$match\": {\n                    \"graphTxn.outputs.address\": slpaddr,\n                    \"graphTxn.outputs.status\": {\n                        \"$in\": [\n                            \"UNSPENT\",\n                            \"BATON_UNSPENT\"\n                        ]\n                    }\n                }\n            }\n        ],\n        \"limit\": 1e6,\n    },\n    \"r\": {\n        \"f\": \"[ .[] | { txid: .graphTxn.txid, vout: .graphTxn.outputs.vout, satoshis: .graphTxn.outputs.bchSatoshis, value: .graphTxn.outputs.slpAmount, decimals: .graphTxn.details.decimals, ticker: .graphTxn.details.symbol, tokenId: .graphTxn.details.tokenIdHex, type: .graphTxn.details.versionType, parentTokenId: .tokenDetails.nftGroupIdHex } ]\"\n    }\n});\n// Slp outpoints for bch operation, to prevent accident burning of tokens and baton\n// prettier-ignore\nconst SlpAllOutpointsTemplate = (slpaddr) => ({\n    \"v\": 3,\n    \"q\": {\n        \"db\": [\"g\"],\n        \"aggregate\": [\n            {\n                \"$match\": {\n                    \"graphTxn.outputs.address\": slpaddr,\n                    \"graphTxn.outputs.status\": {\n                        \"$in\": [\n                            \"UNSPENT\",\n                            \"BATON_UNSPENT\"\n                        ]\n                    }\n                }\n            },\n            {\n                \"$unwind\": \"$graphTxn.outputs\"\n            },\n            {\n                \"$match\": {\n                    \"graphTxn.outputs.address\": slpaddr,\n                    \"graphTxn.outputs.status\": {\n                        \"$in\": [\n                            \"UNSPENT\",\n                            \"BATON_UNSPENT\"\n                        ]\n                    }\n                }\n            },\n            {\n                \"$project\": {\n                    \"graphTxn\": 1\n                }\n            }\n        ],\n        \"limit\": 1e6,\n    },\n    \"r\": {\n        \"f\": \"[ .[] | [.graphTxn.txid, .graphTxn.outputs.vout | tostring] | join(\\\":\\\") ]\"\n    }\n});\n// Slp Utxos for spending\n// prettier-ignore\nconst SlpSpendableUtxosTemplate = (slpaddr, tokenId) => {\n    let q = {\n        \"v\": 3,\n        \"q\": {\n            \"db\": [\"g\"],\n            \"aggregate\": [\n                {\n                    \"$match\": {\n                        \"graphTxn.outputs.address\": slpaddr,\n                        \"graphTxn.outputs.status\": \"UNSPENT\"\n                    }\n                },\n                {\n                    \"$unwind\": \"$graphTxn.outputs\"\n                },\n                {\n                    \"$match\": {\n                        \"graphTxn.outputs.address\": slpaddr,\n                        \"graphTxn.outputs.status\": \"UNSPENT\"\n                    }\n                },\n                {\n                    \"$lookup\": {\n                        \"from\": \"tokens\",\n                        \"localField\": \"graphTxn.details.tokenIdHex\",\n                        \"foreignField\": \"tokenDetails.tokenIdHex\",\n                        \"as\": \"token\"\n                    }\n                }\n            ]\n        },\n        \"r\": {\n            \"f\": \"[ .[] | { txid: .graphTxn.txid, vout: .graphTxn.outputs.vout, satoshis: .graphTxn.outputs.bchSatoshis, value: .graphTxn.outputs.slpAmount, decimals: .token[0].tokenDetails.decimals, ticker: .token[0].tokenDetails.symbol, tokenId: .graphTxn.details.tokenIdHex, type: .graphTxn.details.versionType, parentTokenId: .token[0].nftParentId } ]\"\n        }\n    };\n    if (tokenId) {\n        q[\"q\"][\"aggregate\"][0][\"$match\"][\"graphTxn.details.tokenIdHex\"] = tokenId;\n    }\n    // console.log(JSON.stringify(q, null, 2));\n    return q;\n};\n// prettier-ignore\nconst SlpAllTokenBalancesTemplate = (slpaddr) => {\n    let q = {\n        \"v\": 3,\n        \"q\": {\n            \"db\": [\"g\"],\n            \"aggregate\": [\n                {\n                    \"$match\": {\n                        \"graphTxn.outputs.status\": \"UNSPENT\",\n                        \"graphTxn.outputs.address\": slpaddr\n                    }\n                },\n                {\n                    \"$unwind\": \"$graphTxn.outputs\"\n                },\n                {\n                    \"$match\": {\n                        \"graphTxn.outputs.status\": \"UNSPENT\",\n                        \"graphTxn.outputs.address\": slpaddr\n                    }\n                },\n                {\n                    \"$group\": {\n                        \"_id\": \"$tokenDetails.tokenIdHex\",\n                        \"slpAmount\": {\n                            \"$sum\": \"$graphTxn.outputs.slpAmount\"\n                        }\n                    }\n                },\n                {\n                    \"$sort\": {\n                        \"slpAmount\": -1\n                    }\n                },\n                {\n                    \"$lookup\": {\n                        \"from\": \"tokens\",\n                        \"localField\": \"_id\",\n                        \"foreignField\": \"tokenDetails.tokenIdHex\",\n                        \"as\": \"token\"\n                    }\n                },\n                {\n                    \"$match\": {\n                        \"slpAmount\": {\n                            \"$gt\": 0\n                        }\n                    }\n                }\n            ],\n            \"sort\": {\n                \"slpAmount\": -1\n            }\n        },\n        \"r\": {\n            \"f\": \"[ .[] | { value: .slpAmount, ticker: .token[0].tokenDetails.symbol, name: .token[0].tokenDetails.name, tokenId: ._id, type: .token[0].tokenDetails.versionType, parentTokenId: .token[0].nftParentId } ]\"\n        }\n    };\n    return q;\n};\n// prettier-ignore\nconst SlpTokenBalanceTemplate = (slpaddr, tokenId) => {\n    let q = {\n        \"v\": 3,\n        \"q\": {\n            \"db\": [\"g\"],\n            \"aggregate\": [\n                {\n                    \"$match\": {\n                        \"tokenDetails.tokenIdHex\": tokenId\n                    }\n                },\n                {\n                    \"$match\": {\n                        \"graphTxn.outputs.status\": \"UNSPENT\",\n                        \"graphTxn.outputs.address\": slpaddr\n                    }\n                },\n                {\n                    \"$unwind\": \"$graphTxn.outputs\"\n                },\n                {\n                    \"$match\": {\n                        \"graphTxn.outputs.status\": \"UNSPENT\",\n                        \"graphTxn.outputs.address\": slpaddr\n                    }\n                },\n                {\n                    \"$group\": {\n                        \"_id\": \"$tokenDetails.tokenIdHex\",\n                        \"slpAmount\": {\n                            \"$sum\": \"$graphTxn.outputs.slpAmount\"\n                        }\n                    }\n                },\n                {\n                    \"$sort\": {\n                        \"slpAmount\": -1\n                    }\n                },\n                {\n                    \"$lookup\": {\n                        \"from\": \"tokens\",\n                        \"localField\": \"_id\",\n                        \"foreignField\": \"tokenDetails.tokenIdHex\",\n                        \"as\": \"token\"\n                    }\n                }\n            ],\n            \"sort\": {\n                \"slpAmount\": -1\n            }\n        },\n        \"r\": {\n            \"f\": \"[ .[] | { value: .slpAmount, ticker: .token[0].tokenDetails.symbol, name: .token[0].tokenDetails.name, tokenId: ._id, type: .token[0].tokenDetails.versionType, parentTokenId: .token[0].nftParentId } ]\"\n        }\n    };\n    // console.log(JSON.stringify(q, null, 2));\n    return q;\n};\n// prettier-ignore\nconst SlpAddressTransactionHistoryTemplate = (address, tokenId, limit = 100, skip = 0) => {\n    const q = {\n        \"v\": 3,\n        \"q\": {\n            \"db\": [\"c\", \"u\"],\n            \"find\": {\n                \"$query\": {\n                    \"$or\": [\n                        { \"in.e.a\": address },\n                        { \"out.e.a\": address },\n                    ],\n                    \"$and\": [\n                        { \"slp.valid\": true },\n                    ]\n                },\n            },\n            \"sort\": { \"blk.i\": 1 },\n            \"limit\": limit,\n            \"skip\": skip,\n        },\n        \"r\": {\n            \"f\": \"[ .[] | { tx_hash: .tx.h, height: .blk.i, details: . } ]\"\n        }\n    };\n    if (tokenId) {\n        q[\"q\"][\"find\"][\"$query\"][\"$and\"].push({ \"slp.detail.tokenIdHex\": tokenId });\n    }\n    // console.log(JSON.stringify(q, null, 2));\n    return q;\n};\n// prettier-ignore\nconst SlpWaitForTransactionTemplate = (slpaddr, tokenId) => {\n    let q = {\n        \"v\": 3,\n        \"q\": {\n            \"db\": [\"c\", \"u\"],\n            \"find\": {}\n        }\n    };\n    if (slpaddr) {\n        q[\"q\"][\"find\"][\"$or\"] = [\n            {\n                \"in.e.a\": slpaddr\n            },\n            {\n                \"out.e.a\": slpaddr\n            }\n        ];\n    }\n    if (tokenId) {\n        q[\"q\"][\"find\"][\"slp.detail.tokenIdHex\"] = tokenId;\n    }\n    return q;\n};\n// Lookup SLP token information\n// prettier-ignore\nconst SlpTokenInfoTemplate = (tokenId, limit = 100, skip = 0) => {\n    let q = {\n        \"v\": 3,\n        \"q\": {\n            \"db\": [\"t\"],\n            \"find\": {},\n            \"sort\": {\n                \"tokenStats.approx_txns_since_genesis\": -1\n            },\n            \"limit\": limit,\n            \"skip\": skip,\n        },\n        \"r\": {\n            \"f\": \"[ .[] | { ticker: .tokenDetails.symbol, name: .tokenDetails.name, tokenId: .tokenDetails.tokenIdHex, decimals: .tokenDetails.decimals, documentUrl: .tokenDetails.documentUri, documentHash: .tokenDetails.documentSha256Hex, initialAmount: .tokenDetails.genesisOrMintQuantity, type: .tokenDetails.versionType, parentTokenId: .nftParentId } ]\"\n        }\n    };\n    if (tokenId) {\n        q[\"q\"][\"find\"][\"tokenDetails.tokenIdHex\"] = tokenId;\n    }\n    // console.log(q);\n    return q;\n};\n// Slp Utxos for bch operation, to prevent accident burning of tokens and baton\n// prettier-ignore\nconst SlpBatonUtxosTemplate = (slpaddr, tokenId) => {\n    let q = {\n        \"v\": 3,\n        \"q\": {\n            \"db\": [\"g\"],\n            \"aggregate\": [\n                {\n                    \"$match\": {\n                        \"graphTxn.outputs.address\": slpaddr,\n                        \"graphTxn.outputs.status\": \"BATON_UNSPENT\"\n                    }\n                },\n                {\n                    \"$unwind\": \"$graphTxn.outputs\"\n                },\n                {\n                    \"$match\": {\n                        \"graphTxn.outputs.address\": slpaddr,\n                        \"graphTxn.outputs.status\": \"BATON_UNSPENT\"\n                    }\n                },\n                {\n                    \"$project\": {\n                        \"graphTxn\": 1\n                    }\n                },\n                {\n                    \"$lookup\": {\n                        \"from\": \"tokens\",\n                        \"localField\": \"graphTxn.details.tokenIdHex\",\n                        \"foreignField\": \"tokenDetails.tokenIdHex\",\n                        \"as\": \"token\"\n                    }\n                }\n            ]\n        },\n        \"r\": {\n            \"f\": \"[ .[] | { txid: .graphTxn.txid, vout: .graphTxn.outputs.vout, satoshis: .graphTxn.outputs.bchSatoshis, value: .graphTxn.outputs.slpAmount, decimals: .token[0].tokenDetails.decimals, ticker: .token[0].tokenDetails.symbol, tokenId: .graphTxn.details.tokenIdHex, type: .graphTxn.details.versionType } ]\"\n        }\n    };\n    if (tokenId) {\n        q[\"q\"][\"aggregate\"][0][\"$match\"][\"graphTxn.details.tokenIdHex\"] = tokenId;\n    }\n    // console.log(JSON.stringify(q, null, 2));\n    return q;\n};\n\n\n//# sourceURL=webpack://mainnet-js/./src/slp/SlpDbTemplates.ts?");

/***/ }),

/***/ "./src/slp/SlpLibAuth.ts":
/*!*******************************!*\
  !*** ./src/slp/SlpLibAuth.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SlpGetGenesisOutputs\": () => (/* binding */ SlpGetGenesisOutputs),\n/* harmony export */   \"SlpGetMintOutputs\": () => (/* binding */ SlpGetMintOutputs),\n/* harmony export */   \"SlpGetSendOutputs\": () => (/* binding */ SlpGetSendOutputs)\n/* harmony export */ });\n/* unused harmony exports bigIntToBinUint64BE, SlpTxoTemplate */\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/number.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/utf8.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/schema/authentication-template.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-bch/compiler-bch.js\");\n/* harmony import */ var slp_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! slp-parser */ \"../../node_modules/slp-parser/dist/index.js\");\n/* harmony import */ var slp_parser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(slp_parser__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _wallet_model_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../wallet/model.js */ \"./src/wallet/model.ts\");\n/* harmony import */ var _slp_interface_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../slp/interface.js */ \"./src/slp/interface.ts\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bignumber.js */ \"../../node_modules/bignumber.js/bignumber.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../constant.js */ \"./src/constant.ts\");\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../enum.js */ \"./src/enum.ts\");\n/* harmony import */ var _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/bchaddr.js */ \"../../node_modules/bchaddrjs-slp/src/bchaddr.js\");\n/* harmony import */ var _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_6__);\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"../../node_modules/buffer/index.js\")[\"Buffer\"];\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_wallet_model_js__WEBPACK_IMPORTED_MODULE_7__, _enum_js__WEBPACK_IMPORTED_MODULE_9__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_11__]);\n([_wallet_model_js__WEBPACK_IMPORTED_MODULE_7__, _enum_js__WEBPACK_IMPORTED_MODULE_9__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_11__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\nconst bigIntToBinUint64BE = (value) => {\n    return (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.bigIntToBinUint64LE)(value).reverse();\n};\nconst stringToBin = (value, hex = false) => {\n    if (!value)\n        return Uint8Array.from([0x4c, 0x00]);\n    if (hex)\n        return Uint8Array.from([...[value.length / 2], ...(0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.hexToBin)(value)]);\n    const length = new TextEncoder().encode(value).length;\n    return Uint8Array.from([...[length], ...(0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.utf8ToBin)(value)]);\n};\nconst supportedTokenTypes = [\n    _slp_interface_js__WEBPACK_IMPORTED_MODULE_5__.SlpTokenType.Type1,\n    _slp_interface_js__WEBPACK_IMPORTED_MODULE_5__.SlpTokenType.NftParent,\n    _slp_interface_js__WEBPACK_IMPORTED_MODULE_5__.SlpTokenType.NftChild,\n];\nconst SlpGetGenesisOutputs = async (options) => {\n    if (!(0,_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_6__.isValidAddress)(options.tokenReceiverSlpAddr)) {\n        throw new Error(`Invalid tokenReceiverSlpAddr ${options.tokenReceiverSlpAddr}`);\n    }\n    if (!(0,_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_6__.isValidAddress)(options.batonReceiverSlpAddr)) {\n        throw new Error(`Invalid batonReceiverSlpAddr ${options.batonReceiverSlpAddr}`);\n    }\n    if (!options.type) {\n        options.type = _slp_interface_js__WEBPACK_IMPORTED_MODULE_5__.SlpTokenType.Type1;\n    }\n    if (!supportedTokenTypes.includes(options.type)) {\n        throw new Error(`Unsupported token type ${options.type}`);\n    }\n    // explicitly convert initial amount to bignumber\n    options.initialAmount = new (bignumber_js__WEBPACK_IMPORTED_MODULE_1___default())(options.initialAmount);\n    if (options.initialAmount.isLessThanOrEqualTo(0)) {\n        throw Error(\"Initial genesis token amount should be greater than zero\");\n    }\n    if (options.decimals < 0 || options.decimals > 9) {\n        throw new Error(\"Genesis allows decimal places between 0\");\n    }\n    const addrs = options.endBaton\n        ? [options.tokenReceiverSlpAddr]\n        : [options.tokenReceiverSlpAddr, options.batonReceiverSlpAddr];\n    const bchSendRequests = addrs.map((val) => new _wallet_model_js__WEBPACK_IMPORTED_MODULE_7__.SendRequest({\n        cashaddr: (0,_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_6__.toCashAddress)(val),\n        value: _constant_js__WEBPACK_IMPORTED_MODULE_8__.DUST_UTXO_THRESHOLD,\n        unit: _enum_js__WEBPACK_IMPORTED_MODULE_9__.UnitEnum.SAT,\n    }));\n    const template = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_10__.importAuthenticationTemplate)(SlpTxoTemplate);\n    if (typeof template === \"string\") {\n        throw new Error(\"Transaction template error\");\n    }\n    const compiler = await (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_11__.authenticationTemplateToCompilerBCH)(template);\n    const rawTokenAmount = BigInt(options.initialAmount.shiftedBy(options.decimals));\n    const batonVout = options.endBaton ? [0x4c, 0x00] : [0x01, 0x02];\n    let genesisTxoBytecode = compiler.generateBytecode({\n        scriptId: \"genesis_lock\",\n        data: {\n            bytecode: {\n                g_token_type: Uint8Array.from([...[0x01], ...[options.type]]),\n                g_token_ticker: stringToBin(options.ticker),\n                g_token_name: stringToBin(options.name),\n                g_token_document_url: stringToBin(options.documentUrl),\n                g_token_document_hash: stringToBin(options.documentHash, true),\n                g_decimals: Uint8Array.from([...[0x01], ...[options.decimals]]),\n                g_mint_baton_vout: Uint8Array.from(batonVout),\n                g_initial_token_mint_quantity: Uint8Array.from([\n                    ...[0x08],\n                    ...bigIntToBinUint64BE(rawTokenAmount),\n                ]),\n            },\n        },\n    });\n    if (!genesisTxoBytecode.success) {\n        throw new Error(genesisTxoBytecode.errors.map((e) => e.error).join(\"\\n\"));\n    }\n    return {\n        SlpOutputs: [\n            {\n                lockingBytecode: genesisTxoBytecode.bytecode,\n                valueSatoshis: 0n,\n            },\n        ],\n        FundingSlpUtxos: [],\n        BchSendRequests: bchSendRequests,\n    };\n};\nconst SlpGetMintOutputs = async (options, slpBatonUtxos) => {\n    if (!(0,_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_6__.isValidAddress)(options.tokenReceiverSlpAddr)) {\n        throw new Error(`Invalid tokenReceiverSlpAddr ${options.tokenReceiverSlpAddr}`);\n    }\n    if (!(0,_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_6__.isValidAddress)(options.batonReceiverSlpAddr)) {\n        throw new Error(`Invalid batonReceiverSlpAddr ${options.batonReceiverSlpAddr}`);\n    }\n    const tokenType = slpBatonUtxos[0].type;\n    if (!supportedTokenTypes.includes(tokenType)) {\n        throw new Error(`Unsupported token type ${tokenType}`);\n    }\n    const addrs = options.endBaton\n        ? [options.tokenReceiverSlpAddr]\n        : [options.tokenReceiverSlpAddr, options.batonReceiverSlpAddr];\n    const bchSendRequests = addrs.map((val) => new _wallet_model_js__WEBPACK_IMPORTED_MODULE_7__.SendRequest({\n        cashaddr: (0,_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_6__.toCashAddress)(val),\n        value: _constant_js__WEBPACK_IMPORTED_MODULE_8__.DUST_UTXO_THRESHOLD,\n        unit: _enum_js__WEBPACK_IMPORTED_MODULE_9__.UnitEnum.SAT,\n    }));\n    const template = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_10__.importAuthenticationTemplate)(SlpTxoTemplate);\n    if (typeof template === \"string\") {\n        throw new Error(\"Transaction template error\");\n    }\n    const compiler = await (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_11__.authenticationTemplateToCompilerBCH)(template);\n    const decimals = slpBatonUtxos[0].decimals;\n    const amount = new (bignumber_js__WEBPACK_IMPORTED_MODULE_1___default())(options.value).shiftedBy(decimals);\n    const batonVout = options.endBaton ? [0x4c, 0x00] : [0x01, 0x02];\n    let mintTxoBytecode = compiler.generateBytecode({\n        scriptId: \"mint_lock\",\n        data: {\n            bytecode: {\n                m_token_type: Uint8Array.from([...[0x01], ...[tokenType]]),\n                m_token_id: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.hexToBin)(options.tokenId),\n                m_mint_baton_vout: Uint8Array.from(batonVout),\n                m_additional_token_quantity: Uint8Array.from([\n                    ...[0x08],\n                    ...bigIntToBinUint64BE(BigInt(amount.toString())),\n                ]),\n            },\n        },\n    });\n    if (!mintTxoBytecode.success) {\n        throw new Error(mintTxoBytecode.errors.map((e) => e.error).join(\"\\n\"));\n    }\n    return {\n        SlpOutputs: [\n            {\n                lockingBytecode: mintTxoBytecode.bytecode,\n                valueSatoshis: 0n,\n            },\n        ],\n        FundingSlpUtxos: slpBatonUtxos,\n        BchSendRequests: bchSendRequests,\n    };\n};\nconst SlpGetSendOutputs = async (changeSlpaddr, slpUtxos, sendRequests) => {\n    if (!(0,_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_6__.isValidAddress)(changeSlpaddr)) {\n        throw new Error(`Invalid changeSlpaddr ${changeSlpaddr}`);\n    }\n    if (!slpUtxos.length) {\n        throw new Error(\"No available tokens to spend\");\n    }\n    const decimals = slpUtxos[0].decimals;\n    const tokenId = slpUtxos[0].tokenId;\n    const tokenType = slpUtxos[0].type;\n    if (!supportedTokenTypes.includes(tokenType)) {\n        throw new Error(`Unsupported token type ${tokenType}`);\n    }\n    // sort inputs in ascending order to eliminate the unnecessary splitting\n    // and to prefer the consolidation of small inputs\n    slpUtxos = slpUtxos.sort((a, b) => a.value.comparedTo(b.value));\n    const slpAvailableAmount = slpUtxos\n        .map((val) => new (bignumber_js__WEBPACK_IMPORTED_MODULE_1___default())(val.value))\n        .reduce((a, b) => bignumber_js__WEBPACK_IMPORTED_MODULE_1___default().sum(a, b), new (bignumber_js__WEBPACK_IMPORTED_MODULE_1___default())(0));\n    const slpSpendAmount = sendRequests\n        .map((val) => new (bignumber_js__WEBPACK_IMPORTED_MODULE_1___default())(val.value))\n        .reduce((a, b) => bignumber_js__WEBPACK_IMPORTED_MODULE_1___default().sum(a, b), new (bignumber_js__WEBPACK_IMPORTED_MODULE_1___default())(0));\n    if (slpSpendAmount.isLessThanOrEqualTo(0)) {\n        throw new Error(\"Refusing to spend 0 tokens\");\n    }\n    if (slpSpendAmount.isGreaterThan(slpAvailableAmount)) {\n        throw new Error(\"Not enough tokens to spend\");\n    }\n    let fundingSlpUtxos = [];\n    let totalInputTokens = new (bignumber_js__WEBPACK_IMPORTED_MODULE_1___default())(0);\n    for (let slputxo of slpUtxos) {\n        const amountTooLow = totalInputTokens.isLessThan(slpSpendAmount);\n        if (amountTooLow) {\n            totalInputTokens = totalInputTokens.plus(slputxo.value);\n            fundingSlpUtxos.push(slputxo);\n        }\n        else {\n            break;\n        }\n    }\n    const template = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_10__.importAuthenticationTemplate)(SlpTxoTemplate);\n    if (typeof template === \"string\") {\n        throw new Error(\"Transaction template error\");\n    }\n    const compiler = await (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_11__.authenticationTemplateToCompilerBCH)(template);\n    const change = totalInputTokens.minus(slpSpendAmount);\n    let values = sendRequests.map((val) => new (bignumber_js__WEBPACK_IMPORTED_MODULE_1___default())(val.value));\n    if (change.isGreaterThan(new (bignumber_js__WEBPACK_IMPORTED_MODULE_1___default())(0))) {\n        values.push(change);\n        sendRequests.push({\n            slpaddr: changeSlpaddr,\n            tokenId: tokenId,\n            value: new (bignumber_js__WEBPACK_IMPORTED_MODULE_1___default())(0),\n        });\n    }\n    const bchSendRequests = sendRequests.map((val) => new _wallet_model_js__WEBPACK_IMPORTED_MODULE_7__.SendRequest({\n        cashaddr: (0,_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_6__.toCashAddress)(val.slpaddr),\n        value: _constant_js__WEBPACK_IMPORTED_MODULE_8__.DUST_UTXO_THRESHOLD,\n        unit: _enum_js__WEBPACK_IMPORTED_MODULE_9__.UnitEnum.SAT,\n    }));\n    values = values.map((val) => val.shiftedBy(decimals));\n    let result = new Uint8Array();\n    for (const val of values) {\n        result = new Uint8Array([\n            ...result,\n            ...[0x08],\n            ...bigIntToBinUint64BE(BigInt(val.toString())),\n        ]);\n    }\n    let sendTxoBytecode = compiler.generateBytecode({\n        scriptId: \"send_lock\",\n        data: {\n            bytecode: {\n                s_token_type: Uint8Array.from([...[0x01], ...[tokenType]]),\n                s_token_id: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.hexToBin)(tokenId),\n                s_token_output_quantities: result,\n            },\n        },\n    });\n    if (!sendTxoBytecode.success) {\n        throw new Error(sendTxoBytecode.errors.map((e) => e.error).join(\"\\n\"));\n    }\n    // enforce checking\n    (0,slp_parser__WEBPACK_IMPORTED_MODULE_0__.parseSLP)(Buffer.from((0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.binToHex)(sendTxoBytecode.bytecode), \"hex\"));\n    return {\n        SlpOutputs: [\n            {\n                lockingBytecode: sendTxoBytecode.bytecode,\n                valueSatoshis: 0n,\n            },\n        ],\n        FundingSlpUtxos: fundingSlpUtxos,\n        BchSendRequests: bchSendRequests,\n    };\n};\n// prettier-ignore\nconst SlpTxoTemplate = {\n    \"$schema\": \"https://bitauth.com/schemas/authentication-template-v0.schema.json\",\n    \"description\": \"SLP Token transaction output templates\",\n    \"name\": \"SLP\",\n    \"entities\": {\n        \"genesis_variables\": {\n            \"description\": \"Variables used in genesis template.\",\n            \"name\": \"Genesis_Variables\",\n            \"scripts\": [\n                \"genesis_lock\",\n                \"genesis_unlock\"\n            ],\n            \"variables\": {\n                \"g_token_type\": {\n                    \"description\": \"1 to 2 byte integer\",\n                    \"name\": \"token_type\",\n                    \"type\": \"AddressData\"\n                },\n                \"g_token_ticker\": {\n                    \"description\": \"0 to ∞ bytes, suggested utf-8\",\n                    \"name\": \"token_ticker\",\n                    \"type\": \"AddressData\"\n                },\n                \"g_token_name\": {\n                    \"description\": \"0 to ∞ bytes, suggested utf-8\",\n                    \"name\": \"token_name\",\n                    \"type\": \"AddressData\"\n                },\n                \"g_token_document_url\": {\n                    \"description\": \"0 to ∞ bytes, suggested ascii\",\n                    \"name\": \"token_document_url\",\n                    \"type\": \"AddressData\"\n                },\n                \"g_token_document_hash\": {\n                    \"description\": \"0 bytes or 32 bytes\",\n                    \"name\": \"token_document_hash\",\n                    \"type\": \"AddressData\"\n                },\n                \"g_decimals\": {\n                    \"description\": \"1 byte in range 0x00-0x09\",\n                    \"name\": \"decimals\",\n                    \"type\": \"AddressData\"\n                },\n                \"g_mint_baton_vout\": {\n                    \"description\": \"0 bytes, or 1 byte in range 0x02-0xff\",\n                    \"name\": \"mint_baton_vout\",\n                    \"type\": \"AddressData\"\n                },\n                \"g_initial_token_mint_quantity\": {\n                    \"description\": \"8 byte integer\",\n                    \"name\": \"initial_token_mint_quantity\",\n                    \"type\": \"AddressData\"\n                }\n            }\n        },\n        \"send_variables\": {\n            \"description\": \"\",\n            \"name\": \"Send_Variables\",\n            \"scripts\": [\n                \"send_lock\",\n                \"send_unlock\"\n            ],\n            \"variables\": {\n                \"s_token_type\": {\n                    \"description\": \"1 to 2 byte integer\",\n                    \"name\": \"token_type\",\n                    \"type\": \"AddressData\"\n                },\n                \"s_token_id\": {\n                    \"description\": \"Token Id, genesis transaction hex\",\n                    \"name\": \"Token_Id\",\n                    \"type\": \"AddressData\"\n                },\n                \"s_token_output_quantities\": {\n                    \"description\": \"N 8 byte integer token amounts (up to 19). At least one is required. Each one is a push.\\nN BCH transaction outputs should be specified\",\n                    \"name\": \"Token Output Quantities\",\n                    \"type\": \"AddressData\"\n                }\n            }\n        },\n        \"mint_variables\": {\n            \"description\": \"\",\n            \"name\": \"Mint_Variables\",\n            \"scripts\": [\n                \"mint_lock\",\n                \"mint_unlock\"\n            ],\n            \"variables\": {\n                \"m_token_type\": {\n                    \"description\": \"1 to 2 byte integer\",\n                    \"name\": \"token_type\",\n                    \"type\": \"AddressData\"\n                },\n                \"m_token_id\": {\n                    \"description\": \"Token Id, genesis transaction hex\",\n                    \"name\": \"Token_Id\",\n                    \"type\": \"AddressData\"\n                },\n                \"m_mint_baton_vout\": {\n                    \"description\": \"0 bytes, or 1 byte in range 0x02-0xff\",\n                    \"name\": \"mint_baton_vout\",\n                    \"type\": \"AddressData\"\n                },\n                \"m_additional_token_quantity\": {\n                    \"description\": \"Amount of tokens to mint, 8 byte integer\",\n                    \"name\": \"Additinial token quantity\",\n                    \"type\": \"AddressData\"\n                }\n            }\n        }\n    },\n    \"scenarios\": {\n        \"genesis\": {\n            \"data\": {\n                \"bytecode\": {\n                    \"g_token_type\": \"0x01\",\n                    \"g_token_ticker\": \"0x00\",\n                    \"g_token_name\": \"0x00\",\n                    \"g_token_document_url\": \"0x00\",\n                    \"g_token_document_hash\": \"\",\n                    \"g_decimals\": \"0x09\",\n                    \"g_mint_baton_vout\": \"0x02\",\n                    \"g_initial_token_mint_quantity\": \"0x0102030405060708\"\n                }\n            },\n            \"description\": \"Genesis\",\n            \"name\": \"Genesis\",\n            \"transaction\": {\n                \"locktime\": 100\n            }\n        },\n        \"send\": {\n            \"data\": {\n                \"bytecode\": {\n                    \"s_token_type\": \"0x01\",\n                    \"s_token_id\": \"0x0000000000000000'0000000000000000'0000000000000000'0000000000000000'\",\n                    \"s_token_output_quantities\": \"0x0000000000000000\"\n                }\n            },\n            \"description\": \"Send\",\n            \"name\": \"Send\",\n            \"transaction\": {\n                \"locktime\": 100\n            }\n        },\n        \"mint\": {\n            \"data\": {\n                \"bytecode\": {\n                    \"m_token_type\": \"0x01\",\n                    \"m_token_id\": \"0x0000000000000000'0000000000000000'0000000000000000'0000000000000000'\",\n                    \"m_mint_baton_vout\": \"0x00\",\n                    \"m_additional_token_quantity\": \"0x0000000000000000\"\n                }\n            },\n            \"description\": \"Mint\",\n            \"name\": \"Mint\",\n            \"transaction\": {\n                \"locktime\": 100\n            }\n        }\n    },\n    \"scripts\": {\n        \"genesis_unlock\": {\n            \"fails\": [\n                \"genesis\"\n            ],\n            \"name\": \"Genesis Unlock\",\n            \"script\": \"// unlock script is required, so we leave it empty\",\n            \"unlocks\": \"genesis_lock\"\n        },\n        \"send_unlock\": {\n            \"fails\": [\n                \"send\"\n            ],\n            \"name\": \"Send Unlock\",\n            \"script\": \"\",\n            \"unlocks\": \"send_lock\"\n        },\n        \"mint_unlock\": {\n            \"fails\": [\n                \"mint\"\n            ],\n            \"name\": \"Mint Unlock\",\n            \"script\": \"\",\n            \"unlocks\": \"mint_lock\"\n        },\n        \"genesis_lock\": {\n            \"lockingType\": \"standard\",\n            \"name\": \"Genesis\",\n            \"script\": \"OP_RETURN <'SLP'0x00> g_token_type <'GENESIS'> g_token_ticker g_token_name g_token_document_url g_token_document_hash g_decimals g_mint_baton_vout g_initial_token_mint_quantity\"\n        },\n        \"send_lock\": {\n            \"lockingType\": \"standard\",\n            \"name\": \"Send\",\n            \"script\": \"OP_RETURN <'SLP'0x00> s_token_type <'SEND'> <s_token_id> s_token_output_quantities\"\n        },\n        \"mint_lock\": {\n            \"lockingType\": \"standard\",\n            \"name\": \"Mint\",\n            \"script\": \"OP_RETURN <'SLP'0x00> m_token_type <'MINT'> <m_token_id> m_mint_baton_vout m_additional_token_quantity\"\n        }\n    },\n    \"supported\": [\n        \"BCH_2020_05\"\n    ],\n    \"version\": 0\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/slp/SlpLibAuth.ts?");

/***/ }),

/***/ "./src/slp/SlpProvider.ts":
/*!********************************!*\
  !*** ./src/slp/SlpProvider.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_convertBalanceBigNumbers\": () => (/* binding */ _convertBalanceBigNumbers),\n/* harmony export */   \"_convertSlpTokenInfo\": () => (/* binding */ _convertSlpTokenInfo),\n/* harmony export */   \"_convertUtxoBigNumbers\": () => (/* binding */ _convertUtxoBigNumbers),\n/* harmony export */   \"_emptyTokenBalance\": () => (/* binding */ _emptyTokenBalance)\n/* harmony export */ });\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bignumber.js */ \"../../node_modules/bignumber.js/bignumber.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction _convertBalanceBigNumbers(balances) {\n    balances.forEach((val) => (val.value = new (bignumber_js__WEBPACK_IMPORTED_MODULE_0___default())(val.value)));\n    return balances;\n}\nfunction _convertUtxoBigNumbers(utxos) {\n    utxos.forEach((val) => (val.value = new (bignumber_js__WEBPACK_IMPORTED_MODULE_0___default())(val.value)));\n    return utxos;\n}\nfunction _convertSlpTokenInfo(tokenInfo) {\n    if (!tokenInfo)\n        return tokenInfo;\n    for (const key in tokenInfo) {\n        if (tokenInfo[key] === null) {\n            tokenInfo[key] = \"\";\n        }\n    }\n    tokenInfo.initialAmount = new (bignumber_js__WEBPACK_IMPORTED_MODULE_0___default())(tokenInfo.initialAmount);\n    return tokenInfo;\n}\nfunction _emptyTokenBalance(tokenId) {\n    return {\n        value: new (bignumber_js__WEBPACK_IMPORTED_MODULE_0___default())(0),\n        ticker: \"\",\n        name: \"\",\n        tokenId: tokenId,\n    };\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/slp/SlpProvider.ts?");

/***/ }),

/***/ "./src/slp/index.ts":
/*!**************************!*\
  !*** ./src/slp/index.ts ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BigNumber\": () => (/* reexport default from dynamic */ bignumber_js__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   \"GsppProvider\": () => (/* reexport safe */ _GsppProvider_js__WEBPACK_IMPORTED_MODULE_1__.GsppProvider),\n/* harmony export */   \"SlpDbProvider\": () => (/* reexport safe */ _SlpDbProvider_js__WEBPACK_IMPORTED_MODULE_0__.SlpDbProvider),\n/* harmony export */   \"SlpTokenType\": () => (/* reexport safe */ _interface_js__WEBPACK_IMPORTED_MODULE_3__.SlpTokenType)\n/* harmony export */ });\n/* harmony import */ var _SlpDbProvider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SlpDbProvider.js */ \"./src/slp/SlpDbProvider.ts\");\n/* harmony import */ var _GsppProvider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GsppProvider.js */ \"./src/slp/GsppProvider.ts\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bignumber.js */ \"../../node_modules/bignumber.js/bignumber.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interface.js */ \"./src/slp/interface.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_SlpDbProvider_js__WEBPACK_IMPORTED_MODULE_0__, _GsppProvider_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_SlpDbProvider_js__WEBPACK_IMPORTED_MODULE_0__, _GsppProvider_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/slp/index.ts?");

/***/ }),

/***/ "./src/slp/interface.ts":
/*!******************************!*\
  !*** ./src/slp/interface.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SlpTokenType\": () => (/* binding */ SlpTokenType)\n/* harmony export */ });\nvar SlpTokenType;\n(function (SlpTokenType) {\n    SlpTokenType[SlpTokenType[\"Type1\"] = 1] = \"Type1\";\n    SlpTokenType[SlpTokenType[\"NftParent\"] = 129] = \"NftParent\";\n    SlpTokenType[SlpTokenType[\"NftChild\"] = 65] = \"NftChild\";\n})(SlpTokenType || (SlpTokenType = {}));\n\n\n//# sourceURL=webpack://mainnet-js/./src/slp/interface.ts?");

/***/ }),

/***/ "./src/test/axios.ts":
/*!***************************!*\
  !*** ./src/test/axios.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"removeAxiosMock\": () => (/* binding */ removeAxiosMock),\n/* harmony export */   \"setupAxiosMock\": () => (/* binding */ setupAxiosMock)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"../../node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction setupAxiosMock(mockUrl, responseData) {\n    if (!(axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.mocks)) {\n        (axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.mocks) = {};\n        // install our interceptors\n        axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.request.use((config) => {\n            const url = config.url;\n            if ((axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.mocks)[url]) {\n                // if we have set up a mocked response for this url, cancel the actual request with a cancelToken containing our mocked data\n                const mockedResponse = (axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.mocks)[url];\n                return {\n                    ...config,\n                    cancelToken: new (axios__WEBPACK_IMPORTED_MODULE_0___default().CancelToken)((cancel) => cancel({ status: 200, data: mockedResponse })),\n                };\n            }\n            // otherwise proceed with usual request\n            return config;\n        });\n        axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.response.use(function (response) {\n            return response;\n        }, function (error) {\n            // resolve response with our mocked data\n            if (axios__WEBPACK_IMPORTED_MODULE_0___default().isCancel(error)) {\n                return Promise.resolve(error.message);\n            }\n            // handle all other errors gracefully\n            return Promise.reject(error);\n        });\n    }\n    (axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.mocks)[mockUrl] = responseData;\n}\nfunction removeAxiosMock(mockUrl) {\n    delete ((axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.mocks) || {})[mockUrl];\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/test/axios.ts?");

/***/ }),

/***/ "./src/test/expect.ts":
/*!****************************!*\
  !*** ./src/test/expect.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"expect\": () => (/* binding */ expect)\n/* harmony export */ });\nfunction expect(expected) {\n    return {\n        toBe: function (received) {\n            if (!(expected === received)) {\n                throw new Error(`assertion failed: expected ${expected} is not equal to received ${received}`);\n            }\n        },\n        toEqual: function (received) {\n            if (!(expected === received)) {\n                throw new Error(`assertion failed: expected ${expected} is not equal to received ${received}`);\n            }\n        },\n        toBeGreaterThan: function (received) {\n            if (!(expected > received)) {\n                throw new Error(`assertion failed: expected ${expected} is not GreaterThan received ${received}`);\n            }\n        },\n        toBeGreaterThanOrEqual: function (received) {\n            if (!(expected >= received)) {\n                throw new Error(`assertion failed: expected ${expected} is not GreaterThanOrEqual received ${received}`);\n            }\n        },\n        toStrictEqual: function (received) {\n            if (!(JSON.stringify(expected) === JSON.stringify(received))) {\n                throw new Error(`assertion failed: expected ${expected} is not StrictEqual to received ${received}`);\n            }\n        },\n        toContain: function (received) {\n            if (!expected.includes(received)) {\n                throw new Error(`assertion failed: expected ${expected} does not Contain received ${received}`);\n            }\n        },\n        rejects: {\n            toThrow: async function (message) {\n                try {\n                    await expected;\n                }\n                catch (e) {\n                    if (!e.message.includes(message)) {\n                        throw new Error(`assertion failed: expected function to throw with message ${message}, but it did not.`);\n                    }\n                }\n            },\n        },\n    };\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/test/expect.ts?");

/***/ }),

/***/ "./src/transaction/Wif.ts":
/*!********************************!*\
  !*** ./src/transaction/Wif.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"buildEncodedTransaction\": () => (/* binding */ buildEncodedTransaction),\n/* harmony export */   \"getFeeAmount\": () => (/* binding */ getFeeAmount),\n/* harmony export */   \"getFeeAmountSimple\": () => (/* binding */ getFeeAmountSimple),\n/* harmony export */   \"getSuitableUtxos\": () => (/* binding */ getSuitableUtxos),\n/* harmony export */   \"signUnsignedTransaction\": () => (/* binding */ signUnsignedTransaction)\n/* harmony export */ });\n/* unused harmony exports buildP2pkhNonHdTransaction, prepareInputs, prepareOutputs, prepareOpReturnOutput, prepareTokenOutputs */\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/schema/authentication-template.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/compiler/standard/p2pkh.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-bch/compiler-bch.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/address/locking-bytecode.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/transaction/generate-transaction.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-tokens.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/message/transaction-encoding.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../interface.js */ \"./src/interface.ts\");\n/* harmony import */ var _allocateFee_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./allocateFee.js */ \"./src/transaction/allocateFee.ts\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../constant.js */ \"./src/constant.ts\");\n/* harmony import */ var _wallet_model_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../wallet/model.js */ \"./src/wallet/model.ts\");\n/* harmony import */ var _util_amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../util/amountInSatoshi.js */ \"./src/util/amountInSatoshi.ts\");\n/* harmony import */ var _util_sumSendRequestAmounts_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/sumSendRequestAmounts.js */ \"./src/util/sumSendRequestAmounts.ts\");\n/* harmony import */ var _util_sumUtxoValue_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/sumUtxoValue.js */ \"./src/util/sumUtxoValue.ts\");\n/* harmony import */ var _wallet_enum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../wallet/enum.js */ \"./src/wallet/enum.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__, _util_sumSendRequestAmounts_js__WEBPACK_IMPORTED_MODULE_5__, _allocateFee_js__WEBPACK_IMPORTED_MODULE_6__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_8__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_9__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_10__, _wallet_model_js__WEBPACK_IMPORTED_MODULE_12__, _util_amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_13__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_15__]);\n([_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__, _util_sumSendRequestAmounts_js__WEBPACK_IMPORTED_MODULE_5__, _allocateFee_js__WEBPACK_IMPORTED_MODULE_6__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_8__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_9__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_10__, _wallet_model_js__WEBPACK_IMPORTED_MODULE_12__, _util_amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_13__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_15__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n// Build a transaction for a p2pkh transaction for a non HD wallet\nasync function buildP2pkhNonHdTransaction({ inputs, outputs, signingKey, sourceAddress, fee = 0, discardChange = false, slpOutputs = [], feePaidBy = _wallet_enum_js__WEBPACK_IMPORTED_MODULE_0__.FeePaidByEnum.change, changeAddress = \"\", }) {\n    if (!signingKey) {\n        throw new Error(\"Missing signing key when building transaction\");\n    }\n    const template = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.importAuthenticationTemplate)(_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.authenticationTemplateP2pkhNonHd);\n    if (typeof template === \"string\") {\n        throw new Error(\"Transaction template error\");\n    }\n    const compiler = await (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.authenticationTemplateToCompilerBCH)(template);\n    const inputAmount = await (0,_util_sumUtxoValue_js__WEBPACK_IMPORTED_MODULE_4__.sumUtxoValue)(inputs);\n    const sendAmount = await (0,_util_sumSendRequestAmounts_js__WEBPACK_IMPORTED_MODULE_5__.sumSendRequestAmounts)(outputs);\n    const changeAmount = BigInt(inputAmount) - BigInt(sendAmount) - BigInt(fee);\n    outputs = (0,_allocateFee_js__WEBPACK_IMPORTED_MODULE_6__.allocateFee)(outputs, fee, feePaidBy, changeAmount);\n    const lockedOutputs = await prepareOutputs(outputs);\n    if (!changeAddress) {\n        changeAddress = sourceAddress;\n    }\n    if (discardChange !== true) {\n        if (changeAmount > _constant_js__WEBPACK_IMPORTED_MODULE_7__.DUST_UTXO_THRESHOLD) {\n            const changeLockingBytecode = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_8__.cashAddressToLockingBytecode)(changeAddress);\n            if (typeof changeLockingBytecode === \"string\") {\n                throw Error(changeLockingBytecode);\n            }\n            lockedOutputs.push({\n                lockingBytecode: changeLockingBytecode.bytecode,\n                valueSatoshis: BigInt(changeAmount),\n            });\n        }\n    }\n    const { preparedInputs, sourceOutputs } = prepareInputs({\n        inputs,\n        compiler,\n        signingKey,\n        sourceAddress,\n    });\n    const result = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_9__.generateTransaction)({\n        inputs: preparedInputs,\n        locktime: 0,\n        outputs: [...slpOutputs, ...lockedOutputs],\n        version: 2,\n    });\n    if (!result.success) {\n        throw Error(\"Error building transaction with fee\");\n    }\n    const tokenValidationResult = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_10__.verifyTransactionTokens)(result.transaction, sourceOutputs);\n    if (tokenValidationResult !== true && fee > 0) {\n        throw tokenValidationResult;\n    }\n    return { transaction: result.transaction, sourceOutputs: sourceOutputs };\n}\nfunction prepareInputs({ inputs, compiler, signingKey, sourceAddress, }) {\n    const preparedInputs = [];\n    const sourceOutputs = [];\n    for (const i of inputs) {\n        const utxoTxnValue = i.satoshis;\n        const utxoIndex = i.vout;\n        // slice will create a clone of the array\n        const utxoOutpointTransactionHash = new Uint8Array(i.txid.match(/.{1,2}/g).map((byte) => parseInt(byte, 16)));\n        // reverse the cloned copy\n        // utxoOutpointTransactionHash.reverse();\n        if (!utxoOutpointTransactionHash || utxoIndex === undefined) {\n            throw new Error(\"Missing unspent outpoint when building transaction\");\n        }\n        const libAuthToken = i.token && {\n            amount: BigInt(i.token.amount),\n            category: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_11__.hexToBin)(i.token.tokenId),\n            nft: i.token.capability !== undefined || i.token.commitment !== undefined\n                ? {\n                    capability: i.token.capability,\n                    commitment: i.token.commitment !== undefined &&\n                        (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_11__.hexToBin)(i.token.commitment),\n                }\n                : undefined,\n        };\n        const key = signingKey?.length ? signingKey : Uint8Array.from(Array(32));\n        const newInput = {\n            outpointIndex: utxoIndex,\n            outpointTransactionHash: utxoOutpointTransactionHash,\n            sequenceNumber: 0,\n            unlockingBytecode: {\n                compiler,\n                data: {\n                    keys: { privateKeys: { key: key } },\n                },\n                valueSatoshis: BigInt(utxoTxnValue),\n                script: \"unlock\",\n                token: libAuthToken,\n            },\n        };\n        preparedInputs.push(newInput);\n        const lockingBytecode = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_8__.cashAddressToLockingBytecode)(sourceAddress);\n        if (typeof lockingBytecode === \"string\") {\n            throw lockingBytecode;\n        }\n        sourceOutputs.push({\n            outpointIndex: utxoIndex,\n            outpointTransactionHash: utxoOutpointTransactionHash,\n            sequenceNumber: 0,\n            unlockingBytecode: Uint8Array.from([]),\n            // additional info for sourceOutputs\n            lockingBytecode: lockingBytecode.bytecode,\n            valueSatoshis: BigInt(utxoTxnValue),\n            token: libAuthToken,\n        });\n    }\n    return { preparedInputs, sourceOutputs };\n}\n/**\n * prepareOutputs - create outputs for a transaction from a list of send requests\n *\n * a wrapper function\n *\n * @returns A promise to a list of unspent outputs\n */\nasync function prepareOutputs(outputs) {\n    const lockedOutputs = [];\n    for (const output of outputs) {\n        if (output instanceof _wallet_model_js__WEBPACK_IMPORTED_MODULE_12__.TokenSendRequest) {\n            lockedOutputs.push(prepareTokenOutputs(output));\n            continue;\n        }\n        if (output instanceof _wallet_model_js__WEBPACK_IMPORTED_MODULE_12__.OpReturnData) {\n            lockedOutputs.push(prepareOpReturnOutput(output));\n            continue;\n        }\n        const outputLockingBytecode = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_8__.cashAddressToLockingBytecode)(output.cashaddr);\n        if (typeof outputLockingBytecode === \"string\")\n            throw new Error(outputLockingBytecode);\n        const sendAmount = await (0,_util_amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_13__.amountInSatoshi)(output.value, output.unit);\n        if (sendAmount % 1 !== 0) {\n            throw Error(`Cannot send ${sendAmount} satoshis, (fractional sats do not exist, yet), please use an integer number.`);\n        }\n        const lockedOutput = {\n            lockingBytecode: outputLockingBytecode.bytecode,\n            valueSatoshis: BigInt(sendAmount),\n        };\n        lockedOutputs.push(lockedOutput);\n    }\n    return lockedOutputs;\n}\n/**\n * prepareOpReturnOutput - create an output for OP_RETURN data\n *\n * @returns A promise to a list of unspent outputs\n */\nfunction prepareOpReturnOutput(request) {\n    return {\n        lockingBytecode: request.buffer,\n        valueSatoshis: BigInt(0),\n    };\n}\n/**\n * prepareOpReturnOutput - create an output for token data\n *\n * @returns A libauth Output\n */\nfunction prepareTokenOutputs(request) {\n    const token = request;\n    const outputLockingBytecode = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_8__.cashAddressToLockingBytecode)(request.cashaddr);\n    if (typeof outputLockingBytecode === \"string\")\n        throw new Error(outputLockingBytecode);\n    const libAuthToken = {\n        amount: BigInt(token.amount),\n        category: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_11__.hexToBin)(token.tokenId),\n        nft: token.capability !== undefined || token.commitment !== undefined\n            ? {\n                capability: token.capability,\n                commitment: token.commitment !== undefined && (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_11__.hexToBin)(token.commitment),\n            }\n            : undefined,\n    };\n    return {\n        lockingBytecode: outputLockingBytecode.bytecode,\n        valueSatoshis: BigInt(request.value || 1000),\n        token: libAuthToken,\n    };\n}\n/**\n * getSuitableUtxos - Filter a list of unspent transaction outputs to the minimum needed to complete a transaction\n *\n * a intermediate function\n *\n * @param unspentOutputs  An unfiltered list of available unspent transaction outputs\n *\n * @returns A promise to a list of unspent outputs\n */\nasync function getSuitableUtxos(inputs, amountRequired, bestHeight, feePaidBy, requests, ensureUtxos = [], tokenOperation = \"send\") {\n    const suitableUtxos = [...ensureUtxos];\n    let amountAvailable = BigInt(0);\n    const tokenRequests = requests.filter((val) => val instanceof _wallet_model_js__WEBPACK_IMPORTED_MODULE_12__.TokenSendRequest);\n    const availableInputs = inputs.slice();\n    // find matching utxos for token transfers\n    if (tokenOperation === \"send\") {\n        for (const request of tokenRequests) {\n            const tokenInputs = availableInputs.filter((val) => val.token?.tokenId === request.tokenId);\n            const sameCommitmentTokens = [...suitableUtxos, ...tokenInputs].filter((val) => val.token?.capability === request.capability &&\n                val.token?.commitment === request.commitment);\n            if (sameCommitmentTokens.length) {\n                const input = sameCommitmentTokens[0];\n                const index = availableInputs.indexOf(input);\n                if (index !== -1) {\n                    suitableUtxos.push(input);\n                    availableInputs.splice(index, 1);\n                    amountAvailable += BigInt(input.satoshis);\n                }\n                continue;\n            }\n            if (request.capability === _interface_js__WEBPACK_IMPORTED_MODULE_14__.NFTCapability.minting ||\n                request.capability === _interface_js__WEBPACK_IMPORTED_MODULE_14__.NFTCapability.mutable) {\n                const changeCommitmentTokens = [\n                    ...suitableUtxos,\n                    ...tokenInputs,\n                ].filter((val) => val.token?.capability === request.capability);\n                if (changeCommitmentTokens.length) {\n                    const input = changeCommitmentTokens[0];\n                    const index = availableInputs.indexOf(input);\n                    if (index !== -1) {\n                        suitableUtxos.push(input);\n                        availableInputs.splice(index, 1);\n                        amountAvailable += BigInt(input.satoshis);\n                    }\n                    continue;\n                }\n            }\n            // handle splitting the hybrid (FT+NFT) token into its parts\n            if (request.capability === undefined &&\n                request.commitment === undefined &&\n                [...suitableUtxos, ...tokenInputs]\n                    .map((val) => val.token?.tokenId)\n                    .includes(request.tokenId)) {\n                continue;\n            }\n            throw Error(`No suitable token utxos available to send token with id \"${request.tokenId}\", capability \"${request.capability}\", commitment \"${request.commitment}\"`);\n        }\n    }\n    // find plain bch outputs\n    for (const u of availableInputs) {\n        if (u.token) {\n            continue;\n        }\n        if (u.coinbase && u.height && bestHeight) {\n            const age = bestHeight - u.height;\n            if (age > 100) {\n                suitableUtxos.push(u);\n                amountAvailable += BigInt(u.satoshis);\n            }\n        }\n        else {\n            suitableUtxos.push(u);\n            amountAvailable += BigInt(u.satoshis);\n        }\n        // if amountRequired is not given, assume it is a max spend request, skip this condition\n        if (amountRequired && amountAvailable > amountRequired) {\n            break;\n        }\n    }\n    const addEnsured = (suitableUtxos) => {\n        return [...ensureUtxos, ...suitableUtxos].filter((val, index, array) => array.findIndex((other) => other.txid === val.txid && other.vout === val.vout) === index);\n    };\n    // if the fee is split with a feePaidBy option, skip checking change.\n    if (feePaidBy && feePaidBy != _wallet_enum_js__WEBPACK_IMPORTED_MODULE_0__.FeePaidByEnum.change) {\n        return addEnsured(suitableUtxos);\n    }\n    // If the amount needed is met, or no amount is given, return\n    if (typeof amountRequired === \"undefined\") {\n        return addEnsured(suitableUtxos);\n    }\n    else if (amountAvailable < amountRequired) {\n        const e = Error(`Amount required was not met, ${amountRequired} satoshis needed, ${amountAvailable} satoshis available`);\n        e[\"data\"] = {\n            required: amountRequired,\n            available: amountAvailable,\n        };\n        throw e;\n    }\n    else {\n        return addEnsured(suitableUtxos);\n    }\n}\n// model-based imprecise and fast fee estimation\nasync function getFeeAmountSimple({ utxos, sendRequests, relayFeePerByteInSatoshi, slpOutputs, discardChange, }) {\n    const inputSizeP2pkh = 148;\n    const outputSizeP2pkh = 34;\n    const inputTotalSize = utxos.reduce((prev, curr) => prev +\n        (curr.token\n            ? inputSizeP2pkh +\n                1 +\n                34 +\n                Math.round(1 + (curr.token.commitment?.length ?? 0) / 2) +\n                (curr.token.amount ? 9 : 0)\n            : inputSizeP2pkh), 0);\n    const outputSize = (sendRequest) => {\n        if (sendRequest.hasOwnProperty(\"unit\")) {\n            return outputSizeP2pkh;\n        }\n        else if (sendRequest.hasOwnProperty(\"tokenId\")) {\n            const tokenRequest = sendRequest;\n            return (outputSizeP2pkh +\n                1 +\n                34 +\n                Math.round(1 + (tokenRequest.commitment?.length ?? 0) / 2) +\n                (tokenRequest.amount ? 9 : 0));\n        }\n        else if (sendRequest.hasOwnProperty(\"buffer\")) {\n            return 9 + sendRequest.buffer.length;\n        }\n        return 0;\n    };\n    const outputTotalSize = sendRequests.reduce((prev, curr) => prev + outputSize(curr), 0) +\n        (discardChange ? 0 : outputSizeP2pkh);\n    const slpTotalSize = slpOutputs.reduce((prev, curr) => prev + curr.lockingBytecode.length, 0);\n    return ((inputTotalSize + outputTotalSize + slpTotalSize + 16) *\n        relayFeePerByteInSatoshi);\n}\n// precise fee estimation\nasync function getFeeAmount({ utxos, sendRequests, privateKey, sourceAddress, relayFeePerByteInSatoshi, slpOutputs, feePaidBy, discardChange, }) {\n    // build transaction\n    if (utxos) {\n        // Build the transaction to get the approximate size\n        const { encodedTransaction: draftTransaction } = await buildEncodedTransaction({\n            inputs: utxos,\n            outputs: sendRequests,\n            signingKey: privateKey,\n            sourceAddress,\n            fee: 0,\n            discardChange: discardChange ?? false,\n            slpOutputs,\n            feePaidBy,\n            changeAddress: \"\",\n        });\n        return draftTransaction.length * relayFeePerByteInSatoshi + 1;\n    }\n    else {\n        throw Error(\"The available inputs in the wallet cannot satisfy this send request\");\n    }\n}\n// Build encoded transaction\nasync function buildEncodedTransaction({ inputs, outputs, signingKey, sourceAddress, fee = 0, discardChange = false, slpOutputs = [], feePaidBy = _wallet_enum_js__WEBPACK_IMPORTED_MODULE_0__.FeePaidByEnum.change, changeAddress = \"\", buildUnsigned = false, }) {\n    const { transaction, sourceOutputs } = await buildP2pkhNonHdTransaction({\n        inputs,\n        outputs,\n        signingKey,\n        sourceAddress,\n        fee,\n        discardChange,\n        slpOutputs,\n        feePaidBy,\n        changeAddress,\n    });\n    if (buildUnsigned === true) {\n        transaction.inputs.forEach((input) => (input.unlockingBytecode = Uint8Array.from([])));\n    }\n    return { encodedTransaction: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_15__.encodeTransaction)(transaction), sourceOutputs };\n}\nasync function signUnsignedTransaction(transaction, sourceOutputs, signingKey) {\n    if (typeof transaction === \"string\") {\n        transaction = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_11__.hexToBin)(transaction);\n    }\n    const decoded = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_15__.decodeTransaction)(transaction);\n    if (typeof decoded === \"string\") {\n        throw decoded;\n    }\n    const template = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.importAuthenticationTemplate)(_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.authenticationTemplateP2pkhNonHd);\n    if (typeof template === \"string\") {\n        throw new Error(\"Transaction template error\");\n    }\n    const compiler = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.authenticationTemplateToCompilerBCH)(template);\n    const transactionTemplate = { ...decoded };\n    for (const [index, input] of decoded.inputs.entries()) {\n        const sourceOutput = sourceOutputs[index];\n        transactionTemplate.inputs[index] = {\n            ...input,\n            unlockingBytecode: {\n                compiler,\n                data: {\n                    keys: { privateKeys: { key: signingKey } },\n                },\n                valueSatoshis: sourceOutput.valueSatoshis,\n                script: \"unlock\",\n                token: sourceOutput.token,\n            },\n        };\n    }\n    const result = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_9__.generateTransaction)(transactionTemplate);\n    if (!result.success) {\n        throw result.errors;\n    }\n    return (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_15__.encodeTransaction)(result.transaction);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/transaction/Wif.ts?");

/***/ }),

/***/ "./src/transaction/allocateFee.ts":
/*!****************************************!*\
  !*** ./src/transaction/allocateFee.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"allocateFee\": () => (/* binding */ allocateFee)\n/* harmony export */ });\n/* unused harmony exports checkFeeForDust, checkSatsAvailable, checkForNonStandardSendRequest, sortSendRequests */\n/* harmony import */ var _wallet_model_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../wallet/model.js */ \"./src/wallet/model.ts\");\n/* harmony import */ var _wallet_enum_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../wallet/enum.js */ \"./src/wallet/enum.ts\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constant.js */ \"./src/constant.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_wallet_model_js__WEBPACK_IMPORTED_MODULE_1__]);\n_wallet_model_js__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nfunction checkFeeForDust(value) {\n    if (value < _constant_js__WEBPACK_IMPORTED_MODULE_0__.DUST_UTXO_THRESHOLD) {\n        throw Error(\"Fee strategy would result in dust output\");\n    }\n}\nfunction checkSatsAvailable(sendRequestArray, fee) {\n    let amountAvailable = sendRequestArray.reduce(function (sum, r) {\n        return sum + (r.value - _constant_js__WEBPACK_IMPORTED_MODULE_0__.DUST_UTXO_THRESHOLD);\n    }, 0);\n    if (amountAvailable < fee) {\n        throw Error(\"Insufficient funds for transaction given fee\");\n    }\n}\nfunction checkForNonStandardSendRequest(output) {\n    if (output instanceof _wallet_model_js__WEBPACK_IMPORTED_MODULE_1__.TokenSendRequest) {\n        throw Error(\"Cannot specify fee to be paid by TokenSendRequest\");\n    }\n    if (output instanceof _wallet_model_js__WEBPACK_IMPORTED_MODULE_1__.OpReturnData) {\n        throw Error(\"Cannot specify fee to be paid by OpReturnData\");\n    }\n    return output;\n}\nfunction sortSendRequests(sendRequestArray) {\n    return sendRequestArray.sort((a, b) => a.value - b.value);\n}\nfunction distributeFees(requests, fee) {\n    checkSatsAvailable(requests, fee);\n    fee = Number(fee);\n    for (let r = 0; r < requests.length; r++) {\n        if (fee > 0) {\n            checkForNonStandardSendRequest(requests[r]);\n            let perRequestFee = Math.floor(fee / (requests.length - r));\n            perRequestFee += fee % (requests.length - r);\n            if (requests[r].value - perRequestFee < _constant_js__WEBPACK_IMPORTED_MODULE_0__.DUST_UTXO_THRESHOLD) {\n                fee -= requests[r].value;\n                requests[r].value = 0;\n            }\n            else {\n                fee -= perRequestFee;\n                requests[r].value -= perRequestFee;\n            }\n        }\n    }\n    return requests.filter((r) => r.value >= _constant_js__WEBPACK_IMPORTED_MODULE_0__.DUST_UTXO_THRESHOLD);\n}\nfunction firstPays(requests, fee) {\n    let payer = requests.shift();\n    payer = checkForNonStandardSendRequest(payer);\n    payer.value = payer.value - fee;\n    checkFeeForDust(payer.value);\n    requests.unshift(payer);\n    return requests;\n}\nfunction lastPays(requests, fee) {\n    let payer = requests.pop();\n    payer = checkForNonStandardSendRequest(payer);\n    payer.value = payer.value - fee;\n    checkFeeForDust(payer.value);\n    requests.push(payer);\n    return requests;\n}\nfunction anyPays(requests, fee) {\n    for (let r of requests) {\n        checkForNonStandardSendRequest(r);\n    }\n    requests = sortSendRequests(requests);\n    requests = distributeFees(requests, fee);\n    return requests;\n}\nfunction changeThenFallback(requests, fee, change, fallbackFn) {\n    if (BigInt(fee) > change) {\n        let outstandingFee = BigInt(fee) - change;\n        requests = fallbackFn(requests, outstandingFee);\n    }\n    return requests;\n}\nfunction allocateFee(requests, fee, feePaidBy, change) {\n    if (requests.length > 0) {\n        switch (feePaidBy) {\n            case _wallet_enum_js__WEBPACK_IMPORTED_MODULE_2__.FeePaidByEnum.change:\n                // handled by default\n                break;\n            case _wallet_enum_js__WEBPACK_IMPORTED_MODULE_2__.FeePaidByEnum.changeThenFirst:\n                requests = changeThenFallback(requests, fee, change, firstPays);\n                break;\n            case _wallet_enum_js__WEBPACK_IMPORTED_MODULE_2__.FeePaidByEnum.changeThenLast:\n                requests = changeThenFallback(requests, fee, change, lastPays);\n                break;\n            case _wallet_enum_js__WEBPACK_IMPORTED_MODULE_2__.FeePaidByEnum.changeThenAny:\n                requests = changeThenFallback(requests, fee, change, anyPays);\n                break;\n            case _wallet_enum_js__WEBPACK_IMPORTED_MODULE_2__.FeePaidByEnum.first:\n                requests = firstPays(requests, fee);\n                break;\n            case _wallet_enum_js__WEBPACK_IMPORTED_MODULE_2__.FeePaidByEnum.last:\n                requests = lastPays(requests, fee);\n                break;\n            case _wallet_enum_js__WEBPACK_IMPORTED_MODULE_2__.FeePaidByEnum.any:\n                requests = anyPays(requests, fee);\n                break;\n            default:\n                throw Error(\"FeePaidBy option not recognized\");\n        }\n        return requests;\n    }\n    else {\n        throw Error(\"Attempted to specify feePaidBy on zero length SendRequest\");\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/transaction/allocateFee.ts?");

/***/ }),

/***/ "./src/util/amountInSatoshi.ts":
/*!*************************************!*\
  !*** ./src/util/amountInSatoshi.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"amountInSatoshi\": () => (/* binding */ amountInSatoshi)\n/* harmony export */ });\n/* harmony import */ var _chain_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../chain.js */ \"./src/chain.ts\");\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enum.js */ \"./src/enum.ts\");\n/* harmony import */ var _rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../rate/ExchangeRate.js */ \"./src/rate/ExchangeRate.ts\");\n/* harmony import */ var _util_sanitizeUnit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/sanitizeUnit.js */ \"./src/util/sanitizeUnit.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__, _enum_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__, _enum_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n/**\n * converts given value and unit into satoshi\n *\n * @param {value} number           some value\n * @param {rawUnit} any            the unit of value\n *\n * @returns a promise to the value in satoshi\n */\nasync function amountInSatoshi(value, rawUnit) {\n    const unit = (0,_util_sanitizeUnit_js__WEBPACK_IMPORTED_MODULE_1__.sanitizeUnit)(rawUnit);\n    switch (unit) {\n        case _enum_js__WEBPACK_IMPORTED_MODULE_2__.UnitEnum.BCH:\n            return Math.round(value * _chain_js__WEBPACK_IMPORTED_MODULE_3__.bchParam.subUnits);\n        case _enum_js__WEBPACK_IMPORTED_MODULE_2__.UnitEnum.SATOSHI:\n            return value;\n        case _enum_js__WEBPACK_IMPORTED_MODULE_2__.UnitEnum.SAT:\n            return value;\n        case _enum_js__WEBPACK_IMPORTED_MODULE_2__.UnitEnum.SATS:\n            return value;\n        case _enum_js__WEBPACK_IMPORTED_MODULE_2__.UnitEnum.SATOSHIS:\n            return value;\n        case _enum_js__WEBPACK_IMPORTED_MODULE_2__.UnitEnum.USD:\n            let USD_over_BCH = await _rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__.ExchangeRate.get(\"usd\");\n            let SAT_over_BCH = _chain_js__WEBPACK_IMPORTED_MODULE_3__.bchParam.subUnits;\n            return Math.round(Number(value * (SAT_over_BCH / USD_over_BCH)));\n        default:\n            throw Error(\"Unit of value not defined\");\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/amountInSatoshi.ts?");

/***/ }),

/***/ "./src/util/asSendRequestObject.ts":
/*!*****************************************!*\
  !*** ./src/util/asSendRequestObject.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"asSendRequestObject\": () => (/* binding */ asSendRequestObject)\n/* harmony export */ });\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/base64.js\");\n/* harmony import */ var _wallet_model_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../wallet/model.js */ \"./src/wallet/model.ts\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"../../node_modules/buffer/index.js\")[\"Buffer\"];\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_wallet_model_js__WEBPACK_IMPORTED_MODULE_0__]);\n_wallet_model_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nfunction asSendRequestObject(requests) {\n    let resp = [];\n    if (Array.isArray(requests)) {\n        requests.forEach((r) => {\n            // the SendRequestArray[] case\n            if (Array.isArray(r)) {\n                if (r[0] === \"OP_RETURN\") {\n                    // ['OP_RETURN', Buffer.new('MEMO\\x10')],\n                    resp.push(_wallet_model_js__WEBPACK_IMPORTED_MODULE_0__.OpReturnData.from(r[1]));\n                }\n                else if (r[0] === \"OP_RETURNB64\") {\n                    resp.push(_wallet_model_js__WEBPACK_IMPORTED_MODULE_0__.OpReturnData.fromBuffer(Buffer.from((0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.base64ToBin)(r[1]))));\n                }\n                else {\n                    // ['cashaddr', 120, 'sats'],\n                    resp.push(new _wallet_model_js__WEBPACK_IMPORTED_MODULE_0__.SendRequest({\n                        cashaddr: r[0],\n                        value: r[1],\n                        unit: r[2],\n                    }));\n                }\n            }\n            else {\n                // SendRequest | TokenSendRequest | OpReturnRequest case\n                resp.push(convertToClass(r));\n            }\n        });\n    }\n    else {\n        // the SendRequest | OpReturnData object case\n        resp.push(convertToClass(requests));\n    }\n    return resp;\n}\nfunction convertToClass(object) {\n    if (object.hasOwnProperty(\"unit\")) {\n        return new _wallet_model_js__WEBPACK_IMPORTED_MODULE_0__.SendRequest(object);\n    }\n    else if (object.hasOwnProperty(\"tokenId\")) {\n        return new _wallet_model_js__WEBPACK_IMPORTED_MODULE_0__.TokenSendRequest(object);\n    }\n    else if (object.hasOwnProperty(\"buffer\")) {\n        return _wallet_model_js__WEBPACK_IMPORTED_MODULE_0__.OpReturnData.fromBuffer(object.buffer);\n    }\n    // endcoding in REST\n    else if (object.hasOwnProperty(\"dataString\")) {\n        return _wallet_model_js__WEBPACK_IMPORTED_MODULE_0__.OpReturnData.fromString(object.dataString);\n    }\n    else if (object.hasOwnProperty(\"dataBuffer\")) {\n        return _wallet_model_js__WEBPACK_IMPORTED_MODULE_0__.OpReturnData.fromBuffer(Buffer.from((0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.base64ToBin)(object.dataBuffer)));\n    }\n    throw new Error(\"Unsupported send object\");\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/asSendRequestObject.ts?");

/***/ }),

/***/ "./src/util/balanceObjectFromSatoshi.ts":
/*!**********************************************!*\
  !*** ./src/util/balanceObjectFromSatoshi.ts ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BalanceResponse\": () => (/* binding */ BalanceResponse),\n/* harmony export */   \"balanceFromSatoshi\": () => (/* binding */ balanceFromSatoshi),\n/* harmony export */   \"balanceResponseFromSatoshi\": () => (/* binding */ balanceResponseFromSatoshi)\n/* harmony export */ });\n/* harmony import */ var _chain_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chain.js */ \"./src/chain.ts\");\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enum.js */ \"./src/enum.ts\");\n/* harmony import */ var _floor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./floor.js */ \"./src/util/floor.ts\");\n/* harmony import */ var _rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../rate/ExchangeRate.js */ \"./src/rate/ExchangeRate.ts\");\n/* harmony import */ var _sanitizeUnit_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sanitizeUnit.js */ \"./src/util/sanitizeUnit.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__, _enum_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__, _enum_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nclass BalanceResponse {\n    constructor(bch, sat, usd) {\n        this.bch = bch;\n        this.sat = sat;\n        this.usd = usd;\n    }\n}\nasync function balanceResponseFromSatoshi(value, usdPriceCache = true) {\n    let response = new BalanceResponse();\n    let returnUnits = [\"bch\", \"sat\", \"usd\"];\n    for (const u of returnUnits) {\n        switch (u) {\n            case _enum_js__WEBPACK_IMPORTED_MODULE_1__.UnitEnum.BCH:\n                response.bch = value / _chain_js__WEBPACK_IMPORTED_MODULE_2__.bchParam.subUnits;\n                break;\n            case _enum_js__WEBPACK_IMPORTED_MODULE_1__.UnitEnum.SAT:\n                response.sat = value;\n                break;\n            case _enum_js__WEBPACK_IMPORTED_MODULE_1__.UnitEnum.USD:\n                let usd = (value / _chain_js__WEBPACK_IMPORTED_MODULE_2__.bchParam.subUnits) *\n                    (await _rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__.ExchangeRate.get(\"usd\", usdPriceCache));\n                response.usd = (0,_floor_js__WEBPACK_IMPORTED_MODULE_3__.floor)(usd, 2);\n                break;\n            default:\n                throw Error(`Balance response type ${JSON.stringify(u)} not understood`);\n        }\n    }\n    return response;\n}\nasync function balanceFromSatoshi(value, rawUnit, usdPriceCache = true) {\n    const unit = (0,_sanitizeUnit_js__WEBPACK_IMPORTED_MODULE_4__.sanitizeUnit)(rawUnit);\n    switch (unit) {\n        case _enum_js__WEBPACK_IMPORTED_MODULE_1__.UnitEnum.BCH:\n            return value / _chain_js__WEBPACK_IMPORTED_MODULE_2__.bchParam.subUnits;\n        case _enum_js__WEBPACK_IMPORTED_MODULE_1__.UnitEnum.SAT:\n            return value;\n        case _enum_js__WEBPACK_IMPORTED_MODULE_1__.UnitEnum.SATS:\n            return value;\n        case _enum_js__WEBPACK_IMPORTED_MODULE_1__.UnitEnum.SATOSHI:\n            return value;\n        case _enum_js__WEBPACK_IMPORTED_MODULE_1__.UnitEnum.SATOSHIS:\n            return value;\n        case _enum_js__WEBPACK_IMPORTED_MODULE_1__.UnitEnum.USD:\n            let usd = (value / _chain_js__WEBPACK_IMPORTED_MODULE_2__.bchParam.subUnits) *\n                (await _rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__.ExchangeRate.get(\"usd\", usdPriceCache));\n            return Number(usd.toFixed(2));\n        default:\n            throw Error(`Balance response type ${JSON.stringify(unit)} not understood`);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/balanceObjectFromSatoshi.ts?");

/***/ }),

/***/ "./src/util/base64.ts":
/*!****************************!*\
  !*** ./src/util/base64.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"atob\": () => (/* binding */ atob),\n/* harmony export */   \"btoa\": () => (/* binding */ btoa)\n/* harmony export */ });\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/base64.js\");\n\nfunction btoa(data) {\n    return (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.binToBase64)(new TextEncoder().encode(data));\n}\nfunction atob(data) {\n    if (!(0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.isBase64)(data)) {\n        throw new Error(\"Provided data is not a valid base64\");\n    }\n    return String.fromCharCode(...(0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.base64ToBin)(data));\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/base64.ts?");

/***/ }),

/***/ "./src/util/bchaddr.ts":
/*!*****************************!*\
  !*** ./src/util/bchaddr.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isCashAddress\": () => (/* reexport safe */ bchaddrjs_slp__WEBPACK_IMPORTED_MODULE_0__.isCashAddress),\n/* harmony export */   \"isSlpAddress\": () => (/* reexport safe */ bchaddrjs_slp__WEBPACK_IMPORTED_MODULE_0__.isSlpAddress),\n/* harmony export */   \"isValidAddress\": () => (/* reexport safe */ bchaddrjs_slp__WEBPACK_IMPORTED_MODULE_0__.isValidAddress),\n/* harmony export */   \"toCashAddress\": () => (/* reexport safe */ bchaddrjs_slp__WEBPACK_IMPORTED_MODULE_0__.toCashAddress),\n/* harmony export */   \"toSlpAddress\": () => (/* reexport safe */ bchaddrjs_slp__WEBPACK_IMPORTED_MODULE_0__.toSlpAddress)\n/* harmony export */ });\n/* harmony import */ var bchaddrjs_slp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bchaddrjs-slp */ \"../../node_modules/bchaddrjs-slp/src/bchaddr.js\");\n/* harmony import */ var bchaddrjs_slp__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bchaddrjs_slp__WEBPACK_IMPORTED_MODULE_0__);\n\n// import bchaddr from \"bchaddrjs-slp\";\n// export { isValidAddress, isCashAddress, isSlpAddress } from \"bchaddrjs-slp\";\n// export function toCashAddress(address: string) {\n//   if ([\"bchreg\", \"slpreg\"].some(val => address.includes(val))) {\n//     return bchaddr.toRegtestAddress(bchaddr.toCashAddress(address));\n//   }\n//   return bchaddr.toCashAddress(address);\n// }\n// export function toSlpAddress(address: string) {\n//   if ([\"bchreg\", \"slpreg\"].some(val => address.includes(val))) {\n//     return bchaddr.toSlpRegtestAddress(address);\n//   }\n//   return bchaddr.toSlpAddress(address);\n// }\n\n\n//# sourceURL=webpack://mainnet-js/./src/util/bchaddr.ts?");

/***/ }),

/***/ "./src/util/browserNotSupported.ts":
/*!*****************************************!*\
  !*** ./src/util/browserNotSupported.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"browserNotSupported\": () => (/* binding */ browserNotSupported)\n/* harmony export */ });\n/* harmony import */ var _getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getRuntimePlatform.js */ \"./src/util/getRuntimePlatform.ts\");\n\nfunction browserNotSupported() {\n    if ((0,_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_0__.getRuntimePlatform)() !== \"node\") {\n        throw new Error(\"This usage is not supported in the browser at this time.\");\n    }\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/util/browserNotSupported.ts?");

/***/ }),

/***/ "./src/util/checkForEmptySeed.ts":
/*!***************************************!*\
  !*** ./src/util/checkForEmptySeed.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkForEmptySeed\": () => (/* binding */ checkForEmptySeed)\n/* harmony export */ });\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n\nfunction checkForEmptySeed(seed) {\n    let blankSeed = \"4ed8d4b17698ddeaa1f1559f152f87b5d472f725ca86d341bd0276f1b61197e21dd5a391f9f5ed7340ff4d4513aab9cce44f9497a5e7ed85fd818876b6eb402e\";\n    let seedBin = new Uint8Array(seed.buffer);\n    if (blankSeed == (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.binToHex)(seedBin))\n        throw Error(\"Seed was generated using empty mnemonic\");\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/checkForEmptySeed.ts?");

/***/ }),

/***/ "./src/util/checkWifNetwork.ts":
/*!*************************************!*\
  !*** ./src/util/checkWifNetwork.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkWifNetwork\": () => (/* binding */ checkWifNetwork)\n/* harmony export */ });\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enum.js */ \"./src/enum.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_enum_js__WEBPACK_IMPORTED_MODULE_0__]);\n_enum_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nfunction checkWifNetwork(walletImportFormatString, networkType) {\n    if (!(walletImportFormatString[0] === \"L\" || walletImportFormatString[0] === \"K\") &&\n        networkType === _enum_js__WEBPACK_IMPORTED_MODULE_0__.NetworkType.Mainnet) {\n        throw Error(`Mainnet type wif ${walletImportFormatString} passed, should start with L or K`);\n    }\n    else if (walletImportFormatString[0] !== \"c\" &&\n        networkType === _enum_js__WEBPACK_IMPORTED_MODULE_0__.NetworkType.Testnet) {\n        throw Error(`Testnet type wif ${walletImportFormatString} passed, should start with c`);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/checkWifNetwork.ts?");

/***/ }),

/***/ "./src/util/convert.ts":
/*!*****************************!*\
  !*** ./src/util/convert.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"convert\": () => (/* binding */ convert),\n/* harmony export */   \"convertObject\": () => (/* binding */ convertObject)\n/* harmony export */ });\n/* harmony import */ var _amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./amountInSatoshi.js */ \"./src/util/amountInSatoshi.ts\");\n/* harmony import */ var _satoshiToAmount_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./satoshiToAmount.js */ \"./src/util/satoshiToAmount.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_0__, _satoshiToAmount_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_0__, _satoshiToAmount_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n/**\n * convert transforms unit of measurement for some monetary value\n *\n * @param {value} number           amount to convert\n * @param {from} any               unit of measurement to convert from\n * @param {to} any                 unit of measurement to convert to\n *\n * @returns a promise to the value in \"to\" units\n */\nasync function convert(value, from, to) {\n    let satoshi = await (0,_amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_0__.amountInSatoshi)(value, from);\n    return (0,_satoshiToAmount_js__WEBPACK_IMPORTED_MODULE_1__.satoshiToAmount)(satoshi, to);\n}\nasync function convertObject({ value, from, to, }) {\n    return await convert(value, from, to);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/convert.ts?");

/***/ }),

/***/ "./src/util/delay.ts":
/*!***************************!*\
  !*** ./src/util/delay.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"delay\": () => (/* binding */ delay)\n/* harmony export */ });\nfunction delay(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/util/delay.ts?");

/***/ }),

/***/ "./src/util/deriveCashaddr.ts":
/*!************************************!*\
  !*** ./src/util/deriveCashaddr.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkTokenaddr\": () => (/* binding */ checkTokenaddr),\n/* harmony export */   \"deriveCashaddr\": () => (/* binding */ deriveCashaddr),\n/* harmony export */   \"deriveTokenaddr\": () => (/* binding */ deriveTokenaddr),\n/* harmony export */   \"isTokenaddr\": () => (/* binding */ isTokenaddr),\n/* harmony export */   \"toCashaddr\": () => (/* binding */ toCashaddr),\n/* harmony export */   \"toTokenaddr\": () => (/* binding */ toTokenaddr)\n/* harmony export */ });\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/address/cash-address.js\");\n/* harmony import */ var _hash160_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hash160.js */ \"./src/util/hash160.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__, _hash160_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__, _hash160_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nfunction deriveCashaddr(privateKey, networkPrefix) {\n    let publicKey = _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.secp256k1.derivePublicKeyCompressed(privateKey);\n    if (typeof publicKey === \"string\") {\n        throw new Error(publicKey);\n    }\n    let pkh = (0,_hash160_js__WEBPACK_IMPORTED_MODULE_1__.hash160)(publicKey);\n    return (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.encodeCashAddress)(networkPrefix, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.CashAddressType.p2pkh, pkh);\n}\nfunction deriveTokenaddr(key, networkPrefix) {\n    let publicKeyHash;\n    // private key\n    if (key.length === 32) {\n        let publicKeyCompressed = _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.secp256k1.derivePublicKeyCompressed(key);\n        if (typeof publicKeyCompressed === \"string\") {\n            throw new Error(publicKeyCompressed);\n        }\n        publicKeyHash = (0,_hash160_js__WEBPACK_IMPORTED_MODULE_1__.hash160)(publicKeyCompressed);\n    }\n    else if (key.length === 65) {\n        // uncompressed public key\n        let publicKeyCompressed = _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.secp256k1.compressPublicKey(key);\n        if (typeof publicKeyCompressed === \"string\") {\n            throw new Error(publicKeyCompressed);\n        }\n        publicKeyHash = (0,_hash160_js__WEBPACK_IMPORTED_MODULE_1__.hash160)(publicKeyCompressed);\n    }\n    else if (key.length === 33) {\n        // compressed public key\n        publicKeyHash = (0,_hash160_js__WEBPACK_IMPORTED_MODULE_1__.hash160)(key);\n    }\n    else if (key.length === 20) {\n        // public key hash\n        publicKeyHash = key;\n    }\n    else {\n        throw new Error(\"Unsupported type of key\");\n    }\n    return (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.encodeCashAddress)(networkPrefix, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.CashAddressType.p2pkhWithTokens, publicKeyHash);\n}\nfunction toCashaddr(tokenaddr) {\n    let result;\n    // If the address has a prefix decode it as is\n    if (tokenaddr.includes(\":\")) {\n        result = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddressFormat)(tokenaddr);\n    }\n    // otherwise, derive the network from the tokenaddr without prefix\n    else {\n        result = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddressFormatWithoutPrefix)(tokenaddr);\n    }\n    if (typeof result === \"string\")\n        throw new Error(result);\n    return (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.encodeCashAddress)(result.prefix, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.CashAddressType.p2pkh, result.payload);\n}\nfunction toTokenaddr(cashaddr) {\n    let result;\n    // If the address has a prefix decode it as is\n    if (cashaddr.includes(\":\")) {\n        result = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddressFormat)(cashaddr);\n    }\n    // otherwise, derive the network from the cashaddr without prefix\n    else {\n        result = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddressFormatWithoutPrefix)(cashaddr);\n    }\n    if (typeof result === \"string\")\n        throw new Error(result);\n    return (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.encodeCashAddress)(result.prefix, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.CashAddressType.p2pkhWithTokens, result.payload);\n}\nfunction isTokenaddr(address) {\n    let result;\n    // If the address has a prefix decode it as is\n    if (address.includes(\":\")) {\n        result = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddressFormat)(address);\n    }\n    else {\n        // otherwise, derive the network from the address without prefix\n        result = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddressFormatWithoutPrefix)(address);\n    }\n    if (typeof result === \"string\")\n        throw new Error(result);\n    const info = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddressVersionByte)(result.version);\n    if (typeof info === \"string\")\n        throw new Error(info);\n    const type = _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.cashAddressTypeBitsToType[info.typeBits];\n    if (type === undefined) {\n        throw Error(\"Wrong cashaddress type\");\n    }\n    return ([_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.CashAddressType.p2pkhWithTokens, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.CashAddressType.p2shWithTokens].indexOf(type) !== -1);\n}\nfunction checkTokenaddr(cashaddr, enforce) {\n    if (enforce && !isTokenaddr(cashaddr)) {\n        throw new Error(\"Error trying to send to a non-tokenaware cash address\");\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/deriveCashaddr.ts?");

/***/ }),

/***/ "./src/util/deriveNetwork.ts":
/*!***********************************!*\
  !*** ./src/util/deriveNetwork.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"derivedNetwork\": () => (/* binding */ derivedNetwork)\n/* harmony export */ });\n/* harmony import */ var _derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./derivePublicKeyHash.js */ \"./src/util/derivePublicKeyHash.ts\");\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enum.js */ \"./src/enum.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_enum_js__WEBPACK_IMPORTED_MODULE_0__, _derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_enum_js__WEBPACK_IMPORTED_MODULE_0__, _derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n// This function if for assuring that a list of addresses are on the name network\n// for a single address use: networkPrefixMap[derivePrefix(address)]\nfunction derivedNetwork(addresses) {\n    let networks = addresses.map((address) => _enum_js__WEBPACK_IMPORTED_MODULE_0__.networkPrefixMap[(0,_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_1__.derivePrefix)(address)]);\n    // Get a unique set of networks requested\n    let networkSet = new Set(networks);\n    if (networkSet.size > 1) {\n        throw Error(\"Contract addresses are not on the same network\");\n    }\n    else if (networkSet.size === 0) {\n        throw Error(\"No address network was derived\");\n    }\n    else {\n        return networkSet.values().next().value;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/deriveNetwork.ts?");

/***/ }),

/***/ "./src/util/derivePublicKeyHash.ts":
/*!*****************************************!*\
  !*** ./src/util/derivePublicKeyHash.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"derivePrefix\": () => (/* binding */ derivePrefix),\n/* harmony export */   \"derivePublicKeyHash\": () => (/* binding */ derivePublicKeyHash)\n/* harmony export */ });\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/address/cash-address.js\");\n\n/**\n * Helper function to convert an address to a public key hash\n *\n * @param address   Address to convert to a hash\n *\n * @returns a public key hash corresponding to the passed address\n */\nfunction derivePublicKeyHash(address) {\n    let result;\n    // If the address has a prefix decode it as is\n    if (address.includes(\":\")) {\n        result = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.decodeCashAddressFormat)(address);\n    }\n    // otherwise, derive the network from the address without prefix\n    else {\n        result = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.decodeCashAddressFormatWithoutPrefix)(address);\n    }\n    if (typeof result === \"string\")\n        throw new Error(result);\n    // return the public key hash\n    return result.payload;\n}\n/**\n * Helper function to convert an address prefix\n *\n * @param address   Address with or without prefix\n *\n * @returns the address prefix\n */\nfunction derivePrefix(address) {\n    let result;\n    if (address.includes(\":\")) {\n        result = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.decodeCashAddressFormat)(address);\n    }\n    else {\n        result = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.decodeCashAddressFormatWithoutPrefix)(address);\n    }\n    if (typeof result === \"string\")\n        throw new Error(result);\n    // TODO pass the network in and check it or raise Error\n    return result.prefix;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/derivePublicKeyHash.ts?");

/***/ }),

/***/ "./src/util/eventsource.ts":
/*!*********************************!*\
  !*** ./src/util/eventsource.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getRuntimePlatform.js */ \"./src/util/getRuntimePlatform.ts\");\n/* harmony import */ var eventsource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventsource */ \"?ec4c\");\n/* harmony import */ var eventsource__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(eventsource__WEBPACK_IMPORTED_MODULE_0__);\n\n\nlet EventSource;\nif ((0,_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_1__.getRuntimePlatform)() != \"node\") {\n    EventSource = globalThis.EventSource;\n}\nelse {\n    EventSource = (eventsource__WEBPACK_IMPORTED_MODULE_0___default());\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EventSource);\n\n\n//# sourceURL=webpack://mainnet-js/./src/util/eventsource.ts?");

/***/ }),

/***/ "./src/util/floor.ts":
/*!***************************!*\
  !*** ./src/util/floor.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"floor\": () => (/* binding */ floor)\n/* harmony export */ });\nfunction floor(value, precision) {\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.floor(value * multiplier) / multiplier;\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/util/floor.ts?");

/***/ }),

/***/ "./src/util/getAddrsByXpubKey.ts":
/*!***************************************!*\
  !*** ./src/util/getAddrsByXpubKey.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAddrsByXpubKey\": () => (/* binding */ getAddrsByXpubKey),\n/* harmony export */   \"getAddrsByXpubKeyObject\": () => (/* binding */ getAddrsByXpubKeyObject),\n/* harmony export */   \"getXpubKeyInfo\": () => (/* binding */ getXpubKeyInfo),\n/* harmony export */   \"getXpubKeyInfoObject\": () => (/* binding */ getXpubKeyInfoObject)\n/* harmony export */ });\n/* unused harmony export derivePublicNodeCashaddr */\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/key/hd-key.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/address/cash-address.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _hash160_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hash160.js */ \"./src/util/hash160.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__, _hash160_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__, _hash160_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nfunction getAddrsByXpubKey(xpub, path, count) {\n    let pathComponents = path.split(\"/\");\n    let rootStr = pathComponents.shift();\n    let root;\n    if (rootStr === \"M\" || rootStr === \"m\") {\n        rootStr = pathComponents.shift();\n    }\n    root = parseInt(rootStr);\n    let result = [];\n    const start = parseInt(pathComponents.pop());\n    const end = start + count;\n    for (let curr = start; curr < end; curr++) {\n        let childPath = [\"M\", root, ...pathComponents, curr].join(\"/\");\n        result.push(derivePublicNodeCashaddr(xpub, root, childPath));\n    }\n    return result;\n}\nfunction getAddrsByXpubKeyObject(obj) {\n    return getAddrsByXpubKey(obj.xpubkey, obj.path, obj.count);\n}\nfunction derivePublicNodeCashaddr(xpub, index, path) {\n    const publicParent = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.decodeHdPublicKey)(xpub);\n    if (typeof publicParent === \"string\") {\n        throw new Error(publicParent);\n    }\n    let prefix = (publicParent.network === \"mainnet\" ? \"bitcoincash\" : \"bchtest\");\n    let node = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.deriveHdPublicNodeChild)(publicParent.node, index);\n    if (typeof node === \"string\") {\n        throw new Error(node);\n    }\n    let cashaddr;\n    if (typeof path === \"string\") {\n        if (path[0] !== \"M\") {\n            throw Error(\"use M for public path derivation\");\n        }\n        let childNode = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.deriveHdPath)(publicParent.node, path);\n        if (typeof childNode === \"string\") {\n            throw new Error(childNode);\n        }\n        else {\n            let childPkh = (0,_hash160_js__WEBPACK_IMPORTED_MODULE_1__.hash160)(childNode.publicKey);\n            cashaddr = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.encodeCashAddress)(prefix, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.CashAddressType.p2pkh, childPkh);\n        }\n    }\n    return cashaddr;\n}\nfunction getXpubKeyInfo(hdPublicKey) {\n    let node = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.decodeHdPublicKey)(hdPublicKey);\n    if (typeof node === \"string\") {\n        throw new Error(node);\n    }\n    return {\n        version: node.network,\n        depth: node.node.depth,\n        parentFingerprint: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.binToHex)(node.node.parentFingerprint),\n        childNumber: node.node.childIndex,\n        chain: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.binToHex)(node.node.chainCode),\n        data: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.binToHex)(node.node.publicKey),\n        fingerprint: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.binToHex)((0,_hash160_js__WEBPACK_IMPORTED_MODULE_1__.hash160)(node.node.publicKey).slice(0, 4)),\n    };\n}\nasync function getXpubKeyInfoObject(obj) {\n    return getXpubKeyInfo(obj.xpubkey);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/getAddrsByXpubKey.ts?");

/***/ }),

/***/ "./src/util/getRuntimePlatform.ts":
/*!****************************************!*\
  !*** ./src/util/getRuntimePlatform.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RuntimePlatform\": () => (/* binding */ RuntimePlatform),\n/* harmony export */   \"getRuntimePlatform\": () => (/* binding */ getRuntimePlatform)\n/* harmony export */ });\nvar RuntimePlatform;\n(function (RuntimePlatform) {\n    RuntimePlatform[\"node\"] = \"node\";\n    RuntimePlatform[\"browser\"] = \"browser\";\n    RuntimePlatform[\"webworker\"] = \"webworker\";\n})(RuntimePlatform || (RuntimePlatform = {}));\nfunction getRuntimePlatform() {\n    // https://github.com/foo123/asynchronous.js/blob/master/asynchronous.js\n    if (\"undefined\" !== typeof __webpack_require__.g &&\n        (\"[object global]\" === toString.call(__webpack_require__.g) ||\n            \"[object Object]\" === toString.call(__webpack_require__.g))) {\n        return RuntimePlatform.node;\n    }\n    else {\n        if (\"undefined\" !== typeof WorkerGlobalScope &&\n            \"function\" === typeof importScripts &&\n            navigator instanceof WorkerNavigator) {\n            return RuntimePlatform.webworker;\n        }\n        else if (\"undefined\" !== typeof navigator &&\n            \"undefined\" !== typeof document) {\n            return RuntimePlatform.browser;\n        }\n        else {\n            throw Error(\"Could not determine runtime platform\");\n        }\n    }\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/util/getRuntimePlatform.ts?");

/***/ }),

/***/ "./src/util/getUsdRate.ts":
/*!********************************!*\
  !*** ./src/util/getUsdRate.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getUsdRate\": () => (/* binding */ getUsdRate)\n/* harmony export */ });\n/* harmony import */ var _rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../rate/ExchangeRate.js */ \"./src/rate/ExchangeRate.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__]);\n_rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nfunction getUsdRate() {\n    return _rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__.ExchangeRate.get(\"usd\");\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/getUsdRate.ts?");

/***/ }),

/***/ "./src/util/getXPubKey.ts":
/*!********************************!*\
  !*** ./src/util/getXPubKey.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getXPubKey\": () => (/* binding */ getXPubKey)\n/* harmony export */ });\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/key/hd-key.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__]);\n_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nfunction getXPubKey(seed, derivationPath, network) {\n    if (typeof seed === \"string\") {\n        seed = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(seed);\n    }\n    let hdNode = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.deriveHdPrivateNodeFromSeed)(seed);\n    if (!hdNode.valid) {\n        throw Error(\"Invalid private key derived from mnemonic seed\");\n    }\n    let node = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.deriveHdPath)(hdNode, derivationPath);\n    if (typeof node === \"string\") {\n        throw node;\n    }\n    let parentPublicNode = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.deriveHdPublicNode)(node);\n    let xPubKey = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.encodeHdPublicKey)({\n        network: network,\n        node: parentPublicNode,\n    });\n    return xPubKey;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/getXPubKey.ts?");

/***/ }),

/***/ "./src/util/hash160.ts":
/*!*****************************!*\
  !*** ./src/util/hash160.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hash160\": () => (/* binding */ hash160)\n/* harmony export */ });\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__]);\n_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n/**\n * hash160 - Calculate the sha256, ripemd160 hash of a value\n *\n * @param {message} Uint8Array       value to hash as a binary array\n *\n * @returns a promise to the hash160 value of the input\n */\nfunction hash160(message) {\n    return _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.ripemd160.hash(_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.sha256.hash(message));\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/hash160.ts?");

/***/ }),

/***/ "./src/util/index.ts":
/*!***************************!*\
  !*** ./src/util/index.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BalanceResponse\": () => (/* reexport safe */ _balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_23__.BalanceResponse),\n/* harmony export */   \"ExchangeRate\": () => (/* reexport safe */ _rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_16__.ExchangeRate),\n/* harmony export */   \"RuntimePlatform\": () => (/* reexport safe */ _getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_13__.RuntimePlatform),\n/* harmony export */   \"amountInSatoshi\": () => (/* reexport safe */ _amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_0__.amountInSatoshi),\n/* harmony export */   \"asSendRequestObject\": () => (/* reexport safe */ _asSendRequestObject_js__WEBPACK_IMPORTED_MODULE_1__.asSendRequestObject),\n/* harmony export */   \"atob\": () => (/* reexport safe */ _base64_js__WEBPACK_IMPORTED_MODULE_2__.atob),\n/* harmony export */   \"balanceFromSatoshi\": () => (/* reexport safe */ _balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_23__.balanceFromSatoshi),\n/* harmony export */   \"balanceResponseFromSatoshi\": () => (/* reexport safe */ _balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_23__.balanceResponseFromSatoshi),\n/* harmony export */   \"binToBase64\": () => (/* reexport safe */ _bitauth_libauth__WEBPACK_IMPORTED_MODULE_5__.binToBase64),\n/* harmony export */   \"binToHex\": () => (/* reexport safe */ _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.binToHex),\n/* harmony export */   \"btoa\": () => (/* reexport safe */ _base64_js__WEBPACK_IMPORTED_MODULE_2__.btoa),\n/* harmony export */   \"checkTokenaddr\": () => (/* reexport safe */ _deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_11__.checkTokenaddr),\n/* harmony export */   \"convert\": () => (/* reexport safe */ _convert_js__WEBPACK_IMPORTED_MODULE_7__.convert),\n/* harmony export */   \"convertObject\": () => (/* reexport safe */ _convert_js__WEBPACK_IMPORTED_MODULE_7__.convertObject),\n/* harmony export */   \"delay\": () => (/* reexport safe */ _delay_js__WEBPACK_IMPORTED_MODULE_8__.delay),\n/* harmony export */   \"deriveCashaddr\": () => (/* reexport safe */ _deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_11__.deriveCashaddr),\n/* harmony export */   \"derivePublicKeyHash\": () => (/* reexport safe */ _derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_10__.derivePublicKeyHash),\n/* harmony export */   \"deriveTokenaddr\": () => (/* reexport safe */ _deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_11__.deriveTokenaddr),\n/* harmony export */   \"derivedNetwork\": () => (/* reexport safe */ _deriveNetwork_js__WEBPACK_IMPORTED_MODULE_9__.derivedNetwork),\n/* harmony export */   \"getAddrsByXpubKey\": () => (/* reexport safe */ _util_getAddrsByXpubKey_js__WEBPACK_IMPORTED_MODULE_12__.getAddrsByXpubKey),\n/* harmony export */   \"getAddrsByXpubKeyObject\": () => (/* reexport safe */ _util_getAddrsByXpubKey_js__WEBPACK_IMPORTED_MODULE_12__.getAddrsByXpubKeyObject),\n/* harmony export */   \"getRandomInt\": () => (/* reexport safe */ _randomInt_js__WEBPACK_IMPORTED_MODULE_19__.getRandomInt),\n/* harmony export */   \"getRuntimePlatform\": () => (/* reexport safe */ _getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_13__.getRuntimePlatform),\n/* harmony export */   \"getUsdRate\": () => (/* reexport safe */ _getUsdRate_js__WEBPACK_IMPORTED_MODULE_14__.getUsdRate),\n/* harmony export */   \"getXPubKey\": () => (/* reexport safe */ _util_getXPubKey_js__WEBPACK_IMPORTED_MODULE_20__.getXPubKey),\n/* harmony export */   \"getXpubKeyInfo\": () => (/* reexport safe */ _util_getAddrsByXpubKey_js__WEBPACK_IMPORTED_MODULE_12__.getXpubKeyInfo),\n/* harmony export */   \"getXpubKeyInfoObject\": () => (/* reexport safe */ _util_getAddrsByXpubKey_js__WEBPACK_IMPORTED_MODULE_12__.getXpubKeyInfoObject),\n/* harmony export */   \"hash160\": () => (/* reexport safe */ _hash160_js__WEBPACK_IMPORTED_MODULE_15__.hash160),\n/* harmony export */   \"hexToBin\": () => (/* reexport safe */ _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.hexToBin),\n/* harmony export */   \"isTokenaddr\": () => (/* reexport safe */ _deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_11__.isTokenaddr),\n/* harmony export */   \"randomValues\": () => (/* reexport module object */ _randomValues_js__WEBPACK_IMPORTED_MODULE_21__),\n/* harmony export */   \"sanitizeAddress\": () => (/* reexport safe */ _sanitizeAddress_js__WEBPACK_IMPORTED_MODULE_17__.sanitizeAddress),\n/* harmony export */   \"sanitizeUnit\": () => (/* reexport safe */ _sanitizeUnit_js__WEBPACK_IMPORTED_MODULE_18__.sanitizeUnit),\n/* harmony export */   \"sha256\": () => (/* reexport safe */ _bitauth_libauth__WEBPACK_IMPORTED_MODULE_6__.sha256),\n/* harmony export */   \"sumUtxoValue\": () => (/* reexport safe */ _sumUtxoValue_js__WEBPACK_IMPORTED_MODULE_22__.sumUtxoValue),\n/* harmony export */   \"toCashaddr\": () => (/* reexport safe */ _deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_11__.toCashaddr),\n/* harmony export */   \"toTokenaddr\": () => (/* reexport safe */ _deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_11__.toTokenaddr),\n/* harmony export */   \"utf8ToBin\": () => (/* reexport safe */ _bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.utf8ToBin)\n/* harmony export */ });\n/* harmony import */ var _amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./amountInSatoshi.js */ \"./src/util/amountInSatoshi.ts\");\n/* harmony import */ var _asSendRequestObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./asSendRequestObject.js */ \"./src/util/asSendRequestObject.ts\");\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64.js */ \"./src/util/base64.ts\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/utf8.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/base64.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\n/* harmony import */ var _convert_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./convert.js */ \"./src/util/convert.ts\");\n/* harmony import */ var _delay_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./delay.js */ \"./src/util/delay.ts\");\n/* harmony import */ var _deriveNetwork_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./deriveNetwork.js */ \"./src/util/deriveNetwork.ts\");\n/* harmony import */ var _derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./derivePublicKeyHash.js */ \"./src/util/derivePublicKeyHash.ts\");\n/* harmony import */ var _deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./deriveCashaddr.js */ \"./src/util/deriveCashaddr.ts\");\n/* harmony import */ var _util_getAddrsByXpubKey_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../util/getAddrsByXpubKey.js */ \"./src/util/getAddrsByXpubKey.ts\");\n/* harmony import */ var _getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./getRuntimePlatform.js */ \"./src/util/getRuntimePlatform.ts\");\n/* harmony import */ var _getUsdRate_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./getUsdRate.js */ \"./src/util/getUsdRate.ts\");\n/* harmony import */ var _hash160_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./hash160.js */ \"./src/util/hash160.ts\");\n/* harmony import */ var _rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../rate/ExchangeRate.js */ \"./src/rate/ExchangeRate.ts\");\n/* harmony import */ var _sanitizeAddress_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./sanitizeAddress.js */ \"./src/util/sanitizeAddress.ts\");\n/* harmony import */ var _sanitizeUnit_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./sanitizeUnit.js */ \"./src/util/sanitizeUnit.ts\");\n/* harmony import */ var _randomInt_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./randomInt.js */ \"./src/util/randomInt.ts\");\n/* harmony import */ var _util_getXPubKey_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../util/getXPubKey.js */ \"./src/util/getXPubKey.ts\");\n/* harmony import */ var _randomValues_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./randomValues.js */ \"./src/util/randomValues.ts\");\n/* harmony import */ var _sumUtxoValue_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./sumUtxoValue.js */ \"./src/util/sumUtxoValue.ts\");\n/* harmony import */ var _balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./balanceObjectFromSatoshi.js */ \"./src/util/balanceObjectFromSatoshi.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_0__, _asSendRequestObject_js__WEBPACK_IMPORTED_MODULE_1__, _base64_js__WEBPACK_IMPORTED_MODULE_2__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_6__, _convert_js__WEBPACK_IMPORTED_MODULE_7__, _deriveNetwork_js__WEBPACK_IMPORTED_MODULE_9__, _derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_10__, _deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_11__, _util_getAddrsByXpubKey_js__WEBPACK_IMPORTED_MODULE_12__, _getUsdRate_js__WEBPACK_IMPORTED_MODULE_14__, _hash160_js__WEBPACK_IMPORTED_MODULE_15__, _rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_16__, _sanitizeAddress_js__WEBPACK_IMPORTED_MODULE_17__, _util_getXPubKey_js__WEBPACK_IMPORTED_MODULE_20__, _balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_23__]);\n([_amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_0__, _asSendRequestObject_js__WEBPACK_IMPORTED_MODULE_1__, _base64_js__WEBPACK_IMPORTED_MODULE_2__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_6__, _convert_js__WEBPACK_IMPORTED_MODULE_7__, _deriveNetwork_js__WEBPACK_IMPORTED_MODULE_9__, _derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_10__, _deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_11__, _util_getAddrsByXpubKey_js__WEBPACK_IMPORTED_MODULE_12__, _getUsdRate_js__WEBPACK_IMPORTED_MODULE_14__, _hash160_js__WEBPACK_IMPORTED_MODULE_15__, _rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_16__, _sanitizeAddress_js__WEBPACK_IMPORTED_MODULE_17__, _util_getXPubKey_js__WEBPACK_IMPORTED_MODULE_20__, _balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_23__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/index.ts?");

/***/ }),

/***/ "./src/util/randomBytes.ts":
/*!*********************************!*\
  !*** ./src/util/randomBytes.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateRandomBytes\": () => (/* binding */ generateRandomBytes)\n/* harmony export */ });\n/* harmony import */ var _getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getRuntimePlatform.js */ \"./src/util/getRuntimePlatform.ts\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"?28d6\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction generateRandomBytes(len = 32) {\n    // nodejs\n    if ((0,_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_1__.getRuntimePlatform)() === \"node\") {\n        return crypto__WEBPACK_IMPORTED_MODULE_0___default().randomBytes(len);\n    }\n    // window, webworkers, service workers\n    else {\n        return window.crypto.getRandomValues(new Uint8Array(len));\n    }\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/util/randomBytes.ts?");

/***/ }),

/***/ "./src/util/randomInt.ts":
/*!*******************************!*\
  !*** ./src/util/randomInt.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getRandomInt\": () => (/* binding */ getRandomInt)\n/* harmony export */ });\n// Simple function to get a random integer\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/util/randomInt.ts?");

/***/ }),

/***/ "./src/util/randomValues.ts":
/*!**********************************!*\
  !*** ./src/util/randomValues.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getRuntimePlatform.js */ \"./src/util/getRuntimePlatform.ts\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"?28d6\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\n\nif ((0,_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_1__.getRuntimePlatform)() === \"node\") {\n    if (!globalThis.crypto || !globalThis.crypto.getRandomValues) {\n        globalThis.crypto = (crypto__WEBPACK_IMPORTED_MODULE_0___default());\n        // (globalThis.crypto as any).getRandomValues = (buf: Uint8Array) => {\n        //   const bytes = crypto.randomBytes(buf.length);\n        //   buf.set(bytes);\n        //   return buf;\n        // };\n    }\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/util/randomValues.ts?");

/***/ }),

/***/ "./src/util/sanitizeAddress.ts":
/*!*************************************!*\
  !*** ./src/util/sanitizeAddress.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sanitizeAddress\": () => (/* binding */ sanitizeAddress)\n/* harmony export */ });\n/* harmony import */ var _derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./derivePublicKeyHash.js */ \"./src/util/derivePublicKeyHash.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_0__]);\n_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Assure address is prefixed.\nfunction sanitizeAddress(address) {\n    if (address.includes(\":\")) {\n        return address;\n    }\n    else {\n        return `${(0,_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_0__.derivePrefix)(address)}:${address}`;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/sanitizeAddress.ts?");

/***/ }),

/***/ "./src/util/sanitizeUnit.ts":
/*!**********************************!*\
  !*** ./src/util/sanitizeUnit.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sanitizeUnit\": () => (/* binding */ sanitizeUnit)\n/* harmony export */ });\nfunction sanitizeUnit(rawUnit) {\n    if (rawUnit) {\n        return rawUnit.toLocaleLowerCase();\n    }\n    else {\n        throw Error(\"Attempted to sanitize a unit of value, but the unit was undefined.\");\n    }\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/util/sanitizeUnit.ts?");

/***/ }),

/***/ "./src/util/satoshiToAmount.ts":
/*!*************************************!*\
  !*** ./src/util/satoshiToAmount.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"satoshiToAmount\": () => (/* binding */ satoshiToAmount)\n/* harmony export */ });\n/* harmony import */ var _chain_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../chain.js */ \"./src/chain.ts\");\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enum.js */ \"./src/enum.ts\");\n/* harmony import */ var _rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../rate/ExchangeRate.js */ \"./src/rate/ExchangeRate.ts\");\n/* harmony import */ var _util_sanitizeUnit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/sanitizeUnit.js */ \"./src/util/sanitizeUnit.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__, _enum_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__, _enum_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n/**\n * converts given value and unit from satoshi\n *\n * @param {value} number           some value in satoshi\n * @param {rawUnit} any            the target unit\n *\n * @returns a promise to the value in the unit of account given by rawUnit\n */\nasync function satoshiToAmount(value, rawUnit) {\n    const unit = (0,_util_sanitizeUnit_js__WEBPACK_IMPORTED_MODULE_1__.sanitizeUnit)(rawUnit);\n    switch (unit) {\n        case _enum_js__WEBPACK_IMPORTED_MODULE_2__.UnitEnum.BCH:\n            return value / _chain_js__WEBPACK_IMPORTED_MODULE_3__.bchParam.subUnits;\n        case _enum_js__WEBPACK_IMPORTED_MODULE_2__.UnitEnum.SATOSHI:\n            return value;\n        case _enum_js__WEBPACK_IMPORTED_MODULE_2__.UnitEnum.SAT:\n            return value;\n        case _enum_js__WEBPACK_IMPORTED_MODULE_2__.UnitEnum.SATS:\n            return value;\n        case _enum_js__WEBPACK_IMPORTED_MODULE_2__.UnitEnum.SATOSHIS:\n            return value;\n        case _enum_js__WEBPACK_IMPORTED_MODULE_2__.UnitEnum.USD:\n            let USD_over_BCH = await _rate_ExchangeRate_js__WEBPACK_IMPORTED_MODULE_0__.ExchangeRate.get(\"usd\");\n            let SAT_over_BCH = _chain_js__WEBPACK_IMPORTED_MODULE_3__.bchParam.subUnits;\n            // truncate dollar amounts to fixed precision (2),\n            // then return the fixed value string as a float.\n            let dollarValue = Number(value * (USD_over_BCH / SAT_over_BCH)).toFixed(2);\n            return Number.parseFloat(dollarValue);\n        default:\n            throw Error(\"Unit of value not defined\");\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/satoshiToAmount.ts?");

/***/ }),

/***/ "./src/util/sumSendRequestAmounts.ts":
/*!*******************************************!*\
  !*** ./src/util/sumSendRequestAmounts.ts ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sumSendRequestAmounts\": () => (/* binding */ sumSendRequestAmounts)\n/* harmony export */ });\n/* harmony import */ var _wallet_model_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../wallet/model.js */ \"./src/wallet/model.ts\");\n/* harmony import */ var _amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./amountInSatoshi.js */ \"./src/util/amountInSatoshi.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_wallet_model_js__WEBPACK_IMPORTED_MODULE_0__, _amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_wallet_model_js__WEBPACK_IMPORTED_MODULE_0__, _amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n// This function sums a list of send request objects\nasync function sumSendRequestAmounts(requests) {\n    if (requests) {\n        const balanceArray = await Promise.all(requests.map(async (r) => {\n            if (r instanceof _wallet_model_js__WEBPACK_IMPORTED_MODULE_0__.SendRequest) {\n                return BigInt(await (0,_amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_1__.amountInSatoshi)(r.value, r.unit));\n            }\n            else if (r instanceof _wallet_model_js__WEBPACK_IMPORTED_MODULE_0__.TokenSendRequest) {\n                return BigInt(r.value || 1000);\n            }\n            else\n                return BigInt(0);\n        }));\n        const balance = balanceArray.reduce(sumBalance, BigInt(0));\n        return balance;\n    }\n    else {\n        return BigInt(0);\n    }\n}\nfunction sumBalance(a, b) {\n    // a is zero or a number\n    if (b instanceof Error) {\n        throw b;\n    }\n    return BigInt(a) + BigInt(b);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/sumSendRequestAmounts.ts?");

/***/ }),

/***/ "./src/util/sumUtxoValue.ts":
/*!**********************************!*\
  !*** ./src/util/sumUtxoValue.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sumTokenAmounts\": () => (/* binding */ sumTokenAmounts),\n/* harmony export */   \"sumUtxoValue\": () => (/* binding */ sumUtxoValue)\n/* harmony export */ });\nfunction sumUtxoValue(utxos) {\n    if (utxos.length > 0) {\n        const balanceArray = utxos.map((o) => {\n            return o.satoshis;\n        });\n        const balance = balanceArray.reduce((a, b) => a + b, 0);\n        return balance;\n    }\n    else {\n        return 0;\n    }\n}\nfunction sumTokenAmounts(utxos, tokenId) {\n    if (utxos.length > 0) {\n        const tokenArray = utxos\n            .filter((utxo) => utxo.token?.tokenId === tokenId)\n            .map((o) => {\n            return o.token?.amount || 0;\n        });\n        const balance = tokenArray.reduce((a, b) => a + b, 0);\n        return balance;\n    }\n    else {\n        return 0;\n    }\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/util/sumUtxoValue.ts?");

/***/ }),

/***/ "./src/util/transaction.ts":
/*!*********************************!*\
  !*** ./src/util/transaction.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getTransactionHash\": () => (/* binding */ getTransactionHash)\n/* harmony export */ });\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__]);\n_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nasync function getTransactionHash(rawTransactionHex) {\n    const transactionBin = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(rawTransactionHex);\n    // transaction hash is a double sha256 of a raw transaction data, reversed byte order\n    return (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_0__.binToHex)(_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.sha256.hash(_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.sha256.hash(transactionBin)).reverse());\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/util/transaction.ts?");

/***/ }),

/***/ "./src/wallet/Base.ts":
/*!****************************!*\
  !*** ./src/wallet/Base.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseWallet\": () => (/* binding */ BaseWallet),\n/* harmony export */   \"getNamedWalletId\": () => (/* binding */ getNamedWalletId)\n/* harmony export */ });\n/* harmony import */ var _db_getStorageProvider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../db/getStorageProvider.js */ \"./src/db/getStorageProvider.ts\");\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enum.js */ \"./src/enum.ts\");\n/* harmony import */ var _util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/getRuntimePlatform.js */ \"./src/util/getRuntimePlatform.ts\");\n/* harmony import */ var _qr_Qr_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../qr/Qr.js */ \"./src/qr/Qr.ts\");\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enum.js */ \"./src/wallet/enum.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_enum_js__WEBPACK_IMPORTED_MODULE_0__, _qr_Qr_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_enum_js__WEBPACK_IMPORTED_MODULE_0__, _qr_Qr_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n/**\n * A class to hold features used by all wallets\n * @class  BaseWallet\n */\nclass BaseWallet {\n    //#endregion Accessors\n    //#region Constructors and Statics\n    /**\n     * constructor for a new wallet\n     * @param {string} name              name of the wallet\n     * @param network              network for wallet\n     *\n     * @throws {Error} if called on BaseWallet\n     */\n    constructor(name = \"\", network = _enum_js__WEBPACK_IMPORTED_MODULE_0__.NetworkType.Mainnet, walletType = _enum_js__WEBPACK_IMPORTED_MODULE_1__.WalletTypeEnum.Seed) {\n        this.derivationPath = \"m/44'/0'/0'/0/0\";\n        this.parentDerivationPath = \"m/44'/0'/0'\";\n        this.name = name;\n        this.network = network;\n        this.walletType = walletType;\n        this.provider = this.getNetworkProvider(this.network);\n        this.isTestnet = this.network === _enum_js__WEBPACK_IMPORTED_MODULE_0__.NetworkType.Mainnet ? false : true;\n    }\n    //#region Accessors\n    getNetworkProvider(\n    // @ts-ignore\n    network = _enum_js__WEBPACK_IMPORTED_MODULE_0__.NetworkType.Mainnet) {\n        throw Error(\"getNetworkProvider called on base wallet\");\n    }\n    /**\n     * getDepositAddress - get a wallet deposit address\n     *\n     * a high-level function,\n     *\n     * @see {@link https://rest-unstable.mainnet.cash/api-docs/#/wallet/depositAddress|/wallet/deposit_address} for REST endpoint\n     *\n     * @returns The deposit address as a string\n     */\n    getDepositAddress() {\n        return this.address;\n    }\n    /**\n     * getDepositQr - get an address qrcode, encoded for display on the web\n     *\n     * a high-level function\n     *\n     * @see {@link https://rest-unstable.mainnet.cash/api-docs/#/wallet/depositQr|/wallet/deposit_qr} for REST endpoint\n     *\n     * @returns The qrcode for the address\n     */\n    getDepositQr() {\n        return (0,_qr_Qr_js__WEBPACK_IMPORTED_MODULE_2__.qrAddress)(this.getDepositAddress());\n    }\n    // Get mnemonic and derivation path for wallet\n    getSeed() {\n        if (!this.mnemonic) {\n            throw Error(\"Wallet mnemonic seed phrase not set\");\n        }\n        if (!this.derivationPath) {\n            throw Error(\"Wallet derivation path not set\");\n        }\n        return {\n            seed: this.mnemonic,\n            derivationPath: this.derivationPath,\n            parentDerivationPath: this.parentDerivationPath,\n        };\n    }\n    /**\n     * fromId - create a wallet from encoded walletId string\n     *\n     * @param walletId   walletId options to steer the creation process\n     *\n     * @returns wallet instantiated accordingly to the walletId rules\n     */\n    static async fromId(walletId) {\n        return new this().fromId(walletId);\n    }\n    /**\n     * fromSeed - create a wallet using the seed phrase and derivation path\n     *\n     * unless specified the derivation path m/44'/245'/0'/0/0 will be userd\n     * this derivation path is standard for Electron Cash SLP and other SLP enabled wallets\n     *\n     * @param seed   BIP39 12 word seed phrase\n     * @param derivationPath BIP44 HD wallet derivation path to get a single the private key from hierarchy\n     *\n     * @returns instantiated wallet\n     */\n    static async fromSeed(seed, derivationPath) {\n        return new this().fromSeed(seed, derivationPath);\n    }\n    /**\n     * newRandom - create a random wallet\n     *\n     * if `name` parameter is specified, the wallet will also be persisted to DB\n     *\n     * @param name   user friendly wallet alias\n     * @param dbName name under which the wallet will be stored in the database\n     *\n     * @returns instantiated wallet\n     */\n    static async newRandom(name = \"\", dbName) {\n        return new this().newRandom(name, dbName);\n    }\n    /**\n     * watchOnly - create a watch-only wallet\n     *\n     * such kind of wallet does not have a private key and is unable to spend any funds\n     * however it still allows to use many utility functions such as getting and watching balance, etc.\n     *\n     * @param address   cashaddress, token aware cashaddress or slpaddress of a wallet\n     *\n     * @returns instantiated wallet\n     */\n    static async watchOnly(address) {\n        return new this().watchOnly(address);\n    }\n    /**\n     * named - create a named wallet\n     *\n     * @param name   user friendly wallet alias\n     * @param dbName name under which the wallet will be stored in the database\n     * @param force  force recreate wallet in the database if a record already exist\n     *\n     * @returns instantiated wallet\n     */\n    static async named(name, dbName, force) {\n        return new this().named(name, dbName, force);\n    }\n    /**\n     * replaceNamed - replace (recover) named wallet with a new walletId\n     *\n     * If wallet with a provided name does not exist yet, it will be created with a `walletId` supplied\n     * If wallet exists it will be overwritten without exception\n     *\n     * @param name   user friendly wallet alias\n     * @param walletId walletId options to steer the creation process\n     * @param dbName name under which the wallet will be stored in the database\n     *\n     * @returns instantiated wallet\n     */\n    static async replaceNamed(name, walletId, dbName) {\n        return new this().replaceNamed(name, walletId, dbName);\n    }\n    /**\n     * namedExists - check if a named wallet already exists\n     *\n     * @param name   user friendly wallet alias\n     * @param dbName name under which the wallet will be stored in the database\n     *\n     * @returns boolean\n     */\n    static async namedExists(name, dbName) {\n        return new this().namedExists(name, dbName);\n    }\n    //#endregion Constructors\n    //#region Protected implementations\n    /**\n     * generate creates a new wallet\n     * @throws {Error} if called on BaseWallet\n     */\n    generate() {\n        throw Error(\"generate called on base wallet\");\n    }\n    /**\n     * fromId - creates a wallet from serialized string\n     *\n     * @throws {Error} if called on BaseWallet\n     */\n    fromId(walletId) {\n        let [walletType, networkGiven, arg1, arg2] = walletId.split(\":\");\n        if (this.network != networkGiven) {\n            throw Error(`Network prefix ${networkGiven} to a ${this.network} wallet`);\n        }\n        switch (walletType) {\n            case \"watch\":\n                if (arg2) {\n                    // watch:testnet:bchtest:qq1234567\n                    return this.watchOnly(`${arg1}:${arg2}`);\n                }\n                // watch:testnet:qq1234567\n                return this.watchOnly(`${arg1}`);\n            case \"named\":\n                if (arg2) {\n                    // named:testnet:wallet_1:my_database\n                    return this.named(arg1, arg2);\n                }\n                else {\n                    // named:testnet:wallet_1\n                    return this.named(arg1);\n                }\n            case \"seed\":\n                if (arg2) {\n                    // seed:testnet:table later ... stove kitten pluck:m/44'/0'/0'/0/0\n                    return this.fromSeed(arg1, arg2);\n                }\n                // seed:testnet:table later ... stove kitten pluck\n                return this.fromSeed(arg1);\n            default:\n                throw Error(`Unknown wallet type '${walletType}'`);\n        }\n    }\n    // Initialize wallet from a mnemonic phrase\n    async fromSeed(\n    // @ts-ignore\n    mnemonic, \n    // @ts-ignore\n    derivationPath) {\n        throw Error(\"fromSeed called on base wallet\");\n    }\n    /**\n     * newRandom (internal) if the wallet is named, get or create it; otherwise create a random\n     * unnamed wallet\n     * @param {string} name              name of the wallet\n     * @param {string} dbName            database name the wallet is stored in\n     */\n    async newRandom(name, dbName) {\n        if (name.length > 0) {\n            return this.named(name, dbName);\n        }\n        else {\n            return this.generate();\n        }\n    }\n    // @ts-ignore\n    async watchOnly(address) {\n        throw Error(\"fromSeed called on base wallet\");\n    }\n    /**\n     * named (internal) get a named wallet from the database or create a new one.\n     * Note: this function should behave identically if\n     *\n     * @param {string} name              name of the wallet\n     * @param {string} dbName            database name the wallet is stored in\n     * @param {boolean} forceNew         attempt to overwrite an existing wallet\n     *\n     * @throws {Error} if forceNew is true and the wallet already exists\n     * @returns a promise to a named wallet\n     */\n    async named(name, dbName, forceNew = false) {\n        if (name.length === 0) {\n            throw Error(\"Named wallets must have a non-empty name\");\n        }\n        _checkContextSafety(this);\n        this.name = name;\n        dbName = dbName ? dbName : this.network;\n        let db = (0,_db_getStorageProvider_js__WEBPACK_IMPORTED_MODULE_3__.getStorageProvider)(dbName);\n        // If there is a database, force saving or error\n        if (db) {\n            await db.init();\n            let savedWalletRecord = await db.getWallet(name);\n            if (savedWalletRecord) {\n                await db.close();\n                if (forceNew) {\n                    throw Error(`A wallet with the name ${name} already exists in ${dbName}`);\n                }\n                let recoveredWallet = await this.fromId(savedWalletRecord.wallet);\n                recoveredWallet.name = savedWalletRecord.name;\n                return recoveredWallet;\n            }\n            else {\n                let wallet = await this.generate();\n                await db.addWallet(wallet.name, wallet.toDbString());\n                await db.close();\n                return wallet;\n            }\n        }\n        else {\n            throw Error(\"No database was available or configured to store the named wallet.\");\n        }\n    }\n    /**\n     * replaceNamed - Replace (recover) named wallet with a new walletId\n     *\n     * If wallet with a provided name does not exist yet, it will be created with a `walletId` supplied\n     * If wallet exists it will be overwritten without exception\n     *\n     * @param name   user friendly wallet alias\n     * @param walletId walletId options to steer the creation process\n     * @param dbName name under which the wallet will be stored in the database\n     *\n     * @returns instantiated wallet\n     */\n    async replaceNamed(name, walletId, dbName) {\n        if (name.length === 0) {\n            throw Error(\"Named wallets must have a non-empty name\");\n        }\n        _checkContextSafety(this);\n        this.name = name;\n        dbName = dbName ? dbName : this.network;\n        let db = (0,_db_getStorageProvider_js__WEBPACK_IMPORTED_MODULE_3__.getStorageProvider)(dbName);\n        if (db) {\n            await db.init();\n            let savedWalletRecord = await db.getWallet(name);\n            await this.fromId(walletId);\n            if (savedWalletRecord) {\n                await db.updateWallet(name, walletId);\n            }\n            else {\n                await db.addWallet(name, walletId);\n            }\n            await db.close();\n            return this;\n        }\n        else {\n            throw Error(\"No database was available or configured to store the named wallet.\");\n        }\n    }\n    /**\n     * namedExists - check if a named wallet already exists\n     *\n     * @param name   user friendly wallet alias\n     * @param dbName name under which the wallet will be stored in the database\n     *\n     * @returns boolean\n     */\n    async namedExists(name, dbName) {\n        if (name.length === 0) {\n            throw Error(\"Named wallets must have a non-empty name\");\n        }\n        _checkContextSafety(this);\n        dbName = dbName ? dbName : this.network;\n        let db = (0,_db_getStorageProvider_js__WEBPACK_IMPORTED_MODULE_3__.getStorageProvider)(dbName);\n        if (db) {\n            await db.init();\n            let savedWalletRecord = await db.getWallet(name);\n            await db.close();\n            return savedWalletRecord !== undefined;\n        }\n        else {\n            throw Error(\"No database was available or configured to store the named wallet.\");\n        }\n    }\n    //#endregion Protected implementations\n    //#region Serialization\n    /**\n     * toDbString - store the serialized version of the wallet in the database, not just the name\n     *\n     * @throws {Error} if called on BaseWallet\n     */\n    toDbString() {\n        if (this.walletType == _enum_js__WEBPACK_IMPORTED_MODULE_1__.WalletTypeEnum.Seed) {\n            return `${this.walletType}:${this.network}:${this.mnemonic}:${this.derivationPath}`;\n        }\n        else if (this.walletType == _enum_js__WEBPACK_IMPORTED_MODULE_1__.WalletTypeEnum.Watch) {\n            return `${this.walletType}:${this.network}:${this.getDepositAddress()}`;\n        }\n        return \"\";\n    }\n    // Returns the serialized wallet as a string\n    // If storing in a database, set asNamed to false to store secrets\n    // In all other cases, the a named wallet is deserialized from the database\n    //  by the name key\n    toString() {\n        if (this.name) {\n            return `named:${this.network}:${this.name}`;\n        }\n        else if (this.walletType == _enum_js__WEBPACK_IMPORTED_MODULE_1__.WalletTypeEnum.Seed) {\n            return `${this.walletType}:${this.network}:${this.mnemonic}:${this.derivationPath}`;\n        }\n        else if (this.walletType == _enum_js__WEBPACK_IMPORTED_MODULE_1__.WalletTypeEnum.Watch) {\n            return `${this.walletType}:${this.network}:${this.getDepositAddress()}`;\n        }\n        return \"\";\n    }\n    //#endregion Serialization\n    //#region Funds\n    // @ts-ignore\n    async getBalance(rawUnit) {\n        throw Error(\"sendMax called on base wallet\");\n    }\n    // @ts-ignore\n    async getMaxAmountToSend(params) {\n        throw Error(\"getMaxAmountToSend called on base wallet\");\n    }\n    // @ts-ignore\n    async send(requests, options) {\n        throw Error(\"send called on base wallet\");\n    }\n    // @ts-ignore\n    async sendMax(address, options) {\n        throw Error(\"sendMax called on base wallet\");\n    }\n}\n/**\n * _checkContextSafety (internal) if running in nodejs, will disable saving\n * mainnet wallets on public servers if ALLOW_MAINNET_USER_WALLETS is set to false\n * @param {BaseWallet} wallet        a wallet\n */\nconst _checkContextSafety = function (wallet) {\n    if ((0,_util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_4__.getRuntimePlatform)() === \"node\") {\n        if (process.env.ALLOW_MAINNET_USER_WALLETS === `false`) {\n            if (wallet.network === _enum_js__WEBPACK_IMPORTED_MODULE_0__.NetworkType.Mainnet) {\n                throw Error(`Refusing to save wallet in an open public database, remove ALLOW_MAINNET_USER_WALLETS=\"false\", if this service is secure and private`);\n            }\n        }\n    }\n};\n/**\n * getNamedWalletId - get the full wallet id from the database\n *\n * @param name   user friendly wallet alias\n * @param dbName name under which the wallet will be stored in the database\n *\n * @returns boolean\n */\nasync function getNamedWalletId(name, dbName) {\n    if (name.length === 0) {\n        throw Error(\"Named wallets must have a non-empty name\");\n    }\n    dbName = dbName ? dbName : dbName;\n    let db = (0,_db_getStorageProvider_js__WEBPACK_IMPORTED_MODULE_3__.getStorageProvider)(dbName);\n    if (db) {\n        await db.init();\n        let savedWalletRecord = await db.getWallet(name);\n        await db.close();\n        if (savedWalletRecord !== undefined) {\n            return savedWalletRecord.wallet;\n        }\n        else {\n            throw Error(`No record was found for ${name} in db: ${dbName}`);\n        }\n    }\n    else {\n        throw Error(\"No database was available or configured to store the named wallet.\");\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/wallet/Base.ts?");

/***/ }),

/***/ "./src/wallet/Bcmr.ts":
/*!****************************!*\
  !*** ./src/wallet/Bcmr.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BCMR\": () => (/* binding */ BCMR)\n/* harmony export */ });\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/utf8.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/message/transaction-encoding.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"../../node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../interface.js */ \"./src/interface.ts\");\n/* harmony import */ var _network_Connection_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../network/Connection.js */ \"./src/network/Connection.ts\");\n/* harmony import */ var _model_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./model.js */ \"./src/wallet/model.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__, _model_js__WEBPACK_IMPORTED_MODULE_4__, _network_Connection_js__WEBPACK_IMPORTED_MODULE_6__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_7__]);\n([_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__, _model_js__WEBPACK_IMPORTED_MODULE_4__, _network_Connection_js__WEBPACK_IMPORTED_MODULE_6__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_7__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n// Implementation of CHIP-BCMR v2.0.0-draft, refer to https://github.com/bitjson/chip-bcmr\nclass BCMR {\n    static getRegistries() {\n        return this.metadataRegistries;\n    }\n    static resetRegistries() {\n        this.metadataRegistries = [];\n    }\n    /**\n     * fetchMetadataRegistry Fetch the BCMR registry JSON file from a remote URI, optionally verifying its content hash\n     *\n     * @param  {string} uri URI of the registry to fetch from\n     * @param  {string?} contentHash SHA256 hash of the resource the `uri` parameter points at.\n     * If specified, calculates the hash of the data fetched from `uri` and matches it with provided one.\n     * Yields an error upon mismatch.\n     *\n     * @returns {Registry} resolved registry\n     */\n    static async fetchMetadataRegistry(uri, contentHash) {\n        if (uri.indexOf(\"https://\") < 0) {\n            uri = `https://${uri}`;\n        }\n        // content hashes HTTPS Publication Outputs per spec\n        if (contentHash) {\n            // request as text and verify hash\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0___default().get(uri, {\n                responseType: \"text\",\n                transformResponse: (val) => {\n                    return val;\n                },\n            });\n            const hash = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.binToHex)(_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.sha256.hash((0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.utf8ToBin)(response.data)));\n            if (contentHash != hash) {\n                throw new Error(`Content hash mismatch for URI: ${uri}\\nreceived: ${hash}\\nrequired: ${contentHash}`);\n            }\n            return JSON.parse(response.data);\n        }\n        // request as JSON\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0___default().get(uri);\n        return response.data;\n    }\n    /**\n     * addMetadataRegistry Add the metadata registry to the list of tracked registries\n     *\n     * @param  {Registry} registry Registry object per schema specification, see https://raw.githubusercontent.com/bitjson/chip-bcmr/master/bcmr-v1.schema.json\n     *\n     */\n    static addMetadataRegistry(registry) {\n        if (this.metadataRegistries.some((val) => JSON.stringify(val) === JSON.stringify(registry))) {\n            return;\n        }\n        this.metadataRegistries.push(registry);\n    }\n    /**\n     * addMetadataRegistryFromUri Add the metadata registry by fetching a JSON file from a remote URI, optionally verifying its content hash\n     *\n     * @param  {string} uri URI of the registry to fetch from\n     * @param  {string?} contentHash SHA256 hash of the resource the `uri` parameter points at.\n     * If specified, calculates the hash of the data fetched from `uri` and matches it with provided one.\n     * Yields an error upon mismatch.\n     *\n     */\n    static async addMetadataRegistryFromUri(uri, contentHash) {\n        const registry = await this.fetchMetadataRegistry(uri, contentHash);\n        this.addMetadataRegistry(registry);\n    }\n    // helper function to enforce the constraints on the 0th output, decode the BCMR's OP_RETURN data\n    // returns resolved AuthChainElement\n    static makeAuthChainElement(rawTx, hash) {\n        let opReturns;\n        let spends0thOutput = false;\n        if (rawTx.hasOwnProperty(\"vout\")) {\n            const electrumTransaction = rawTx;\n            opReturns = electrumTransaction.vout\n                .filter((val) => val.scriptPubKey.type === \"nulldata\")\n                .map((val) => val.scriptPubKey.hex);\n            spends0thOutput = electrumTransaction.vin.some((val) => val.vout === 0);\n        }\n        else {\n            const libauthTransaction = rawTx;\n            opReturns = libauthTransaction.outputs\n                .map((val) => (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.binToHex)(val.lockingBytecode))\n                .filter((val) => val.indexOf(\"6a\") === 0);\n            spends0thOutput = libauthTransaction.inputs.some((val) => val.outpointIndex === 0);\n        }\n        if (!spends0thOutput) {\n            throw new Error(\"Invalid authchain transaction (does not spend 0th output of previous transaction)\");\n        }\n        const bcmrOpReturns = opReturns.filter((val) => val.indexOf(\"6a0442434d52\") === 0 ||\n            val.indexOf(\"6a4c0442434d52\") === 0 ||\n            val.indexOf(\"6a4d040042434d52\") === 0 ||\n            val.indexOf(\"6a4e0400000042434d52\") === 0);\n        if (bcmrOpReturns.length === 0) {\n            return {\n                txHash: hash,\n                contentHash: \"\",\n                uris: [],\n                httpsUrl: \"\",\n            };\n        }\n        const opReturnHex = opReturns[0];\n        const chunks = _model_js__WEBPACK_IMPORTED_MODULE_4__.OpReturnData.parseBinary((0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.hexToBin)(opReturnHex));\n        if (chunks.length < 2) {\n            throw new Error(`Malformed BCMR output: ${opReturnHex}`);\n        }\n        const result = {\n            txHash: hash,\n            contentHash: \"\",\n            uris: [],\n            httpsUrl: \"\",\n        };\n        if (chunks.length === 2) {\n            // IPFS Publication Output\n            result.contentHash = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.binToHex)(chunks[1]);\n            const ipfsCid = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.binToUtf8)(chunks[1]);\n            result.uris = [`ipfs://${ipfsCid}`];\n            result.httpsUrl = `https://dweb.link/ipfs/${ipfsCid}`;\n        }\n        else {\n            // URI Publication Output\n            // content hash is in OP_SHA256 byte order per spec\n            result.contentHash = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.binToHex)(chunks[1].slice());\n            const uris = chunks.slice(2);\n            for (const uri of uris) {\n                const uriString = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.binToUtf8)(uri);\n                result.uris.push(uriString);\n                if (result.httpsUrl) {\n                    continue;\n                }\n                if (uriString.indexOf(\"ipfs://\") === 0) {\n                    const ipfsCid = uriString.replace(\"ipfs://\", \"\");\n                    result.httpsUrl = `https://dweb.link/ipfs/${ipfsCid}`;\n                }\n                else if (uriString.indexOf(\"https://\") === 0) {\n                    result.httpsUrl = uriString;\n                }\n                else if (uriString.indexOf(\"https://\") === -1) {\n                    result.httpsUrl = uriString;\n                    // case for domain name specifier, like example.com\n                    if (uriString.indexOf(\"/\") === -1) {\n                        const parts = uriString.toLowerCase().split(\".\");\n                        if (!(parts?.[0]?.indexOf(\"baf\") === 0 && parts?.[1] === \"ipfs\")) {\n                            result.httpsUrl = `${result.httpsUrl}/.well-known/bitcoin-cash-metadata-registry.json`;\n                        }\n                    }\n                    result.httpsUrl = `https://${result.httpsUrl}`;\n                }\n                else {\n                    throw new Error(`Unsupported uri type: ${uriString}`);\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * buildAuthChain Build an authchain - Zeroth-Descendant Transaction Chain, refer to https://github.com/bitjson/chip-bcmr#zeroth-descendant-transaction-chains\n     * The authchain in this implementation is specific to resolve to a valid metadata registry\n     *\n     * @param  {string} options.transactionHash (required) transaction hash from which to build the auth chain\n     * @param  {Network?} options.network (default=mainnet) network to query the data from\n     * @param  {boolean?} options.resolveBase (default=false) boolean flag to indicate that autchain building should resolve and verify elements back to base or be stopped at this exact chain element\n     * @param  {boolean?} options.followToHead (default=true) boolean flag to indicate that autchain building should progress to head or be stopped at this exact chain element\n     * @param  {ElectrumRawTransaction?} options.rawTx cached raw transaction obtained previously, spares a Fulcrum call\n     * @param  {TxI[]?} options.historyCache cached address history to be reused if authchain building proceeds with the same address, spares a flurry of Fulcrum calls\n     *\n     * @returns {AuthChain} returns the resolved authchain\n     */\n    static async buildAuthChain(options) {\n        if (options.network === undefined) {\n            options.network = _interface_js__WEBPACK_IMPORTED_MODULE_5__.Network.MAINNET;\n        }\n        if (options.followToHead === undefined) {\n            options.followToHead = true;\n        }\n        if (options.resolveBase === undefined) {\n            options.resolveBase = false;\n        }\n        const provider = (await (0,_network_Connection_js__WEBPACK_IMPORTED_MODULE_6__.initProvider)(options.network));\n        if (options.rawTx === undefined) {\n            options.rawTx = await provider.getRawTransactionObject(options.transactionHash);\n        }\n        // figure out the autchain by moving towards authhead\n        const getAuthChainChild = async () => {\n            const history = options.historyCache ||\n                (await provider.getHistory(options.rawTx.vout[0].scriptPubKey.addresses[0]));\n            const thisTx = history.find((val) => val.tx_hash === options.transactionHash);\n            let filteredHistory = history.filter((val) => val.height > 0\n                ? val.height >= thisTx.height || val.height <= 0\n                : val.height <= 0 && val.tx_hash !== thisTx.tx_hash);\n            for (const historyTx of filteredHistory) {\n                const historyRawTx = await provider.getRawTransactionObject(historyTx.tx_hash);\n                const authChainVin = historyRawTx.vin.find((val) => val.txid === options.transactionHash && val.vout === 0);\n                // if we've found continuation of authchain, we shall recurse into it\n                if (authChainVin) {\n                    // reuse queried address history if the next element in chain is the same address\n                    const historyCache = options.rawTx.vout[0].scriptPubKey.addresses[0] ===\n                        historyRawTx.vout[0].scriptPubKey.addresses[0]\n                        ? filteredHistory\n                        : undefined;\n                    // combine the authchain element with the rest obtained\n                    return { rawTx: historyRawTx, historyCache };\n                }\n            }\n            return undefined;\n        };\n        // make authchain element and combine with the rest obtained\n        let element;\n        try {\n            element = BCMR.makeAuthChainElement(options.rawTx, options.rawTx.hash);\n        }\n        catch (error) {\n            // special case for cashtoken authchain lookup by categoryId - allow to fail first lookup and inspect the genesis transaction\n            // follow authchain to head and look for BCMR outputs\n            const child = await getAuthChainChild();\n            if (child) {\n                return await BCMR.buildAuthChain({\n                    ...options,\n                    transactionHash: child.rawTx.hash,\n                    rawTx: child.rawTx,\n                    historyCache: child.historyCache,\n                });\n            }\n            else {\n                throw error;\n            }\n        }\n        let chainBase = [];\n        if (options.resolveBase) {\n            // check for accelerated path if \"authchain\" extension is in registry\n            const registry = await this.fetchMetadataRegistry(element.httpsUrl, element.contentHash);\n            if (registry.extensions &&\n                registry.extensions[\"authchain\"] &&\n                Object.keys(registry.extensions[\"authchain\"]).length) {\n                const chainTxArray = Object.values(registry.extensions[\"authchain\"]);\n                chainBase = chainTxArray\n                    .map((tx) => {\n                    const transactionBin = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.hexToBin)(tx);\n                    const decoded = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_7__.decodeTransaction)(transactionBin);\n                    if (typeof decoded === \"string\") {\n                        throw new Error(`Error decoding transaction ${JSON.stringify(tx)}, ${decoded}`);\n                    }\n                    const hash = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.binToHex)(_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.sha256.hash(_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.sha256.hash(transactionBin)).reverse());\n                    return { decoded, hash };\n                })\n                    .map(({ decoded, hash }) => BCMR.makeAuthChainElement(decoded, hash));\n            }\n            else {\n                // simply go back in history towards authhead\n                let stop = false;\n                let tx = { ...options.rawTx };\n                let maxElements = 10;\n                while (stop == false || maxElements === 0) {\n                    const vin = tx.vin.find((val) => val.vout === 0);\n                    tx = await provider.getRawTransactionObject(vin.txid);\n                    try {\n                        const pastElement = BCMR.makeAuthChainElement(tx, tx.hash);\n                        chainBase.unshift(pastElement);\n                        maxElements--;\n                    }\n                    catch {\n                        stop = true;\n                    }\n                }\n            }\n        }\n        // if we follow to head, we need to locate the next transaction spending our 0th output\n        // and repeat the building process recursively\n        if (options.followToHead) {\n            const child = await getAuthChainChild();\n            if (child) {\n                const chainHead = await BCMR.buildAuthChain({\n                    transactionHash: child.rawTx.hash,\n                    network: options.network,\n                    rawTx: child.rawTx,\n                    historyCache: child.historyCache,\n                    followToHead: options.followToHead,\n                    resolveBase: false,\n                });\n                // combine the authchain element with the rest obtained\n                return [...chainBase, element, ...chainHead].filter((val) => val.httpsUrl.length);\n            }\n        }\n        // return the last chain element (or the only found in an edge case)\n        return [...chainBase, element].filter((val) => val.httpsUrl.length);\n    }\n    /**\n     * fetchAuthChainFromChaingraph Fetch the authchain information from a trusted external indexer\n     * The authchain in this implementation is specific to resolve to a valid metadata registry\n     *\n     * @param  {string} options.chaingraphUrl (required) URL of a chaingraph indexer instance to fetch info from\n     * @param  {string} options.transactionHash (required) transaction hash from which to build the auth chain\n     * @param  {string?} options.network (default=mainnet) network to query the data from, specific to the queried instance, can be mainnet, chipnet, or anything else\n     *\n     * @returns {AuthChain} returns the resolved authchain\n     */\n    static async fetchAuthChainFromChaingraph(options) {\n        if (!options.chaingraphUrl) {\n            throw new Error(\"Provide `chaingraphUrl` param.\");\n        }\n        if (options.network === undefined) {\n            options.network = \"mainnet\";\n        }\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0___default().post(options.chaingraphUrl, {\n            operationName: null,\n            variables: {},\n            query: `\n{\n  transaction(\n    where: {\n      hash:{_eq:\"\\\\\\\\x${options.transactionHash}\"},\n      _or: [\n        {node_validation_timeline:{node:{name:{_ilike:\"%${options.network}%\"}}}},\n        {block_inclusions:{block:{accepted_by:{node:{name:{_ilike:\"%${options.network}%\"}}}}}},\n      ]\n    }\n  ) {\n    hash\n    authchains {\n      authchain_length\n      migrations(\n        where: {\n          transaction: {\n            outputs: { locking_bytecode_pattern: { _like: \"6a04%\" } }\n          }\n        }\n      ) {\n        transaction {\n          hash\n          inputs(where:{ outpoint_index: { _eq:\"0\" } }){\n            outpoint_index\n          }\n          outputs(where: { locking_bytecode_pattern: { _like: \"6a04%\" } }) {\n            output_index\n            locking_bytecode\n          }\n        }\n      }\n    }\n  }\n}`,\n        }, {\n            responseType: \"json\",\n            headers: {\n                Accept: \"*/*\",\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        const result = [];\n        const migrations = response.data.data.transaction[0]?.authchains[0].migrations;\n        if (!migrations) {\n            return result;\n        }\n        for (const migration of migrations) {\n            const transaction = migration.transaction[0];\n            if (!transaction) {\n                continue;\n            }\n            transaction.inputs.forEach((input) => (input.outpointIndex = Number(input.outpoint_index)));\n            transaction.outputs.forEach((output) => {\n                output.outputIndex = Number(output.output_index);\n                output.lockingBytecode = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_1__.hexToBin)(output.locking_bytecode.replace(\"\\\\x\", \"\"));\n            });\n            const txHash = transaction.hash.replace(\"\\\\x\", \"\");\n            result.push(BCMR.makeAuthChainElement(transaction, txHash));\n        }\n        return result.filter((element) => element.contentHash.length && element.httpsUrl.length);\n    }\n    /**\n     * addMetadataRegistryAuthChain Add BCMR metadata registry by resolving an authchain\n     *\n     * @param  {string} options.transactionHash (required) transaction hash from which to build the auth chain\n     * @param  {Network?} options.network (default=mainnet) network to query the data from\n     * @param  {boolean?} options.followToHead (default=true) boolean flag to indicate that autchain building should progress to head (most recent registry version) or be stopped at this exact chain element\n     * @param  {ElectrumRawTransaction?} options.rawTx cached raw transaction obtained previously, spares a Fulcrum call\n     *\n     * @returns {AuthChain} returns the resolved authchain\n     */\n    static async addMetadataRegistryAuthChain(options) {\n        const authChain = await this.buildAuthChain({\n            ...options,\n            resolveBase: false,\n        });\n        if (!authChain.length) {\n            throw new Error(`There were no BCMR entries in the resolved authchain ${JSON.stringify(authChain, null, 2)}`);\n        }\n        const registry = await this.fetchMetadataRegistry(authChain.reverse()[0].httpsUrl);\n        this.addMetadataRegistry(registry);\n        return authChain;\n    }\n    /**\n     * getTokenInfo Return the token info (or the identity snapshot as per spec)\n     *\n     * @param  {string} tokenId token id to look up\n     *\n     * @returns {IdentitySnapshot?} return the info for the token found, otherwise undefined\n     */\n    static getTokenInfo(tokenId) {\n        for (const registry of this.metadataRegistries.slice().reverse()) {\n            const history = registry.identities?.[tokenId];\n            if (!history) {\n                continue;\n            }\n            const latestIdentityIndex = Object.keys(history)[0];\n            if (latestIdentityIndex === undefined) {\n                continue;\n            }\n            return history[latestIdentityIndex];\n        }\n        return undefined;\n    }\n}\n// List of tracked registries\nBCMR.metadataRegistries = [];\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/wallet/Bcmr.ts?");

/***/ }),

/***/ "./src/wallet/Slp.ts":
/*!***************************!*\
  !*** ./src/wallet/Slp.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RegTestSlp\": () => (/* binding */ RegTestSlp),\n/* harmony export */   \"RegTestWatchSlp\": () => (/* binding */ RegTestWatchSlp),\n/* harmony export */   \"RegTestWifSlp\": () => (/* binding */ RegTestWifSlp),\n/* harmony export */   \"Slp\": () => (/* binding */ Slp),\n/* harmony export */   \"TestNetSlp\": () => (/* binding */ TestNetSlp),\n/* harmony export */   \"TestNetWatchSlp\": () => (/* binding */ TestNetWatchSlp),\n/* harmony export */   \"TestNetWifSlp\": () => (/* binding */ TestNetWifSlp),\n/* harmony export */   \"WatchSlp\": () => (/* binding */ WatchSlp),\n/* harmony export */   \"WifSlp\": () => (/* binding */ WifSlp)\n/* harmony export */ });\n/* harmony import */ var _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../wallet/Wif.js */ \"./src/wallet/Wif.ts\");\n/* harmony import */ var _slp_interface_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../slp/interface.js */ \"./src/slp/interface.ts\");\n/* harmony import */ var _slp_SlpDbProvider_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../slp/SlpDbProvider.js */ \"./src/slp/SlpDbProvider.ts\");\n/* harmony import */ var _qr_Qr_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../qr/Qr.js */ \"./src/qr/Qr.ts\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bignumber.js */ \"../../node_modules/bignumber.js/bignumber.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _network_getRelayFeeCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../network/getRelayFeeCache.js */ \"./src/network/getRelayFeeCache.ts\");\n/* harmony import */ var _transaction_Wif_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../transaction/Wif.js */ \"./src/transaction/Wif.ts\");\n/* harmony import */ var _slp_SlpLibAuth_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../slp/SlpLibAuth.js */ \"./src/slp/SlpLibAuth.ts\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/bchaddr.js */ \"../../node_modules/bchaddrjs-slp/src/bchaddr.js\");\n/* harmony import */ var _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _slp_GsppProvider_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../slp/GsppProvider.js */ \"./src/slp/GsppProvider.ts\");\n/* harmony import */ var _util_delay_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../util/delay.js */ \"./src/util/delay.ts\");\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Util.js */ \"./src/wallet/Util.ts\");\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./enum.js */ \"./src/wallet/enum.ts\");\n/* harmony import */ var _util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/getRuntimePlatform.js */ \"./src/util/getRuntimePlatform.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_slp_GsppProvider_js__WEBPACK_IMPORTED_MODULE_4__, _slp_SlpDbProvider_js__WEBPACK_IMPORTED_MODULE_5__, _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_6__, _qr_Qr_js__WEBPACK_IMPORTED_MODULE_7__, _slp_SlpLibAuth_js__WEBPACK_IMPORTED_MODULE_9__, _transaction_Wif_js__WEBPACK_IMPORTED_MODULE_10__, _Util_js__WEBPACK_IMPORTED_MODULE_13__]);\n([_slp_GsppProvider_js__WEBPACK_IMPORTED_MODULE_4__, _slp_SlpDbProvider_js__WEBPACK_IMPORTED_MODULE_5__, _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_6__, _qr_Qr_js__WEBPACK_IMPORTED_MODULE_7__, _slp_SlpLibAuth_js__WEBPACK_IMPORTED_MODULE_9__, _transaction_Wif_js__WEBPACK_IMPORTED_MODULE_10__, _Util_js__WEBPACK_IMPORTED_MODULE_13__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Class to manage an slp enabled wallet.\n */\nclass Slp {\n    /**\n     * Initializes an Slp Wallet.\n     *\n     * @param wallet     A non-slp wallet object\n     */\n    constructor(wallet) {\n        // a loookup table of spent inputs to keep track of NFT parent token consumption. related to a bug in SLPDB\n        this.spentParentUtxos = [];\n        this.slpaddr = (0,_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_2__.toSlpAddress)(wallet.cashaddr);\n        this.wallet = wallet;\n        let provider = Slp.defaultProvider;\n        if ((0,_util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_3__.getRuntimePlatform)() === _util_getRuntimePlatform_js__WEBPACK_IMPORTED_MODULE_3__.RuntimePlatform.node &&\n            process.env.SLP_PROVIDER)\n            provider = process.env.SLP_PROVIDER;\n        if (provider === \"gspp\") {\n            this.provider = new _slp_GsppProvider_js__WEBPACK_IMPORTED_MODULE_4__.GsppProvider(this.wallet.network);\n        }\n        else {\n            // provider === \"slpdb\"\n            this.provider = new _slp_SlpDbProvider_js__WEBPACK_IMPORTED_MODULE_5__.SlpDbProvider(this.wallet.network);\n        }\n    }\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_6__.Wallet;\n    }\n    /**\n     * setProvider - sets the provider to fetch slp data from\n     */\n    setProvider(provider) {\n        return (this.provider = provider);\n    }\n    /**\n     * getDepositAddress - get the slp deposit address\n     *\n     * a high-level function,\n     *\n     * @see {@link https://rest-unstable.mainnet.cash/api-docs/#/wallet%2Fslp/slpDepositAddress|/wallet/slp/deposit_address} for REST endpoint\n     *\n     * @returns The the slp address as a string\n     */\n    getDepositAddress() {\n        return this.slpaddr;\n    }\n    /**\n     * getDepositQr - get an slp address qrcode, encoded for display on the web\n     *\n     * a high-level function\n     *\n     * @see {@link https://rest-unstable.mainnet.cash/api-docs/#/wallet%2Fslp/slpDepositQr|/wallet/slp/deposit_qr} for REST endpoint\n     *\n     * @returns The qrcode for the slp address\n     */\n    getDepositQr() {\n        const result = (0,_qr_Qr_js__WEBPACK_IMPORTED_MODULE_7__.qrAddress)(this.slpaddr);\n        result.alt = \"A Bitcoin Cash Simple Ledger Protocol QR Code\";\n        return result;\n    }\n    /**\n     * getTokenInfo - get data associated with a token\n     *\n     * a high-level function\n     *\n     * @see {@link https://rest-unstable.mainnet.cash/api-docs/#/wallet%2Fslp/slpTokenInfo|/wallet/slp/token_info} for REST endpoint\n     *\n     * @param tokenId  The tokenId to request information about\n     *\n     * @returns Promise to the slp token info or undefined.\n     */\n    getTokenInfo(tokenId) {\n        return this.provider.SlpTokenInfo(tokenId);\n    }\n    /**\n     * getSlpOutpoints - get a list of SLP unspent outpoints\n     *\n     * an intermediate function contributing to the output of wallet.getUtxos() and /wallet/utxos for slp enabled wallets\n     *\n     * @param slpaddr  The slpaddr to request slp unspent outpoints for\n     *\n     * @returns Promise to a list of slp unspent outpoints\n     */\n    async getSlpOutpoints() {\n        return this.provider.SlpOutpoints(this.slpaddr);\n    }\n    /**\n     * getSlpUtxos - get a list of SLP unspent outputs\n     *\n     * @returns Promise to a list of slp unspent outputs\n     */\n    async getSlpUtxos() {\n        return this.provider.SlpUtxos(this.slpaddr);\n    }\n    /**\n     * getFormattedSlpUtxos - get a list of unspent outputs\n     *\n     * an intermediate function\n     *\n     * @returns Promise to a list of slp formatted unspent outputs\n     */\n    async getFormattedSlpUtxos() {\n        const utxos = await this.getSlpUtxos();\n        return utxos.map((val) => {\n            let utxo = {};\n            utxo.ticker = val.ticker;\n            utxo.tokenId = val.tokenId;\n            utxo.value = val.value.toString();\n            utxo.satoshis = val.satoshis;\n            utxo.decimals = val.decimals;\n            utxo.txId = val.txid;\n            utxo.index = val.vout;\n            utxo.utxoId = utxo.txId + \":\" + utxo.index;\n            utxo.type = val.type;\n            return utxo;\n        });\n    }\n    /**\n     * getBatonUtxos - get a list of baton unspent outputs\n     *\n     * an intermediate function\n     *\n     * @param tokenId   The id of the slp token\n     *\n     * @returns Promise to a list of slp unspent outputs\n     */\n    async getBatonUtxos(tokenId) {\n        return this.provider.SlpBatonUtxos(this.slpaddr, tokenId);\n    }\n    /**\n     * getHistory - get a transaction history for a particular address\n     *\n     * an intermediate function\n     *\n     * @param tokenId   The id of the slp token\n     *\n     * @returns Promise to a list of transactions\n     */\n    async getHistory(tokenId) {\n        return this.provider.SlpAddressTransactionHistory(this.slpaddr, tokenId);\n    }\n    /**\n     * getLastTransaction - get a last SLP token transaction of a particular address\n     *\n     * @param {boolean} [confirmedOnly=false]  When confirmedOnly is true, results will be limited to only transactions included in a block.\n     *\n     * @returns Promise to the transaction hex or error\n     */\n    async getLastTransaction(confirmedOnly = false) {\n        let history = await this.getHistory();\n        if (confirmedOnly) {\n            history = history.filter((val) => val.height > 0);\n        }\n        const [lastTx] = history.slice(-1);\n        return this.wallet.provider.getRawTransactionObject(lastTx.tx_hash);\n    }\n    /**\n     * getBalance - get a token balance for a particular address\n     *\n     * a high-level function, see also /wallet/slp/balance REST endpoint\n     *\n     * @param tokenId   The id of the slp token\n     *\n     * @returns Promise to an SlpTokenBalance\n     */\n    async getBalance(tokenId) {\n        if (!tokenId) {\n            throw new Error(`Invalid tokenId ${tokenId}`);\n        }\n        return this.provider.SlpTokenBalance(this.slpaddr, tokenId);\n    }\n    /**\n     * getAllBalances - get all token balances for a particular address\n     *\n     * a high-level function, see also /wallet/slp/all_balances REST endpoint\n     *\n     * @returns Promise to an array of SlpTokenBalance\n     */\n    async getAllBalances() {\n        return this.provider.SlpAllTokenBalances(this.slpaddr);\n    }\n    /**\n     * watchBalance - set up a callback to be called upon wallet's slp balance change\n     *\n     * can be cancelled by calling the function returned from this one\n     *\n     * @param callback   The callback function to be called each time the balance changes\n     * @param tokenId    Specific token id to watch\n     *\n     * @returns A function to cancel the watching\n     */\n    watchBalance(callback, tokenId) {\n        return this.provider.SlpWatchBalance(callback, this.slpaddr, tokenId);\n    }\n    /**\n     * waitForBalance - wait for address balance to be greater than or equal to the target value\n     *\n     * This call halts the program execution\n     *\n     * @param value      Target balance value\n     * @param tokenId    Specific token id to watch\n     *\n     * @returns Actual token balance after reaching or surpassing the target value\n     */\n    async waitForBalance(value, tokenId) {\n        return this.provider.SlpWaitForBalance(value, this.slpaddr, tokenId);\n    }\n    /**\n     * watchBalance - set up a callback to be called upon wallet's slp transactions occurring\n     *\n     * can be cancelled by calling the function returned from this one\n     *\n     * @param callback   The callback function to be called each time the balance changes\n     * @param tokenId    Specific token id to watch, optional\n     *\n     * @returns A function to cancel the watching\n     */\n    watchTransactions(callback, tokenId) {\n        return this.provider.SlpWatchTransactions(callback, this.slpaddr, tokenId);\n    }\n    /**\n     * waitForBalance - wait for the next SLP transaction to occur\n     *\n     * This call halts the program execution\n     *\n     * @param tokenId    Specific token id to watch, optional\n     *\n     * @returns Transaction object\n     */\n    async waitForTransaction(tokenId) {\n        return this.provider.SlpWaitForTransaction(this.slpaddr, tokenId);\n    }\n    /**\n     * genesis - create a new Type1 SLP token\n     *\n     * @param options    Token creation options @see SlpGenesisOptions\n     *\n     * @returns Token Id and new token balance\n     */\n    async genesis(options) {\n        let result = await this._processGenesis(options);\n        return {\n            tokenId: result,\n            balance: await this.getBalance(result),\n        };\n    }\n    /**\n     * nftParentGenesis - create a new NFT Parent token\n     *\n     * @param options    Token creation options @see SlpGenesisOptions\n     *\n     * @returns Token Id and new token balance\n     */\n    async nftParentGenesis(options) {\n        options.type = _slp_interface_js__WEBPACK_IMPORTED_MODULE_8__.SlpTokenType.NftParent;\n        let result = await this._processGenesis(options);\n        return {\n            tokenId: result,\n            balance: await this.getBalance(result),\n        };\n    }\n    /**\n     * nftParentGenesis - create a new NFT Child token\n     *\n     * @param parentTokenId    Parent token id, at least one is required and will be spent in the child genesis process\n     * @param options    Token creation options @see SlpGenesisOptions\n     *\n     * @returns Token Id and new token balance\n     */\n    async nftChildGenesis(options) {\n        if (!options.parentTokenId) {\n            throw new Error(`The 'parentTokenId' was not set or invalid ${options.parentTokenId}`);\n        }\n        let parentUtxos = await this.provider.SlpSpendableUtxos(this.slpaddr, options.parentTokenId);\n        parentUtxos = parentUtxos.filter((val) => this.spentParentUtxos.indexOf(`${val.txid}:${val.vout}`) === -1);\n        parentUtxos = parentUtxos.sort((a, b) => a.value.comparedTo(b.value));\n        if (!parentUtxos.length) {\n            throw new Error(`You do not own any NFT parent tokens with id ${options.parentTokenId}`);\n        }\n        if (parentUtxos[0].type !== _slp_interface_js__WEBPACK_IMPORTED_MODULE_8__.SlpTokenType.NftParent) {\n            throw new Error(`The 'parentTokenId' is not of type ${_slp_interface_js__WEBPACK_IMPORTED_MODULE_8__.SlpTokenType.NftParent}`);\n        }\n        // we are about to spend exactly 1 NFT parent\n        // if we do not have it, we have to make one by splitting\n        if (parentUtxos[0].value.isGreaterThan(new (bignumber_js__WEBPACK_IMPORTED_MODULE_0___default())(1))) {\n            await this.send([\n                {\n                    slpaddr: this.slpaddr,\n                    tokenId: options.parentTokenId,\n                    value: new (bignumber_js__WEBPACK_IMPORTED_MODULE_0___default())(1),\n                },\n            ]);\n            return await this.nftChildGenesis(options);\n        }\n        options.type = _slp_interface_js__WEBPACK_IMPORTED_MODULE_8__.SlpTokenType.NftChild;\n        options.endBaton = true;\n        options.initialAmount = 1;\n        options.decimals = 0;\n        let result = await this._processGenesis(options, [parentUtxos[0]]);\n        const tx = (await this.wallet.provider.getRawTransactionObject(result));\n        tx.vin.forEach((val) => this.spentParentUtxos.push(`${val.txid}:${val.vout}`));\n        return {\n            tokenId: result,\n            balance: await this.getBalance(result),\n        };\n    }\n    /**\n     * _processGenesis - prepare the genesis transaction with given parameters\n     *\n     * a private utility wrapper to pre-process transactions\n     *\n     * @param options   genesis options to controll the process\n     *\n     * @returns the created tokenId (which is genesis transaction id) and token balance\n     */\n    async _processGenesis(options, ensureInputs = []) {\n        options = this.substituteOptionals(options);\n        let slpOutputsResult = await (0,_slp_SlpLibAuth_js__WEBPACK_IMPORTED_MODULE_9__.SlpGetGenesisOutputs)(options);\n        let fundingBchUtxos = await this.wallet\n            .slpAware(true)\n            .getAddressUtxos(this.wallet.cashaddr);\n        fundingBchUtxos = [...ensureInputs, ...fundingBchUtxos];\n        return this.processSlpTransaction(fundingBchUtxos, slpOutputsResult);\n    }\n    /**\n     * sendMax - send the maximum spendable amount for a token to an slpaddr.\n     *\n     * a high-level function, see also /wallet/slp/send_max REST endpoint\n     *\n     * @param slpaddr   destination SLP address\n     * @param tokenId   the id of the token to be spent\n     *\n     * @returns transaction id and token balance\n     */\n    async sendMax(slpaddr, tokenId) {\n        const balance = await this.getBalance(tokenId);\n        const requests = [balance].map((val) => ({\n            slpaddr: slpaddr,\n            value: val.value,\n            ticker: val.ticker,\n            tokenId: val.tokenId,\n        }));\n        return this.send(requests);\n    }\n    /**\n     *  explorerUrl   Web url to a transaction on a block explorer\n     *\n     * @param txId   transaction Id\n     * @returns   Url string\n     */\n    explorerUrl(txId) {\n        const explorerUrlMap = {\n            mainnet: \"https://simpleledger.info/#tx/\",\n            testnet: \"https://testnet.simpleledger.info/#tx/\",\n            regtest: \"\",\n        };\n        return explorerUrlMap[this.wallet.network] + txId;\n    }\n    /**\n     * send - attempt to process a list of slp send requests.\n     *\n     * a high-level function, see also /wallet/slp/send REST endpoint\n     *\n     * @param [requests]   list of send requests\n     *\n     * @returns transaction id and token balance\n     */\n    async send(requests) {\n        let [actualTokenId, result] = await this._processSendRequests(requests);\n        return {\n            txId: result,\n            balance: await this.getBalance(actualTokenId),\n            explorerUrl: this.explorerUrl(result),\n        };\n    }\n    /**\n     * _processSendRequests - given a list of sendRequests, estimate fees, build the transaction and submit it.\n     *\n     * A private utility wrapper to pre-process transactions\n     *\n     * Unstable - behavior may change without notice.\n     *\n     * @param  {SlpSendRequest[]} sendRequests\n     */\n    async _processSendRequests(sendRequests) {\n        if (!sendRequests.length) {\n            throw Error(\"Empty send requests\");\n        }\n        if (sendRequests.length > 19) {\n            throw Error(\"Too many send requests in one transaction\");\n        }\n        const uniqueTokenIds = new Set(sendRequests.map((val) => val.tokenId));\n        if (uniqueTokenIds.size > 1) {\n            throw Error(\"You have two different token types with the same ticker. Pass tokenId parameter\");\n        }\n        const tokenId = sendRequests[0].tokenId;\n        if (!tokenId.match(/^[0-9a-fA-F]{64}$/)) {\n            throw new Error(\"Invalid tokenId, must be 64 character long hexadecimal string\");\n        }\n        const slpUtxos = await this.provider.SlpSpendableUtxos(this.slpaddr, tokenId);\n        let slpOutputsResult = await (0,_slp_SlpLibAuth_js__WEBPACK_IMPORTED_MODULE_9__.SlpGetSendOutputs)(this.slpaddr, slpUtxos, sendRequests);\n        let fundingBchUtxos = await this.wallet\n            .slpAware(true)\n            .getAddressUtxos(this.wallet.cashaddr);\n        let slpToBchUtxos = slpOutputsResult.FundingSlpUtxos.map((val) => val);\n        fundingBchUtxos = [...slpToBchUtxos, ...fundingBchUtxos];\n        const actualTokenId = slpUtxos[0].tokenId;\n        return [\n            actualTokenId,\n            await this.processSlpTransaction(fundingBchUtxos, slpOutputsResult, actualTokenId),\n        ];\n    }\n    /**\n     * mint - create new tokens to increase the circulation supply.\n     *\n     * a high-level function, see also /wallet/slp/mint endpoint\n     *\n     * @param value   amount to mint\n     * @param tokenId   the tokenId of the slp being minted\n     * @param endBaton   boolean indicating whether the token should continue to be \"mintable\"\n     *\n     * @returns transaction id and token balance\n     */\n    async mint(options) {\n        let [actualTokenId, result] = await this._processMint(options);\n        return {\n            txId: result,\n            balance: await this.getBalance(actualTokenId),\n        };\n    }\n    /**\n     * _processMint - given mint parameters, prepare the transaction\n     *\n     * a private utility wrapper to pre-process transactions\n     *\n     * @param value   amount to mint\n     * @param tokenId   the tokenId of the slp being minted\n     * @param endBaton   boolean indicating whether the token should continue to be \"mintable\"\n     *\n     * @returns the tokenId and minting transaction id\n     */\n    async _processMint(options) {\n        options = this.substituteOptionals(options);\n        options.value = new (bignumber_js__WEBPACK_IMPORTED_MODULE_0___default())(options.value);\n        if (options.value.isLessThanOrEqualTo(0) &&\n            options.batonReceiverSlpAddr === this.slpaddr) {\n            throw Error(\"Mint amount should be greater than zero\");\n        }\n        const slpBatonUtxos = await this.getBatonUtxos(options.tokenId);\n        if (!slpBatonUtxos.length) {\n            throw Error(`You do not possess the minting baton for ${options.tokenId}`);\n        }\n        let slpOutputsResult = await (0,_slp_SlpLibAuth_js__WEBPACK_IMPORTED_MODULE_9__.SlpGetMintOutputs)(options, slpBatonUtxos);\n        let bchUtxos = await this.wallet\n            .slpAware(true)\n            .getAddressUtxos(this.wallet.cashaddr);\n        let fundingBchUtxos = bchUtxos;\n        let slpToBchUtxos = slpOutputsResult.FundingSlpUtxos.map((val) => val);\n        fundingBchUtxos = [...slpToBchUtxos, ...fundingBchUtxos];\n        return [\n            options.tokenId,\n            await this.processSlpTransaction(fundingBchUtxos, slpOutputsResult, options.tokenId),\n        ];\n    }\n    /**\n     * processSlpTransaction - process the prepared SLP transaction and submit it to the network\n     *\n     * @param fundingBchUtxos   ensure these BCH utxos to be spent in the process\n     * @param slpOutputsResult  prepared SLP outputs to be added to transaction\n     *\n     * @returns the tokenId and minting transaction id\n     */\n    async processSlpTransaction(fundingBchUtxos, slpOutputsResult, tokenId) {\n        if (!this.wallet.privateKey) {\n            throw new Error(`Wallet ${this.wallet.name} is missing either a network or private key`);\n        }\n        if (!fundingBchUtxos.length) {\n            throw new Error(\"No bch available to fund this transaction\");\n        }\n        const bestHeight = await this.wallet.provider.getBlockHeight();\n        const relayFeePerByteInSatoshi = await (0,_network_getRelayFeeCache_js__WEBPACK_IMPORTED_MODULE_1__.getRelayFeeCache)(this.wallet.provider);\n        const feeEstimate = await (0,_transaction_Wif_js__WEBPACK_IMPORTED_MODULE_10__.getFeeAmount)({\n            utxos: fundingBchUtxos,\n            sendRequests: slpOutputsResult.BchSendRequests,\n            privateKey: this.wallet.privateKey,\n            sourceAddress: this.wallet.cashaddr,\n            relayFeePerByteInSatoshi: relayFeePerByteInSatoshi,\n            slpOutputs: slpOutputsResult.SlpOutputs,\n            feePaidBy: _enum_js__WEBPACK_IMPORTED_MODULE_11__.FeePaidByEnum.change,\n        });\n        const bchSpendAmount = slpOutputsResult.BchSendRequests.map((val) => val.value).reduce((a, b) => a + b, 0);\n        let fundingUtxos = await (0,_transaction_Wif_js__WEBPACK_IMPORTED_MODULE_10__.getSuitableUtxos)(fundingBchUtxos, BigInt(bchSpendAmount) + BigInt(feeEstimate), bestHeight, _enum_js__WEBPACK_IMPORTED_MODULE_11__.FeePaidByEnum.change, slpOutputsResult.BchSendRequests);\n        if (fundingUtxos.length === 0) {\n            throw Error(\"The available inputs couldn't satisfy the request with fees\");\n        }\n        const fee = await (0,_transaction_Wif_js__WEBPACK_IMPORTED_MODULE_10__.getFeeAmount)({\n            utxos: fundingUtxos,\n            sendRequests: slpOutputsResult.BchSendRequests,\n            privateKey: this.wallet.privateKey,\n            sourceAddress: this.wallet.cashaddr,\n            relayFeePerByteInSatoshi: relayFeePerByteInSatoshi,\n            slpOutputs: slpOutputsResult.SlpOutputs,\n            feePaidBy: _enum_js__WEBPACK_IMPORTED_MODULE_11__.FeePaidByEnum.change,\n        });\n        const { encodedTransaction } = await (0,_transaction_Wif_js__WEBPACK_IMPORTED_MODULE_10__.buildEncodedTransaction)({\n            inputs: fundingUtxos,\n            outputs: slpOutputsResult.BchSendRequests,\n            signingKey: this.wallet.privateKey,\n            sourceAddress: this.wallet.cashaddr,\n            fee,\n            discardChange: false,\n            slpOutputs: slpOutputsResult.SlpOutputs,\n        });\n        return this._submitTransaction(encodedTransaction, tokenId);\n    }\n    /**\n     * _submitTransaction - transform binary transaction to hex and submit it to the network provider\n     *\n     * a private utility wrapper submit raw transactions\n     *\n     * @param transaction   raw transaction\n     *\n     * @returns the transaction id of the broadcasted transaction\n     */\n    async _submitTransaction(transaction, tokenId) {\n        let rawTransaction = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_12__.binToHex)(transaction);\n        const slpPromise = new Promise(async (resolve) => {\n            const txHash = await _Util_js__WEBPACK_IMPORTED_MODULE_13__.Util.getTransactionHash(rawTransaction);\n            const cancelWatchFn = this.provider.SlpWatchTransactions(async (tx) => {\n                if (tx.tx_hash === txHash) {\n                    cancelWatchFn();\n                    resolve(txHash);\n                }\n            }, undefined, tokenId || txHash);\n        });\n        const bchPromise = this.wallet.provider.sendRawTransaction(rawTransaction, true);\n        const [_, txHash] = await Promise.all([slpPromise, bchPromise]);\n        // allow for indexer processing, delay value is a bit arbitrary\n        await (0,_util_delay_js__WEBPACK_IMPORTED_MODULE_14__.delay)(100);\n        return txHash;\n    }\n    /**\n     * substituteOptionals - substitute optional fields with default values\n     *\n     * will ensure that baton and token receiver are intialized as SLP address of this wallet if absent\n     * will ensure that baton will not be ended if endBaton is undefined\n     * a private utility wrapper substitute optionals\n     *\n     * @param options   genesis or mint options to substitute values int\n     *\n     * @returns options with relevant values substituted/initialized\n     */\n    substituteOptionals(options) {\n        if (!options.batonReceiverSlpAddr) {\n            options.batonReceiverSlpAddr = this.slpaddr;\n        }\n        if (!options.tokenReceiverSlpAddr) {\n            options.tokenReceiverSlpAddr = this.slpaddr;\n        }\n        if (options.endBaton === undefined) {\n            options.endBaton = false;\n        }\n        return options;\n    }\n    //#region Convenience methods to initialize Slp aware BCH wallet.\n    /**\n     * fromId - create an SLP aware wallet from encoded walletId string\n     *\n     * @param walletId   walletId options to steer the creation process\n     *\n     * @returns wallet instantiated accordingly to the walletId rules\n     */\n    static async fromId(walletId) {\n        const wallet = await this.walletType.fromId(walletId);\n        wallet._slpAware = true;\n        return wallet;\n    }\n    /**\n     * named - create an SLP aware named wallet\n     *\n     * @param name   user friendly wallet alias\n     * @param dbName name under which the wallet will be stored in the database\n     * @param force  force recreate wallet in the database if a record already exist\n     *\n     * @returns instantiated wallet\n     */\n    static async named(name, dbName, force) {\n        const wallet = await this.walletType.named(name, dbName, force);\n        wallet.derivationPath = \"m/44'/245'/0'/0/0\";\n        wallet._slpAware = true;\n        return wallet;\n    }\n    /**\n     * fromSeed - create an SLP aware wallet using the seed phrase and derivation path\n     *\n     * unless specified the derivation path m/44'/245'/0'/0/0 will be userd\n     * this derivation path is standard for Electron Cash SLP and other SLP enabled wallets\n     *\n     * @param seed   BIP39 12 word seed phrase\n     * @param derivationPath BIP44 HD wallet derivation path to get a single the private key from hierarchy\n     *\n     * @returns instantiated wallet\n     */\n    static async fromSeed(seed, derivationPath = \"m/44'/245'/0'/0/0\") {\n        const wallet = await this.walletType.fromSeed(seed, derivationPath);\n        wallet._slpAware = true;\n        return wallet;\n    }\n    /**\n     * newRandom - create an SLP aware random wallet\n     *\n     * if `name` parameter is specified, the wallet will also be persisted to DB\n     *\n     * @param name   user friendly wallet alias\n     * @param dbName name under which the wallet will be stored in the database\n     *\n     * @returns instantiated wallet\n     */\n    static async newRandom(name = \"\", dbName) {\n        const wallet = await this.walletType.newRandom(name, dbName);\n        wallet.derivationPath = \"m/44'/245'/0'/0/0\";\n        wallet._slpAware = true;\n        return wallet;\n    }\n    /**\n     * fromWIF - create an SLP aware wallet using the private key supplied in `Wallet Import Format`\n     *\n     * @param wif   WIF encoded private key string\n     *\n     * @returns instantiated wallet\n     */\n    static async fromWIF(wif) {\n        const wallet = await this.walletType.fromWIF(wif);\n        wallet.derivationPath = \"m/44'/245'/0'/0/0\";\n        wallet._slpAware = true;\n        return wallet;\n    }\n    /**\n     * watchOnly - create an SLP aware watch-only wallet\n     *\n     * such kind of wallet does not have a private key and is unable to spend any funds\n     * however it still allows to use many utility functions such as getting and watching balance, etc.\n     *\n     * @param address   cashaddress or slpaddress of a wallet\n     *\n     * @returns instantiated wallet\n     */\n    static async watchOnly(address) {\n        const wallet = await this.walletType.watchOnly((0,_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_2__.toCashAddress)(address));\n        wallet.derivationPath = \"m/44'/245'/0'/0/0\";\n        wallet._slpAware = true;\n        return wallet;\n    }\n    /**\n     * fromCashaddr - create an SLP aware watch-only wallet in the network derived from the address\n     *\n     * such kind of wallet does not have a private key and is unable to spend any funds\n     * however it still allows to use many utility functions such as getting and watching balance, etc.\n     *\n     * @param address   cashaddress of a wallet\n     *\n     * @returns instantiated wallet\n     */\n    static async fromCashaddr(address) {\n        const wallet = await this.walletType.fromCashaddr(address);\n        wallet.derivationPath = \"m/44'/245'/0'/0/0\";\n        wallet._slpAware = true;\n        return wallet;\n    }\n    /**\n     * fromSlpaddr - create an SLP aware watch-only wallet in the network derived from the address\n     *\n     * such kind of wallet does not have a private key and is unable to spend any funds\n     * however it still allows to use many utility functions such as getting and watching balance, etc.\n     *\n     * @param address   slpaddress of a wallet\n     *\n     * @returns instantiated wallet\n     */\n    static async fromSlpaddr(address) {\n        const wallet = await this.walletType.fromSlpaddr(address);\n        wallet.derivationPath = \"m/44'/245'/0'/0/0\";\n        wallet._slpAware = true;\n        return wallet;\n    }\n}\nSlp.defaultProvider = \"slpdb\";\n//#region Specific wallet classes\n/**\n * Class to manage an slp enabled testnet wallet.\n */\nclass TestNetSlp extends Slp {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_6__.TestNetWallet;\n    }\n}\n/**\n * Class to manage an slp enabled regtest wallet.\n */\nclass RegTestSlp extends Slp {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_6__.RegTestWallet;\n    }\n}\n/**\n * Class to manage a bitcoin cash wif wallet.\n */\nclass WifSlp extends Slp {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_6__.WifWallet;\n    }\n}\n/**\n * Class to manage a testnet wif wallet.\n */\nclass TestNetWifSlp extends Slp {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_6__.TestNetWifWallet;\n    }\n}\n/**\n * Class to manage a regtest wif wallet.\n */\nclass RegTestWifSlp extends Slp {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_6__.RegTestWifWallet;\n    }\n}\n/**\n * Class to manage a bitcoin cash watch wallet.\n */\nclass WatchSlp extends Slp {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_6__.WatchWallet;\n    }\n}\n/**\n * Class to manage a testnet watch wallet.\n */\nclass TestNetWatchSlp extends Slp {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_6__.TestNetWatchWallet;\n    }\n}\n/**\n * Class to manage a regtest watch wallet.\n */\nclass RegTestWatchSlp extends Slp {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_6__.RegTestWatchWallet;\n    }\n}\n//#endregion\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/wallet/Slp.ts?");

/***/ }),

/***/ "./src/wallet/Util.ts":
/*!****************************!*\
  !*** ./src/wallet/Util.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RegTestUtil\": () => (/* binding */ RegTestUtil),\n/* harmony export */   \"RegTestWatchUtil\": () => (/* binding */ RegTestWatchUtil),\n/* harmony export */   \"RegTestWifUtil\": () => (/* binding */ RegTestWifUtil),\n/* harmony export */   \"TestNetUtil\": () => (/* binding */ TestNetUtil),\n/* harmony export */   \"TestNetWatchUtil\": () => (/* binding */ TestNetWatchUtil),\n/* harmony export */   \"TestNetWifUtil\": () => (/* binding */ TestNetWifUtil),\n/* harmony export */   \"Util\": () => (/* binding */ Util),\n/* harmony export */   \"WatchUtil\": () => (/* binding */ WatchUtil),\n/* harmony export */   \"WifUtil\": () => (/* binding */ WifUtil)\n/* harmony export */ });\n/* harmony import */ var _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../wallet/Wif.js */ \"./src/wallet/Wif.ts\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/message/transaction-encoding.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/address/locking-bytecode.js\");\n/* harmony import */ var _chain_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../chain.js */ \"./src/chain.ts\");\n/* harmony import */ var _util_transaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/transaction.js */ \"./src/util/transaction.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_wallet_Wif_js__WEBPACK_IMPORTED_MODULE_0__, _util_transaction_js__WEBPACK_IMPORTED_MODULE_1__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__]);\n([_wallet_Wif_js__WEBPACK_IMPORTED_MODULE_0__, _util_transaction_js__WEBPACK_IMPORTED_MODULE_1__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n/**\n * Class with various wallet utilities.\n */\nclass Util {\n    /**\n     * Initializes a wallet Util class.\n     *\n     * @param wallet     A wallet object\n     */\n    constructor(wallet) {\n        this.wallet = wallet;\n    }\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_0__.Wallet;\n    }\n    async getTransactionHash(rawTransactionHex) {\n        return (0,_util_transaction_js__WEBPACK_IMPORTED_MODULE_1__.getTransactionHash)(rawTransactionHex);\n    }\n    static async getTransactionHash(rawTransactionHex) {\n        return (0,_util_transaction_js__WEBPACK_IMPORTED_MODULE_1__.getTransactionHash)(rawTransactionHex);\n    }\n    async decodeTransaction(transactionHashOrHex, loadInputValues = false) {\n        let transactionHex;\n        let transactionBin;\n        let txHash;\n        // raw transaction\n        if (transactionHashOrHex.length > 64) {\n            txHash = await this.getTransactionHash(transactionHashOrHex);\n            transactionBin = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.hexToBin)(transactionHashOrHex);\n            transactionHex = transactionHashOrHex;\n        }\n        else {\n            // tx hash, look up the raw transaction\n            txHash = transactionHashOrHex;\n            transactionHex = await this.wallet.provider.getRawTransaction(txHash);\n            transactionBin = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.hexToBin)(transactionHex);\n        }\n        const result = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.decodeTransaction)(transactionBin);\n        if (typeof result === \"string\") {\n            throw Error(result);\n        }\n        const transaction = this.mapToElectrumRawTransaction(result, txHash, transactionHex);\n        if (loadInputValues) {\n            // get unique transaction hashes\n            const hashes = [...new Set(transaction.vin.map((val) => val.txid))];\n            const transactions = await Promise.all(hashes.map((hash) => this.decodeTransaction(hash, false)));\n            const transactionMap = new Map();\n            transactions.forEach((val) => transactionMap.set(val.hash, val));\n            transaction.vin.forEach((input) => {\n                const output = transactionMap\n                    .get(input.txid)\n                    .vout.find((val) => val.n === input.vout);\n                input.address = output.scriptPubKey.addresses[0];\n                input.value = output.value;\n                input.tokenData = output.tokenData;\n            });\n        }\n        return transaction;\n    }\n    mapToElectrumRawTransaction(transaction, txHash, txHex) {\n        let result = {};\n        result.vin = transaction.inputs.map((input) => {\n            return {\n                scriptSig: {\n                    hex: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.binToHex)(input.unlockingBytecode),\n                },\n                sequence: input.sequenceNumber,\n                txid: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.binToHex)(input.outpointTransactionHash),\n                vout: input.outpointIndex,\n            };\n        });\n        result.vout = transaction.outputs.map((output, index) => {\n            return {\n                n: index,\n                scriptPubKey: {\n                    addresses: [\n                        (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.lockingBytecodeToCashAddress)(output.lockingBytecode, this.wallet.networkPrefix).toString(),\n                    ],\n                    hex: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_2__.binToHex)(output.lockingBytecode),\n                },\n                value: Number(output.valueSatoshis) / _chain_js__WEBPACK_IMPORTED_MODULE_5__.bchParam.subUnits,\n            };\n        });\n        result.locktime = transaction.locktime;\n        result.version = transaction.version;\n        result.hash = txHash;\n        result.hex = txHex;\n        result.txid = txHash;\n        result.size = txHex.length / 2;\n        return result;\n    }\n    static async decodeTransaction(transactionHashOrHex, loadInputValues = false) {\n        return new this.walletType().util.decodeTransaction(transactionHashOrHex, loadInputValues);\n    }\n}\n//#region Specific wallet classes\n/**\n * Class to manage an slp enabled testnet wallet.\n */\nclass TestNetUtil extends Util {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_0__.TestNetWallet;\n    }\n}\n/**\n * Class to manage an slp enabled regtest wallet.\n */\nclass RegTestUtil extends Util {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_0__.RegTestWallet;\n    }\n}\n/**\n * Class to manage a bitcoin cash wif wallet.\n */\nclass WifUtil extends Util {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_0__.WifWallet;\n    }\n}\n/**\n * Class to manage a testnet wif wallet.\n */\nclass TestNetWifUtil extends Util {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_0__.TestNetWifWallet;\n    }\n}\n/**\n * Class to manage a regtest wif wallet.\n */\nclass RegTestWifUtil extends Util {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_0__.RegTestWifWallet;\n    }\n}\n/**\n * Class to manage a bitcoin cash watch wallet.\n */\nclass WatchUtil extends Util {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_0__.WatchWallet;\n    }\n}\n/**\n * Class to manage a testnet watch wallet.\n */\nclass TestNetWatchUtil extends Util {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_0__.TestNetWatchWallet;\n    }\n}\n/**\n * Class to manage a regtest watch wallet.\n */\nclass RegTestWatchUtil extends Util {\n    static get walletType() {\n        return _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_0__.RegTestWatchWallet;\n    }\n}\n//#endregion\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/wallet/Util.ts?");

/***/ }),

/***/ "./src/wallet/Wif.ts":
/*!***************************!*\
  !*** ./src/wallet/Wif.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RegTestWallet\": () => (/* binding */ RegTestWallet),\n/* harmony export */   \"RegTestWatchWallet\": () => (/* binding */ RegTestWatchWallet),\n/* harmony export */   \"RegTestWifWallet\": () => (/* binding */ RegTestWifWallet),\n/* harmony export */   \"TestNetWallet\": () => (/* binding */ TestNetWallet),\n/* harmony export */   \"TestNetWatchWallet\": () => (/* binding */ TestNetWatchWallet),\n/* harmony export */   \"TestNetWifWallet\": () => (/* binding */ TestNetWifWallet),\n/* harmony export */   \"Wallet\": () => (/* binding */ Wallet),\n/* harmony export */   \"WatchWallet\": () => (/* binding */ WatchWallet),\n/* harmony export */   \"WifWallet\": () => (/* binding */ WifWallet)\n/* harmony export */ });\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/key/hd-key.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/key/key-utils.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/key/wallet-import-format.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/address/cash-address.js\");\n/* harmony import */ var bip39__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bip39 */ \"../../node_modules/bip39/src/index.js\");\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../enum.js */ \"./src/enum.ts\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../interface.js */ \"./src/interface.ts\");\n/* harmony import */ var _Base_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Base.js */ \"./src/wallet/Base.ts\");\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./enum.js */ \"./src/wallet/enum.ts\");\n/* harmony import */ var _model_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./model.js */ \"./src/wallet/model.ts\");\n/* harmony import */ var _transaction_Wif_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../transaction/Wif.js */ \"./src/transaction/Wif.ts\");\n/* harmony import */ var _util_asSendRequestObject_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../util/asSendRequestObject.js */ \"./src/util/asSendRequestObject.ts\");\n/* harmony import */ var _util_balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../util/balanceObjectFromSatoshi.js */ \"./src/util/balanceObjectFromSatoshi.ts\");\n/* harmony import */ var _util_checkWifNetwork_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../util/checkWifNetwork.js */ \"./src/util/checkWifNetwork.ts\");\n/* harmony import */ var _util_deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../util/deriveCashaddr.js */ \"./src/util/deriveCashaddr.ts\");\n/* harmony import */ var _util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../util/derivePublicKeyHash.js */ \"./src/util/derivePublicKeyHash.ts\");\n/* harmony import */ var _util_checkForEmptySeed_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../util/checkForEmptySeed.js */ \"./src/util/checkForEmptySeed.ts\");\n/* harmony import */ var _util_sanitizeUnit_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../util/sanitizeUnit.js */ \"./src/util/sanitizeUnit.ts\");\n/* harmony import */ var _util_sumUtxoValue_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../util/sumUtxoValue.js */ \"./src/util/sumUtxoValue.ts\");\n/* harmony import */ var _util_sumSendRequestAmounts_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../util/sumSendRequestAmounts.js */ \"./src/util/sumSendRequestAmounts.ts\");\n/* harmony import */ var _network_getRelayFeeCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../network/getRelayFeeCache.js */ \"./src/network/getRelayFeeCache.ts\");\n/* harmony import */ var _Slp_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Slp.js */ \"./src/wallet/Slp.ts\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"../../node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../util/bchaddr.js */ \"../../node_modules/bchaddrjs-slp/src/bchaddr.js\");\n/* harmony import */ var _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Util.js */ \"./src/wallet/Util.ts\");\n/* harmony import */ var _network_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../network/index.js */ \"./src/network/default.ts\");\n/* harmony import */ var _util_randomBytes_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../util/randomBytes.js */ \"./src/util/randomBytes.ts\");\n/* harmony import */ var _message_index_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../message/index.js */ \"./src/message/signed.ts\");\n/* harmony import */ var _util_amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../util/amountInSatoshi.js */ \"./src/util/amountInSatoshi.ts\");\n/* harmony import */ var _util_getXPubKey_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../util/getXPubKey.js */ \"./src/util/getXPubKey.ts\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../constant.js */ \"./src/constant.ts\");\n/* harmony import */ var _history_electrumTransformer_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../history/electrumTransformer.js */ \"./src/history/electrumTransformer.ts\");\n/* harmony import */ var _Bcmr_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./Bcmr.js */ \"./src/wallet/Bcmr.ts\");\n/* harmony import */ var _qr_Qr_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../qr/Qr.js */ \"./src/qr/Qr.ts\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../config.js */ \"./src/config.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_Base_js__WEBPACK_IMPORTED_MODULE_3__, _enum_js__WEBPACK_IMPORTED_MODULE_4__, _Slp_js__WEBPACK_IMPORTED_MODULE_7__, _Util_js__WEBPACK_IMPORTED_MODULE_8__, _network_index_js__WEBPACK_IMPORTED_MODULE_10__, _qr_Qr_js__WEBPACK_IMPORTED_MODULE_11__, _util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_13__, _util_checkForEmptySeed_js__WEBPACK_IMPORTED_MODULE_17__, _util_getXPubKey_js__WEBPACK_IMPORTED_MODULE_18__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_19__, _model_js__WEBPACK_IMPORTED_MODULE_21__, _util_deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_22__, _util_checkWifNetwork_js__WEBPACK_IMPORTED_MODULE_23__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_24__, _util_balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_26__, _util_amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_28__, _Bcmr_js__WEBPACK_IMPORTED_MODULE_29__, _transaction_Wif_js__WEBPACK_IMPORTED_MODULE_30__, _util_asSendRequestObject_js__WEBPACK_IMPORTED_MODULE_31__, _util_sumSendRequestAmounts_js__WEBPACK_IMPORTED_MODULE_32__, _history_electrumTransformer_js__WEBPACK_IMPORTED_MODULE_33__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_34__, _message_index_js__WEBPACK_IMPORTED_MODULE_36__]);\n([_Base_js__WEBPACK_IMPORTED_MODULE_3__, _enum_js__WEBPACK_IMPORTED_MODULE_4__, _Slp_js__WEBPACK_IMPORTED_MODULE_7__, _Util_js__WEBPACK_IMPORTED_MODULE_8__, _network_index_js__WEBPACK_IMPORTED_MODULE_10__, _qr_Qr_js__WEBPACK_IMPORTED_MODULE_11__, _util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_13__, _util_checkForEmptySeed_js__WEBPACK_IMPORTED_MODULE_17__, _util_getXPubKey_js__WEBPACK_IMPORTED_MODULE_18__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_19__, _model_js__WEBPACK_IMPORTED_MODULE_21__, _util_deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_22__, _util_checkWifNetwork_js__WEBPACK_IMPORTED_MODULE_23__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_24__, _util_balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_26__, _util_amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_28__, _Bcmr_js__WEBPACK_IMPORTED_MODULE_29__, _transaction_Wif_js__WEBPACK_IMPORTED_MODULE_30__, _util_asSendRequestObject_js__WEBPACK_IMPORTED_MODULE_31__, _util_sumSendRequestAmounts_js__WEBPACK_IMPORTED_MODULE_32__, _history_electrumTransformer_js__WEBPACK_IMPORTED_MODULE_33__, _bitauth_libauth__WEBPACK_IMPORTED_MODULE_34__, _message_index_js__WEBPACK_IMPORTED_MODULE_36__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n//#region Imports\n// Stable\n\n// Unstable?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//#endregion Imports\n/**\n * Class to manage a bitcoin cash wallet.\n */\nclass Wallet extends _Base_js__WEBPACK_IMPORTED_MODULE_3__.BaseWallet {\n    //#endregion\n    //#region Constructors and Statics\n    constructor(name = \"\", network = _enum_js__WEBPACK_IMPORTED_MODULE_4__.NetworkType.Mainnet, walletType = _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Seed) {\n        super(name, network, walletType);\n        this.derivationPath = _config_js__WEBPACK_IMPORTED_MODULE_6__.Config.DefaultParentDerivationPath + \"/0/0\";\n        this.parentDerivationPath = _config_js__WEBPACK_IMPORTED_MODULE_6__.Config.DefaultParentDerivationPath;\n        this._slpAware = false; // a flag which activates utxo checking against an external slp indexer\n        this._slpSemiAware = false; // a flag which requires an utxo to have more than 546 sats to be spendable and counted in the balance\n        this.fromId = async (walletId) => {\n            let [walletType, networkGiven, arg1] = walletId.split(\":\");\n            if (this.network != networkGiven) {\n                throw Error(`Network prefix ${networkGiven} to a ${this.network} wallet`);\n            }\n            // \"wif:regtest:cNfsPtqN2bMRS7vH5qd8tR8GMvgXyL5BjnGAKgZ8DYEiCrCCQcP6\"\n            if (walletType === \"wif\") {\n                return this.fromWIF(arg1);\n            }\n            return super.fromId(walletId);\n        };\n        this.networkPrefix = _enum_js__WEBPACK_IMPORTED_MODULE_4__.prefixFromNetworkMap[this.network];\n    }\n    //#region Accessors\n    // interface to slp functions. see Slp.ts\n    get slp() {\n        if (!this._slp) {\n            this._slp = new _Slp_js__WEBPACK_IMPORTED_MODULE_7__.Slp(this);\n            this._slpAware = true;\n        }\n        return this._slp;\n    }\n    // interface to slp functions. see Slp.ts\n    static get slp() {\n        return _Slp_js__WEBPACK_IMPORTED_MODULE_7__.Slp;\n    }\n    // interface to util functions. see Util.ts\n    get util() {\n        if (!this._util) {\n            this._util = new _Util_js__WEBPACK_IMPORTED_MODULE_8__.Util(this);\n        }\n        return this._util;\n    }\n    // interface to util util. see Util.Util\n    static get util() {\n        return _Util_js__WEBPACK_IMPORTED_MODULE_8__.Util;\n    }\n    slpAware(value = true) {\n        this._slpAware = value;\n        return this;\n    }\n    slpSemiAware(value = true) {\n        this._slpSemiAware = value;\n        return this;\n    }\n    getNetworkProvider(network = _interface_js__WEBPACK_IMPORTED_MODULE_9__.Network.MAINNET) {\n        return (0,_network_index_js__WEBPACK_IMPORTED_MODULE_10__.getNetworkProvider)(network);\n    }\n    /**\n     * getTokenDepositAddress - get a cashtoken aware wallet deposit address\n     *\n     * @returns The cashtoken aware deposit address as a string\n     */\n    getTokenDepositAddress() {\n        return this.tokenaddr;\n    }\n    /**\n     * getDepositQr - get an address qrcode, encoded for display on the web\n     *\n     * @returns The qrcode for the token aware address\n     */\n    getTokenDepositQr() {\n        return (0,_qr_Qr_js__WEBPACK_IMPORTED_MODULE_11__.qrAddress)(this.getTokenDepositAddress());\n    }\n    /**\n     *  explorerUrl   Web url to a transaction on a block explorer\n     *\n     * @param txId   transaction Id\n     * @returns   Url string\n     */\n    explorerUrl(txId) {\n        const explorerUrlMap = {\n            mainnet: \"https://blockchair.com/bitcoin-cash/transaction/\",\n            testnet: \"https://www.blockchain.com/bch-testnet/tx/\",\n            regtest: \"\",\n        };\n        return explorerUrlMap[this.network] + txId;\n    }\n    // Return wallet info\n    getInfo() {\n        return {\n            cashaddr: this.cashaddr,\n            tokenaddr: this.tokenaddr,\n            isTestnet: this.isTestnet,\n            name: this.name,\n            network: this.network,\n            seed: this.mnemonic ? this.getSeed().seed : undefined,\n            derivationPath: this.mnemonic ? this.getSeed().derivationPath : undefined,\n            parentDerivationPath: this.mnemonic\n                ? this.getSeed().parentDerivationPath\n                : undefined,\n            parentXPubKey: this.parentXPubKey ? this.parentXPubKey : undefined,\n            publicKey: this.publicKey ? (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_12__.binToHex)(this.publicKey) : undefined,\n            publicKeyHash: (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_12__.binToHex)(this.publicKeyHash),\n            privateKey: this.privateKey ? (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_12__.binToHex)(this.privateKey) : undefined,\n            privateKeyWif: this.privateKeyWif,\n            walletId: this.toString(),\n            walletDbEntry: this.toDbString(),\n        };\n    }\n    // returns the public key hash for an address\n    getPublicKey(hex = false) {\n        if (this.publicKey) {\n            return hex ? (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_12__.binToHex)(this.publicKey) : this.publicKey;\n        }\n        else {\n            throw Error(\"The public key for this wallet is not known, perhaps the wallet was created to watch the *hash* of a public key? i.e. a cashaddress.\");\n        }\n    }\n    // returns the public key hash for an address\n    getPublicKeyCompressed(hex = false) {\n        if (this.publicKeyCompressed) {\n            return hex\n                ? (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_12__.binToHex)(this.publicKeyCompressed)\n                : this.publicKeyCompressed;\n        }\n        else {\n            throw Error(\"The compressed public key for this wallet is not known, perhaps the wallet was created to watch the *hash* of a public key? i.e. a cashaddress.\");\n        }\n    }\n    // returns the public key hash for an address\n    getPublicKeyHash(hex = false) {\n        if (this.publicKeyHash) {\n            return hex ? (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_12__.binToHex)(this.publicKeyHash) : this.publicKeyHash;\n        }\n        else {\n            throw Error(\"The public key hash for this wallet is not known. If this wallet was created from the constructor directly, calling the deriveInfo() function may help. \");\n        }\n    }\n    /**\n     * fromWIF - create a wallet using the private key supplied in `Wallet Import Format`\n     *\n     * @param wif   WIF encoded private key string\n     *\n     * @returns instantiated wallet\n     */\n    static async fromWIF(wif) {\n        return new this().fromWIF(wif);\n    }\n    /**\n     * fromCashaddr - create a watch-only wallet in the network derived from the address\n     *\n     * such kind of wallet does not have a private key and is unable to spend any funds\n     * however it still allows to use many utility functions such as getting and watching balance, etc.\n     *\n     * @param address   cashaddress of a wallet\n     *\n     * @returns instantiated wallet\n     */\n    static async fromCashaddr(address) {\n        const prefix = (0,_util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_13__.derivePrefix)(address);\n        const networkType = _enum_js__WEBPACK_IMPORTED_MODULE_4__.networkPrefixMap[prefix];\n        return new this(\"\", networkType, _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Watch).watchOnly(address);\n    }\n    /**\n     * fromTokenaddr - create a watch-only wallet in the network derived from the address\n     *\n     * such kind of wallet does not have a private key and is unable to spend any funds\n     * however it still allows to use many utility functions such as getting and watching balance, etc.\n     *\n     * @param address   token aware cashaddress of a wallet\n     *\n     * @returns instantiated wallet\n     */\n    static async fromTokenaddr(address) {\n        const prefix = (0,_util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_13__.derivePrefix)(address);\n        const networkType = _enum_js__WEBPACK_IMPORTED_MODULE_4__.networkPrefixMap[prefix];\n        return new this(\"\", networkType, _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Watch).watchOnly(address);\n    }\n    /**\n     * fromSlpaddr - create an SLP aware watch-only wallet in the network derived from the address\n     *\n     * such kind of wallet does not have a private key and is unable to spend any funds\n     * however it still allows to use many utility functions such as getting and watching balance, etc.\n     *\n     * @param address   slpaddress of a wallet\n     *\n     * @returns instantiated wallet\n     */\n    static async fromSlpaddr(address) {\n        return this.fromCashaddr((0,_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_14__.toCashAddress)(address));\n    }\n    //#endregion Constructors and Statics\n    //#region Protected implementations\n    async generate() {\n        if (this.walletType === _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Wif) {\n            return await this._generateWif();\n        }\n        else if (this.walletType === _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Watch) {\n            return this;\n        }\n        else if (this.walletType === _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Hd) {\n            throw Error(\"Not implemented\");\n        }\n        else if (this.walletType === _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Seed) {\n            return await this._generateMnemonic();\n        }\n        else {\n            console.log(this.walletType);\n            throw Error(`Could not determine walletType: ${this.walletType}`);\n        }\n    }\n    async _generateWif() {\n        if (!this.privateKey) {\n            this.privateKey = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_15__.generatePrivateKey)(() => (0,_util_randomBytes_js__WEBPACK_IMPORTED_MODULE_16__.generateRandomBytes)(32));\n        }\n        return this.deriveInfo();\n    }\n    async _generateMnemonic() {\n        this.mnemonic = (0,bip39__WEBPACK_IMPORTED_MODULE_0__.generateMnemonic)();\n        if (this.mnemonic.length == 0)\n            throw Error(\"refusing to create wallet from empty mnemonic\");\n        let seed = (0,bip39__WEBPACK_IMPORTED_MODULE_0__.mnemonicToSeedSync)(this.mnemonic);\n        (0,_util_checkForEmptySeed_js__WEBPACK_IMPORTED_MODULE_17__.checkForEmptySeed)(seed);\n        let network = this.isTestnet ? \"testnet\" : \"mainnet\";\n        this.parentXPubKey = await (0,_util_getXPubKey_js__WEBPACK_IMPORTED_MODULE_18__.getXPubKey)(seed, this.parentDerivationPath, network);\n        let hdNode = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_19__.deriveHdPrivateNodeFromSeed)(seed);\n        if (!hdNode.valid) {\n            throw Error(\"Invalid private key derived from mnemonic seed\");\n        }\n        let zerothChild = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_19__.deriveHdPath)(hdNode, this.derivationPath);\n        if (typeof zerothChild === \"string\") {\n            throw Error(zerothChild);\n        }\n        this.privateKey = zerothChild.privateKey;\n        this.walletType = _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Seed;\n        return await this.deriveInfo();\n    }\n    async getXPubKeys(paths) {\n        if (this.mnemonic) {\n            if (paths) {\n                let xPubKeys = await this.deriveHdPaths(paths);\n                return [xPubKeys];\n            }\n            else {\n                return await this.deriveHdPaths(_constant_js__WEBPACK_IMPORTED_MODULE_20__.DERIVATION_PATHS);\n            }\n        }\n        else {\n            throw Error(\"xpubkeys can only be derived from seed type wallets.\");\n        }\n    }\n    // Initialize wallet from a mnemonic phrase\n    async fromSeed(mnemonic, derivationPath) {\n        this.mnemonic = mnemonic.trim().toLowerCase();\n        if (this.mnemonic.length == 0)\n            throw Error(\"refusing to create wallet from empty mnemonic\");\n        let seed = (0,bip39__WEBPACK_IMPORTED_MODULE_0__.mnemonicToSeedSync)(this.mnemonic);\n        (0,_util_checkForEmptySeed_js__WEBPACK_IMPORTED_MODULE_17__.checkForEmptySeed)(seed);\n        let hdNode = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_19__.deriveHdPrivateNodeFromSeed)(seed);\n        if (!hdNode.valid) {\n            throw Error(\"Invalid private key derived from mnemonic seed\");\n        }\n        if (derivationPath) {\n            this.derivationPath = derivationPath;\n            // If the derivation path is for the first account child, set the parent derivation path\n            let path = derivationPath.split(\"/\");\n            if (path.slice(-2).join(\"/\") == \"0/0\") {\n                this.parentDerivationPath = path.slice(0, -2).join(\"/\");\n            }\n        }\n        let zerothChild = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_19__.deriveHdPath)(hdNode, this.derivationPath);\n        if (typeof zerothChild === \"string\") {\n            throw Error(zerothChild);\n        }\n        this.privateKey = zerothChild.privateKey;\n        let network = this.isTestnet ? \"testnet\" : \"mainnet\";\n        this.parentXPubKey = await (0,_util_getXPubKey_js__WEBPACK_IMPORTED_MODULE_18__.getXPubKey)(seed, this.parentDerivationPath, network);\n        this.walletType = _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Seed;\n        await this.deriveInfo();\n        return this;\n    }\n    // Get common xpub paths from zerothChild privateKey\n    async deriveHdPaths(hdPaths) {\n        if (!this.mnemonic)\n            throw Error(\"refusing to create wallet from empty mnemonic\");\n        let seed = (0,bip39__WEBPACK_IMPORTED_MODULE_0__.mnemonicToSeedSync)(this.mnemonic);\n        (0,_util_checkForEmptySeed_js__WEBPACK_IMPORTED_MODULE_17__.checkForEmptySeed)(seed);\n        let hdNode = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_19__.deriveHdPrivateNodeFromSeed)(seed);\n        if (!hdNode.valid) {\n            throw Error(\"Invalid private key derived from mnemonic seed\");\n        }\n        let result = [];\n        for (const path of hdPaths) {\n            if (path === \"m\") {\n                throw Error(\"Storing or sharing of parent public key may lead to loss of funds. Storing or sharing *root* parent public keys is strongly discouraged, although all parent keys have risk. See: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#implications\");\n            }\n            let childNode = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_19__.deriveHdPath)(hdNode, path);\n            if (typeof childNode === \"string\") {\n                throw Error(childNode);\n            }\n            let node = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_19__.deriveHdPublicNode)(childNode);\n            if (typeof node === \"string\") {\n                throw Error(node);\n            }\n            let xPubKey = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_19__.encodeHdPublicKey)({\n                network: this.network,\n                node: node,\n            });\n            let key = new _model_js__WEBPACK_IMPORTED_MODULE_21__.XPubKey({\n                path: path,\n                xPubKey: xPubKey,\n            });\n            result.push(await key.ready());\n        }\n        return await Promise.all(result).then((result) => {\n            return result;\n        });\n    }\n    // Initialize a watch only wallet from a cash addr\n    async watchOnly(address) {\n        this.walletType = _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Watch;\n        let addressComponents = address.split(\":\");\n        let addressPrefix, addressBase;\n        if (addressComponents.length === 1) {\n            addressBase = addressComponents.shift();\n            addressPrefix = (0,_util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_13__.derivePrefix)(addressBase);\n        }\n        else {\n            addressPrefix = addressComponents.shift();\n            addressBase = addressComponents.shift();\n            if (addressPrefix in _enum_js__WEBPACK_IMPORTED_MODULE_4__.networkPrefixMap) {\n                if (_enum_js__WEBPACK_IMPORTED_MODULE_4__.networkPrefixMap[addressPrefix] != this.network) {\n                    throw Error(`a ${addressPrefix} address cannot be watched from a ${this.network} Wallet`);\n                }\n            }\n        }\n        this.cashaddr = `${addressPrefix}:${addressBase}`;\n        this.address = this.cashaddr;\n        this.publicKeyHash = (0,_util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_13__.derivePublicKeyHash)(this.cashaddr);\n        this.tokenaddr = (0,_util_deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_22__.deriveTokenaddr)(this.publicKeyHash, this.networkPrefix);\n        return this;\n    }\n    // Initialize wallet from Wallet Import Format\n    async fromWIF(secret) {\n        (0,_util_checkWifNetwork_js__WEBPACK_IMPORTED_MODULE_23__.checkWifNetwork)(secret, this.network);\n        let wifResult = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_24__.decodePrivateKeyWif)(secret);\n        if (typeof wifResult === \"string\") {\n            throw Error(wifResult);\n        }\n        let resultData = wifResult;\n        this.privateKey = resultData.privateKey;\n        this.privateKeyWif = secret;\n        this.walletType = _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Wif;\n        await this.deriveInfo();\n        return this;\n    }\n    async newRandom(name, dbName) {\n        dbName = dbName ? dbName : this.networkPrefix;\n        return super.newRandom(name, dbName);\n    }\n    async named(name, dbName, forceNew = false) {\n        dbName = dbName ? dbName : this.networkPrefix;\n        return super.named(name, dbName, forceNew);\n    }\n    async replaceNamed(name, walletId, dbName) {\n        dbName = dbName ? dbName : this.networkPrefix;\n        return super.replaceNamed(name, walletId, dbName);\n    }\n    async namedExists(name, dbName) {\n        dbName = dbName ? dbName : this.networkPrefix;\n        return super.namedExists(name, dbName);\n    }\n    //#endregion Protected Implementations\n    //#region Serialization\n    // Returns the serialized wallet as a string\n    // If storing in a database, set asNamed to false to store secrets\n    // In all other cases, the a named wallet is deserialized from the database\n    //  by the name key\n    toString() {\n        const result = super.toString();\n        if (result)\n            return result;\n        if (this.walletType === _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Wif) {\n            return `${this.walletType}:${this.network}:${this.privateKeyWif}`;\n        }\n        throw Error(\"toString unsupported wallet type\");\n    }\n    //\n    toDbString() {\n        const result = super.toDbString();\n        if (result)\n            return result;\n        if (this.walletType === _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Wif) {\n            return `${this.walletType}:${this.network}:${this.privateKeyWif}`;\n        }\n        throw Error(\"toDbString unsupported wallet type\");\n    }\n    //#endregion Serialization\n    //#region Funds\n    //\n    async getAddressUtxos(address) {\n        if (!address) {\n            address = this.cashaddr;\n        }\n        if (this._slpAware) {\n            const [bchUtxos, slpOutpoints] = await Promise.all([\n                this.provider.getUtxos(address),\n                this.slp.getSlpOutpoints(),\n            ]);\n            return bchUtxos.filter((bchutxo) => slpOutpoints.findIndex((slpOutpoint) => `${bchutxo.txid}:${bchutxo.vout}` === slpOutpoint) === -1);\n        }\n        else if (this._slpSemiAware) {\n            const bchUtxos = await this.provider.getUtxos(address);\n            return bchUtxos.filter((bchutxo) => bchutxo.satoshis > _constant_js__WEBPACK_IMPORTED_MODULE_20__.DUST_UTXO_THRESHOLD);\n        }\n        else {\n            return await this.provider.getUtxos(address);\n        }\n    }\n    /**\n     * utxos Get unspent outputs for the wallet\n     *\n     */\n    async getUtxos() {\n        if (!this.cashaddr) {\n            throw Error(\"Attempted to get utxos without an address\");\n        }\n        return await this.getAddressUtxos(this.cashaddr);\n    }\n    // gets wallet balance in sats, bch and usd\n    async getBalance(rawUnit, usdPriceCache = true) {\n        if (rawUnit) {\n            const unit = (0,_util_sanitizeUnit_js__WEBPACK_IMPORTED_MODULE_25__.sanitizeUnit)(rawUnit);\n            return await (0,_util_balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_26__.balanceFromSatoshi)(await this.getBalanceFromProvider(), unit, usdPriceCache);\n        }\n        else {\n            return await (0,_util_balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_26__.balanceResponseFromSatoshi)(await this.getBalanceFromProvider(), usdPriceCache);\n        }\n    }\n    // Gets balance by summing value in all utxos in stats\n    async getBalanceFromUtxos() {\n        const utxos = (await this.getAddressUtxos(this.cashaddr)).filter((val) => val.token === undefined);\n        return (0,_util_sumUtxoValue_js__WEBPACK_IMPORTED_MODULE_27__.sumUtxoValue)(utxos);\n    }\n    // Gets balance from fulcrum\n    async getBalanceFromProvider() {\n        // Fulcrum reports balance of all utxos, including tokens, which is undesirable\n        // // TODO not sure why getting the balance from a provider doesn't work\n        // if (this._slpAware || this._slpSemiAware) {\n        //   return await this.getBalanceFromUtxos();\n        // } else {\n        //   return await this.provider!.getBalance(this.cashaddr!);\n        // }\n        // FIXME\n        return this.getBalanceFromUtxos();\n    }\n    // watching for any transaction hash of this wallet\n    watchAddress(callback) {\n        return this.provider.watchAddress(this.getDepositAddress(), callback);\n    }\n    // watching for any transaction of this wallet\n    watchAddressTransactions(callback) {\n        return this.provider.watchAddressTransactions(this.getDepositAddress(), callback);\n    }\n    // watching for cashtoken transaction of this wallet\n    watchAddressTokenTransactions(callback) {\n        return this.provider.watchAddressTokenTransactions(this.getDepositAddress(), callback);\n    }\n    // sets up a callback to be called upon wallet's balance change\n    // can be cancelled by calling the function returned from this one\n    watchBalance(callback) {\n        return this.provider.watchAddressStatus(this.getDepositAddress(), async (_status) => {\n            const balance = (await this.getBalance());\n            callback(balance);\n        });\n    }\n    // sets up a callback to be called upon wallet's BCH or USD balance change\n    // if BCH balance does not change, the callback will be triggered every\n    // @param `usdPriceRefreshInterval` milliseconds by polling for new BCH USD price\n    // Since we want to be most sensitive to usd value change, we do not use the cached exchange rates\n    // can be cancelled by calling the function returned from this one\n    watchBalanceUsd(callback, usdPriceRefreshInterval = 30000) {\n        let usdPrice = -1;\n        const _callback = async () => {\n            const balance = (await this.getBalance(undefined, false));\n            if (usdPrice !== balance.usd) {\n                usdPrice = balance.usd;\n                callback(balance);\n            }\n        };\n        const watchCancel = this.provider.watchAddressStatus(this.getDepositAddress(), _callback);\n        const interval = setInterval(_callback, usdPriceRefreshInterval);\n        return async () => {\n            await watchCancel();\n            clearInterval(interval);\n        };\n    }\n    // waits for address balance to be greater than or equal to the target value\n    // this call halts the execution\n    async waitForBalance(value, rawUnit = _enum_js__WEBPACK_IMPORTED_MODULE_4__.UnitEnum.BCH) {\n        return new Promise(async (resolve) => {\n            const watchCancel = this.watchBalance(async (balance) => {\n                const satoshiBalance = await (0,_util_amountInSatoshi_js__WEBPACK_IMPORTED_MODULE_28__.amountInSatoshi)(value, rawUnit);\n                if (balance.sat >= satoshiBalance) {\n                    await watchCancel();\n                    resolve(balance);\n                }\n            });\n        });\n    }\n    // sets up a callback to be called upon wallet's token balance change\n    // can be cancelled by calling the function returned from this one\n    watchTokenBalance(tokenId, callback) {\n        let previous = undefined;\n        return this.provider.watchAddressStatus(this.getDepositAddress(), async (_status) => {\n            const balance = await this.getTokenBalance(tokenId);\n            if (previous != balance) {\n                callback(balance);\n            }\n            previous = balance;\n        });\n    }\n    // waits for address token balance to be greater than or equal to the target amount\n    // this call halts the execution\n    async waitForTokenBalance(tokenId, amount) {\n        return new Promise(async (resolve) => {\n            const watchCancel = this.watchTokenBalance(tokenId, async (balance) => {\n                if (balance >= amount) {\n                    await watchCancel();\n                    resolve(balance);\n                }\n            });\n        });\n    }\n    async getTokenInfo(tokenId) {\n        return _Bcmr_js__WEBPACK_IMPORTED_MODULE_29__.BCMR.getTokenInfo(tokenId);\n    }\n    async _getMaxAmountToSend(params = {\n        outputCount: 1,\n        options: {},\n    }) {\n        if (!this.privateKey && params.options?.buildUnsigned !== true) {\n            throw Error(\"Couldn't get network or private key for wallet.\");\n        }\n        if (!this.cashaddr) {\n            throw Error(\"attempted to send without a cashaddr\");\n        }\n        if (params.options && params.options.slpAware) {\n            this._slpAware = true;\n        }\n        if (params.options && params.options.slpSemiAware) {\n            this._slpSemiAware = true;\n        }\n        let feePaidBy;\n        if (params.options && params.options.feePaidBy) {\n            feePaidBy = params.options.feePaidBy;\n        }\n        else {\n            feePaidBy = _enum_js__WEBPACK_IMPORTED_MODULE_5__.FeePaidByEnum.change;\n        }\n        // get inputs\n        let utxos;\n        if (params.options && params.options.utxoIds) {\n            utxos = params.options.utxoIds.map((utxoId) => typeof utxoId === \"string\" ? (0,_model_js__WEBPACK_IMPORTED_MODULE_21__.fromUtxoId)(utxoId) : utxoId);\n        }\n        else {\n            utxos = (await this.getAddressUtxos(this.cashaddr)).filter((utxo) => !utxo.token);\n        }\n        // Get current height to assure recently mined coins are not spent.\n        const bestHeight = await this.provider.getBlockHeight();\n        // simulate outputs using the sender's address\n        const sendRequest = new _model_js__WEBPACK_IMPORTED_MODULE_21__.SendRequest({\n            cashaddr: this.cashaddr,\n            value: 100,\n            unit: \"sat\",\n        });\n        const sendRequests = Array(params.outputCount)\n            .fill(0)\n            .map(() => sendRequest);\n        const fundingUtxos = await (0,_transaction_Wif_js__WEBPACK_IMPORTED_MODULE_30__.getSuitableUtxos)(utxos, undefined, bestHeight, feePaidBy, sendRequests);\n        const relayFeePerByteInSatoshi = await (0,_network_getRelayFeeCache_js__WEBPACK_IMPORTED_MODULE_1__.getRelayFeeCache)(this.provider);\n        const fee = await (0,_transaction_Wif_js__WEBPACK_IMPORTED_MODULE_30__.getFeeAmountSimple)({\n            utxos: fundingUtxos,\n            sendRequests: sendRequests,\n            privateKey: this.privateKey ?? Uint8Array.from([]),\n            sourceAddress: this.cashaddr,\n            relayFeePerByteInSatoshi: relayFeePerByteInSatoshi,\n            slpOutputs: [],\n            feePaidBy: feePaidBy,\n        });\n        const spendableAmount = (0,_util_sumUtxoValue_js__WEBPACK_IMPORTED_MODULE_27__.sumUtxoValue)(fundingUtxos);\n        let result = spendableAmount - fee;\n        if (result < 0) {\n            result = 0;\n        }\n        return { value: result, utxos: fundingUtxos };\n    }\n    async getMaxAmountToSend(params = {\n        outputCount: 1,\n        options: {},\n    }) {\n        const { value: result } = await this._getMaxAmountToSend(params);\n        return await (0,_util_balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_26__.balanceResponseFromSatoshi)(result);\n    }\n    /**\n     * send Send some amount to an address\n     * this function processes the send requests, encodes the transaction, sends it to the network\n     * @returns (depending on the options parameter) the transaction id, new address balance and a link to the transaction on the blockchain explorer\n     *\n     * This is a first class function with REST analog, maintainers should strive to keep backward-compatibility\n     *\n     */\n    async send(requests, options) {\n        const { encodedTransaction, tokenIds, sourceOutputs } = await this.encodeTransaction(requests, undefined, options);\n        const resp = new _model_js__WEBPACK_IMPORTED_MODULE_21__.SendResponse({});\n        resp.tokenIds = tokenIds;\n        if (options?.buildUnsigned !== true) {\n            const txId = await this.submitTransaction(encodedTransaction, options?.awaitTransactionPropagation === undefined ||\n                options?.awaitTransactionPropagation === true);\n            resp.txId = txId;\n            resp.explorerUrl = this.explorerUrl(resp.txId);\n            if (options?.queryBalance === undefined ||\n                options?.queryBalance === true) {\n                resp.balance = (await this.getBalance());\n            }\n        }\n        else {\n            resp.unsignedTransaction = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_12__.binToHex)(encodedTransaction);\n            resp.sourceOutputs = sourceOutputs;\n        }\n        return resp;\n    }\n    /**\n     * sendMax Send all available funds to a destination cash address\n     *\n     * @param  {string} cashaddr destination cash address\n     * @param  {SendRequestOptionsI} options Options of the send requests\n     *\n     * @returns (depending on the options parameter) the transaction id, new address balance and a link to the transaction on the blockchain explorer\n     */\n    async sendMax(cashaddr, options) {\n        return await this.sendMaxRaw(cashaddr, options);\n    }\n    /**\n     * sendMaxRaw (internal) Send all available funds to a destination cash address\n     *\n     * @param  {string} cashaddr destination cash address\n     * @param  {SendRequestOptionsI} options Options of the send requests\n     *\n     * @returns the transaction id sent to the network\n     */\n    async sendMaxRaw(cashaddr, options) {\n        const { value: maxSpendableAmount, utxos } = await this._getMaxAmountToSend({\n            outputCount: 1,\n            options: options,\n        });\n        if (!options) {\n            options = {};\n        }\n        options.utxoIds = utxos;\n        const sendRequest = new _model_js__WEBPACK_IMPORTED_MODULE_21__.SendRequest({\n            cashaddr: cashaddr,\n            value: maxSpendableAmount,\n            unit: \"sat\",\n        });\n        const { encodedTransaction, tokenIds, sourceOutputs } = await this.encodeTransaction([sendRequest], true, options);\n        const resp = new _model_js__WEBPACK_IMPORTED_MODULE_21__.SendResponse({});\n        resp.tokenIds = tokenIds;\n        if (options?.buildUnsigned !== true) {\n            const txId = await this.submitTransaction(encodedTransaction, options?.awaitTransactionPropagation === undefined ||\n                options?.awaitTransactionPropagation === true);\n            resp.txId = txId;\n            resp.explorerUrl = this.explorerUrl(resp.txId);\n            if (options?.queryBalance === undefined ||\n                options?.queryBalance === true) {\n                resp.balance = (await this.getBalance());\n            }\n        }\n        else {\n            resp.unsignedTransaction = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_12__.binToHex)(encodedTransaction);\n            resp.sourceOutputs = sourceOutputs;\n        }\n        return resp;\n    }\n    /**\n     * encodeTransaction Encode and sign a transaction given a list of sendRequests, options and estimate fees.\n     * @param  {SendRequest[]} sendRequests SendRequests\n     * @param  {boolean} discardChange=false\n     * @param  {SendRequestOptionsI} options Options of the send requests\n     */\n    async encodeTransaction(requests, discardChange = false, options) {\n        let sendRequests = (0,_util_asSendRequestObject_js__WEBPACK_IMPORTED_MODULE_31__.asSendRequestObject)(requests);\n        if (!this.privateKey && options?.buildUnsigned !== true) {\n            throw new Error(`Wallet ${this.name} is missing either a network or private key`);\n        }\n        if (!this.cashaddr) {\n            throw Error(\"attempted to send without a cashaddr\");\n        }\n        if (options && options.slpAware) {\n            this._slpAware = true;\n        }\n        if (options && options.slpSemiAware) {\n            this._slpSemiAware = true;\n        }\n        let feePaidBy;\n        if (options && options.feePaidBy) {\n            feePaidBy = options.feePaidBy;\n        }\n        else {\n            feePaidBy = _enum_js__WEBPACK_IMPORTED_MODULE_5__.FeePaidByEnum.change;\n        }\n        let changeAddress;\n        if (options && options.changeAddress) {\n            changeAddress = options.changeAddress;\n        }\n        else {\n            changeAddress = this.cashaddr;\n        }\n        let checkTokenQuantities = true;\n        if (options && options.checkTokenQuantities === false) {\n            checkTokenQuantities = false;\n        }\n        // get inputs from options or query all inputs\n        let utxos;\n        if (options && options.utxoIds) {\n            utxos = options.utxoIds.map((utxoId) => typeof utxoId === \"string\" ? (0,_model_js__WEBPACK_IMPORTED_MODULE_21__.fromUtxoId)(utxoId) : utxoId);\n        }\n        else {\n            utxos = await this.getAddressUtxos(this.cashaddr);\n        }\n        // filter out token utxos if there are no token requests\n        if (checkTokenQuantities &&\n            !sendRequests.some((val) => val instanceof _model_js__WEBPACK_IMPORTED_MODULE_21__.TokenSendRequest)) {\n            utxos = utxos.filter((val) => !val.token);\n        }\n        const addTokenChangeOutputs = (inputs, outputs) => {\n            // allow for implicit token burn if the total amount sent is less than user had\n            // allow for token genesis, creating more tokens than we had before (0)\n            if (!checkTokenQuantities) {\n                return;\n            }\n            const allTokenInputs = inputs.filter((val) => val.token);\n            const allTokenOutputs = outputs.filter((val) => val instanceof _model_js__WEBPACK_IMPORTED_MODULE_21__.TokenSendRequest);\n            const tokenIds = allTokenOutputs\n                .map((val) => val.tokenId)\n                .filter((val, idx, arr) => arr.indexOf(val) === idx);\n            for (let tokenId of tokenIds) {\n                const tokenInputs = allTokenInputs.filter((val) => val.token?.tokenId === tokenId);\n                const inputAmountSum = tokenInputs.reduce((prev, cur) => prev + cur.token.amount, 0);\n                const tokenOutputs = allTokenOutputs.filter((val) => val.tokenId === tokenId);\n                const outputAmountSum = tokenOutputs.reduce((prev, cur) => prev + cur.amount, 0);\n                const diff = inputAmountSum - outputAmountSum;\n                if (diff < 0) {\n                    throw new Error(\"Not enough token amount to send\");\n                }\n                if (diff >= 0) {\n                    let available = 0;\n                    let change = 0;\n                    const ensureUtxos = [];\n                    for (const token of tokenInputs.filter((val) => val.token?.amount)) {\n                        ensureUtxos.push(token);\n                        available += token.token?.amount;\n                        if (available >= outputAmountSum) {\n                            change = available - outputAmountSum;\n                            break;\n                        }\n                    }\n                    if (ensureUtxos.length) {\n                        if (!options) {\n                            options = {};\n                        }\n                        options.ensureUtxos = [\n                            ...(options.ensureUtxos ?? []),\n                            ...ensureUtxos,\n                        ].filter((val, index, array) => array.findIndex((other) => other.txid === val.txid && other.vout === val.vout) === index);\n                    }\n                    if (change > 0) {\n                        outputs.push(new _model_js__WEBPACK_IMPORTED_MODULE_21__.TokenSendRequest({\n                            cashaddr: (0,_util_deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_22__.toTokenaddr)(changeAddress) || this.tokenaddr,\n                            amount: change,\n                            tokenId: tokenId,\n                            commitment: tokenOutputs[0].commitment,\n                            capability: tokenOutputs[0].capability,\n                            value: tokenOutputs[0].value,\n                        }));\n                    }\n                }\n            }\n        };\n        addTokenChangeOutputs(utxos, sendRequests);\n        const bestHeight = await this.provider.getBlockHeight();\n        const spendAmount = await (0,_util_sumSendRequestAmounts_js__WEBPACK_IMPORTED_MODULE_32__.sumSendRequestAmounts)(sendRequests);\n        if (utxos.length === 0) {\n            throw Error(\"There were no Unspent Outputs\");\n        }\n        if (typeof spendAmount !== \"bigint\") {\n            throw Error(\"Couldn't get spend amount when building transaction\");\n        }\n        const relayFeePerByteInSatoshi = await (0,_network_getRelayFeeCache_js__WEBPACK_IMPORTED_MODULE_1__.getRelayFeeCache)(this.provider);\n        const feeEstimate = await (0,_transaction_Wif_js__WEBPACK_IMPORTED_MODULE_30__.getFeeAmountSimple)({\n            utxos: utxos,\n            sendRequests: sendRequests,\n            privateKey: this.privateKey ?? Uint8Array.from([]),\n            sourceAddress: this.cashaddr,\n            relayFeePerByteInSatoshi: relayFeePerByteInSatoshi,\n            slpOutputs: [],\n            feePaidBy: feePaidBy,\n        });\n        const fundingUtxos = await (0,_transaction_Wif_js__WEBPACK_IMPORTED_MODULE_30__.getSuitableUtxos)(utxos, BigInt(spendAmount) + BigInt(feeEstimate), bestHeight, feePaidBy, sendRequests, options?.ensureUtxos || [], options?.tokenOperation);\n        if (fundingUtxos.length === 0) {\n            throw Error(\"The available inputs couldn't satisfy the request with fees\");\n        }\n        const fee = await (0,_transaction_Wif_js__WEBPACK_IMPORTED_MODULE_30__.getFeeAmount)({\n            utxos: fundingUtxos,\n            sendRequests: sendRequests,\n            privateKey: this.privateKey ?? Uint8Array.from([]),\n            sourceAddress: this.cashaddr,\n            relayFeePerByteInSatoshi: relayFeePerByteInSatoshi,\n            slpOutputs: [],\n            feePaidBy: feePaidBy,\n        });\n        const { encodedTransaction, sourceOutputs } = await (0,_transaction_Wif_js__WEBPACK_IMPORTED_MODULE_30__.buildEncodedTransaction)({\n            inputs: fundingUtxos,\n            outputs: sendRequests,\n            signingKey: this.privateKey ?? Uint8Array.from([]),\n            sourceAddress: this.cashaddr,\n            fee,\n            discardChange,\n            slpOutputs: [],\n            feePaidBy,\n            changeAddress,\n            buildUnsigned: options?.buildUnsigned === true,\n        });\n        const tokenIds = [\n            ...fundingUtxos\n                .filter((val) => val.token?.tokenId)\n                .map((val) => val.token.tokenId),\n            ...sendRequests\n                .filter((val) => val instanceof _model_js__WEBPACK_IMPORTED_MODULE_21__.TokenSendRequest)\n                .map((val) => val.tokenId),\n        ].filter((value, index, array) => array.indexOf(value) === index);\n        return { encodedTransaction, tokenIds, sourceOutputs };\n    }\n    async signUnsignedTransaction(transaction, sourceOutputs) {\n        if (!this.privateKey) {\n            throw Error(\"Can not sign a transaction with watch-only wallet.\");\n        }\n        return (0,_transaction_Wif_js__WEBPACK_IMPORTED_MODULE_30__.signUnsignedTransaction)(transaction, sourceOutputs, this.privateKey);\n    }\n    // Submit a raw transaction\n    async submitTransaction(transaction, awaitPropagation = true) {\n        if (!this.provider) {\n            throw Error(\"Wallet network provider was not initialized\");\n        }\n        let rawTransaction = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_12__.binToHex)(transaction);\n        return await this.provider.sendRawTransaction(rawTransaction, awaitPropagation);\n    }\n    // gets transaction history of this wallet\n    async getRawHistory() {\n        return await this.provider.getHistory(this.cashaddr);\n    }\n    // gets transaction history of this wallet\n    async getHistory(unit, start, count, collapseChange) {\n        return (0,_history_electrumTransformer_js__WEBPACK_IMPORTED_MODULE_33__.getAddressHistory)(this.cashaddr, this.provider, unit, start, count, collapseChange);\n    }\n    // gets last transaction of this wallet\n    async getLastTransaction(confirmedOnly = false) {\n        let history = await this.getRawHistory();\n        if (confirmedOnly) {\n            history = history.filter((val) => val.height > 0);\n        }\n        if (!history.length) {\n            return null;\n        }\n        const [lastTx] = history.slice(-1);\n        return this.provider.getRawTransactionObject(lastTx.tx_hash);\n    }\n    // waits for next transaction, program execution is halted\n    async waitForTransaction(options = {\n        getTransactionInfo: true,\n        getBalance: false,\n        txHash: undefined,\n    }) {\n        if (options.getTransactionInfo === undefined) {\n            options.getTransactionInfo = true;\n        }\n        return new Promise(async (resolve) => {\n            let txHashSeen = false;\n            const makeResponse = async (txHash) => {\n                const response = {};\n                const promises = [undefined, undefined];\n                if (options.getBalance === true) {\n                    promises[0] = this.getBalance();\n                }\n                if (options.getTransactionInfo === true) {\n                    if (!txHash) {\n                        promises[1] = this.getLastTransaction();\n                    }\n                    else {\n                        promises[1] = this.provider.getRawTransactionObject(txHash);\n                    }\n                }\n                const result = await Promise.all(promises);\n                response.balance = result[0];\n                response.transactionInfo = result[1];\n                return response;\n            };\n            // waiting for a specific transaction to propagate\n            if (options.txHash) {\n                const waitForTransactionCallback = async (data) => {\n                    if (data && data[0] === options.txHash) {\n                        txHashSeen = true;\n                        this.provider.unsubscribeFromTransaction(options.txHash, waitForTransactionCallback);\n                        resolve(makeResponse(options.txHash));\n                    }\n                };\n                this.provider.subscribeToTransaction(options.txHash, waitForTransactionCallback);\n                return;\n            }\n            // waiting for any address transaction\n            const watchCancel = this.provider.watchAddressStatus(this.getDepositAddress(), async (_status) => {\n                watchCancel();\n                resolve(makeResponse());\n            });\n        });\n    }\n    /**\n     * watchBlocks Watch network blocks\n     *\n     * @param callback callback with a block header object\n     *\n     * @returns a function which will cancel watching upon evaluation\n     */\n    watchBlocks(callback) {\n        return this.provider.watchBlocks(callback);\n    }\n    /**\n     * waitForBlock Wait for a network block\n     *\n     * @param height if specified waits for this exact blockchain height, otherwise resolves with the next block\n     *\n     */\n    async waitForBlock(height) {\n        return this.provider.waitForBlock(height);\n    }\n    //#endregion Funds\n    //#region Private implementation details\n    async deriveInfo() {\n        const publicKey = _bitauth_libauth__WEBPACK_IMPORTED_MODULE_34__.secp256k1.derivePublicKeyUncompressed(this.privateKey);\n        if (typeof publicKey === \"string\") {\n            throw new Error(publicKey);\n        }\n        this.publicKey = publicKey;\n        const publicKeyCompressed = _bitauth_libauth__WEBPACK_IMPORTED_MODULE_34__.secp256k1.derivePublicKeyCompressed(this.privateKey);\n        if (typeof publicKeyCompressed === \"string\") {\n            throw new Error(publicKeyCompressed);\n        }\n        this.publicKeyCompressed = publicKeyCompressed;\n        const networkType = this.network === _enum_js__WEBPACK_IMPORTED_MODULE_4__.NetworkType.Regtest ? _enum_js__WEBPACK_IMPORTED_MODULE_4__.NetworkType.Testnet : this.network;\n        this.privateKeyWif = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_24__.encodePrivateKeyWif)(this.privateKey, networkType);\n        (0,_util_checkWifNetwork_js__WEBPACK_IMPORTED_MODULE_23__.checkWifNetwork)(this.privateKeyWif, this.network);\n        this.cashaddr = (0,_util_deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_22__.deriveCashaddr)(this.privateKey, this.networkPrefix);\n        this.tokenaddr = (0,_util_deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_22__.deriveTokenaddr)(this.privateKey, this.networkPrefix);\n        this.address = this.cashaddr;\n        this.publicKeyHash = (0,_util_derivePublicKeyHash_js__WEBPACK_IMPORTED_MODULE_13__.derivePublicKeyHash)(this.cashaddr);\n        return this;\n    }\n    //#endregion Private implementation details\n    //#region Signing\n    // Convenience wrapper to sign interface\n    async sign(message) {\n        return await Wallet.signedMessage.sign(message, this.privateKey);\n    }\n    // Convenience wrapper to verify interface\n    async verify(message, sig, publicKey) {\n        return await Wallet.signedMessage.verify(message, sig, this.cashaddr, publicKey);\n    }\n    //#endregion Signing\n    //#region Cashtokens\n    /**\n     * Create new cashtoken, both funglible and/or non-fungible (NFT)\n     * Refer to spec https://github.com/bitjson/cashtokens\n     * @param  {number} genesisRequest.amount amount of *fungible* tokens to create\n     * @param  {NFTCapability?} genesisRequest.capability capability of new NFT\n     * @param  {string?} genesisRequest.commitment NFT commitment message\n     * @param  {string?} genesisRequest.cashaddr cash address to send the created token UTXO to; if undefined will default to your address\n     * @param  {number?} genesisRequest.value satoshi value to send alongside with tokens; if undefined will default to 1000 satoshi\n     * @param  {SendRequestType | SendRequestType[]} sendRequests single or an array of extra send requests (OP_RETURN, value transfer, etc.) to include in genesis transaction\n     * @param  {SendRequestOptionsI} options Options of the send requests\n     */\n    async tokenGenesis(genesisRequest, sendRequests = [], options) {\n        if (!Array.isArray(sendRequests)) {\n            sendRequests = [sendRequests];\n        }\n        let utxos;\n        if (options && options.utxoIds) {\n            utxos = options.utxoIds.map((utxoId) => typeof utxoId === \"string\" ? (0,_model_js__WEBPACK_IMPORTED_MODULE_21__.fromUtxoId)(utxoId) : utxoId);\n        }\n        else {\n            utxos = await this.getAddressUtxos(this.cashaddr);\n        }\n        const genesisInputs = utxos.filter((val) => val.vout === 0 && !val.token);\n        if (genesisInputs.length === 0) {\n            throw new Error(\"No suitable inputs with vout=0 available for new token genesis\");\n        }\n        const genesisSendRequest = new _model_js__WEBPACK_IMPORTED_MODULE_21__.TokenSendRequest({\n            cashaddr: genesisRequest.cashaddr || this.tokenaddr,\n            amount: genesisRequest.amount,\n            value: genesisRequest.value || 1000,\n            capability: genesisRequest.capability,\n            commitment: genesisRequest.commitment,\n            tokenId: genesisInputs[0].txid,\n        });\n        return this.send([genesisSendRequest, ...sendRequests], {\n            ...options,\n            utxoIds: utxos,\n            ensureUtxos: [genesisInputs[0]],\n            checkTokenQuantities: false,\n            queryBalance: false,\n            tokenOperation: \"genesis\",\n        });\n    }\n    /**\n     * Mint new NFT cashtokens using an existing minting token\n     * Refer to spec https://github.com/bitjson/cashtokens\n     * @param  {string} tokenId tokenId of an NFT to mint\n     * @param  {TokenMintRequest | TokenMintRequest[]} mintRequests mint requests with new token properties and recipients\n     * @param  {NFTCapability?} mintRequest.capability capability of new NFT\n     * @param  {string?} mintRequest.commitment NFT commitment message\n     * @param  {string?} mintRequest.cashaddr cash address to send the created token UTXO to; if undefined will default to your address\n     * @param  {number?} mintRequest.value satoshi value to send alongside with tokens; if undefined will default to 1000 satoshi\n     * @param  {boolean?} deductTokenAmount if minting token contains fungible amount, deduct from it by amount of minted tokens\n     * @param  {SendRequestOptionsI} options Options of the send requests\n     */\n    async tokenMint(tokenId, mintRequests, deductTokenAmount = false, options) {\n        if (tokenId?.length !== 64) {\n            throw Error(`Invalid tokenId supplied: ${tokenId}`);\n        }\n        if (!Array.isArray(mintRequests)) {\n            mintRequests = [mintRequests];\n        }\n        const utxos = await this.getAddressUtxos(this.cashaddr);\n        const nftUtxos = utxos.filter((val) => val.token?.tokenId === tokenId &&\n            val.token?.capability === _interface_js__WEBPACK_IMPORTED_MODULE_9__.NFTCapability.minting);\n        if (!nftUtxos.length) {\n            throw new Error(\"You do not have any token UTXOs with minting capability for specified tokenId\");\n        }\n        const newAmount = deductTokenAmount && nftUtxos[0].token.amount > 0\n            ? nftUtxos[0].token.amount - mintRequests.length\n            : nftUtxos[0].token.amount;\n        const safeNewAmount = Math.max(0, newAmount);\n        const mintingInput = new _model_js__WEBPACK_IMPORTED_MODULE_21__.TokenSendRequest({\n            cashaddr: this.tokenaddr,\n            tokenId: tokenId,\n            capability: nftUtxos[0].token.capability,\n            commitment: nftUtxos[0].token.commitment,\n            amount: safeNewAmount,\n            value: nftUtxos[0].satoshis,\n        });\n        return this.send([\n            mintingInput,\n            ...mintRequests.map((val) => new _model_js__WEBPACK_IMPORTED_MODULE_21__.TokenSendRequest({\n                cashaddr: val.cashaddr || this.tokenaddr,\n                amount: 0,\n                tokenId: tokenId,\n                value: val.value,\n                capability: val.capability,\n                commitment: val.commitment,\n            })),\n        ], {\n            ...options,\n            ensureUtxos: [nftUtxos[0]],\n            checkTokenQuantities: false,\n            queryBalance: false,\n            tokenOperation: \"mint\",\n        });\n    }\n    /**\n     * Perform an explicit token burning by spending a token utxo to an OP_RETURN\n     *\n     * Behaves differently for fungible and non-fungible tokens:\n     *  * NFTs are always \"destroyed\"\n     *  * FTs' amount is reduced by the amount specified, if 0 FT amount is left and no NFT present, the token is \"destroyed\"\n     *\n     * Refer to spec https://github.com/bitjson/cashtokens\n     * @param  {string} burnRequest.tokenId tokenId of a token to burn\n     * @param  {NFTCapability} burnRequest.capability capability of the NFT token to select, optional\n     * @param  {string?} burnRequest.commitment commitment of the NFT token to select, optional\n     * @param  {number?} burnRequest.amount amount of fungible tokens to burn, optional\n     * @param  {string?} burnRequest.cashaddr address to return token and satoshi change to\n     * @param  {string?} message optional message to include in OP_RETURN\n     * @param  {SendRequestOptionsI} options Options of the send requests\n     */\n    async tokenBurn(burnRequest, message, options) {\n        if (burnRequest.tokenId?.length !== 64) {\n            throw Error(`Invalid tokenId supplied: ${burnRequest.tokenId}`);\n        }\n        const utxos = await this.getAddressUtxos(this.cashaddr);\n        const tokenUtxos = utxos.filter((val) => val.token?.tokenId === burnRequest.tokenId &&\n            val.token?.capability === burnRequest.capability &&\n            val.token?.commitment === burnRequest.commitment);\n        if (!tokenUtxos.length) {\n            throw new Error(\"You do not have suitable token UTXOs to perform burn\");\n        }\n        const totalFungibleAmount = tokenUtxos.reduce((prev, cur) => prev + (cur.token?.amount || 0), 0);\n        const fungibleBurnAmount = burnRequest.amount && burnRequest.amount > 0 ? burnRequest.amount : 0;\n        const hasNFT = burnRequest.capability || burnRequest.commitment;\n        let utxoIds = [];\n        let changeSendRequests;\n        if (hasNFT) {\n            // does not have FT tokens, let us destroy the token completely\n            if (totalFungibleAmount === 0) {\n                changeSendRequests = [];\n                utxoIds.push(tokenUtxos[0]);\n            }\n            else {\n                // add utxos to spend from\n                let available = 0;\n                for (const token of tokenUtxos.filter((val) => val.token?.amount)) {\n                    utxoIds.push(token);\n                    available += token.token?.amount;\n                    if (available >= fungibleBurnAmount) {\n                        break;\n                    }\n                }\n                // if there are FT, reduce their amount\n                const newAmount = totalFungibleAmount - fungibleBurnAmount;\n                const safeNewAmount = Math.max(0, newAmount);\n                changeSendRequests = [\n                    new _model_js__WEBPACK_IMPORTED_MODULE_21__.TokenSendRequest({\n                        cashaddr: burnRequest.cashaddr || this.tokenaddr,\n                        tokenId: burnRequest.tokenId,\n                        capability: burnRequest.capability,\n                        commitment: burnRequest.commitment,\n                        amount: safeNewAmount,\n                        value: tokenUtxos[0].satoshis,\n                    }),\n                ];\n            }\n        }\n        else {\n            // if we are burning last fughible tokens, let us destroy the token completely\n            if (totalFungibleAmount === fungibleBurnAmount) {\n                changeSendRequests = [];\n                utxoIds.push(tokenUtxos[0]);\n            }\n            else {\n                // add utxos to spend from\n                let available = 0;\n                for (const token of tokenUtxos.filter((val) => val.token?.amount)) {\n                    utxoIds.push(token);\n                    available += token.token?.amount;\n                    if (available >= fungibleBurnAmount) {\n                        break;\n                    }\n                }\n                // reduce the FT amount\n                const newAmount = totalFungibleAmount - fungibleBurnAmount;\n                const safeNewAmount = Math.max(0, newAmount);\n                changeSendRequests = [\n                    new _model_js__WEBPACK_IMPORTED_MODULE_21__.TokenSendRequest({\n                        cashaddr: burnRequest.cashaddr || this.tokenaddr,\n                        tokenId: burnRequest.tokenId,\n                        amount: safeNewAmount,\n                        value: tokenUtxos[0].satoshis,\n                    }),\n                ];\n            }\n        }\n        const opReturn = _model_js__WEBPACK_IMPORTED_MODULE_21__.OpReturnData.fromString(message || \"\");\n        return this.send([opReturn, ...changeSendRequests], {\n            ...options,\n            checkTokenQuantities: false,\n            queryBalance: false,\n            ensureUtxos: utxoIds.length > 0 ? utxoIds : undefined,\n            tokenOperation: \"burn\",\n        });\n    }\n    /**\n     * getTokenUtxos Get unspent token outputs for the wallet\n     * will return utxos only for the specified token if `tokenId` provided\n     * @param  {string?} tokenId tokenId (category) to filter utxos by, if not set will return utxos from all tokens\n     * @returns  {UtxoI[]} token utxos\n     */\n    async getTokenUtxos(tokenId) {\n        const utxos = await this.getAddressUtxos(this.address);\n        return utxos.filter((val) => tokenId ? val.token?.tokenId === tokenId : val.token);\n    }\n    /**\n     * getTokenBalance Gets fungible token balance\n     * for NFT token balance see @ref getNftTokenBalance\n     * @param  {string} tokenId tokenId to get balance for\n     * @returns  {number} fungible token balance\n     */\n    async getTokenBalance(tokenId) {\n        const utxos = (await this.getTokenUtxos(tokenId)).filter((val) => val.token?.amount);\n        return (0,_util_sumUtxoValue_js__WEBPACK_IMPORTED_MODULE_27__.sumTokenAmounts)(utxos, tokenId);\n    }\n    /**\n     * getNftTokenBalance Gets non-fungible token (NFT) balance for a particula tokenId\n     * disregards fungible token balances\n     * for fungible token balance see @ref getTokenBalance\n     * @param  {string} tokenId tokenId to get balance for\n     * @returns  {number} non-fungible token balance\n     */\n    async getNftTokenBalance(tokenId) {\n        const utxos = (await this.getTokenUtxos(tokenId)).filter((val) => val.token?.commitment !== undefined);\n        return utxos.length;\n    }\n    /**\n     * getAllTokenBalances Gets all fungible token balances in this wallet\n     * @returns  {Object} a map [tokenId => balance] for all tokens in this wallet\n     */\n    async getAllTokenBalances() {\n        const result = {};\n        const utxos = (await this.getTokenUtxos()).filter((val) => val.token?.amount);\n        for (const utxo of utxos) {\n            if (!result[utxo.token.tokenId]) {\n                result[utxo.token.tokenId] = 0;\n            }\n            result[utxo.token.tokenId] += utxo.token.amount;\n        }\n        return result;\n    }\n    /**\n     * getAllNftTokenBalances Gets all non-fungible token (NFT) balances in this wallet\n     * @returns  {Object} a map [tokenId => balance] for all NFTs in this wallet\n     */\n    async getAllNftTokenBalances() {\n        const result = {};\n        const utxos = (await this.getTokenUtxos()).filter((val) => val.token?.commitment !== undefined);\n        for (const utxo of utxos) {\n            if (!result[utxo.token.tokenId]) {\n                result[utxo.token.tokenId] = 0;\n            }\n            result[utxo.token.tokenId] += 1;\n        }\n        return result;\n    }\n}\nWallet.networkPrefix = _bitauth_libauth__WEBPACK_IMPORTED_MODULE_35__.CashAddressNetworkPrefix.mainnet;\nWallet.signedMessage = new _message_index_js__WEBPACK_IMPORTED_MODULE_36__.SignedMessage();\n/**\n * Class to manage a testnet wallet.\n */\nclass TestNetWallet extends Wallet {\n    constructor(name = \"\") {\n        super(name, _enum_js__WEBPACK_IMPORTED_MODULE_4__.NetworkType.Testnet);\n    }\n    // will receive 10000 testnet satoshi, rate limits apply\n    async getTestnetSatoshis() {\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_2___default().post(`${TestNetWallet.faucetServer}/faucet/get_testnet_bch`, { cashaddr: this.cashaddr });\n            const data = response.data;\n            return data.txId;\n        }\n        catch (e) {\n            // console.log(e);\n            // console.log(e.response ? e.response.data : \"\");\n            throw e;\n        }\n    }\n    // be nice and return them back\n    async returnTestnetSatoshis() {\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_2___default().post(`${TestNetWallet.faucetServer}/faucet/get_addresses`);\n            const data = response.data;\n            return await this.slpAware().sendMax(data.bchtest);\n        }\n        catch (e) {\n            console.log(e);\n            console.log(e.response ? e.response.data : \"\");\n            throw e;\n        }\n    }\n    // will receive 10 testnet tokens, rate limits apply\n    async getTestnetSlp(tokenId) {\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_2___default().post(`${TestNetWallet.faucetServer}/faucet/get_testnet_slp`, { slpaddr: this.slp.slpaddr, tokenId: tokenId });\n            const data = response.data;\n            return data.txId;\n        }\n        catch (e) {\n            //console.log(e);\n            //console.log(e.response ? e.response.data : \"\");\n            throw e;\n        }\n    }\n    // be nice and return them back\n    async returnTestnetSlp(tokenId) {\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_2___default().post(`${TestNetWallet.faucetServer}/faucet/get_addresses`);\n            const data = response.data;\n            return await this.slp.sendMax(data.slptest, tokenId);\n        }\n        catch (e) {\n            console.log(e);\n            console.log(e.response ? e.response.data : \"\");\n            throw e;\n        }\n    }\n    // interface to static slp functions. see Slp.ts\n    static get slp() {\n        return _Slp_js__WEBPACK_IMPORTED_MODULE_7__.TestNetSlp;\n    }\n    // interface to static util functions. see Util.ts\n    static get util() {\n        return _Util_js__WEBPACK_IMPORTED_MODULE_8__.TestNetUtil;\n    }\n}\nTestNetWallet.networkPrefix = _bitauth_libauth__WEBPACK_IMPORTED_MODULE_35__.CashAddressNetworkPrefix.testnet;\nTestNetWallet.faucetServer = \"https://rest-unstable.mainnet.cash\";\n/**\n * Class to manage a regtest wallet.\n */\nclass RegTestWallet extends Wallet {\n    constructor(name = \"\") {\n        super(name, _enum_js__WEBPACK_IMPORTED_MODULE_4__.NetworkType.Regtest);\n    }\n    // interface to static slp functions. see Slp.ts\n    static get slp() {\n        return _Slp_js__WEBPACK_IMPORTED_MODULE_7__.RegTestSlp;\n    }\n    // interface to static util functions. see Util.ts\n    static get util() {\n        return _Util_js__WEBPACK_IMPORTED_MODULE_8__.RegTestUtil;\n    }\n}\nRegTestWallet.networkPrefix = _bitauth_libauth__WEBPACK_IMPORTED_MODULE_35__.CashAddressNetworkPrefix.regtest;\n/**\n * Class to manage a bitcoin cash wif wallet.\n */\nclass WifWallet extends Wallet {\n    constructor(name = \"\") {\n        super(name, _enum_js__WEBPACK_IMPORTED_MODULE_4__.NetworkType.Mainnet, _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Wif);\n    }\n    // interface to static slp functions. see Slp.ts\n    static get slp() {\n        return _Slp_js__WEBPACK_IMPORTED_MODULE_7__.WifSlp;\n    }\n    // interface to static util functions. see Util.ts\n    static get util() {\n        return _Util_js__WEBPACK_IMPORTED_MODULE_8__.WifUtil;\n    }\n}\nWifWallet.networkPrefix = _bitauth_libauth__WEBPACK_IMPORTED_MODULE_35__.CashAddressNetworkPrefix.mainnet;\nWifWallet.walletType = _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Wif;\n/**\n * Class to manage a testnet wif wallet.\n */\nclass TestNetWifWallet extends Wallet {\n    constructor(name = \"\") {\n        super(name, _enum_js__WEBPACK_IMPORTED_MODULE_4__.NetworkType.Testnet, _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Wif);\n    }\n    // interface to static slp functions. see Slp.ts\n    static get slp() {\n        return _Slp_js__WEBPACK_IMPORTED_MODULE_7__.TestNetWifSlp;\n    }\n    // interface to static util functions. see Util.ts\n    static get util() {\n        return _Util_js__WEBPACK_IMPORTED_MODULE_8__.TestNetWifUtil;\n    }\n}\nTestNetWifWallet.networkPrefix = _bitauth_libauth__WEBPACK_IMPORTED_MODULE_35__.CashAddressNetworkPrefix.testnet;\nTestNetWifWallet.walletType = _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Wif;\n/**\n * Class to manage a regtest wif wallet.\n */\nclass RegTestWifWallet extends Wallet {\n    constructor(name = \"\") {\n        super(name, _enum_js__WEBPACK_IMPORTED_MODULE_4__.NetworkType.Regtest, _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Wif);\n    }\n    // interface to static slp functions. see Slp.ts\n    static get slp() {\n        return _Slp_js__WEBPACK_IMPORTED_MODULE_7__.RegTestWifSlp;\n    }\n    // interface to static util functions. see Util.ts\n    static get util() {\n        return _Util_js__WEBPACK_IMPORTED_MODULE_8__.RegTestWifUtil;\n    }\n}\nRegTestWifWallet.networkPrefix = _bitauth_libauth__WEBPACK_IMPORTED_MODULE_35__.CashAddressNetworkPrefix.regtest;\nRegTestWifWallet.walletType = _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Wif;\n/**\n * Class to manage a bitcoin cash watch wallet.\n */\nclass WatchWallet extends Wallet {\n    constructor(name = \"\") {\n        super(name, _enum_js__WEBPACK_IMPORTED_MODULE_4__.NetworkType.Mainnet, _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Watch);\n    }\n    // interface to static slp functions. see Slp.ts\n    static get slp() {\n        return _Slp_js__WEBPACK_IMPORTED_MODULE_7__.WatchSlp;\n    }\n    // interface to static util functions. see Util.ts\n    static get util() {\n        return _Util_js__WEBPACK_IMPORTED_MODULE_8__.WatchUtil;\n    }\n}\nWatchWallet.networkPrefix = _bitauth_libauth__WEBPACK_IMPORTED_MODULE_35__.CashAddressNetworkPrefix.mainnet;\nWatchWallet.walletType = _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Watch;\n/**\n * Class to manage a testnet watch wallet.\n */\nclass TestNetWatchWallet extends Wallet {\n    constructor(name = \"\") {\n        super(name, _enum_js__WEBPACK_IMPORTED_MODULE_4__.NetworkType.Testnet, _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Watch);\n    }\n    // interface to static slp functions. see Slp.ts\n    static get slp() {\n        return _Slp_js__WEBPACK_IMPORTED_MODULE_7__.TestNetWatchSlp;\n    }\n    // interface to static util functions. see Util.ts\n    static get util() {\n        return _Util_js__WEBPACK_IMPORTED_MODULE_8__.TestNetWatchUtil;\n    }\n}\nTestNetWatchWallet.networkPrefix = _bitauth_libauth__WEBPACK_IMPORTED_MODULE_35__.CashAddressNetworkPrefix.testnet;\nTestNetWatchWallet.walletType = _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Watch;\n/**\n * Class to manage a regtest watch wallet.\n */\nclass RegTestWatchWallet extends Wallet {\n    constructor(name = \"\") {\n        super(name, _enum_js__WEBPACK_IMPORTED_MODULE_4__.NetworkType.Regtest, _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Watch);\n    }\n    // interface to static slp functions. see Slp.ts\n    static get slp() {\n        return _Slp_js__WEBPACK_IMPORTED_MODULE_7__.RegTestWatchSlp;\n    }\n    // interface to static util functions. see Util.ts\n    static get util() {\n        return _Util_js__WEBPACK_IMPORTED_MODULE_8__.RegTestWatchUtil;\n    }\n}\nRegTestWatchWallet.networkPrefix = _bitauth_libauth__WEBPACK_IMPORTED_MODULE_35__.CashAddressNetworkPrefix.regtest;\nRegTestWatchWallet.walletType = _enum_js__WEBPACK_IMPORTED_MODULE_5__.WalletTypeEnum.Watch;\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/wallet/Wif.ts?");

/***/ }),

/***/ "./src/wallet/createWallet.ts":
/*!************************************!*\
  !*** ./src/wallet/createWallet.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSlpWallet\": () => (/* binding */ createSlpWallet),\n/* harmony export */   \"createSlpWalletResponse\": () => (/* binding */ createSlpWalletResponse),\n/* harmony export */   \"createWallet\": () => (/* binding */ createWallet),\n/* harmony export */   \"createWalletResponse\": () => (/* binding */ createWalletResponse),\n/* harmony export */   \"namedWallet\": () => (/* binding */ namedWallet),\n/* harmony export */   \"namedWalletExists\": () => (/* binding */ namedWalletExists),\n/* harmony export */   \"replaceNamedWallet\": () => (/* binding */ replaceNamedWallet),\n/* harmony export */   \"walletClassMap\": () => (/* binding */ walletClassMap),\n/* harmony export */   \"walletFromId\": () => (/* binding */ walletFromId)\n/* harmony export */ });\n/* harmony import */ var _Wif_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Wif.js */ \"./src/wallet/Wif.ts\");\n/* harmony import */ var _Base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Base.js */ \"./src/wallet/Base.ts\");\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enum.js */ \"./src/enum.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_Wif_js__WEBPACK_IMPORTED_MODULE_0__, _enum_js__WEBPACK_IMPORTED_MODULE_1__, _Base_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_Wif_js__WEBPACK_IMPORTED_MODULE_0__, _enum_js__WEBPACK_IMPORTED_MODULE_1__, _Base_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n// Convenience map to access classes by types and network\nconst walletClassMap = {\n    wif: {\n        mainnet: () => {\n            return _Wif_js__WEBPACK_IMPORTED_MODULE_0__.WifWallet;\n        },\n        testnet: () => {\n            return _Wif_js__WEBPACK_IMPORTED_MODULE_0__.TestNetWifWallet;\n        },\n        regtest: () => {\n            return _Wif_js__WEBPACK_IMPORTED_MODULE_0__.RegTestWifWallet;\n        },\n    },\n    seed: {\n        mainnet: () => {\n            return _Wif_js__WEBPACK_IMPORTED_MODULE_0__.Wallet;\n        },\n        testnet: () => {\n            return _Wif_js__WEBPACK_IMPORTED_MODULE_0__.TestNetWallet;\n        },\n        regtest: () => {\n            return _Wif_js__WEBPACK_IMPORTED_MODULE_0__.RegTestWallet;\n        },\n    },\n    watch: {\n        mainnet: () => {\n            return _Wif_js__WEBPACK_IMPORTED_MODULE_0__.WatchWallet;\n        },\n        testnet: () => {\n            return _Wif_js__WEBPACK_IMPORTED_MODULE_0__.TestNetWatchWallet;\n        },\n        regtest: () => {\n            return _Wif_js__WEBPACK_IMPORTED_MODULE_0__.RegTestWatchWallet;\n        },\n    },\n};\n/**\n * Check wallet type and network of a requested wallet for mismatches against retrieved from DB\n */\nfunction checkWalletTypeAndNetwork(wallet, walletType, networkType) {\n    if (wallet.network != networkType) {\n        throw Error(`A wallet already exists with name ${wallet.name}, but with network ${wallet.network} not ${networkType}, per request`);\n    }\n    if (wallet.walletType != walletType) {\n        throw Error(`A wallet already exists with name ${wallet.name}, but with type ${wallet.walletType} not ${walletType}, per request`);\n    }\n}\n/**\n * Check if wallet exists\n * @param body A wallet request object\n * @returns A promise to the check result\n */\nasync function namedWalletExists(body) {\n    const walletType = body.type ? body.type : \"seed\";\n    const networkType = body.network ? body.network : \"mainnet\";\n    const name = body.name;\n    return await walletClassMap[walletType][networkType]().namedExists(name);\n}\n/**\n * Get or create a named wallet\n * @param name user friendly wallet alias\n * @param walletType wallet type\n * @param networkType wallet network type\n * @returns A promise to a new wallet object\n */\nasync function namedWallet(name, walletType, networkType) {\n    // Named wallets are saved in the database\n    if (!name) {\n        throw Error(`Wallet name is required for this operation`);\n    }\n    let wallet;\n    const dbName = _enum_js__WEBPACK_IMPORTED_MODULE_1__.prefixFromNetworkMap[networkType];\n    if (walletClassMap[walletType] !== undefined) {\n        wallet = await walletClassMap[walletType][networkType]().named(name);\n        checkWalletTypeAndNetwork(wallet, walletType, networkType);\n    }\n    else {\n        let walletId = await (0,_Base_js__WEBPACK_IMPORTED_MODULE_2__.getNamedWalletId)(name, dbName);\n        if (walletId !== undefined) {\n            wallet = await walletFromId(walletId);\n            wallet.name = name;\n        }\n        else {\n            throw Error(\"A named wallet, without wallet type, was passed but there was no corresponding record for the named wallet in the database.\");\n        }\n    }\n    return wallet;\n}\n/**\n * Replace or create a named wallet with a walletId\n * @param body A wallet request object\n * @returns A promise to a new wallet object\n */\nasync function replaceNamedWallet(body) {\n    let wallet;\n    const walletType = body.type ? body.type : \"seed\";\n    const networkType = body.network ? body.network : \"mainnet\";\n    const name = body.name;\n    const walletId = body.walletId;\n    // Named wallets are saved in the database\n    if (!name || !walletId) {\n        throw Error(`Wallet name and walletId are required for this operation`);\n    }\n    wallet = await walletClassMap[walletType][networkType]().replaceNamed(name, walletId);\n    return wallet;\n}\n/**\n * Create a new wallet\n * @param body A wallet request object\n * @returns A promise to a new wallet object\n */\nasync function createWallet(body) {\n    let wallet;\n    let walletType = body.type ? body.type : \"seed\";\n    let networkType = body.network ? body.network : \"mainnet\";\n    // Named wallets are saved in the database\n    if (body.name && body.name.length > 0) {\n        wallet = await namedWallet(body.name, walletType, networkType);\n        return wallet;\n    }\n    // This handles unsaved/unnamed wallets\n    else {\n        let walletClass = walletClassMap[walletType][networkType]();\n        wallet = await new walletClass();\n        wallet.walletType = walletType;\n        return wallet.generate();\n    }\n}\n/**\n * Create a new SLP aware wallet\n * @param body A wallet request object\n * @returns A promise to a new wallet object\n */\nasync function createSlpWallet(body) {\n    let wallet;\n    let walletType = body.type ? body.type : \"seed\";\n    let networkType = body.network ? body.network : \"mainnet\";\n    // Named wallets are saved in the database\n    if (body.name && body.name.length > 0) {\n        wallet = await walletClassMap[walletType][networkType]().slp.named(body.name);\n        if (wallet.network != networkType) {\n            throw Error(`A wallet already exists with name ${body.name}, but with network ${wallet.network} not ${body.network}, per request`);\n        }\n        if (wallet.walletType != walletType) {\n            throw Error(`A wallet already exists with name ${body.name}, but with type ${wallet.walletType} not ${body.type}, per request`);\n        }\n        return wallet;\n    }\n    // This handles unsaved/unnamed wallets\n    else {\n        wallet = await walletClassMap[walletType][networkType]().slp.newRandom();\n        wallet.walletType = walletType;\n        return wallet;\n    }\n}\n/**\n * Create a new wallet\n * @param walletRequest A wallet request object\n * @returns A new wallet object\n */\nasync function createWalletResponse(walletRequest) {\n    let wallet = await createWallet(walletRequest);\n    if (wallet) {\n        return asJsonResponse(wallet);\n    }\n    else {\n        throw Error(\"Error creating wallet\");\n    }\n}\n/**\n * Create a new SLP aware wallet\n * @param walletRequest A wallet request object\n * @returns A new wallet object\n */\nasync function createSlpWalletResponse(walletRequest) {\n    let wallet = await createSlpWallet(walletRequest);\n    if (wallet) {\n        return asJsonResponse(wallet);\n    }\n    else {\n        throw Error(\"Error creating wallet\");\n    }\n}\n/**\n * asJsonResponse return a wallet as json\n * @param wallet A wallet object\n * @returns A json wallet response\n */\nfunction asJsonResponse(wallet) {\n    if (wallet.mnemonic) {\n        return {\n            name: wallet.name,\n            cashaddr: wallet.cashaddr,\n            slpaddr: wallet.slp.slpaddr,\n            walletId: wallet.toString(),\n            ...wallet.getSeed(),\n            network: wallet.network,\n        };\n    }\n    else {\n        return {\n            name: wallet.name,\n            cashaddr: wallet.cashaddr,\n            slpaddr: wallet.slp.slpaddr,\n            walletId: wallet.toString(),\n            wif: wallet.privateKeyWif,\n            network: wallet.network,\n        };\n    }\n}\n/**\n * walletFromId - get a wallet from a serialized wallet\n * @param {string} walletId A serialized wallet object\n * @returns A wallet\n */\nasync function walletFromId(walletId) {\n    let [walletType, network, name] = walletId.split(\":\");\n    if (walletType === \"named\") {\n        return await namedWallet(name, walletType, network);\n    }\n    let walletRequest = {\n        name: \"\",\n        network: network,\n        type: walletType,\n    };\n    let wallet = await createWallet(walletRequest);\n    await wallet.fromId(walletId);\n    return wallet;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/wallet/createWallet.ts?");

/***/ }),

/***/ "./src/wallet/enum.ts":
/*!****************************!*\
  !*** ./src/wallet/enum.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FeePaidByEnum\": () => (/* binding */ FeePaidByEnum),\n/* harmony export */   \"WalletTypeEnum\": () => (/* binding */ WalletTypeEnum)\n/* harmony export */ });\nvar WalletTypeEnum;\n(function (WalletTypeEnum) {\n    WalletTypeEnum[\"Wif\"] = \"wif\";\n    WalletTypeEnum[\"Seed\"] = \"seed\";\n    WalletTypeEnum[\"Hd\"] = \"hd\";\n    WalletTypeEnum[\"Watch\"] = \"watch\";\n    WalletTypeEnum[\"PrivateKey\"] = \"privkey\";\n})(WalletTypeEnum || (WalletTypeEnum = {}));\nvar FeePaidByEnum;\n(function (FeePaidByEnum) {\n    FeePaidByEnum[\"change\"] = \"change\";\n    FeePaidByEnum[\"first\"] = \"firstOutput\";\n    FeePaidByEnum[\"any\"] = \"anyOutputs\";\n    FeePaidByEnum[\"last\"] = \"lastOutput\";\n    FeePaidByEnum[\"changeThenFirst\"] = \"changeThenFirst\";\n    FeePaidByEnum[\"changeThenAny\"] = \"changeThenAny\";\n    FeePaidByEnum[\"changeThenLast\"] = \"changeThenLast\";\n})(FeePaidByEnum || (FeePaidByEnum = {}));\n\n\n//# sourceURL=webpack://mainnet-js/./src/wallet/enum.ts?");

/***/ }),

/***/ "./src/wallet/model.ts":
/*!*****************************!*\
  !*** ./src/wallet/model.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"OpReturnData\": () => (/* binding */ OpReturnData),\n/* harmony export */   \"SendRequest\": () => (/* binding */ SendRequest),\n/* harmony export */   \"SendResponse\": () => (/* binding */ SendResponse),\n/* harmony export */   \"TokenBurnRequest\": () => (/* binding */ TokenBurnRequest),\n/* harmony export */   \"TokenGenesisRequest\": () => (/* binding */ TokenGenesisRequest),\n/* harmony export */   \"TokenMintRequest\": () => (/* binding */ TokenMintRequest),\n/* harmony export */   \"TokenSendRequest\": () => (/* binding */ TokenSendRequest),\n/* harmony export */   \"XPubKey\": () => (/* binding */ XPubKey),\n/* harmony export */   \"fromUtxoId\": () => (/* binding */ fromUtxoId),\n/* harmony export */   \"toUtxoId\": () => (/* binding */ toUtxoId)\n/* harmony export */ });\n/* harmony import */ var _util_balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/balanceObjectFromSatoshi.js */ \"./src/util/balanceObjectFromSatoshi.ts\");\n/* harmony import */ var _util_sanitizeUnit_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/sanitizeUnit.js */ \"./src/util/sanitizeUnit.ts\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../constant.js */ \"./src/constant.ts\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/utf8.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/number.js\");\n/* harmony import */ var _bitauth_libauth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @bitauth/libauth */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config.js */ \"./src/config.ts\");\n/* harmony import */ var _util_deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/deriveCashaddr.js */ \"./src/util/deriveCashaddr.ts\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"../../node_modules/buffer/index.js\")[\"Buffer\"];\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_util_deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_1__, _util_balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_6__]);\n([_util_deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_1__, _util_balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\nclass SendRequest {\n    constructor({ cashaddr, value, unit, }) {\n        this.cashaddr = cashaddr;\n        this.value = value;\n        this.unit = (0,_util_sanitizeUnit_js__WEBPACK_IMPORTED_MODULE_0__.sanitizeUnit)(unit);\n    }\n}\nclass TokenGenesisRequest {\n    constructor({ amount, capability, commitment, cashaddr, value, }) {\n        this.amount = amount;\n        this.capability = capability;\n        this.commitment = commitment;\n        this.cashaddr = cashaddr;\n        this.value = value;\n    }\n}\nclass TokenBurnRequest {\n    constructor({ tokenId, capability, commitment, amount, cashaddr, }) {\n        this.tokenId = tokenId;\n        this.capability = capability;\n        this.commitment = commitment;\n        this.amount = amount;\n        this.cashaddr = cashaddr;\n    }\n}\nclass TokenSendRequest {\n    constructor({ cashaddr, value, amount, tokenId, capability, commitment, }) {\n        (0,_util_deriveCashaddr_js__WEBPACK_IMPORTED_MODULE_1__.checkTokenaddr)(cashaddr, _config_js__WEBPACK_IMPORTED_MODULE_2__.Config.EnforceCashTokenReceiptAddresses);\n        this.cashaddr = cashaddr;\n        this.value = value;\n        this.amount = amount || 0;\n        this.tokenId = tokenId;\n        this.capability = capability;\n        this.commitment = commitment;\n    }\n}\nclass TokenMintRequest {\n    constructor({ capability, commitment, cashaddr, value, }) {\n        this.capability = capability;\n        this.commitment = commitment;\n        this.cashaddr = cashaddr;\n        this.value = value;\n    }\n}\nclass OpReturnData {\n    constructor(buffer) {\n        this.buffer = Buffer.from(buffer);\n    }\n    /**\n     * from - Construct OP_RETURN data from arbitrary data type\n     *\n     * @param string   UTF-8 encoded string message to be converted to OP_RETURN data\n     *\n     * @returns class instance\n     */\n    static from(data) {\n        return this.fromArray([data]);\n    }\n    /**\n     * fromString - Accept data as a simple UTF-8 string message and append an OP_RETURN and PUSH_DATA1 opcodes to it\n     *\n     * @param string   UTF-8 encoded string message to be converted to OP_RETURN data\n     *\n     * @returns class instance\n     */\n    static fromString(string) {\n        return this.fromArray([string]);\n    }\n    /**\n     * buffer - Accept OP_RETURN data as a binary buffer.\n     * If buffer lacks the OP_RETURN and OP_PUSHDATA opcodes, they will be prepended.\n     *\n     * @param buffer   Data buffer to be assigned to the OP_RETURN outpit\n     *\n     * @returns class instance\n     */\n    static fromBuffer(buffer) {\n        if (buffer[0] !== 0x6a) {\n            return this.fromArray([buffer]);\n        }\n        return new this(buffer);\n    }\n    /**\n     * buffer - Accept OP_RETURN data as a binary buffer.\n     * If buffer lacks the OP_RETURN and OP_PUSHDATA opcodes, they will be prepended.\n     *\n     * @param buffer   Data buffer to be assigned to the OP_RETURN outpit\n     *\n     * @returns class instance\n     */\n    static fromUint8Array(uint8Array) {\n        if (uint8Array[0] !== 0x6a) {\n            return this.fromArray([uint8Array]);\n        }\n        return new this(Buffer.from(uint8Array));\n    }\n    /**\n     * fromArray - Accept array of data\n     *\n     * @param array   Array of Buffer or UTF-8 encoded string messages to be converted to OP_RETURN data\n     *\n     * @returns class instance\n     */\n    static fromArray(array) {\n        let data = Buffer.from([0x6a]); // OP_RETURN\n        for (const element of array) {\n            let length;\n            let elementData;\n            let lengthData;\n            if (typeof element === \"string\") {\n                elementData = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.utf8ToBin)(element);\n                length = elementData.length;\n            }\n            else if (element instanceof Buffer) {\n                elementData = element;\n                length = elementData.length;\n            }\n            else if (element instanceof Uint8Array) {\n                elementData = Buffer.from(element);\n                length = elementData.length;\n            }\n            else {\n                throw new Error(\"Wrong data array element\");\n            }\n            if (length < 76) {\n                // OP_PUSHDATA_1\n                lengthData = [length];\n            }\n            else if (length < 223) {\n                // default max `-datacarriersize`\n                lengthData = [0x4c, length];\n            }\n            else {\n                throw new Error(\"OP_RETURN data can not exceed 220 bytes in size\");\n            }\n            data = Buffer.from([...data, ...lengthData, ...elementData]);\n        }\n        if (data.length > 220) {\n            throw new Error(\"OP_RETURN data can not exceed 220 bytes in size\");\n        }\n        return new this(data);\n    }\n    /**\n     * parseBinary - parse OP_RETURN data and return pushed chunks of binary data\n     *\n     * @param opReturn   Raw OP_RETURN data\n     *\n     * @returns array of binary data chunks pushed\n     */\n    static parseBinary(opReturn) {\n        const chunks = [];\n        let position = 1;\n        // handle direct push, OP_PUSHDATA1, OP_PUSHDATA2;\n        // OP_PUSHDATA4 is not supported in OP_RETURNs by consensus\n        while (opReturn[position]) {\n            let length = 0;\n            if (opReturn[position] === 0x4c) {\n                length = opReturn[position + 1];\n                position += 2;\n            }\n            else if (opReturn[position] === 0x4d) {\n                length = (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_4__.binToNumberUint16LE)(opReturn.slice(position + 1, position + 3));\n                position += 3;\n            }\n            else {\n                length = opReturn[position];\n                position += 1;\n            }\n            chunks.push(opReturn.slice(position, position + length));\n            position += length;\n        }\n        return chunks;\n    }\n    /**\n     * parse - parse OP_RETURN hex data and return pushed chunks of binary data, converted to utf8 strings\n     *\n     * @param opReturn   Raw OP_RETURN hex data\n     *\n     * @returns array of binary data chunks pushed, converted to utf8 strings\n     */\n    static parse(opReturnHex) {\n        return this.parseBinary((0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_5__.hexToBin)(opReturnHex)).map((val) => (0,_bitauth_libauth__WEBPACK_IMPORTED_MODULE_3__.binToUtf8)(val));\n    }\n}\nclass SendResponse {\n    constructor({ txId, balance, explorerUrl, }) {\n        this.txId = txId;\n        this.balance = new _util_balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_6__.BalanceResponse(balance);\n        this.explorerUrl = explorerUrl;\n    }\n}\nclass XPubKey {\n    constructor({ path, xPubKey }) {\n        this.path = path;\n        this.xPubKey = xPubKey;\n    }\n    async ready() {\n        await this.xPubKey;\n        return this.asObject();\n    }\n    asObject() {\n        return {\n            path: this.path,\n            xPubKey: this.xPubKey,\n        };\n    }\n}\nconst fromUtxoId = (utxoId) => {\n    const [txid, vout, satoshis, tokenId, amount, capability, commitment] = utxoId.split(_constant_js__WEBPACK_IMPORTED_MODULE_7__.DELIMITER);\n    return {\n        satoshis: satoshis ? parseInt(satoshis) : 0,\n        vout: parseInt(vout),\n        txid,\n        token: tokenId\n            ? {\n                tokenId,\n                amount: parseInt(amount),\n                capability: capability || undefined,\n                commitment: commitment || undefined,\n            }\n            : undefined,\n    };\n};\nconst toUtxoId = (utxo) => {\n    return [\n        utxo.txid,\n        utxo.vout,\n        utxo.satoshis,\n        utxo.token?.tokenId,\n        utxo.token?.amount,\n        utxo.token?.capability,\n        utxo.token?.commitment,\n    ]\n        .join(_constant_js__WEBPACK_IMPORTED_MODULE_7__.DELIMITER)\n        .replace(/:+$/, \"\");\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/wallet/model.ts?");

/***/ }),

/***/ "./src/webhook/Webhook.ts":
/*!********************************!*\
  !*** ./src/webhook/Webhook.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Webhook\": () => (/* binding */ Webhook),\n/* harmony export */   \"WebhookRecurrence\": () => (/* binding */ WebhookRecurrence),\n/* harmony export */   \"WebhookType\": () => (/* binding */ WebhookType)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"../../node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\nvar _a;\n\nvar WebhookType;\n(function (WebhookType) {\n    WebhookType[\"transactionIn\"] = \"transaction:in\";\n    WebhookType[\"transactionOut\"] = \"transaction:out\";\n    WebhookType[\"transactionInOut\"] = \"transaction:in,out\";\n    WebhookType[\"balance\"] = \"balance\";\n    WebhookType[\"slpTransactionIn\"] = \"slptransaction:in\";\n    WebhookType[\"slpTransactionOut\"] = \"slptransaction:out\";\n    WebhookType[\"slpTransactionInOut\"] = \"slptransaction:in,out\";\n    WebhookType[\"slpBalance\"] = \"slpbalance\";\n})(WebhookType || (WebhookType = {}));\nvar WebhookRecurrence;\n(function (WebhookRecurrence) {\n    WebhookRecurrence[\"once\"] = \"once\";\n    WebhookRecurrence[\"recurrent\"] = \"recurrent\";\n})(WebhookRecurrence || (WebhookRecurrence = {}));\nclass Webhook {\n    constructor(hook) {\n        Object.assign(this, hook);\n    }\n    // abstract, empty implementation\n    async start() { }\n    // abstract, empty implementation\n    async stop() { }\n    async destroy() {\n        if (this.id) {\n            await this.db.deleteWebhook(this.id);\n        }\n    }\n    async post(data) {\n        try {\n            await axios__WEBPACK_IMPORTED_MODULE_0___default().post(this.url, data);\n            // console.debug(\"Posted webhook\", this.url, data);\n            return true;\n        }\n        catch (e) {\n            if (e.message && e.message.status === 200) {\n                return true;\n            }\n            // console.debug(\"Failed to post webhook\", this.url, e);\n            return false;\n        }\n    }\n}\n//#region debug\nWebhook.debug = (_a = class {\n        static setupAxiosMocks() {\n            axios__WEBPACK_IMPORTED_MODULE_0___default().interceptors.request.use((config) => {\n                const url = config.url;\n                if (!url.startsWith(\"http://example.com\")) {\n                    return config;\n                }\n                let response;\n                if (url === \"http://example.com/fail\") {\n                    response = { status: 503 };\n                }\n                else {\n                    response = { status: 200 };\n                }\n                if (url in this.responses) {\n                    this.responses[url].push(response);\n                }\n                else {\n                    this.responses[url] = [response];\n                }\n                // cancel actual http request\n                return {\n                    ...config,\n                    cancelToken: new (axios__WEBPACK_IMPORTED_MODULE_0___default().CancelToken)((cancel) => cancel(response)),\n                };\n            });\n        }\n        static reset() {\n            this.responses = {};\n        }\n    },\n    _a.responses = {},\n    _a);\n\n\n//# sourceURL=webpack://mainnet-js/./src/webhook/Webhook.ts?");

/***/ }),

/***/ "./src/webhook/WebhookBch.ts":
/*!***********************************!*\
  !*** ./src/webhook/WebhookBch.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WebhookBch\": () => (/* binding */ WebhookBch)\n/* harmony export */ });\n/* harmony import */ var _util_balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/balanceObjectFromSatoshi.js */ \"./src/util/balanceObjectFromSatoshi.ts\");\n/* harmony import */ var _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../wallet/Wif.js */ \"./src/wallet/Wif.ts\");\n/* harmony import */ var _Webhook_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Webhook.js */ \"./src/webhook/Webhook.ts\");\n/* harmony import */ var _WebhookWorker_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WebhookWorker.js */ \"./src/webhook/WebhookWorker.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_wallet_Wif_js__WEBPACK_IMPORTED_MODULE_1__, _util_balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_wallet_Wif_js__WEBPACK_IMPORTED_MODULE_1__, _util_balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nclass WebhookBch extends _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.Webhook {\n    constructor(hook) {\n        super(hook);\n        this.seenStatuses = [];\n        Object.assign(this, hook);\n    }\n    async stop() {\n        await this.wallet.provider.unsubscribeFromAddress(this.cashaddr, this.callback);\n    }\n    async start() {\n        const webhookCallback = async (data) => {\n            let status = \"\";\n            if (typeof data === \"string\") {\n                // subscription acknowledgement notification with current status\n                status = data;\n                // we should skip fetching transactions for freshly registered hooks upon acknowledements\n                if (this.status === \"\") {\n                    return;\n                }\n            }\n            else if (data instanceof Array) {\n                status = data[1];\n                if (data[0] !== this.cashaddr) {\n                    // console.warn(\"Address missmatch, skipping\", data[0], this.cashaddr);\n                    return;\n                }\n            }\n            else {\n                return;\n            }\n            if (status != this.status && this.seenStatuses.indexOf(status) === -1) {\n                this.seenStatuses.push(status);\n                await this.handler(status);\n            }\n        };\n        this.callback = webhookCallback;\n        this.wallet = await _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_1__.Wallet.fromCashaddr(this.cashaddr);\n        await this.wallet.provider.subscribeToAddress(this.cashaddr, this.callback);\n    }\n    async handler(status) {\n        // console.debug(\"Dispatching action for a webhook\", this);\n        // get transactions\n        const history = await this.wallet.provider.getHistory(this.cashaddr);\n        // figure out which transactions to send to the hook\n        let txs = [];\n        if (status === \"\") {\n            // send the last transaction only if no tracking was done\n            txs = history.slice(-1);\n        }\n        else {\n            // reverse history for faster search\n            const revHistory = history.reverse();\n            // update height of transactions, which are now confirmed\n            this.tx_seen = this.tx_seen.map((seenTx) => {\n                if (seenTx.height <= 0) {\n                    const histTx = revHistory.find((val) => val.tx_hash === seenTx.tx_hash);\n                    if (histTx) {\n                        seenTx.height = histTx.height;\n                    }\n                }\n                return seenTx;\n            });\n            const seenHashes = this.tx_seen.map((val) => val.tx_hash);\n            txs = history.filter((val) => (val.height >= this.last_height || val.height <= 0) &&\n                !seenHashes.includes(val.tx_hash));\n        }\n        let shouldUpdateStatus = true;\n        for (const tx of txs) {\n            // watching transactions\n            let result = false;\n            if (this.type.indexOf(\"transaction:\") >= 0) {\n                // console.debug(\"Getting raw tx\", tx.tx_hash);\n                const rawTx = await this.wallet.provider.getRawTransactionObject(tx.tx_hash);\n                const parentTxs = await Promise.all(rawTx.vin.map((t) => this.wallet.provider.getRawTransactionObject(t.txid)));\n                // console.debug(\"Got raw tx\", JSON.stringify(rawTx, null, 2));\n                const haveAddressInOutputs = rawTx.vout.some((val) => val.scriptPubKey.addresses.includes(this.cashaddr));\n                const haveAddressInParentOutputs = parentTxs.some((parent) => parent.vout.some((val) => val.scriptPubKey.addresses.includes(this.cashaddr)));\n                const wantsIn = this.type.indexOf(\"in\") >= 0;\n                const wantsOut = this.type.indexOf(\"out\") >= 0;\n                const txDirection = haveAddressInParentOutputs && haveAddressInOutputs\n                    ? _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.WebhookType.transactionInOut\n                    : haveAddressInParentOutputs\n                        ? _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.WebhookType.transactionOut\n                        : _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.WebhookType.transactionIn;\n                if (wantsIn && haveAddressInOutputs) {\n                    result = await this.post({\n                        direction: txDirection,\n                        data: rawTx,\n                    });\n                }\n                else if (wantsOut && haveAddressInParentOutputs) {\n                    result = await this.post({\n                        direction: txDirection,\n                        data: rawTx,\n                    });\n                }\n                else {\n                    // not interested in this transaction\n                    continue;\n                }\n            }\n            else if (this.type === _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.WebhookType.balance) {\n                // watching address balance\n                const balanceSat = await this.wallet.provider.getBalance(this.cashaddr);\n                const balanceObject = await (0,_util_balanceObjectFromSatoshi_js__WEBPACK_IMPORTED_MODULE_2__.balanceResponseFromSatoshi)(balanceSat);\n                result = await this.post(balanceObject);\n            }\n            if (result) {\n                this.tx_seen.push(tx);\n                await this.db.setWebhookSeenTxLastHeight(this.id, this.tx_seen, this.last_height);\n            }\n            else {\n                // console.debug(\"Failed to execute webhook\", hook);\n                shouldUpdateStatus = false;\n            }\n        }\n        // successful run\n        if (shouldUpdateStatus) {\n            if (this.recurrence === _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.WebhookRecurrence.once) {\n                // we have to notify the worker about end of life\n                await (await _WebhookWorker_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].instance()).stopHook(this);\n                await this.destroy();\n                return;\n            }\n            this.status = status;\n            await this.db.setWebhookStatus(this.id, status);\n            // update last_height and truncate tx_seen\n            const maxHeight = Math.max(...this.tx_seen.map((val) => val.height));\n            if (maxHeight >= this.last_height) {\n                this.last_height = maxHeight;\n                this.tx_seen = this.tx_seen.filter((val) => val.height === maxHeight || val.height <= 0);\n                await this.db.setWebhookSeenTxLastHeight(this.id, this.tx_seen, this.last_height);\n            }\n        }\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/webhook/WebhookBch.ts?");

/***/ }),

/***/ "./src/webhook/WebhookSlp.ts":
/*!***********************************!*\
  !*** ./src/webhook/WebhookSlp.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WebhookSlp\": () => (/* binding */ WebhookSlp)\n/* harmony export */ });\n/* harmony import */ var _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/bchaddr.js */ \"../../node_modules/bchaddrjs-slp/src/bchaddr.js\");\n/* harmony import */ var _util_bchaddr_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../wallet/Wif.js */ \"./src/wallet/Wif.ts\");\n/* harmony import */ var _Webhook_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Webhook.js */ \"./src/webhook/Webhook.ts\");\n/* harmony import */ var _WebhookWorker_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WebhookWorker.js */ \"./src/webhook/WebhookWorker.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_wallet_Wif_js__WEBPACK_IMPORTED_MODULE_3__]);\n_wallet_Wif_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\nclass WebhookSlp extends _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.Webhook {\n    constructor(hook) {\n        super(hook);\n        Object.assign(this, hook);\n        this.cashaddr = (0,_util_bchaddr_js__WEBPACK_IMPORTED_MODULE_1__.toSlpAddress)(this.cashaddr);\n    }\n    async start() {\n        const webhookCallback = async (rawTx) => {\n            let result = false;\n            if (\"_id\" in rawTx.details) {\n                result = await this.slpDbHandler(rawTx);\n            }\n            else {\n                result = await this.gsppHandler(rawTx);\n            }\n            if (result && this.recurrence === _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.WebhookRecurrence.once) {\n                // we have to notify the worker about end of life\n                await (await _WebhookWorker_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].instance()).stopHook(this);\n                await this.destroy();\n            }\n        };\n        this.callback = webhookCallback;\n        this.wallet = await _wallet_Wif_js__WEBPACK_IMPORTED_MODULE_3__.Wallet.fromSlpaddr(this.cashaddr);\n        this.cancelFn = this.wallet.slp.watchTransactions(webhookCallback, this.tokenId);\n    }\n    async slpDbHandler(rawTx) {\n        let result = false;\n        const txDirection = this.type;\n        const details = rawTx.details;\n        if (this.type === _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.WebhookType.slpTransactionInOut) {\n            result = await this.post({\n                direction: txDirection,\n                data: rawTx,\n            });\n        }\n        else if (this.type === _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.WebhookType.slpTransactionIn &&\n            details.out.findIndex((val) => val.e.a === this.cashaddr) > -1) {\n            result = await this.post({\n                direction: txDirection,\n                data: rawTx,\n            });\n        }\n        else if (this.type === _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.WebhookType.slpTransactionOut &&\n            details.in.findIndex((val) => val.e.a === this.cashaddr) > -1) {\n            result = await this.post({\n                direction: txDirection,\n                data: rawTx,\n            });\n        }\n        else if (this.type === _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.WebhookType.slpBalance) {\n            const balance = this.wallet.slp.getBalance(this.tokenId);\n            result = await this.post({\n                direction: txDirection,\n                data: balance,\n            });\n        }\n        return result;\n    }\n    async gsppHandler(rawTx) {\n        let result = false;\n        const txDirection = this.type;\n        const details = rawTx.details;\n        if (this.type === _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.WebhookType.slpTransactionInOut) {\n            result = await this.post({\n                direction: txDirection,\n                data: rawTx,\n            });\n        }\n        else if (this.type === _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.WebhookType.slpTransactionIn &&\n            details.outputs.findIndex((val) => val === this.cashaddr) > -1) {\n            result = await this.post({\n                direction: txDirection,\n                data: rawTx,\n            });\n        }\n        else if (this.type === _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.WebhookType.slpTransactionOut &&\n            details.inputs.findIndex((val) => val === this.cashaddr) > -1) {\n            result = await this.post({\n                direction: txDirection,\n                data: rawTx,\n            });\n        }\n        else if (this.type === _Webhook_js__WEBPACK_IMPORTED_MODULE_0__.WebhookType.slpBalance) {\n            const balance = this.wallet.slp.getBalance(this.tokenId);\n            result = await this.post({\n                direction: txDirection,\n                data: balance,\n            });\n        }\n        return result;\n    }\n    async stop() {\n        await this.cancelFn();\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/webhook/WebhookSlp.ts?");

/***/ }),

/***/ "./src/webhook/WebhookWorker.ts":
/*!**************************************!*\
  !*** ./src/webhook/WebhookWorker.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WebhookWorker)\n/* harmony export */ });\n/* harmony import */ var _db_SqlProvider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../db/SqlProvider.js */ \"./src/db/SqlProvider.ts\");\n\nclass WebhookWorker {\n    constructor() {\n        this.activeHooks = new Map();\n        this.callbacks = new Map();\n        this.checkInterval = undefined;\n        this.db = new _db_SqlProvider_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    }\n    static async instance() {\n        if (!WebhookWorker._instance) {\n            WebhookWorker._instance = new WebhookWorker();\n            await WebhookWorker._instance.init();\n        }\n        return WebhookWorker._instance;\n    }\n    async init() {\n        await this.db.init();\n        await this.evictOldHooks();\n        await this.pickupHooks(true);\n        if (!this.checkInterval) {\n            this.checkInterval = setInterval(async () => {\n                await this.evictOldHooks();\n                await this.pickupHooks(true);\n            }, 5 * 60 * 1000);\n        }\n    }\n    async destroy() {\n        await this.stopAll();\n        if (this.checkInterval) {\n            clearInterval(this.checkInterval);\n            this.checkInterval = undefined;\n        }\n    }\n    async pickupHooks(start = false) {\n        const hooks = await this.db.getWebhooks();\n        for (const hook of hooks) {\n            if (!this.activeHooks.has(hook.id)) {\n                this.activeHooks.set(hook.id, hook);\n                if (start) {\n                    await hook.start();\n                }\n            }\n        }\n    }\n    async evictOldHooks() {\n        const now = new Date();\n        const dbHooks = await this.db.getWebhooks();\n        for (const hook of dbHooks) {\n            if (now >= hook.expires_at) {\n                // console.debug(\"Evicting expired hook with id\", hook.id, new Date(), hook.expires_at);\n                if (this.activeHooks.has(hook.id)) {\n                    await this.stopHook(hook);\n                }\n                await this.db.deleteWebhook(hook.id);\n            }\n        }\n    }\n    async registerWebhook(params, start = true) {\n        const webhook = await this.db.addWebhook(params);\n        if (start) {\n            this.activeHooks.set(webhook.id, webhook);\n            await webhook.start();\n        }\n        return webhook.id;\n    }\n    async getWebhook(id) {\n        if (this.activeHooks.has(id)) {\n            return this.activeHooks.get(id);\n        }\n        return await this.db.getWebhook(id);\n    }\n    async deleteWebhook(id) {\n        if (this.activeHooks.has(id)) {\n            await this.stopHook(this.activeHooks.get(id));\n        }\n        await this.db.deleteWebhook(id);\n    }\n    async deleteAllWebhooks() {\n        await this.stopAll();\n        await this.db.clearWebhooks();\n    }\n    async stopAll() {\n        for (const [, hook] of this.activeHooks) {\n            await this.stopHook(hook);\n        }\n    }\n    async stopHook(hook) {\n        if (this.activeHooks.has(hook.id)) {\n            await hook.stop();\n            this.activeHooks.delete(hook.id);\n        }\n    }\n}\n\n\n//# sourceURL=webpack://mainnet-js/./src/webhook/WebhookWorker.ts?");

/***/ }),

/***/ "./src/webhook/index.ts":
/*!******************************!*\
  !*** ./src/webhook/index.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Webhook\": () => (/* reexport safe */ _Webhook_js__WEBPACK_IMPORTED_MODULE_1__.Webhook),\n/* harmony export */   \"WebhookBch\": () => (/* reexport safe */ _WebhookBch_js__WEBPACK_IMPORTED_MODULE_2__.WebhookBch),\n/* harmony export */   \"WebhookRecurrence\": () => (/* reexport safe */ _Webhook_js__WEBPACK_IMPORTED_MODULE_1__.WebhookRecurrence),\n/* harmony export */   \"WebhookSlp\": () => (/* reexport safe */ _WebhookSlp_js__WEBPACK_IMPORTED_MODULE_3__.WebhookSlp),\n/* harmony export */   \"WebhookType\": () => (/* reexport safe */ _Webhook_js__WEBPACK_IMPORTED_MODULE_1__.WebhookType),\n/* harmony export */   \"WebhookWorker\": () => (/* reexport safe */ _WebhookWorker_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _WebhookWorker_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WebhookWorker.js */ \"./src/webhook/WebhookWorker.ts\");\n/* harmony import */ var _Webhook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Webhook.js */ \"./src/webhook/Webhook.ts\");\n/* harmony import */ var _WebhookBch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WebhookBch.js */ \"./src/webhook/WebhookBch.ts\");\n/* harmony import */ var _WebhookSlp_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WebhookSlp.js */ \"./src/webhook/WebhookSlp.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_WebhookBch_js__WEBPACK_IMPORTED_MODULE_2__, _WebhookSlp_js__WEBPACK_IMPORTED_MODULE_3__]);\n([_WebhookBch_js__WEBPACK_IMPORTED_MODULE_2__, _WebhookSlp_js__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/./src/webhook/index.ts?");

/***/ }),

/***/ "../../node_modules/util-deprecate/browser.js":
/*!****************************************************!*\
  !*** ../../node_modules/util-deprecate/browser.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!__webpack_require__.g.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = __webpack_require__.g.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/util-deprecate/browser.js?");

/***/ }),

/***/ "?2cc1":
/*!*********************!*\
  !*** net (ignored) ***!
  \*********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://mainnet-js/net_(ignored)?");

/***/ }),

/***/ "?8c91":
/*!*********************!*\
  !*** tls (ignored) ***!
  \*********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://mainnet-js/tls_(ignored)?");

/***/ }),

/***/ "?a231":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://mainnet-js/fs_(ignored)?");

/***/ }),

/***/ "?1dff":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://mainnet-js/util_(ignored)?");

/***/ }),

/***/ "?983a":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://mainnet-js/util_(ignored)?");

/***/ }),

/***/ "?a3a2":
/*!************************************!*\
  !*** parse-database-url (ignored) ***!
  \************************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://mainnet-js/parse-database-url_(ignored)?");

/***/ }),

/***/ "?0b82":
/*!********************!*\
  !*** pg (ignored) ***!
  \********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://mainnet-js/pg_(ignored)?");

/***/ }),

/***/ "?28a0":
/*!***************************!*\
  !*** pg-format (ignored) ***!
  \***************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://mainnet-js/pg-format_(ignored)?");

/***/ }),

/***/ "?67af":
/*!*******************************!*\
  !*** child_process (ignored) ***!
  \*******************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://mainnet-js/child_process_(ignored)?");

/***/ }),

/***/ "?28d6":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://mainnet-js/crypto_(ignored)?");

/***/ }),

/***/ "?ec4c":
/*!*****************************!*\
  !*** eventsource (ignored) ***!
  \*****************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://mainnet-js/eventsource_(ignored)?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/address/base58-address.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/address/base58-address.js ***!
  \*******************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Base58AddressFormatVersion\": () => (/* binding */ Base58AddressFormatVersion),\n/* harmony export */   \"decodeBase58Address\": () => (/* binding */ decodeBase58Address),\n/* harmony export */   \"decodeBase58AddressFormat\": () => (/* binding */ decodeBase58AddressFormat),\n/* harmony export */   \"encodeBase58AddressFormat\": () => (/* binding */ encodeBase58AddressFormat)\n/* harmony export */ });\n/* unused harmony exports encodeBase58Address, Base58AddressError */\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/combinations.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/base-convert.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n/**\n * Base58 version byte values for common Base58Address format versions.\n */\nvar Base58AddressFormatVersion;\n(function (Base58AddressFormatVersion) {\n    /**\n     * A Pay to Public Key Hash (P2PKH) address – base58 encodes to a leading `1`.\n     *\n     * Hex: `0x00`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"p2pkh\"] = 0] = \"p2pkh\";\n    /**\n     * A 20-byte Pay to Script Hash (P2SH20) address – base58 encodes to a leading\n     * `3`.\n     *\n     * Hex: `0x05`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"p2sh20\"] = 5] = \"p2sh20\";\n    /**\n     * A private key in Wallet Import Format. For private keys used with\n     * uncompressed public keys, the payload is 32 bytes and causes the version\n     * to be encoded as a `5`. For private keys used with compressed public keys,\n     * a final `0x01` byte is appended to the private key, increasing the payload\n     * to 33 bytes, and causing the version to be encoded as a `K` or `L`.\n     *\n     * Hex: `0x80`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"wif\"] = 128] = \"wif\";\n    /**\n     * A testnet Pay to Public Key Hash (P2PKH) address – base58 encodes to a\n     * leading `m` or `n`.\n     *\n     * Hex: `0x6f`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"p2pkhTestnet\"] = 111] = \"p2pkhTestnet\";\n    /**\n     * A testnet 20-byte Pay to Script Hash (P2SH20) address – base58 encodes to a\n     * leading `2`.\n     *\n     * Hex: `0xc4`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"p2sh20Testnet\"] = 196] = \"p2sh20Testnet\";\n    /**\n     * A private key in Wallet Import Format intended for testnet use. For private\n     * keys used with uncompressed public keys, the payload is 32 bytes and causes\n     * the version to be encoded as a `9`. For private keys used with compressed\n     * public keys, a final `0x01` byte is appended to the private key, increasing\n     * the payload to 33 bytes, and causing the version to be encoded as a `c`.\n     *\n     * Hex: `0xef`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"wifTestnet\"] = 239] = \"wifTestnet\";\n    /**\n     * A Pay to Public Key Hash (P2PKH) address intended for use on the Bitcoin\n     * Cash network – base58 encodes to a leading `C`. This version was\n     * temporarily used by the Copay project before the CashAddress format was\n     * standardized.\n     *\n     * Hex: `0x1c`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"p2pkhCopayBCH\"] = 28] = \"p2pkhCopayBCH\";\n    /**\n     * A 20-byte Pay to Script Hash (P2SH20) address intended for use on the\n     * Bitcoin Cash network – base58 encodes to a leading `H`. This version was\n     * temporarily used by the Copay project before the CashAddress format was\n     * standardized.\n     *\n     * Hex: `0x28`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"p2sh20CopayBCH\"] = 40] = \"p2sh20CopayBCH\";\n})(Base58AddressFormatVersion || (Base58AddressFormatVersion = {}));\n/**\n * Encode a payload using the Base58Address format, the original address format\n * used by the Satoshi implementation.\n *\n * Note, this method does not enforce error handling via the type system. The\n * returned string will not be a valid Base58Address if `hash` is not exactly 20\n * bytes. If needed, validate the length of `hash` before calling this method.\n *\n * @remarks\n * A Base58Address includes a 1-byte prefix to indicate the address version, a\n * variable-length payload, and a 4-byte checksum:\n *\n * `[version: 1 byte] [payload: variable length] [checksum: 4 bytes]`\n *\n * The checksum is the first 4 bytes of the double-SHA256 hash of the version\n * byte followed by the payload.\n *\n * @param version - the address version byte (see\n * {@link Base58AddressFormatVersion})\n * @param payload - the Uint8Array payload to encode\n * @param sha256 - an implementation of sha256 (defaults to the internal WASM\n * implementation)\n */\nconst encodeBase58AddressFormat = (version, payload, sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256) => {\n    const checksumBytes = 4;\n    const content = Uint8Array.from([version, ...payload]);\n    const checksum = (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256)(content, sha256).slice(0, checksumBytes);\n    const bin = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_2__.flattenBinArray)([content, checksum]);\n    return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.binToBase58)(bin);\n};\n/**\n * Encode a hash as a Base58Address.\n *\n * Note, this method does not enforce error handling via the type system. The\n * returned string will not be a valid Base58Address if `hash` is not exactly 20\n * bytes. If needed, validate the length of `hash` before calling this method.\n *\n * For other standards that use the Base58Address format but have other version\n * or length requirements, use {@link encodeCashAddressFormat}.\n *\n * @param type - the type of address to encode: `p2pkh`, `p2sh20`,\n * `p2pkh-testnet`, or `p2sh20-testnet`\n * @param hash - the 20-byte hash to encode\n * (`RIPEMD160(SHA256(public key or bytecode))`)\n * @param sha256 - an implementation of sha256 (defaults to the internal WASM\n * implementation)\n */\nconst encodeBase58Address = (type, payload, sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256) => encodeBase58AddressFormat({\n    p2pkh: Base58AddressFormatVersion.p2pkh,\n    p2pkhCopayBCH: Base58AddressFormatVersion.p2pkhCopayBCH,\n    p2pkhTestnet: Base58AddressFormatVersion.p2pkhTestnet,\n    p2sh20: Base58AddressFormatVersion.p2sh20,\n    p2sh20CopayBCH: Base58AddressFormatVersion.p2sh20CopayBCH,\n    p2sh20Testnet: Base58AddressFormatVersion.p2sh20Testnet,\n}[type], payload, sha256);\nvar Base58AddressError;\n(function (Base58AddressError) {\n    Base58AddressError[\"unknownCharacter\"] = \"Base58Address error: address may only contain valid base58 characters.\";\n    Base58AddressError[\"tooShort\"] = \"Base58Address error: address is too short to be valid.\";\n    Base58AddressError[\"invalidChecksum\"] = \"Base58Address error: address has an invalid checksum.\";\n    Base58AddressError[\"unknownAddressVersion\"] = \"Base58Address error: address uses an unknown address version.\";\n    Base58AddressError[\"incorrectLength\"] = \"Base58Address error: the encoded payload is not the correct length (20 bytes).\";\n})(Base58AddressError || (Base58AddressError = {}));\n/**\n * Attempt to decode a Base58Address-formatted string. This is more lenient than\n * {@link decodeCashAddress}, which also validates the address version.\n *\n * Returns the contents of the address or an error message as a string.\n *\n * @param address - the string to decode as a base58 address\n * @param sha256 - an implementation of sha256 (defaults to the internal WASM\n * implementation)\n */\nconst decodeBase58AddressFormat = (address, sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256) => {\n    const checksumBytes = 4;\n    const bin = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.base58ToBin)(address);\n    if (bin === _format_format_js__WEBPACK_IMPORTED_MODULE_3__.BaseConversionError.unknownCharacter) {\n        return Base58AddressError.unknownCharacter;\n    }\n    const minimumBase58AddressLength = 5;\n    if (bin.length < minimumBase58AddressLength) {\n        return Base58AddressError.tooShort;\n    }\n    const content = bin.slice(0, -checksumBytes);\n    const checksum = bin.slice(-checksumBytes);\n    const expectedChecksum = sha256\n        .hash(sha256.hash(content))\n        .slice(0, checksumBytes);\n    if (!checksum.every((value, i) => value === expectedChecksum[i])) {\n        return Base58AddressError.invalidChecksum;\n    }\n    return {\n        payload: content.slice(1),\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        version: content[0],\n    };\n};\n/**\n * Decode and validate a Base58Address, strictly checking the version and\n * payload length.\n *\n * For other address-like standards that closely follow the Base58Address\n * format (but have alternative version byte requirements), use\n * {@link decodeBase58AddressFormat}.\n *\n * @remarks\n * Because the Wallet Import Format (WIF) private key serialization format uses\n * the Base58Address format, some libraries allow WIF key decoding via the same\n * method as base58 address decoding. This method strictly accepts only\n * Base58Address types, but WIF keys can be decoded with\n * {@link decodePrivateKeyWif}.\n *\n * @param address - the string to decode as a base58 address\n * @param sha256 - an implementation of sha256 (defaults to the internal WASM\n * implementation)\n */\nconst decodeBase58Address = (address, sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256) => {\n    const decoded = decodeBase58AddressFormat(address, sha256);\n    if (typeof decoded === 'string')\n        return decoded;\n    if (![\n        Base58AddressFormatVersion.p2pkh,\n        Base58AddressFormatVersion.p2sh20,\n        Base58AddressFormatVersion.p2pkhTestnet,\n        Base58AddressFormatVersion.p2sh20Testnet,\n        Base58AddressFormatVersion.p2pkhCopayBCH,\n        Base58AddressFormatVersion.p2sh20CopayBCH,\n    ].includes(decoded.version)) {\n        return Base58AddressError.unknownAddressVersion;\n    }\n    const hash160Length = 20;\n    if (decoded.payload.length !== hash160Length) {\n        return Base58AddressError.incorrectLength;\n    }\n    return decoded;\n};\n//# sourceMappingURL=base58-address.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/address/base58-address.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/address/bech32.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/address/bech32.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decodeBech32\": () => (/* binding */ decodeBech32),\n/* harmony export */   \"encodeBech32\": () => (/* binding */ encodeBech32),\n/* harmony export */   \"isBech32CharacterSet\": () => (/* binding */ isBech32CharacterSet),\n/* harmony export */   \"regroupBits\": () => (/* binding */ regroupBits)\n/* harmony export */ });\n/* unused harmony exports bech32CharacterSet, bech32CharacterSetIndex, BitRegroupingError, Bech32DecodingError, bech32PaddedToBin, binToBech32Padded */\n/**\n * The list of 32 symbols used in Bech32 encoding.\n */\n// cspell: disable-next-line\nconst bech32CharacterSet = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n/**\n * An object mapping each of the 32 symbols used in Bech32 encoding to their respective index in the character set.\n */\n// prettier-ignore\nconst bech32CharacterSetIndex = { q: 0, p: 1, z: 2, r: 3, y: 4, '9': 5, x: 6, '8': 7, g: 8, f: 9, '2': 10, t: 11, v: 12, d: 13, w: 14, '0': 15, s: 16, '3': 17, j: 18, n: 19, '5': 20, '4': 21, k: 22, h: 23, c: 24, e: 25, '6': 26, m: 27, u: 28, a: 29, '7': 30, l: 31 }; // eslint-disable-line sort-keys, @typescript-eslint/naming-convention\nvar BitRegroupingError;\n(function (BitRegroupingError) {\n    BitRegroupingError[\"integerOutOfRange\"] = \"An integer provided in the source array is out of the range of the specified source word length.\";\n    BitRegroupingError[\"hasDisallowedPadding\"] = \"Encountered padding when padding was disallowed.\";\n    BitRegroupingError[\"requiresDisallowedPadding\"] = \"Encoding requires padding while padding is disallowed.\";\n})(BitRegroupingError || (BitRegroupingError = {}));\n/* eslint-disable functional/no-let, no-bitwise, functional/no-expression-statement, functional/no-conditional-statement, complexity */\n/**\n * Given an array of integers, regroup bits from `sourceWordLength` to\n * `resultWordLength`, returning a new array of integers between 0 and\n * toWordLength^2.\n *\n * Note, if `bin` is within the range of `sourceWordLength` and `padding` is\n * `true`, this method will never error.\n *\n * A.K.A. `convertbits`\n */\n// Derived from: https://github.com/sipa/bech32\nconst regroupBits = ({ bin, sourceWordLength, resultWordLength, allowPadding = true, }) => {\n    let accumulator = 0;\n    let bits = 0;\n    const result = [];\n    const maxResultInt = (1 << resultWordLength) - 1;\n    // eslint-disable-next-line functional/no-loop-statement, @typescript-eslint/prefer-for-of, no-plusplus\n    for (let p = 0; p < bin.length; ++p) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const value = bin[p];\n        if (value < 0 || value >> sourceWordLength !== 0) {\n            return BitRegroupingError.integerOutOfRange;\n        }\n        accumulator = (accumulator << sourceWordLength) | value;\n        bits += sourceWordLength;\n        // eslint-disable-next-line functional/no-loop-statement\n        while (bits >= resultWordLength) {\n            bits -= resultWordLength;\n            // eslint-disable-next-line functional/immutable-data\n            result.push((accumulator >> bits) & maxResultInt);\n        }\n    }\n    if (allowPadding) {\n        if (bits > 0) {\n            // eslint-disable-next-line functional/immutable-data\n            result.push((accumulator << (resultWordLength - bits)) & maxResultInt);\n        }\n    }\n    else if (bits >= sourceWordLength) {\n        return BitRegroupingError.hasDisallowedPadding;\n    }\n    else if (((accumulator << (resultWordLength - bits)) & maxResultInt) > 0) {\n        return BitRegroupingError.requiresDisallowedPadding;\n    }\n    return result;\n};\n/* eslint-enable functional/no-let, no-bitwise, functional/no-expression-statement, functional/no-conditional-statement, complexity */\n/**\n * Encode an array of numbers as a base32 string using the Bech32 character set.\n *\n * Note, this method always completes. For a valid result, all items in\n * `base32IntegerArray` must be between `0` and `32`. To prepare another array\n * type for encoding, see {@link regroupBits}.\n *\n * @param base32IntegerArray - the array of 5-bit integers to encode\n */\nconst encodeBech32 = (base32IntegerArray) => {\n    // eslint-disable-next-line functional/no-let\n    let result = '';\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of, functional/no-let, functional/no-loop-statement, no-plusplus\n    for (let i = 0; i < base32IntegerArray.length; i++) {\n        // eslint-disable-next-line functional/no-expression-statement, @typescript-eslint/no-non-null-assertion\n        result += bech32CharacterSet[base32IntegerArray[i]];\n    }\n    return result;\n};\n/**\n * Decode a Bech32-encoded string into an array of 5-bit integers.\n *\n * Note, this method always completes. If `validBech32` is not valid bech32,\n * an incorrect result will be returned. If `validBech32` is potentially\n * malformed, check it with {@link isBech32CharacterSet} before calling\n * this method.\n *\n * @param validBech32 - the bech32-encoded string to decode\n */\nconst decodeBech32 = (validBech32) => {\n    const result = [];\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of, functional/no-let, functional/no-loop-statement, no-plusplus\n    for (let i = 0; i < validBech32.length; i++) {\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n        result.push(bech32CharacterSetIndex[validBech32[i]]);\n    }\n    return result;\n};\nconst nonBech32Characters = new RegExp(`[^${bech32CharacterSet}]`, 'u');\nconst base32WordLength = 5;\nconst base256WordLength = 8;\n/**\n * Validate that a string uses only characters from the bech32 character set.\n *\n * @param maybeBech32 - a string to test for valid Bech32 encoding\n */\nconst isBech32CharacterSet = (maybeBech32) => !nonBech32Characters.test(maybeBech32);\nvar Bech32DecodingError;\n(function (Bech32DecodingError) {\n    Bech32DecodingError[\"notBech32CharacterSet\"] = \"Bech32 decoding error: input contains characters outside of the Bech32 character set.\";\n})(Bech32DecodingError || (Bech32DecodingError = {}));\n/**\n * Convert a padded bech32-encoded string (without checksum) to a Uint8Array,\n * removing the padding. If the string is not valid Bech32, or if the array of\n * 5-bit integers would require padding to be regrouped into 8-bit bytes, this\n * method returns an error message.\n *\n * This method is the reverse of {@link binToBech32Padded}.\n *\n * @param bech32Padded - the padded bech32-encoded string to decode\n */\nconst bech32PaddedToBin = (bech32Padded) => {\n    const result = isBech32CharacterSet(bech32Padded)\n        ? regroupBits({\n            allowPadding: false,\n            bin: decodeBech32(bech32Padded),\n            resultWordLength: base256WordLength,\n            sourceWordLength: base32WordLength,\n        })\n        : Bech32DecodingError.notBech32CharacterSet;\n    return typeof result === 'string' ? result : Uint8Array.from(result);\n};\n/**\n * Convert a Uint8Array to a padded bech32-encoded string (without a checksum),\n * adding padding bits as necessary to convert all bytes to 5-bit integers.\n *\n * This method is the reverse of {@link bech32PaddedToBin}.\n *\n * @param bytes - the Uint8Array to bech32 encode\n */\nconst binToBech32Padded = (bytes) => encodeBech32(regroupBits({\n    bin: bytes,\n    resultWordLength: base32WordLength,\n    sourceWordLength: base256WordLength,\n}));\n//# sourceMappingURL=bech32.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/address/bech32.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/address/cash-address.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/address/cash-address.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CashAddressEncodingError\": () => (/* binding */ CashAddressEncodingError),\n/* harmony export */   \"CashAddressNetworkPrefix\": () => (/* binding */ CashAddressNetworkPrefix),\n/* harmony export */   \"CashAddressType\": () => (/* binding */ CashAddressType),\n/* harmony export */   \"cashAddressTypeBitsToType\": () => (/* binding */ cashAddressTypeBitsToType),\n/* harmony export */   \"decodeCashAddress\": () => (/* binding */ decodeCashAddress),\n/* harmony export */   \"decodeCashAddressFormat\": () => (/* binding */ decodeCashAddressFormat),\n/* harmony export */   \"decodeCashAddressFormatWithoutPrefix\": () => (/* binding */ decodeCashAddressFormatWithoutPrefix),\n/* harmony export */   \"decodeCashAddressVersionByte\": () => (/* binding */ decodeCashAddressVersionByte),\n/* harmony export */   \"encodeCashAddress\": () => (/* binding */ encodeCashAddress)\n/* harmony export */ });\n/* unused harmony exports CashAddressVersionByte, CashAddressTypeBits, cashAddressTypeToTypeBits, cashAddressSizeBitsToLength, cashAddressLengthToSizeBits, encodeCashAddressVersionByte, CashAddressVersionByteDecodingError, maskCashAddressPrefix, cashAddressPolynomialModulo, cashAddressChecksumToUint5Array, encodeCashAddressFormat, isValidCashAddressPayloadLength, encodeCashAddressNonStandard, CashAddressDecodingError, decodeCashAddressNonStandard, cashAddressPolynomialToCashAddress, CashAddressCorrectionError, attemptCashAddressFormatErrorCorrection */\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/error.js\");\n/* harmony import */ var _bech32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bech32.js */ \"../../node_modules/@bitauth/libauth/build/lib/address/bech32.js\");\n\n\nvar CashAddressNetworkPrefix;\n(function (CashAddressNetworkPrefix) {\n    CashAddressNetworkPrefix[\"mainnet\"] = \"bitcoincash\";\n    CashAddressNetworkPrefix[\"testnet\"] = \"bchtest\";\n    CashAddressNetworkPrefix[\"regtest\"] = \"bchreg\";\n})(CashAddressNetworkPrefix || (CashAddressNetworkPrefix = {}));\n/**\n * The CashAddress specification standardizes the format of the version byte:\n * - Most significant bit: reserved, must be `0`\n * - next 4 bits: Address Type\n * - 3 least significant bits: Payload Size\n *\n * Two Address Type values are currently standardized:\n * - 0 (`0b0000`): P2PKH\n * - 1 (`0b0001`): P2SH\n *\n * And two are proposed by `CHIP-2022-02-CashTokens`:\n * - 2 (`0b0010`): P2PKH + Token Support\n * - 3 (`0b0011`): P2SH + Token Support\n *\n * The CashAddress specification standardizes expected payload size using\n * {@link CashAddressSizeBits}. Currently, two size bit values are in use by\n * standard CashAddress types:\n * - `0` (`0b000`): 20 bytes (in use by `p2pkh` and `p2sh20`)\n * - `3` (`0b011`): 32 bytes (in use by `p2sh32`)\n */\nvar CashAddressVersionByte;\n(function (CashAddressVersionByte) {\n    /**\n     * Pay to Public Key Hash (P2PKH): `0b00000000`\n     *\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0000` (P2PKH)\n     * - Size bits: `000` (20 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2pkh\"] = 0] = \"p2pkh\";\n    /**\n     * 20-byte Pay to Script Hash (P2SH20): `0b00001000`\n     *\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0001` (P2SH)\n     * - Size bits: `000` (20 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2sh20\"] = 8] = \"p2sh20\";\n    /**\n     * 32-byte Pay to Script Hash (P2SH20): `0b00001000`\n     *\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0001` (P2SH)\n     * - Size bits: `011` (32 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2sh32\"] = 11] = \"p2sh32\";\n    /**\n     * Pay to Public Key Hash (P2PKH) with token support: `0b00010000`\n     *\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0010` (P2PKH + Tokens)\n     * - Size bits: `000` (20 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2pkhWithTokens\"] = 16] = \"p2pkhWithTokens\";\n    /**\n     * 20-byte Pay to Script Hash (P2SH20) with token support: `0b00011000`\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0011` (P2SH + Tokens)\n     * - Size bits: `000` (20 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2sh20WithTokens\"] = 24] = \"p2sh20WithTokens\";\n    /**\n     * 32-byte Pay to Script Hash (P2SH32) with token support: `0b00011011`\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0011` (P2SH + Tokens)\n     * - Size bits: `011` (32 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2sh32WithTokens\"] = 27] = \"p2sh32WithTokens\";\n})(CashAddressVersionByte || (CashAddressVersionByte = {}));\n/**\n * The address types currently defined in the CashAddress specification. See\n * also: {@link CashAddressVersionByte}.\n */\nvar CashAddressType;\n(function (CashAddressType) {\n    /**\n     * Pay to Public Key Hash (P2PKH): `0b0000`\n     */\n    CashAddressType[\"p2pkh\"] = \"p2pkh\";\n    /**\n     * Pay to Script Hash (P2SH): `0b0001`\n     */\n    CashAddressType[\"p2sh\"] = \"p2sh\";\n    /**\n     * Pay to Public Key Hash (P2PKH) with token support: `0b0010`\n     */\n    CashAddressType[\"p2pkhWithTokens\"] = \"p2pkhWithTokens\";\n    /**\n     * Pay to Script Hash (P2SH) with token support: `0b0011`\n     */\n    CashAddressType[\"p2shWithTokens\"] = \"p2shWithTokens\";\n})(CashAddressType || (CashAddressType = {}));\n/**\n * The address type bits currently defined in the CashAddress specification.\n * These map to: {@link CashAddressType}.\n */\nvar CashAddressTypeBits;\n(function (CashAddressTypeBits) {\n    /**\n     * Pay to Public Key Hash (P2PKH)\n     */\n    CashAddressTypeBits[CashAddressTypeBits[\"p2pkh\"] = 0] = \"p2pkh\";\n    /**\n     * Pay to Script Hash (P2SH)\n     */\n    CashAddressTypeBits[CashAddressTypeBits[\"p2sh\"] = 1] = \"p2sh\";\n    /**\n     * Pay to Public Key Hash (P2PKH) with token support\n     */\n    CashAddressTypeBits[CashAddressTypeBits[\"p2pkhWithTokens\"] = 2] = \"p2pkhWithTokens\";\n    /**\n     * Pay to Script Hash (P2SH) with token support\n     */\n    CashAddressTypeBits[CashAddressTypeBits[\"p2shWithTokens\"] = 3] = \"p2shWithTokens\";\n})(CashAddressTypeBits || (CashAddressTypeBits = {}));\nconst cashAddressTypeToTypeBits = {\n    [CashAddressType.p2pkh]: CashAddressTypeBits.p2pkh,\n    [CashAddressType.p2sh]: CashAddressTypeBits.p2sh,\n    [CashAddressType.p2pkhWithTokens]: CashAddressTypeBits.p2pkhWithTokens,\n    [CashAddressType.p2shWithTokens]: CashAddressTypeBits.p2shWithTokens,\n};\nconst cashAddressTypeBitsToType = {\n    [CashAddressTypeBits.p2pkh]: CashAddressType.p2pkh,\n    [CashAddressTypeBits.p2sh]: CashAddressType.p2sh,\n    [CashAddressTypeBits.p2pkhWithTokens]: CashAddressType.p2pkhWithTokens,\n    [CashAddressTypeBits.p2shWithTokens]: CashAddressType.p2shWithTokens,\n};\n/* eslint-disable @typescript-eslint/naming-convention */\nconst cashAddressSizeBitsToLength = {\n    0: 20,\n    1: 24,\n    2: 28,\n    3: 32,\n    4: 40,\n    5: 48,\n    6: 56,\n    7: 64,\n};\nconst cashAddressLengthToSizeBits = {\n    20: 0,\n    24: 1,\n    28: 2,\n    32: 3,\n    40: 4,\n    48: 5,\n    56: 6,\n    64: 7,\n};\n/**\n * Encode a CashAddress version byte for the given address type and payload\n * length. See {@link CashAddressVersionByte} for more information.\n *\n * The `type` parameter must be a number between `0` and `15`, and `bitLength`\n * must be one of the standardized lengths. To use the contents of a variable,\n * cast it to {@link CashAddressType} or {@link CashAddressSize} respectively,\n * e.g.:\n * ```ts\n * const type = 3 as CashAddressType;\n * const size = 160 as CashAddressSize;\n * getCashAddressVersionByte(type, size);\n * ```\n * @param typeBits - the address type bit of the payload being encoded\n * @param length - the length of the payload being encoded\n */\nconst encodeCashAddressVersionByte = (typeBits, length) => \n// eslint-disable-next-line no-bitwise\n(typeBits << 3 /* Constants.cashAddressTypeBitsShift */) |\n    cashAddressLengthToSizeBits[length];\nvar CashAddressVersionByteDecodingError;\n(function (CashAddressVersionByteDecodingError) {\n    CashAddressVersionByteDecodingError[\"reservedBitSet\"] = \"Reserved bit is set.\";\n})(CashAddressVersionByteDecodingError || (CashAddressVersionByteDecodingError = {}));\n/**\n * Decode a CashAddress version byte. For a list of known versions, see\n * {@link CashAddressVersionByte}.\n *\n * @param version - the version byte to decode\n */\nconst decodeCashAddressVersionByte = (version) => \n// eslint-disable-next-line no-negated-condition, no-bitwise\n(version & 128 /* Constants.cashAddressReservedBitMask */) !== 0\n    ? CashAddressVersionByteDecodingError.reservedBitSet\n    : {\n        length: cashAddressSizeBitsToLength[\n        // eslint-disable-next-line no-bitwise\n        (version &\n            7 /* Constants.cashAddressSizeBits */)],\n        typeBits: \n        // eslint-disable-next-line no-bitwise\n        (version >>> 3 /* Constants.cashAddressTypeBitsShift */) &\n            15 /* Constants.cashAddressTypeBits */,\n    };\n/**\n * Convert a string into an array of 5-bit numbers, representing the characters\n * in a case-insensitive way.\n * @param prefix - the prefix to mask\n */\nconst maskCashAddressPrefix = (prefix) => {\n    const result = [];\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus\n    for (let i = 0; i < prefix.length; i++) {\n        // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data\n        result.push(prefix.charCodeAt(i) & 31 /* Constants.asciiCaseInsensitiveBits */);\n    }\n    return result;\n};\n// prettier-ignore\nconst bech32GeneratorMostSignificantByte = [0x98, 0x79, 0xf3, 0xae, 0x1e]; // eslint-disable-line @typescript-eslint/no-magic-numbers\n// prettier-ignore\nconst bech32GeneratorRemainingBytes = [0xf2bc8e61, 0xb76d99e2, 0x3e5fb3c4, 0x2eabe2a8, 0x4f43e470]; // eslint-disable-line @typescript-eslint/no-magic-numbers\n/**\n * Perform the CashAddress polynomial modulo operation, which is based on the\n * Bech32 polynomial modulo operation, but the returned checksum is 40 bits,\n * rather than 30.\n *\n * A.K.A. `PolyMod`\n *\n * @remarks\n * Notes from C++ implementation:\n * This function will compute what 8 5-bit values to XOR into the last 8 input\n * values, in order to make the checksum 0. These 8 values are packed together\n * in a single 40-bit integer. The higher bits correspond to earlier values.\n *\n * The input is interpreted as a list of coefficients of a polynomial over F\n * = GF(32), with an implicit 1 in front. If the input is [v0,v1,v2,v3,v4],\n * that polynomial is v(x) = 1*x^5 + v0*x^4 + v1*x^3 + v2*x^2 + v3*x + v4.\n * The implicit 1 guarantees that [v0,v1,v2,...] has a distinct checksum\n * from [0,v0,v1,v2,...].\n *\n * The output is a 40-bit integer whose 5-bit groups are the coefficients of\n * the remainder of v(x) mod g(x), where g(x) is the cashaddr generator, x^8\n * + [19]*x^7 + [3]*x^6 + [25]*x^5 + [11]*x^4 + [25]*x^3 + [3]*x^2 + [19]*x\n * + [1]. g(x) is chosen in such a way that the resulting code is a BCH\n * code, guaranteeing detection of up to 4 errors within a window of 1025\n * characters. Among the various possible BCH codes, one was selected to in\n * fact guarantee detection of up to 5 errors within a window of 160\n * characters and 6 errors within a window of 126 characters. In addition,\n * the code guarantee the detection of a burst of up to 8 errors.\n *\n * Note that the coefficients are elements of GF(32), here represented as\n * decimal numbers between []. In this finite field, addition is just XOR of\n * the corresponding numbers. For example, [27] + [13] = [27 ^ 13] = [22].\n * Multiplication is more complicated, and requires treating the bits of\n * values themselves as coefficients of a polynomial over a smaller field,\n * GF(2), and multiplying those polynomials mod a^5 + a^3 + 1. For example,\n * [5] * [26] = (a^2 + 1) * (a^4 + a^3 + a) = (a^4 + a^3 + a) * a^2 + (a^4 +\n * a^3 + a) = a^6 + a^5 + a^4 + a = a^3 + 1 (mod a^5 + a^3 + 1) = [9].\n *\n * During the course of the loop below, `c` contains the bit-packed\n * coefficients of the polynomial constructed from just the values of v that\n * were processed so far, mod g(x). In the above example, `c` initially\n * corresponds to 1 mod (x), and after processing 2 inputs of v, it\n * corresponds to x^2 + v0*x + v1 mod g(x). As 1 mod g(x) = 1, that is the\n * starting value for `c`.\n *\n * @param v - Array of 5-bit integers over which the checksum is to be computed\n */\n// Derived from the `bitcore-lib-cash` implementation (does not require BigInt): https://github.com/bitpay/bitcore\nconst cashAddressPolynomialModulo = (v) => {\n    /* eslint-disable functional/no-let, functional/no-loop-statement, functional/no-expression-statement, no-bitwise, @typescript-eslint/no-magic-numbers */\n    let mostSignificantByte = 0;\n    let lowerBytes = 1;\n    let c = 0;\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of, no-plusplus\n    for (let j = 0; j < v.length; j++) {\n        c = mostSignificantByte >>> 3;\n        mostSignificantByte &= 0x07;\n        mostSignificantByte <<= 5;\n        mostSignificantByte |= lowerBytes >>> 27;\n        lowerBytes &= 0x07ffffff;\n        lowerBytes <<= 5;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        lowerBytes ^= v[j];\n        // eslint-disable-next-line no-plusplus\n        for (let i = 0; i < bech32GeneratorMostSignificantByte.length; ++i) {\n            // eslint-disable-next-line functional/no-conditional-statement\n            if (c & (1 << i)) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                mostSignificantByte ^= bech32GeneratorMostSignificantByte[i];\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                lowerBytes ^= bech32GeneratorRemainingBytes[i];\n            }\n        }\n    }\n    lowerBytes ^= 1;\n    // eslint-disable-next-line functional/no-conditional-statement\n    if (lowerBytes < 0) {\n        lowerBytes ^= 1 << 31;\n        lowerBytes += (1 << 30) * 2;\n    }\n    return mostSignificantByte * (1 << 30) * 4 + lowerBytes;\n    /* eslint-enable functional/no-let, functional/no-loop-statement, functional/no-expression-statement, no-bitwise, @typescript-eslint/no-magic-numbers */\n};\n/**\n * Convert the checksum returned by {@link cashAddressPolynomialModulo} to an\n * array of 5-bit positive integers that can be Base32 encoded.\n * @param checksum - a 40 bit checksum returned by\n * {@link cashAddressPolynomialModulo}\n */\nconst cashAddressChecksumToUint5Array = (checksum) => {\n    const result = [];\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus\n    for (let i = 0; i < 8 /* Constants.base256WordLength */; ++i) {\n        // eslint-disable-next-line functional/no-expression-statement, no-bitwise, @typescript-eslint/no-magic-numbers, functional/immutable-data\n        result.push(checksum & 31);\n        // eslint-disable-next-line functional/no-expression-statement, @typescript-eslint/no-magic-numbers, no-param-reassign\n        checksum /= 32;\n    }\n    // eslint-disable-next-line functional/immutable-data\n    return result.reverse();\n};\n/**\n * Encode a payload as a CashAddress-like string using the CashAddress format.\n *\n * To encode a standard CashAddress, use {@link encodeCashAddress}.\n *\n * @param prefix - a valid prefix indicating the network for which to encode the\n * address – must be only lowercase letters (for standard CashAddress prefixes,\n * see {@link CashAddressNetworkPrefix})\n * @param version - a single byte indicating the version of this address (for\n * standard CashAddress versions, see {@link CashAddressVersionByte})\n * @param payload - the payload to encode\n */\nconst encodeCashAddressFormat = (prefix, version, payload) => {\n    const checksum40BitPlaceholder = [0, 0, 0, 0, 0, 0, 0, 0];\n    const payloadContents = (0,_bech32_js__WEBPACK_IMPORTED_MODULE_0__.regroupBits)({\n        bin: Uint8Array.from([version, ...payload]),\n        resultWordLength: 5 /* Constants.base32WordLength */,\n        sourceWordLength: 8 /* Constants.base256WordLength */,\n    });\n    const checksumContents = [\n        ...maskCashAddressPrefix(prefix),\n        0 /* Constants.payloadSeparator */,\n        ...payloadContents,\n        ...checksum40BitPlaceholder,\n    ];\n    const checksum = cashAddressPolynomialModulo(checksumContents);\n    const encoded = [\n        ...payloadContents,\n        ...cashAddressChecksumToUint5Array(checksum),\n    ];\n    return `${prefix}:${(0,_bech32_js__WEBPACK_IMPORTED_MODULE_0__.encodeBech32)(encoded)}`;\n};\nvar CashAddressEncodingError;\n(function (CashAddressEncodingError) {\n    CashAddressEncodingError[\"unsupportedPayloadLength\"] = \"Error encoding CashAddress: a payload of this length can not be encoded as a valid CashAddress.\";\n    CashAddressEncodingError[\"noTypeBitsValueStandardizedForP2pk\"] = \"Error encoding CashAddress: no CashAddress type bit has been standardized for P2PK locking bytecode.\";\n    CashAddressEncodingError[\"unknownLockingBytecodeType\"] = \"Error encoding CashAddress: unknown locking bytecode type.\";\n})(CashAddressEncodingError || (CashAddressEncodingError = {}));\nconst isValidCashAddressPayloadLength = (length) => cashAddressLengthToSizeBits[length] !== undefined;\n/**\n * Encode a payload as a CashAddress. This function is similar to\n * {@link encodeCashAddress} but supports non-standard `prefix`es and `type`s.\n *\n * **Note: this function cannot prevent all implementation errors via types.**\n * The function will throw if `payload` is not a valid\n * {@link CashAddressSupportedLength}. Confirm the length of untrusted inputs\n * before providing them to this function.\n *\n * For other address standards that closely follow the CashAddress\n * specification (but have alternative version byte requirements), use\n * {@link encodeCashAddressFormat}.\n *\n * @param prefix - a valid prefix indicating the network for which to encode the\n * address (usually a {@link CashAddressNetworkPrefix}) – must be only lowercase\n * letters\n * @param typeBits - the type bit to encode in the version byte – must be a\n * number between `0` and `15`\n * @param payload - the payload to encode (for P2PKH, the public key hash; for\n * P2SH, the redeem bytecode hash)\n */\nconst encodeCashAddressNonStandard = (prefix, typeBits, payload) => {\n    const { length } = payload;\n    if (!isValidCashAddressPayloadLength(length)) {\n        // eslint-disable-next-line functional/no-throw-statement\n        throw new Error((0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.formatError)(CashAddressEncodingError.unsupportedPayloadLength, `Payload length: ${length}.`));\n    }\n    return encodeCashAddressFormat(prefix, encodeCashAddressVersionByte(typeBits, length), payload);\n};\n/**\n * Encode a payload as a CashAddress.\n *\n * **Note: this function cannot prevent all implementation errors via types.**\n * The function will throw if `payload` is not a valid\n * {@link CashAddressSupportedLength}. Confirm the length of untrusted inputs\n * before providing them to this function.\n *\n * To encode a CashAddress with a custom/unknown prefix or type bit, see\n * {@link encodeCashAddressNonStandard}. For other address standards that\n * closely follow the CashAddress specification (but have alternative version\n * byte requirements), use {@link encodeCashAddressFormat}.\n *\n * @param prefix - the network for which to encode the address\n * (a {@link CashAddressNetworkPrefix})\n * @param type - the address type (a {@link CashAddressType})\n * @param payload - the payload to encode – for P2PKH, the public key hash; for\n * P2SH, the redeem bytecode hash\n */\nconst encodeCashAddress = (prefix, type, payload) => encodeCashAddressNonStandard(prefix, cashAddressTypeToTypeBits[type], payload);\nvar CashAddressDecodingError;\n(function (CashAddressDecodingError) {\n    CashAddressDecodingError[\"improperPadding\"] = \"Error decoding CashAddress: the payload is improperly padded.\";\n    CashAddressDecodingError[\"invalidCharacters\"] = \"Error decoding CashAddress: the payload contains non-bech32 characters.\";\n    CashAddressDecodingError[\"invalidChecksum\"] = \"Error decoding CashAddress: invalid checksum - please review the address for errors.\";\n    CashAddressDecodingError[\"invalidFormat\"] = \"Error decoding CashAddress: CashAddresses should be of the form \\\"prefix:payload\\\".\";\n    CashAddressDecodingError[\"mismatchedPayloadLength\"] = \"Error decoding CashAddress: mismatched payload length for specified address version.\";\n    CashAddressDecodingError[\"reservedByte\"] = \"Error decoding CashAddress: unknown CashAddress version, reserved byte set.\";\n    CashAddressDecodingError[\"unknownAddressType\"] = \"Error decoding CashAddress: unknown CashAddress type.\";\n})(CashAddressDecodingError || (CashAddressDecodingError = {}));\n/**\n * Decode and validate a string using the CashAddress format. This is more\n * lenient than {@link decodeCashAddress}, which also validates the contents of\n * the version byte.\n *\n * Note, this method requires `address` to include a network prefix. To\n * decode a string with an unknown prefix, try\n * {@link decodeCashAddressFormatWithoutPrefix}.\n *\n * @param address - the CashAddress-like string to decode\n */\n// eslint-disable-next-line complexity\nconst decodeCashAddressFormat = (address) => {\n    const parts = address.toLowerCase().split(':');\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    if (parts.length !== 2 || parts[0] === '' || parts[1] === '') {\n        return CashAddressDecodingError.invalidFormat;\n    }\n    const [prefix, payload] = parts;\n    if (!(0,_bech32_js__WEBPACK_IMPORTED_MODULE_0__.isBech32CharacterSet)(payload)) {\n        return CashAddressDecodingError.invalidCharacters;\n    }\n    const decodedPayload = (0,_bech32_js__WEBPACK_IMPORTED_MODULE_0__.decodeBech32)(payload);\n    const polynomial = [\n        ...maskCashAddressPrefix(prefix),\n        0 /* Constants.payloadSeparator */,\n        ...decodedPayload,\n    ];\n    if (cashAddressPolynomialModulo(polynomial) !== 0) {\n        return CashAddressDecodingError.invalidChecksum;\n    }\n    const checksum40BitPlaceholderLength = 8;\n    const payloadContents = (0,_bech32_js__WEBPACK_IMPORTED_MODULE_0__.regroupBits)({\n        allowPadding: false,\n        bin: decodedPayload.slice(0, -checksum40BitPlaceholderLength),\n        resultWordLength: 8 /* Constants.base256WordLength */,\n        sourceWordLength: 5 /* Constants.base32WordLength */,\n    });\n    if (typeof payloadContents === 'string') {\n        return CashAddressDecodingError.improperPadding;\n    }\n    const [version, ...contents] = payloadContents;\n    const result = Uint8Array.from(contents);\n    return { payload: result, prefix, version };\n};\n/**\n * Decode and validate a CashAddress, strictly checking the version byte\n * according to the CashAddress specification. This is important for error\n * detection in CashAddresses.\n *\n * This function is similar to {@link decodeCashAddress} but supports\n * non-standard `type`s.\n *\n * For other address-like standards that closely follow the CashAddress\n * specification (but have alternative version byte requirements), use\n * {@link decodeCashAddressFormat}.\n *\n * Note, this method requires that CashAddresses include a network prefix. To\n * decode an address with an unknown prefix, try\n * {@link decodeCashAddressFormatWithoutPrefix}.\n *\n * @param address - the CashAddress to decode\n */\nconst decodeCashAddressNonStandard = (address) => {\n    const decoded = decodeCashAddressFormat(address);\n    if (typeof decoded === 'string') {\n        return decoded;\n    }\n    const info = decodeCashAddressVersionByte(decoded.version);\n    if (info === CashAddressVersionByteDecodingError.reservedBitSet) {\n        return CashAddressDecodingError.reservedByte;\n    }\n    if (decoded.payload.length !== info.length) {\n        return CashAddressDecodingError.mismatchedPayloadLength;\n    }\n    return {\n        payload: decoded.payload,\n        prefix: decoded.prefix,\n        typeBits: info.typeBits,\n    };\n};\n/**\n * Decode and validate a CashAddress, strictly checking the version byte\n * according to the CashAddress specification. This is important for error\n * detection in CashAddresses.\n *\n * To decode CashAddresses with non-standard `type`s,\n * see {@link decodeCashAddressNonStandard}.\n *\n * For other address-like standards that closely follow the CashAddress\n * specification (but have alternative version byte requirements), use\n * {@link decodeCashAddressFormat}.\n *\n * Note, this method requires that CashAddresses include a network prefix. To\n * decode an address with an unknown prefix, try\n * {@link decodeCashAddressFormatWithoutPrefix}.\n *\n * @param address - the CashAddress to decode\n */\nconst decodeCashAddress = (address) => {\n    const decoded = decodeCashAddressNonStandard(address);\n    if (typeof decoded === 'string') {\n        return decoded;\n    }\n    const type = cashAddressTypeBitsToType[decoded.typeBits];\n    if (type === undefined) {\n        return `${CashAddressDecodingError.unknownAddressType} Type bit value: ${decoded.typeBits}.`;\n    }\n    return {\n        payload: decoded.payload,\n        prefix: decoded.prefix,\n        type,\n    };\n};\n/**\n * Attempt to decode and validate a CashAddress against a list of possible\n * prefixes. If the correct prefix is known, use {@link decodeCashAddress}.\n *\n * @param address - the CashAddress to decode\n * @param possiblePrefixes - the network prefixes to try\n */\n// decodeCashAddressWithoutPrefix\nconst decodeCashAddressFormatWithoutPrefix = (address, possiblePrefixes = [\n    CashAddressNetworkPrefix.mainnet,\n    CashAddressNetworkPrefix.testnet,\n    CashAddressNetworkPrefix.regtest,\n]) => {\n    // eslint-disable-next-line functional/no-loop-statement\n    for (const prefix of possiblePrefixes) {\n        const attempt = decodeCashAddressFormat(`${prefix}:${address}`);\n        if (attempt !== CashAddressDecodingError.invalidChecksum) {\n            return attempt;\n        }\n    }\n    return CashAddressDecodingError.invalidChecksum;\n};\n/**\n * Convert a CashAddress polynomial to CashAddress string format.\n *\n * @remarks\n * CashAddress polynomials take the form:\n *\n * `[lowest 5 bits of each prefix character] 0 [payload + checksum]`\n *\n * This method remaps the 5-bit integers in the prefix location to the matching\n * ASCII lowercase characters, replaces the separator with `:`, and then Bech32\n * encodes the remaining payload and checksum.\n *\n * @param polynomial - an array of 5-bit integers representing the terms of a\n * CashAddress polynomial\n */\nconst cashAddressPolynomialToCashAddress = (polynomial) => {\n    const separatorPosition = polynomial.indexOf(0);\n    const prefix = polynomial\n        .slice(0, separatorPosition)\n        .map((integer) => String.fromCharCode(96 /* Constants.asciiLowerCaseStart */ + integer))\n        .join('');\n    const contents = (0,_bech32_js__WEBPACK_IMPORTED_MODULE_0__.encodeBech32)(polynomial.slice(separatorPosition + 1));\n    return `${prefix}:${contents}`;\n};\nvar CashAddressCorrectionError;\n(function (CashAddressCorrectionError) {\n    CashAddressCorrectionError[\"tooManyErrors\"] = \"This address has more than 2 errors and cannot be corrected.\";\n})(CashAddressCorrectionError || (CashAddressCorrectionError = {}));\n/**\n * Attempt to correct up to 2 errors in a CashAddress. The CashAddress must be\n * properly formed (include a prefix and only contain Bech32 characters).\n *\n * ## **Improper use of this method carries the risk of lost funds.**\n *\n * It is strongly advised that this method only be used under explicit user\n * control. With enough errors, this method is likely to find a plausible\n * correction for any address (but for which no private key exists). This is\n * effectively equivalent to burning the funds.\n *\n * Only 2 substitution errors can be corrected (or a single swap) – deletions\n * and insertions (errors that shift many other characters and change the\n * length of the payload) can never be safely corrected and will produce an\n * error.\n *\n * Errors can be corrected in both the prefix and the payload, but attempting to\n * correct errors in the prefix prior to this method can improve results, e.g.\n * for `bchtest:qq2azmyyv6dtgczexyalqar70q036yund53jvfde0x`, the string\n * `bchtest:qq2azmyyv6dtgczexyalqar70q036yund53jvfdecc` can be corrected, while\n * `typo:qq2azmyyv6dtgczexyalqar70q036yund53jvfdecc` can not.\n *\n * @param address - the CashAddress on which to attempt error correction\n */\n// Derived from: https://github.com/deadalnix/cashaddressed\n// eslint-disable-next-line complexity\nconst attemptCashAddressFormatErrorCorrection = (address) => {\n    const parts = address.toLowerCase().split(':');\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    if (parts.length !== 2 || parts[0] === '' || parts[1] === '') {\n        return CashAddressDecodingError.invalidFormat;\n    }\n    const [prefix, payload] = parts;\n    if (!(0,_bech32_js__WEBPACK_IMPORTED_MODULE_0__.isBech32CharacterSet)(payload)) {\n        return CashAddressDecodingError.invalidCharacters;\n    }\n    const decodedPayload = (0,_bech32_js__WEBPACK_IMPORTED_MODULE_0__.decodeBech32)(payload);\n    const polynomial = [...maskCashAddressPrefix(prefix), 0, ...decodedPayload];\n    const originalChecksum = cashAddressPolynomialModulo(polynomial);\n    if (originalChecksum === 0) {\n        return {\n            address: cashAddressPolynomialToCashAddress(polynomial),\n            corrections: [],\n        };\n    }\n    const syndromes = {};\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus\n    for (let term = 0; term < polynomial.length; term++) {\n        // eslint-disable-next-line functional/no-loop-statement\n        for (\n        // eslint-disable-next-line functional/no-let\n        let errorVector = 1; errorVector < 32 /* Constants.finiteFieldOrder */; \n        // eslint-disable-next-line no-plusplus\n        errorVector++) {\n            // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data\n            polynomial[term] ^= errorVector;\n            const correct = cashAddressPolynomialModulo(polynomial);\n            if (correct === 0) {\n                return {\n                    address: cashAddressPolynomialToCashAddress(polynomial),\n                    corrections: [term],\n                };\n            }\n            // eslint-disable-next-line no-bitwise\n            const s0 = (BigInt(correct) ^ BigInt(originalChecksum)).toString();\n            // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n            syndromes[s0] = term * 32 /* Constants.finiteFieldOrder */ + errorVector;\n            // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data\n            polynomial[term] ^= errorVector;\n        }\n    }\n    // eslint-disable-next-line functional/no-loop-statement\n    for (const [s0, pe] of Object.entries(syndromes)) {\n        // eslint-disable-next-line no-bitwise\n        const s1Location = (BigInt(s0) ^ BigInt(originalChecksum)).toString();\n        const s1 = syndromes[s1Location];\n        if (s1 !== undefined) {\n            const correctionIndex1 = Math.trunc(pe / 32 /* Constants.finiteFieldOrder */);\n            const correctionIndex2 = Math.trunc(s1 / 32 /* Constants.finiteFieldOrder */);\n            // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data\n            polynomial[correctionIndex1] ^= pe % 32 /* Constants.finiteFieldOrder */;\n            // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data\n            polynomial[correctionIndex2] ^= s1 % 32 /* Constants.finiteFieldOrder */;\n            return {\n                address: cashAddressPolynomialToCashAddress(polynomial),\n                corrections: [correctionIndex1, correctionIndex2].sort((a, b) => a - b),\n            };\n        }\n    }\n    return CashAddressCorrectionError.tooManyErrors;\n};\n//# sourceMappingURL=cash-address.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/address/cash-address.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/address/locking-bytecode.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/address/locking-bytecode.js ***!
  \*********************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cashAddressToLockingBytecode\": () => (/* binding */ cashAddressToLockingBytecode),\n/* harmony export */   \"isPayToPublicKey\": () => (/* binding */ isPayToPublicKey),\n/* harmony export */   \"isPayToPublicKeyHash\": () => (/* binding */ isPayToPublicKeyHash),\n/* harmony export */   \"isPayToScriptHash20\": () => (/* binding */ isPayToScriptHash20),\n/* harmony export */   \"isPayToScriptHash32\": () => (/* binding */ isPayToScriptHash32),\n/* harmony export */   \"lockingBytecodeToCashAddress\": () => (/* binding */ lockingBytecodeToCashAddress)\n/* harmony export */ });\n/* unused harmony exports LockingBytecodeType, isPayToPublicKeyUncompressed, isPayToPublicKeyCompressed, lockingBytecodeToAddressContents, encodeLockingBytecodeP2pkh, encodeLockingBytecodeP2sh20, encodeLockingBytecodeP2sh32, encodeLockingBytecodeP2pk, addressContentsToLockingBytecode, LockingBytecodeGenerationError, lockingBytecodeToBase58Address, base58AddressToLockingBytecode */\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/error.js\");\n/* harmony import */ var _base58_address_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base58-address.js */ \"../../node_modules/@bitauth/libauth/build/lib/address/base58-address.js\");\n/* harmony import */ var _cash_address_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cash-address.js */ \"../../node_modules/@bitauth/libauth/build/lib/address/cash-address.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_2__, _base58_address_js__WEBPACK_IMPORTED_MODULE_3__]);\n([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_2__, _base58_address_js__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n/**\n * The most common address types used on bitcoin and bitcoin-like networks. Each\n * address type represents a commonly used locking bytecode pattern.\n *\n * @remarks\n * Addresses are strings that encode information about the network and\n * `lockingBytecode` to which a transaction output can pay.\n *\n * Several address formats exist – `Base58Address` was the format used by the\n * original satoshi client, and is still in use on several active chains (see\n * {@link encodeBase58Address}). On Bitcoin Cash, the `CashAddress` standard is\n * most common (See {@link encodeCashAddress}).\n */\nvar LockingBytecodeType;\n(function (LockingBytecodeType) {\n    /**\n     * Pay to Public Key (P2PK). This address type is uncommon, and primarily\n     * occurs in early blocks because the original satoshi implementation mined\n     * rewards to P2PK addresses.\n     *\n     * There are no standardized address formats for representing a P2PK address.\n     * Instead, most applications use the `AddressType.p2pkh` format.\n     */\n    LockingBytecodeType[\"p2pk\"] = \"P2PK\";\n    /**\n     * Pay to Public Key Hash (P2PKH). The most common address type. P2PKH\n     * addresses lock funds using a single private key.\n     */\n    LockingBytecodeType[\"p2pkh\"] = \"P2PKH\";\n    /**\n     * 20-byte Pay to Script Hash (P2SH20). An address type that locks funds to\n     * the 20-byte hash of a script provided in the spending transaction. See\n     * BIPs 13 and 16 for details.\n     */\n    LockingBytecodeType[\"p2sh20\"] = \"P2SH20\";\n    /**\n     * 32-byte Pay to Script Hash (P2SH32). An address type that locks funds to\n     * the 32-byte hash of a script provided in the spending transaction.\n     */\n    LockingBytecodeType[\"p2sh32\"] = \"P2SH32\";\n})(LockingBytecodeType || (LockingBytecodeType = {}));\nconst isPayToPublicKeyUncompressed = (lockingBytecode) => lockingBytecode.length === 67 /* PayToPublicKeyUncompressed.length */ &&\n    lockingBytecode[0] === 65 /* Opcodes.OP_PUSHBYTES_65 */ &&\n    lockingBytecode[66 /* PayToPublicKeyUncompressed.lastElement */] ===\n        172 /* Opcodes.OP_CHECKSIG */;\nconst isPayToPublicKeyCompressed = (lockingBytecode) => lockingBytecode.length === 35 /* PayToPublicKeyCompressed.length */ &&\n    lockingBytecode[0] === 33 /* Opcodes.OP_PUSHBYTES_33 */ &&\n    lockingBytecode[34 /* PayToPublicKeyCompressed.lastElement */] === 172 /* Opcodes.OP_CHECKSIG */;\nconst isPayToPublicKey = (lockingBytecode) => isPayToPublicKeyCompressed(lockingBytecode) ||\n    isPayToPublicKeyUncompressed(lockingBytecode);\n// eslint-disable-next-line complexity\nconst isPayToPublicKeyHash = (lockingBytecode) => lockingBytecode.length === 25 /* PayToPublicKeyHash.length */ &&\n    lockingBytecode[0] === 118 /* Opcodes.OP_DUP */ &&\n    lockingBytecode[1] === 169 /* Opcodes.OP_HASH160 */ &&\n    lockingBytecode[2] === 20 /* Opcodes.OP_PUSHBYTES_20 */ &&\n    lockingBytecode[23] === 136 /* Opcodes.OP_EQUALVERIFY */ &&\n    lockingBytecode[24] === 172 /* Opcodes.OP_CHECKSIG */;\nconst isPayToScriptHash20 = (lockingBytecode) => lockingBytecode.length === 23 /* PayToScriptHash20.length */ &&\n    lockingBytecode[0] === 169 /* Opcodes.OP_HASH160 */ &&\n    lockingBytecode[1] === 20 /* Opcodes.OP_PUSHBYTES_20 */ &&\n    lockingBytecode[22 /* PayToScriptHash20.lastElement */] === 135 /* Opcodes.OP_EQUAL */;\nconst isPayToScriptHash32 = (lockingBytecode) => lockingBytecode.length === 35 /* PayToScriptHash32.length */ &&\n    lockingBytecode[0] === 170 /* Opcodes.OP_HASH256 */ &&\n    lockingBytecode[1] === 32 /* Opcodes.OP_PUSHBYTES_32 */ &&\n    lockingBytecode[34 /* PayToScriptHash32.lastElement */] === 135 /* Opcodes.OP_EQUAL */;\n/**\n * Attempt to match a lockingBytecode to a standard address type for use in\n * address encoding. (See {@link LockingBytecodeType} for details.)\n *\n * For a locking bytecode matching the Pay to Public Key Hash (P2PKH) pattern,\n * the returned `type` is {@link LockingBytecodeType.p2pkh} and `payload` is the\n * `HASH160` of the public key.\n *\n * For a locking bytecode matching the 20-byte Pay to Script Hash (P2SH20)\n * pattern, the returned `type` is {@link LockingBytecodeType.p2sh20} and\n * `payload` is the `HASH160` of the redeeming bytecode, A.K.A. \"redeem\n * script hash\".\n *\n * For a locking bytecode matching the Pay to Public Key (P2PK) pattern, the\n * returned `type` is {@link LockingBytecodeType.p2pk} and `payload` is the full\n * public key.\n *\n * Any other locking bytecode will return a `type` of\n * {@link LockingBytecodeType.unknown} and a payload of the\n * unmodified `bytecode`.\n *\n * @param bytecode - the locking bytecode to match\n */\n// eslint-disable-next-line complexity\nconst lockingBytecodeToAddressContents = (bytecode) => {\n    if (isPayToPublicKeyHash(bytecode)) {\n        return {\n            payload: bytecode.slice(3 /* AddressPayload.p2pkhStart */, 23 /* AddressPayload.p2pkhEnd */),\n            type: LockingBytecodeType.p2pkh,\n        };\n    }\n    if (isPayToScriptHash20(bytecode)) {\n        return {\n            payload: bytecode.slice(2 /* AddressPayload.p2sh20Start */, 22 /* AddressPayload.p2sh20End */),\n            type: LockingBytecodeType.p2sh20,\n        };\n    }\n    if (isPayToScriptHash32(bytecode)) {\n        return {\n            payload: bytecode.slice(2 /* AddressPayload.p2sh32Start */, 34 /* AddressPayload.p2sh32End */),\n            type: LockingBytecodeType.p2sh32,\n        };\n    }\n    if (isPayToPublicKeyUncompressed(bytecode)) {\n        return {\n            payload: bytecode.slice(1 /* AddressPayload.p2pkUncompressedStart */, 66 /* AddressPayload.p2pkUncompressedEnd */),\n            type: LockingBytecodeType.p2pk,\n        };\n    }\n    if (isPayToPublicKeyCompressed(bytecode)) {\n        return {\n            payload: bytecode.slice(1 /* AddressPayload.p2pkCompressedStart */, 34 /* AddressPayload.p2pkCompressedEnd */),\n            type: LockingBytecodeType.p2pk,\n        };\n    }\n    return { payload: bytecode.slice(), type: 'unknown' };\n};\n/**\n * Given the 20-byte {@link hash160} of a compressed public key, return a P2PKH\n * locking bytecode:\n * `OP_DUP OP_HASH160 OP_PUSHBYTES_20 publicKeyHash OP_EQUALVERIFY OP_CHECKSIG`.\n *\n * This method does not validate `publicKeyHash` in any way; inputs of incorrect\n * lengths will produce incorrect results.\n *\n * @param publicKeyHash - the 20-byte hash of the compressed public key\n * @returns\n */\nconst encodeLockingBytecodeP2pkh = (publicKeyHash) => Uint8Array.from([\n    118 /* Opcodes.OP_DUP */,\n    169 /* Opcodes.OP_HASH160 */,\n    20 /* Opcodes.OP_PUSHBYTES_20 */,\n    ...publicKeyHash,\n    136 /* Opcodes.OP_EQUALVERIFY */,\n    172 /* Opcodes.OP_CHECKSIG */,\n]);\n/**\n * Given the 20-byte {@link hash160} of a P2SH20 redeem bytecode, encode a\n * P2SH20 locking bytecode:\n * `OP_HASH160 OP_PUSHBYTES_20 redeemBytecodeHash OP_EQUAL`.\n *\n * This method does not validate `p2sh20Hash` in any way; inputs of incorrect\n * lengths will produce incorrect results.\n *\n * @param p2sh20Hash - the 20-byte, p2sh20 redeem bytecode hash\n */\nconst encodeLockingBytecodeP2sh20 = (p2sh20Hash) => Uint8Array.from([\n    169 /* Opcodes.OP_HASH160 */,\n    20 /* Opcodes.OP_PUSHBYTES_20 */,\n    ...p2sh20Hash,\n    135 /* Opcodes.OP_EQUAL */,\n]);\n/**\n * Given the 32-byte {@link hash256} of a P2SH32 redeem bytecode, encode a\n * P2SH32 locking bytecode:\n * `OP_HASH256 OP_PUSHBYTES_32 redeemBytecodeHash OP_EQUAL`.\n *\n * This method does not validate `p2sh32Hash` in any way; inputs of incorrect\n * lengths will produce incorrect results.\n *\n * @param p2sh32Hash - the 32-byte, p2sh32 redeem bytecode hash\n */\nconst encodeLockingBytecodeP2sh32 = (p2sh32Hash) => Uint8Array.from([\n    170 /* Opcodes.OP_HASH256 */,\n    32 /* Opcodes.OP_PUSHBYTES_32 */,\n    ...p2sh32Hash,\n    135 /* Opcodes.OP_EQUAL */,\n]);\n/**\n * Given a 33-byte compressed or 65-byte uncompressed public key, encode a P2PK\n * locking bytecode: `OP_PUSHBYTES_33 publicKey OP_CHECKSIG` or\n * `OP_PUSHBYTES_65 publicKey OP_CHECKSIG`.\n *\n * This method does not validate `publicKey` in any way; inputs of incorrect\n * lengths will produce incorrect results.\n *\n * @param publicKey - the 33-byte or 65-byte public key\n */\nconst encodeLockingBytecodeP2pk = (publicKey) => publicKey.length === 33 /* AddressPayload.compressedPublicKeyLength */\n    ? Uint8Array.from([\n        33 /* Opcodes.OP_PUSHBYTES_33 */,\n        ...publicKey,\n        172 /* Opcodes.OP_CHECKSIG */,\n    ])\n    : Uint8Array.from([\n        65 /* Opcodes.OP_PUSHBYTES_65 */,\n        ...publicKey,\n        172 /* Opcodes.OP_CHECKSIG */,\n    ]);\n/**\n * Get the locking bytecode for a {@link KnownAddressTypeContents}. See\n * {@link lockingBytecodeToAddressContents} for details.\n *\n * @param addressContents - the `AddressContents` to encode\n */\nconst addressContentsToLockingBytecode = ({ payload, type, }) => {\n    if (type === LockingBytecodeType.p2pkh) {\n        return encodeLockingBytecodeP2pkh(payload);\n    }\n    if (type === LockingBytecodeType.p2sh20) {\n        return encodeLockingBytecodeP2sh20(payload);\n    }\n    if (type === LockingBytecodeType.p2sh32) {\n        return encodeLockingBytecodeP2sh32(payload);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (type === LockingBytecodeType.p2pk) {\n        return encodeLockingBytecodeP2pk(payload);\n    }\n    return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.unknownValue)(type, `Unrecognized addressContents type: ${type}`);\n};\n/**\n * Encode a locking bytecode as a CashAddress given a network prefix.\n *\n * If `bytecode` matches a standard pattern, it is encoded using the proper\n * address type and returned as a valid CashAddress (string).\n *\n * If `bytecode` cannot be encoded as an address (i.e. because the pattern is\n * not standard), the resulting {@link AddressContents} is returned.\n *\n * @param bytecode - the locking bytecode to encode\n * @param prefix - the network prefix to use, e.g. `bitcoincash`, `bchtest`, or\n * `bchreg`, defaults to `bitcoincash`\n * @param options - an object describing address options, defaults to\n * `{ tokenSupport: false }`\n */\n// eslint-disable-next-line complexity\nconst lockingBytecodeToCashAddress = (bytecode, prefix = 'bitcoincash', options = { tokenSupport: false }) => {\n    const contents = lockingBytecodeToAddressContents(bytecode);\n    if (contents.type === LockingBytecodeType.p2pkh) {\n        return options.tokenSupport\n            ? (0,_cash_address_js__WEBPACK_IMPORTED_MODULE_1__.encodeCashAddress)(prefix, _cash_address_js__WEBPACK_IMPORTED_MODULE_1__.CashAddressType.p2pkhWithTokens, contents.payload)\n            : (0,_cash_address_js__WEBPACK_IMPORTED_MODULE_1__.encodeCashAddress)(prefix, _cash_address_js__WEBPACK_IMPORTED_MODULE_1__.CashAddressType.p2pkh, contents.payload);\n    }\n    if (contents.type === LockingBytecodeType.p2sh20 ||\n        contents.type === LockingBytecodeType.p2sh32) {\n        return options.tokenSupport\n            ? (0,_cash_address_js__WEBPACK_IMPORTED_MODULE_1__.encodeCashAddress)(prefix, _cash_address_js__WEBPACK_IMPORTED_MODULE_1__.CashAddressType.p2shWithTokens, contents.payload)\n            : (0,_cash_address_js__WEBPACK_IMPORTED_MODULE_1__.encodeCashAddress)(prefix, _cash_address_js__WEBPACK_IMPORTED_MODULE_1__.CashAddressType.p2sh, contents.payload);\n    }\n    if (contents.type === 'P2PK') {\n        return {\n            error: _cash_address_js__WEBPACK_IMPORTED_MODULE_1__.CashAddressEncodingError.noTypeBitsValueStandardizedForP2pk,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (contents.type === 'unknown') {\n        return { error: _cash_address_js__WEBPACK_IMPORTED_MODULE_1__.CashAddressEncodingError.unknownLockingBytecodeType };\n    }\n    return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.unknownValue)(contents.type, `Unrecognized locking bytecode type: ${contents.type}`);\n};\nvar LockingBytecodeGenerationError;\n(function (LockingBytecodeGenerationError) {\n    LockingBytecodeGenerationError[\"unsupportedPayloadLength\"] = \"Error generating locking bytecode: no standard locking bytecode patterns support a payload of this length.\";\n})(LockingBytecodeGenerationError || (LockingBytecodeGenerationError = {}));\n/**\n * Convert a CashAddress to its respective locking bytecode.\n *\n * This method returns the locking bytecode and network prefix. If an error\n * occurs, an error message is returned as a string.\n *\n * @param address - the CashAddress to convert\n */\n// eslint-disable-next-line complexity\nconst cashAddressToLockingBytecode = (address) => {\n    const decoded = (0,_cash_address_js__WEBPACK_IMPORTED_MODULE_1__.decodeCashAddress)(address);\n    if (typeof decoded === 'string')\n        return decoded;\n    if (decoded.payload.length !== 20 /* AddressPayload.p2sh20Length */ &&\n        decoded.payload.length !== 32 /* AddressPayload.p2sh32Length */) {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.formatError)(LockingBytecodeGenerationError.unsupportedPayloadLength, `Payload length: ${decoded.payload.length}`);\n    }\n    if (decoded.type === _cash_address_js__WEBPACK_IMPORTED_MODULE_1__.CashAddressType.p2pkh ||\n        decoded.type === _cash_address_js__WEBPACK_IMPORTED_MODULE_1__.CashAddressType.p2pkhWithTokens) {\n        return {\n            bytecode: addressContentsToLockingBytecode({\n                payload: decoded.payload,\n                type: LockingBytecodeType.p2pkh,\n            }),\n            options: {\n                tokenSupport: decoded.type === _cash_address_js__WEBPACK_IMPORTED_MODULE_1__.CashAddressType.p2pkhWithTokens,\n            },\n            prefix: decoded.prefix,\n        };\n    }\n    if (decoded.type === _cash_address_js__WEBPACK_IMPORTED_MODULE_1__.CashAddressType.p2sh ||\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        decoded.type === _cash_address_js__WEBPACK_IMPORTED_MODULE_1__.CashAddressType.p2shWithTokens) {\n        return {\n            bytecode: addressContentsToLockingBytecode({\n                payload: decoded.payload,\n                type: decoded.payload.length === 32 /* AddressPayload.p2sh32Length */\n                    ? LockingBytecodeType.p2sh32\n                    : LockingBytecodeType.p2sh20,\n            }),\n            options: {\n                tokenSupport: decoded.type === _cash_address_js__WEBPACK_IMPORTED_MODULE_1__.CashAddressType.p2shWithTokens,\n            },\n            prefix: decoded.prefix,\n        };\n    }\n    return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.unknownValue)(decoded.type, `Unrecognized address type: ${decoded.type}`);\n};\n/**\n * Encode a locking bytecode as a Base58Address for a given network.\n *\n * If `bytecode` matches a standard pattern, it is encoded using the proper\n * address type and returned as a valid Base58Address (string).\n *\n * If `bytecode` cannot be encoded as an address (i.e. because the pattern is\n * not standard), the resulting {@link AddressContents} is returned.\n *\n * Note, Base58Addresses cannot accept tokens; to accept tokens,\n * use {@link lockingBytecodeToCashAddress} with `options.tokenSupport` set\n * to `true`.\n *\n * @param bytecode - the locking bytecode to encode\n * @param network - the network for which to encode the address (`mainnet`,\n * `testnet`, or 'copayBCH'), defaults to `mainnet`\n * @param sha256 - an implementation of sha256 (defaults to the internal WASM\n * implementation)\n */\nconst lockingBytecodeToBase58Address = (bytecode, network = 'mainnet', sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_2__.sha256) => {\n    const contents = lockingBytecodeToAddressContents(bytecode);\n    if (contents.type === LockingBytecodeType.p2pkh) {\n        return (0,_base58_address_js__WEBPACK_IMPORTED_MODULE_3__.encodeBase58AddressFormat)({\n            copayBCH: _base58_address_js__WEBPACK_IMPORTED_MODULE_3__.Base58AddressFormatVersion.p2pkhCopayBCH,\n            mainnet: _base58_address_js__WEBPACK_IMPORTED_MODULE_3__.Base58AddressFormatVersion.p2pkh,\n            testnet: _base58_address_js__WEBPACK_IMPORTED_MODULE_3__.Base58AddressFormatVersion.p2pkhTestnet,\n        }[network], contents.payload, sha256);\n    }\n    if (contents.type === LockingBytecodeType.p2sh20) {\n        return (0,_base58_address_js__WEBPACK_IMPORTED_MODULE_3__.encodeBase58AddressFormat)({\n            copayBCH: _base58_address_js__WEBPACK_IMPORTED_MODULE_3__.Base58AddressFormatVersion.p2sh20CopayBCH,\n            mainnet: _base58_address_js__WEBPACK_IMPORTED_MODULE_3__.Base58AddressFormatVersion.p2sh20,\n            testnet: _base58_address_js__WEBPACK_IMPORTED_MODULE_3__.Base58AddressFormatVersion.p2sh20Testnet,\n        }[network], contents.payload, sha256);\n    }\n    return contents;\n};\n/**\n * Convert a Base58Address to its respective locking bytecode.\n *\n * This method returns the locking bytecode and network version. If an error\n * occurs, an error message is returned as a string.\n *\n * @param address - the CashAddress to convert\n */\nconst base58AddressToLockingBytecode = (address, sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_2__.sha256) => {\n    const decoded = (0,_base58_address_js__WEBPACK_IMPORTED_MODULE_3__.decodeBase58Address)(address, sha256);\n    if (typeof decoded === 'string')\n        return decoded;\n    return {\n        bytecode: addressContentsToLockingBytecode({\n            payload: decoded.payload,\n            type: [\n                _base58_address_js__WEBPACK_IMPORTED_MODULE_3__.Base58AddressFormatVersion.p2pkh,\n                _base58_address_js__WEBPACK_IMPORTED_MODULE_3__.Base58AddressFormatVersion.p2pkhCopayBCH,\n                _base58_address_js__WEBPACK_IMPORTED_MODULE_3__.Base58AddressFormatVersion.p2pkhTestnet,\n            ].includes(decoded.version)\n                ? LockingBytecodeType.p2pkh\n                : LockingBytecodeType.p2sh20,\n        }),\n        version: decoded.version,\n    };\n};\n//# sourceMappingURL=locking-bytecode.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/address/locking-bytecode.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/bin/hashes.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/bin/hashes.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"instantiateRustWasm\": () => (/* binding */ instantiateRustWasm)\n/* harmony export */ });\n/* eslint-disable functional/no-conditional-statement, functional/no-let, functional/no-expression-statement, no-underscore-dangle, functional/no-try-statement, @typescript-eslint/no-magic-numbers, max-params, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-non-null-assertion */\n/**\n * Note, most of this method is translated and boiled-down from the wasm-pack\n * workflow. Significant changes to wasm-bindgen or wasm-pack build will likely\n * require modifications to this method.\n */\nconst instantiateRustWasm = async (webassemblyBytes, expectedImportModuleName, hashExportName, initExportName, updateExportName, finalExportName) => {\n    const wasm = (await WebAssembly.instantiate(webassemblyBytes, {\n        [expectedImportModuleName]: {\n            /**\n             * This would only be called in cases where a `__wbindgen_malloc` failed.\n             * Since `__wbindgen_malloc` isn't exposed to consumers, this error\n             * can only be encountered if the code below is broken.\n             */\n            // eslint-disable-next-line camelcase, @typescript-eslint/naming-convention\n            __wbindgen_throw: /* istanbul ignore next */ (ptr, len) => {\n                // eslint-disable-next-line functional/no-throw-statement\n                throw new Error(\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                Array.from(getUint8Memory().subarray(ptr, ptr + len))\n                    .map((num) => String.fromCharCode(num))\n                    .join(''));\n            },\n        },\n    })).instance.exports; // eslint-disable-line @typescript-eslint/no-explicit-any\n    let cachedUint8Memory; // eslint-disable-line @typescript-eslint/init-declarations\n    let cachedUint32Memory; // eslint-disable-line @typescript-eslint/init-declarations\n    let cachedGlobalArgumentPtr; // eslint-disable-line @typescript-eslint/init-declarations\n    const globalArgumentPtr = () => {\n        if (cachedGlobalArgumentPtr === undefined) {\n            cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n        }\n        return cachedGlobalArgumentPtr;\n    };\n    /**\n     * Must be hoisted for `__wbindgen_throw`.\n     */\n    // eslint-disable-next-line func-style\n    function getUint8Memory() {\n        if (cachedUint8Memory === undefined ||\n            cachedUint8Memory.buffer !== wasm.memory.buffer) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            cachedUint8Memory = new Uint8Array(wasm.memory.buffer);\n        }\n        return cachedUint8Memory;\n    }\n    const getUint32Memory = () => {\n        if (cachedUint32Memory === undefined ||\n            cachedUint32Memory.buffer !== wasm.memory.buffer) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            cachedUint32Memory = new Uint32Array(wasm.memory.buffer);\n        }\n        return cachedUint32Memory;\n    };\n    const passArray8ToWasm = (array) => {\n        const ptr = wasm.__wbindgen_malloc(array.length);\n        getUint8Memory().set(array, ptr);\n        return [ptr, array.length];\n    };\n    const getArrayU8FromWasm = (ptr, len) => getUint8Memory().subarray(ptr, ptr + len);\n    const hash = (input) => {\n        const [ptr0, len0] = passArray8ToWasm(input);\n        const retPtr = globalArgumentPtr();\n        try {\n            wasm[hashExportName](retPtr, ptr0, len0);\n            const mem = getUint32Memory();\n            const ptr = mem[retPtr / 4];\n            const len = mem[retPtr / 4 + 1];\n            const realRet = getArrayU8FromWasm(ptr, len).slice();\n            wasm.__wbindgen_free(ptr, len);\n            return realRet;\n        }\n        finally {\n            wasm.__wbindgen_free(ptr0, len0);\n        }\n    };\n    const init = () => {\n        const retPtr = globalArgumentPtr();\n        wasm[initExportName](retPtr);\n        const mem = getUint32Memory();\n        const ptr = mem[retPtr / 4];\n        const len = mem[retPtr / 4 + 1];\n        const realRet = getArrayU8FromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len);\n        return realRet;\n    };\n    const update = (rawState, input) => {\n        const [ptr0, len0] = passArray8ToWasm(rawState);\n        const [ptr1, len1] = passArray8ToWasm(input);\n        const retPtr = globalArgumentPtr();\n        try {\n            wasm[updateExportName](retPtr, ptr0, len0, ptr1, len1);\n            const mem = getUint32Memory();\n            const ptr = mem[retPtr / 4];\n            const len = mem[retPtr / 4 + 1];\n            const realRet = getArrayU8FromWasm(ptr, len).slice();\n            wasm.__wbindgen_free(ptr, len);\n            return realRet;\n        }\n        finally {\n            rawState.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            wasm.__wbindgen_free(ptr0, len0);\n            wasm.__wbindgen_free(ptr1, len1);\n        }\n    };\n    const final = (rawState) => {\n        const [ptr0, len0] = passArray8ToWasm(rawState);\n        const retPtr = globalArgumentPtr();\n        try {\n            wasm[finalExportName](retPtr, ptr0, len0);\n            const mem = getUint32Memory();\n            const ptr = mem[retPtr / 4];\n            const len = mem[retPtr / 4 + 1];\n            const realRet = getArrayU8FromWasm(ptr, len).slice();\n            wasm.__wbindgen_free(ptr, len);\n            return realRet;\n        }\n        finally {\n            rawState.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            wasm.__wbindgen_free(ptr0, len0);\n        }\n    };\n    return {\n        final,\n        hash,\n        init,\n        update,\n    };\n};\n/* eslint-enable functional/no-conditional-statement, functional/no-let, functional/no-expression-statement, no-underscore-dangle, functional/no-try-statement, @typescript-eslint/no-magic-numbers, max-params, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-non-null-assertion */\n//# sourceMappingURL=hashes.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/bin/hashes.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/bin/ripemd160/ripemd160.base64.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/bin/ripemd160/ripemd160.base64.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ripemd160Base64Bytes\": () => (/* binding */ ripemd160Base64Bytes)\n/* harmony export */ });\n/* eslint-disable tsdoc/syntax */\n/**\n * @hidden\n */\n// prettier-ignore\nconst ripemd160Base64Bytes = '';\n//# sourceMappingURL=ripemd160.base64.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/bin/ripemd160/ripemd160.base64.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1-wasm-types.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1-wasm-types.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CompressionFlag\": () => (/* binding */ CompressionFlag),\n/* harmony export */   \"ContextFlag\": () => (/* binding */ ContextFlag)\n/* harmony export */ });\n// cSpell:ignore noncefp, ndata, outputlen\n/**\n * bitflags used in secp256k1's public API (translated from secp256k1.h)\n */\n/* eslint-disable no-bitwise, @typescript-eslint/no-magic-numbers, @typescript-eslint/prefer-literal-enum-member */\n/** All flags' lower 8 bits indicate what they're for. Do not use directly. */\n// const SECP256K1_FLAGS_TYPE_MASK = (1 << 8) - 1;\nconst SECP256K1_FLAGS_TYPE_CONTEXT = 1 << 0;\nconst SECP256K1_FLAGS_TYPE_COMPRESSION = 1 << 1;\n/** The higher bits contain the actual data. Do not use directly. */\nconst SECP256K1_FLAGS_BIT_CONTEXT_VERIFY = 1 << 8;\nconst SECP256K1_FLAGS_BIT_CONTEXT_SIGN = 1 << 9;\nconst SECP256K1_FLAGS_BIT_COMPRESSION = 1 << 8;\n/** Flags to pass to secp256k1_context_create. */\nconst SECP256K1_CONTEXT_VERIFY = SECP256K1_FLAGS_TYPE_CONTEXT | SECP256K1_FLAGS_BIT_CONTEXT_VERIFY;\nconst SECP256K1_CONTEXT_SIGN = SECP256K1_FLAGS_TYPE_CONTEXT | SECP256K1_FLAGS_BIT_CONTEXT_SIGN;\nconst SECP256K1_CONTEXT_NONE = SECP256K1_FLAGS_TYPE_CONTEXT;\n/** Flag to pass to secp256k1_ec_pubkey_serialize and secp256k1_ec_privkey_export. */\nconst SECP256K1_EC_COMPRESSED = SECP256K1_FLAGS_TYPE_COMPRESSION | SECP256K1_FLAGS_BIT_COMPRESSION;\nconst SECP256K1_EC_UNCOMPRESSED = SECP256K1_FLAGS_TYPE_COMPRESSION;\n/**\n * Flag to pass to a Secp256k1.contextCreate method.\n *\n * The purpose of context structures is to cache large precomputed data tables\n * that are expensive to construct, and also to maintain the randomization data\n * for blinding.\n *\n * You can create a context with only VERIFY or only SIGN capabilities, or you\n * can use BOTH. (NONE can be used for conversion/serialization.)\n */\nvar ContextFlag;\n(function (ContextFlag) {\n    ContextFlag[ContextFlag[\"NONE\"] = SECP256K1_CONTEXT_NONE] = \"NONE\";\n    ContextFlag[ContextFlag[\"VERIFY\"] = SECP256K1_CONTEXT_VERIFY] = \"VERIFY\";\n    ContextFlag[ContextFlag[\"SIGN\"] = SECP256K1_CONTEXT_SIGN] = \"SIGN\";\n    ContextFlag[ContextFlag[\"BOTH\"] = SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY] = \"BOTH\";\n})(ContextFlag || (ContextFlag = {}));\n/**\n * Flag to pass a Secp256k1 public key serialization method.\n *\n * You can indicate COMPRESSED (33 bytes, header byte 0x02 or 0x03) or\n * UNCOMPRESSED (65 bytes, header byte 0x04) format.\n */\nvar CompressionFlag;\n(function (CompressionFlag) {\n    CompressionFlag[CompressionFlag[\"COMPRESSED\"] = SECP256K1_EC_COMPRESSED] = \"COMPRESSED\";\n    CompressionFlag[CompressionFlag[\"UNCOMPRESSED\"] = SECP256K1_EC_UNCOMPRESSED] = \"UNCOMPRESSED\";\n})(CompressionFlag || (CompressionFlag = {}));\n//# sourceMappingURL=secp256k1-wasm-types.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1-wasm-types.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1-wasm.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1-wasm.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"instantiateSecp256k1Wasm\": () => (/* binding */ instantiateSecp256k1Wasm),\n/* harmony export */   \"instantiateSecp256k1WasmBytes\": () => (/* binding */ instantiateSecp256k1WasmBytes)\n/* harmony export */ });\n/* unused harmony export getEmbeddedSecp256k1Binary */\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/base64.js\");\n/* harmony import */ var _secp256k1_base64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./secp256k1.base64.js */ \"../../node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1.base64.js\");\n/* eslint-disable no-underscore-dangle, max-params, @typescript-eslint/naming-convention */\n// cSpell:ignore memcpy, anyfunc\n\n\n\n\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */\nconst wrapSecp256k1Wasm = (instance, heapU8, heapU32) => ({\n    contextCreate: (context) => instance.exports._secp256k1_context_create(context),\n    contextRandomize: (contextPtr, seedPtr) => instance.exports._secp256k1_context_randomize(contextPtr, seedPtr),\n    free: (pointer) => instance.exports._free(pointer),\n    heapU32,\n    heapU8,\n    instance,\n    malloc: (bytes) => instance.exports._malloc(bytes),\n    mallocSizeT: (num) => {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n        const pointer = instance.exports._malloc(4);\n        // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n        const pointerView32 = pointer >> 2;\n        // eslint-disable-next-line functional/no-expression-statement\n        heapU32.set([num], pointerView32);\n        return pointer;\n    },\n    mallocUint8Array: (array) => {\n        const pointer = instance.exports._malloc(array.length);\n        // eslint-disable-next-line functional/no-expression-statement\n        heapU8.set(array, pointer);\n        return pointer;\n    },\n    privkeyTweakAdd: (contextPtr, secretKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_privkey_tweak_add(contextPtr, secretKeyPtr, tweakNum256Ptr),\n    privkeyTweakMul: (contextPtr, secretKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_privkey_tweak_mul(contextPtr, secretKeyPtr, tweakNum256Ptr),\n    pubkeyCreate: (contextPtr, publicKeyPtr, secretKeyPtr) => instance.exports._secp256k1_ec_pubkey_create(contextPtr, publicKeyPtr, secretKeyPtr),\n    pubkeyParse: (contextPtr, publicKeyOutPtr, publicKeyInPtr, publicKeyInLength) => instance.exports._secp256k1_ec_pubkey_parse(contextPtr, publicKeyOutPtr, publicKeyInPtr, publicKeyInLength),\n    pubkeySerialize: (contextPtr, outputPtr, outputLengthPtr, publicKeyPtr, compression) => instance.exports._secp256k1_ec_pubkey_serialize(contextPtr, outputPtr, outputLengthPtr, publicKeyPtr, compression),\n    pubkeyTweakAdd: (contextPtr, publicKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_pubkey_tweak_add(contextPtr, publicKeyPtr, tweakNum256Ptr),\n    pubkeyTweakMul: (contextPtr, publicKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_pubkey_tweak_mul(contextPtr, publicKeyPtr, tweakNum256Ptr),\n    readHeapU8: (pointer, bytes) => new Uint8Array(heapU8.buffer, pointer, bytes),\n    readSizeT: (pointer) => {\n        // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n        const pointerView32 = pointer >> 2;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return heapU32[pointerView32];\n    },\n    recover: (contextPtr, outputPubkeyPointer, rSigPtr, msg32Ptr) => instance.exports._secp256k1_ecdsa_recover(contextPtr, outputPubkeyPointer, rSigPtr, msg32Ptr),\n    recoverableSignatureParse: (contextPtr, outputRSigPtr, inputSigPtr, rid) => instance.exports._secp256k1_ecdsa_recoverable_signature_parse_compact(contextPtr, outputRSigPtr, inputSigPtr, rid),\n    recoverableSignatureSerialize: (contextPtr, sigOutPtr, recIDOutPtr, rSigPtr) => instance.exports._secp256k1_ecdsa_recoverable_signature_serialize_compact(contextPtr, sigOutPtr, recIDOutPtr, rSigPtr),\n    schnorrSign: (contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_schnorr_sign(contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr),\n    schnorrVerify: (contextPtr, sigPtr, msg32Ptr, publicKeyPtr) => instance.exports._secp256k1_schnorr_verify(contextPtr, sigPtr, msg32Ptr, publicKeyPtr),\n    seckeyVerify: (contextPtr, secretKeyPtr) => instance.exports._secp256k1_ec_seckey_verify(contextPtr, secretKeyPtr),\n    sign: (contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_ecdsa_sign(contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr),\n    signRecoverable: (contextPtr, outputRSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_ecdsa_sign_recoverable(contextPtr, outputRSigPtr, msg32Ptr, secretKeyPtr),\n    signatureMalleate: (contextPtr, outputSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_malleate(contextPtr, outputSigPtr, inputSigPtr),\n    signatureNormalize: (contextPtr, outputSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_normalize(contextPtr, outputSigPtr, inputSigPtr),\n    signatureParseCompact: (contextPtr, sigOutPtr, compactSigInPtr) => instance.exports._secp256k1_ecdsa_signature_parse_compact(contextPtr, sigOutPtr, compactSigInPtr),\n    signatureParseDER: (contextPtr, sigOutPtr, sigDERInPtr, sigDERInLength) => instance.exports._secp256k1_ecdsa_signature_parse_der(contextPtr, sigOutPtr, sigDERInPtr, sigDERInLength),\n    signatureSerializeCompact: (contextPtr, outputCompactSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_serialize_compact(contextPtr, outputCompactSigPtr, inputSigPtr),\n    signatureSerializeDER: (contextPtr, outputDERSigPtr, outputDERSigLengthPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_serialize_der(contextPtr, outputDERSigPtr, outputDERSigLengthPtr, inputSigPtr),\n    verify: (contextPtr, sigPtr, msg32Ptr, pubkeyPtr) => instance.exports._secp256k1_ecdsa_verify(contextPtr, sigPtr, msg32Ptr, pubkeyPtr),\n});\n/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable functional/immutable-data, functional/no-expression-statement, @typescript-eslint/no-magic-numbers, functional/no-conditional-statement, no-bitwise, functional/no-throw-statement */\n/**\n * Method extracted from Emscripten's preamble.js\n */\nconst isLittleEndian = (buffer) => {\n    const littleEndian = true;\n    const notLittleEndian = false;\n    const heap16 = new Int16Array(buffer);\n    const heap32 = new Int32Array(buffer);\n    const heapU8 = new Uint8Array(buffer);\n    heap32[0] = 1668509029;\n    heap16[1] = 25459;\n    return heapU8[2] !== 115 || heapU8[3] !== 99\n        ? /* istanbul ignore next */ notLittleEndian\n        : littleEndian;\n};\n/**\n * Method derived from Emscripten's preamble.js\n */\nconst alignMemory = (factor, size) => Math.ceil(size / factor) * factor;\n/**\n * The most performant way to instantiate secp256k1 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use {@link instantiateSecp256k1}.\n *\n * Note, most of this method is translated and boiled-down from Emscripten's\n * preamble.js. Significant changes to the WASM build or breaking updates to\n * Emscripten will likely require modifications to this method.\n *\n * @param webassemblyBytes - A buffer containing the secp256k1 binary.\n */\nconst instantiateSecp256k1WasmBytes = async (webassemblyBytes) => {\n    const STACK_ALIGN = 16;\n    const GLOBAL_BASE = 1024;\n    const WASM_PAGE_SIZE = 65536;\n    const TOTAL_STACK = 5242880;\n    const TOTAL_MEMORY = 16777216;\n    const wasmMemory = new WebAssembly.Memory({\n        initial: TOTAL_MEMORY / WASM_PAGE_SIZE,\n        maximum: TOTAL_MEMORY / WASM_PAGE_SIZE,\n    });\n    /* istanbul ignore if  */\n    if (!isLittleEndian(wasmMemory.buffer)) {\n        /*\n         * note: this block is excluded from test coverage. It's A) hard to test\n         * (must be either tested on big-endian hardware or a big-endian buffer\n         * mock) and B) extracted from Emscripten's preamble.js, where it should\n         * be tested properly.\n         */\n        throw new Error('Runtime error: expected the system to be little-endian.');\n    }\n    const STATIC_BASE = GLOBAL_BASE;\n    const STATICTOP_INITIAL = STATIC_BASE + 67696 + 16;\n    const DYNAMICTOP_PTR = STATICTOP_INITIAL;\n    const DYNAMICTOP_PTR_SIZE = 4;\n    const STATICTOP = (STATICTOP_INITIAL + DYNAMICTOP_PTR_SIZE + 15) & -16;\n    const STACKTOP = alignMemory(STACK_ALIGN, STATICTOP);\n    const STACK_BASE = STACKTOP;\n    const STACK_MAX = STACK_BASE + TOTAL_STACK;\n    const DYNAMIC_BASE = alignMemory(STACK_ALIGN, STACK_MAX);\n    const heapU8 = new Uint8Array(wasmMemory.buffer);\n    const heap32 = new Int32Array(wasmMemory.buffer);\n    const heapU32 = new Uint32Array(wasmMemory.buffer);\n    heap32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;\n    const TABLE_SIZE = 6;\n    const MAX_TABLE_SIZE = 6;\n    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations\n    let getErrNoLocation;\n    /*\n     * note: A number of methods below are excluded from test coverage. They are\n     * a) not part of the regular usage of this library (should only be evaluated\n     * if the consumer mis-implements the library and exist only to make\n     * debugging easier) and B) already tested adequately in Emscripten, from\n     * which this section is extracted.\n     */\n    const env = {\n        DYNAMICTOP_PTR,\n        STACKTOP,\n        ___setErrNo: /* istanbul ignore next */ (value) => {\n            if (getErrNoLocation !== undefined) {\n                heap32[getErrNoLocation() >> 2] = value;\n            }\n            return value;\n        },\n        _abort: /* istanbul ignore next */ (err = 'Secp256k1 Error') => {\n            throw new Error(err);\n        },\n        // eslint-disable-next-line camelcase\n        _emscripten_memcpy_big: /* istanbul ignore next */ (dest, src, num) => {\n            heapU8.set(heapU8.subarray(src, src + num), dest);\n            return dest;\n        },\n        abort: /* istanbul ignore next */ (err = 'Secp256k1 Error') => {\n            throw new Error(err);\n        },\n        abortOnCannotGrowMemory: /* istanbul ignore next */ () => {\n            throw new Error('Secp256k1 Error: abortOnCannotGrowMemory was called.');\n        },\n        enlargeMemory: /* istanbul ignore next */ () => {\n            throw new Error('Secp256k1 Error: enlargeMemory was called.');\n        },\n        getTotalMemory: () => TOTAL_MEMORY,\n    };\n    const info = {\n        env: {\n            ...env,\n            memory: wasmMemory,\n            memoryBase: STATIC_BASE,\n            table: new WebAssembly.Table({\n                element: 'anyfunc',\n                initial: TABLE_SIZE,\n                maximum: MAX_TABLE_SIZE,\n            }),\n            tableBase: 0,\n        },\n        global: { Infinity, NaN },\n    };\n    return WebAssembly.instantiate(webassemblyBytes, info).then((result) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-assignment\n        getErrNoLocation = result.instance.exports['___errno_location'];\n        return wrapSecp256k1Wasm(result.instance, heapU8, heapU32);\n    });\n};\n/* eslint-enable functional/immutable-data, functional/no-expression-statement, @typescript-eslint/no-magic-numbers, functional/no-conditional-statement, no-bitwise, functional/no-throw-statement */\nconst getEmbeddedSecp256k1Binary = () => (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.base64ToBin)(_secp256k1_base64_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of\n * {@link instantiateSecp256k1Bytes} that does not require the consumer to\n * provide the secp256k1 binary buffer.\n */\nconst instantiateSecp256k1Wasm = async () => instantiateSecp256k1WasmBytes(getEmbeddedSecp256k1Binary());\n//# sourceMappingURL=secp256k1-wasm.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1-wasm.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1.base64.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1.base64.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"secp256k1Base64Bytes\": () => (/* binding */ secp256k1Base64Bytes)\n/* harmony export */ });\n/* eslint-disable tsdoc/syntax */\n/**\n * @hidden\n */\n// prettier-ignore\nconst secp256k1Base64Bytes = '';\n//# sourceMappingURL=secp256k1.base64.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1.base64.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/bin/sha1/sha1.base64.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/bin/sha1/sha1.base64.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sha1Base64Bytes\": () => (/* binding */ sha1Base64Bytes)\n/* harmony export */ });\n/* eslint-disable tsdoc/syntax */\n/**\n * @hidden\n */\n// prettier-ignore\nconst sha1Base64Bytes = '';\n//# sourceMappingURL=sha1.base64.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/bin/sha1/sha1.base64.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/bin/sha256/sha256.base64.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/bin/sha256/sha256.base64.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sha256Base64Bytes\": () => (/* binding */ sha256Base64Bytes)\n/* harmony export */ });\n/* eslint-disable tsdoc/syntax */\n/**\n * @hidden\n */\n// prettier-ignore\nconst sha256Base64Bytes = 'AGFzbQEAAAABRgxgAn9/AX9gAn9/AGADf39/AGABfwF/YAV/f39/fwF/YAN/f38Bf2AAAGABfwBgBX9/f39/AGAAAX9gBH9/f38AYAF/AX4CHQEILi9zaGEyNTYQX193YmluZGdlbl90aHJvdwABAy4tAAECAwQGBwICAQEHCAIDAQEJAAcKCgIBCAIBAQIIAgoHBwcBAQAAAQcLBQUFBAUBcAEEBAUDAQARBgkBfwFB0JXAAAsHhwEIBm1lbW9yeQIABnNoYTI1NgAIC3NoYTI1Nl9pbml0AAwNc2hhMjU2X3VwZGF0ZQANDHNoYTI1Nl9maW5hbAAOEV9fd2JpbmRnZW5fbWFsbG9jAA8PX193YmluZGdlbl9mcmVlABAeX193YmluZGdlbl9nbG9iYWxfYXJndW1lbnRfcHRyABIJCQEAQQELAycpKgqhhwEtFgAgAUHvAEsEQCAADwtB8AAgARACAAt9AQF/IwBBMGsiAiQAIAIgATYCBCACIAA2AgAgAkEsakEBNgIAIAJBFGpBAjYCACACQRxqQQI2AgAgAkEBNgIkIAJB7BQ2AgggAkECNgIMIAJBzA02AhAgAiACNgIgIAIgAkEEajYCKCACIAJBIGo2AhggAkEIakH8FBAoAAuyAQEDfyMAQRBrIgMkAAJAAkACQCACQX9KBEBBASEEIAIEQCACEAQiBEUNAwsgAyAENgIAIAMgAjYCBCADQQA2AgggA0EAIAJBAUEBEAVB/wFxIgRBAkcNASADQQhqIgQgBCgCACIFIAJqNgIAIAUgAygCAGogASACECsaIABBCGogBCgCADYCACAAIAMpAwA3AgAgA0EQaiQADwsQBgALIARBAXENARAGAAsAC0GsFRAHAAurGQIIfwF+AkACQAJAAkACQAJAAkACQAJAAkACQAJ/AkACQAJ/AkACQAJAAkACQAJAAn8CQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAgAEH0AU0EQEH8DygCACIFQRAgAEELakF4cSAAQQtJGyICQQN2IgFBH3EiA3YiAEEDcUUNASAAQX9zQQFxIAFqIgJBA3QiA0GMEGooAgAiAEEIaiEEIAAoAggiASADQYQQaiIDRg0CIAEgAzYCDCADQQhqIAE2AgAMAwsgAEFATw0cIABBC2oiAEF4cSECQYAQKAIAIghFDQlBACACayEBAn9BACAAQQh2IgBFDQAaQR8iBiACQf///wdLDQAaIAJBJiAAZyIAa0EfcXZBAXFBHyAAa0EBdHILIgZBAnRBjBJqKAIAIgBFDQYgAkEAQRkgBkEBdmtBH3EgBkEfRht0IQUDQAJAIAAoAgRBeHEiByACSQ0AIAcgAmsiByABTw0AIAAhBCAHIgFFDQYLIABBFGooAgAiByADIAcgACAFQR12QQRxakEQaigCACIARxsgAyAHGyEDIAVBAXQhBSAADQALIANFDQUgAyEADAcLIAJBjBMoAgBNDQggAEUNAiAAIAN0QQIgA3QiAEEAIABrcnEiAEEAIABrcWgiAUEDdCIEQYwQaigCACIAKAIIIgMgBEGEEGoiBEYNCiADIAQ2AgwgBEEIaiADNgIADAsLQfwPIAVBfiACd3E2AgALIAAgAkEDdCICQQNyNgIEIAAgAmoiACAAKAIEQQFyNgIEIAQPC0GAECgCACIARQ0FIABBACAAa3FoQQJ0QYwSaigCACIFKAIEQXhxIAJrIQEgBSIDKAIQIgBFDRRBAAwVC0EAIQEMAgsgBA0CC0EAIQRBAiAGQR9xdCIAQQAgAGtyIAhxIgBFDQIgAEEAIABrcWhBAnRBjBJqKAIAIgBFDQILA0AgACgCBEF4cSIDIAJPIAMgAmsiByABSXEhBSAAKAIQIgNFBEAgAEEUaigCACEDCyAAIAQgBRshBCAHIAEgBRshASADIgANAAsgBEUNAQtBjBMoAgAiACACSQ0BIAEgACACa0kNAQsCQAJAAkBBjBMoAgAiASACSQRAQZATKAIAIgAgAk0NAQweC0GUEygCACEAIAEgAmsiA0EQTw0BQZQTQQA2AgBBjBNBADYCACAAIAFBA3I2AgQgACABaiIBQQRqIQIgASgCBEEBciEBDAILQQAhASACQa+ABGoiA0EQdkAAIgBBf0YNFCAAQRB0IgVFDRRBnBNBnBMoAgAgA0GAgHxxIgdqIgA2AgBBoBNBoBMoAgAiASAAIAAgAUkbNgIAQZgTKAIAIgFFDQlBpBMhAANAIAAoAgAiAyAAKAIEIgRqIAVGDQsgACgCCCIADQALDBILQYwTIAM2AgBBlBMgACACaiIFNgIAIAUgA0EBcjYCBCAAIAFqIAM2AgAgAkEDciEBIABBBGohAgsgAiABNgIAIABBCGoPCyAEECMgAUEPSw0CIAQgASACaiIAQQNyNgIEIAQgAGoiACAAKAIEQQFyNgIEDAwLQfwPIAVBfiABd3E2AgALIABBCGohAyAAIAJBA3I2AgQgACACaiIFIAFBA3QiASACayICQQFyNgIEIAAgAWogAjYCAEGMEygCACIARQ0DIABBA3YiBEEDdEGEEGohAUGUEygCACEAQfwPKAIAIgdBASAEQR9xdCIEcUUNASABKAIIDAILIAQgAkEDcjYCBCAEIAJqIgAgAUEBcjYCBCAAIAFqIAE2AgAgAUH/AUsNBSABQQN2IgFBA3RBhBBqIQJB/A8oAgAiA0EBIAFBH3F0IgFxRQ0HIAJBCGohAyACKAIIDAgLQfwPIAcgBHI2AgAgAQshBCABQQhqIAA2AgAgBCAANgIMIAAgATYCDCAAIAQ2AggLQZQTIAU2AgBBjBMgAjYCACADDwsCQEG4EygCACIABEAgACAFTQ0BC0G4EyAFNgIAC0EAIQBBqBMgBzYCAEGkEyAFNgIAQbwTQf8fNgIAQbATQQA2AgADQCAAQYwQaiAAQYQQaiIBNgIAIABBkBBqIAE2AgAgAEEIaiIAQYACRw0ACyAFIAdBWGoiAEEBcjYCBEGYEyAFNgIAQbQTQYCAgAE2AgBBkBMgADYCACAFIABqQSg2AgQMCQsgACgCDEUNAQwHCyAAIAEQJAwDCyAFIAFNDQUgAyABSw0FIABBBGogBCAHajYCAEGYEygCACIAQQ9qQXhxIgFBeGoiA0GQEygCACAHaiIFIAEgAEEIamtrIgFBAXI2AgRBtBNBgICAATYCAEGYEyADNgIAQZATIAE2AgAgACAFakEoNgIEDAYLQfwPIAMgAXI2AgAgAkEIaiEDIAILIQEgAyAANgIAIAEgADYCDCAAIAI2AgwgACABNgIICyAEQQhqIQEMBAtBAQshBgNAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAIAYOCgABAgQFBggJCgcDCyAAKAIEQXhxIAJrIgUgASAFIAFJIgUbIQEgACADIAUbIQMgACIFKAIQIgANCkEBIQYMEQsgBUEUaigCACIADQpBAiEGDBALIAMQIyABQRBPDQpBCiEGDA8LIAMgASACaiIAQQNyNgIEIAMgAGoiACAAKAIEQQFyNgIEDA0LIAMgAkEDcjYCBCADIAJqIgIgAUEBcjYCBCACIAFqIAE2AgBBjBMoAgAiAEUNCUEEIQYMDQsgAEEDdiIEQQN0QYQQaiEFQZQTKAIAIQBB/A8oAgAiB0EBIARBH3F0IgRxRQ0JQQUhBgwMCyAFKAIIIQQMCQtB/A8gByAEcjYCACAFIQRBBiEGDAoLIAVBCGogADYCACAEIAA2AgwgACAFNgIMIAAgBDYCCEEHIQYMCQtBlBMgAjYCAEGMEyABNgIAQQghBgwICyADQQhqDwtBACEGDAYLQQAhBgwFC0EDIQYMBAtBByEGDAMLQQkhBgwCC0EGIQYMAQtBCCEGDAALAAtBuBNBuBMoAgAiACAFIAAgBUkbNgIAIAUgB2ohA0GkEyEAAn8CQAJAAkACQANAIAAoAgAgA0YNASAAKAIIIgANAAsMAQsgACgCDEUNAQtBpBMhAAJAA0AgACgCACIDIAFNBEAgAyAAKAIEaiIDIAFLDQILIAAoAgghAAwACwALIAUgB0FYaiIAQQFyNgIEIAUgAGpBKDYCBCABIANBYGpBeHFBeGoiBCAEIAFBEGpJGyIEQRs2AgRBmBMgBTYCAEG0E0GAgIABNgIAQZATIAA2AgBBpBMpAgAhCSAEQRBqQawTKQIANwIAIAQgCTcCCEGoEyAHNgIAQaQTIAU2AgBBrBMgBEEIajYCAEGwE0EANgIAIARBHGohAANAIABBBzYCACADIABBBGoiAEsNAAsgBCABRg0DIAQgBCgCBEF+cTYCBCABIAQgAWsiAEEBcjYCBCAEIAA2AgAgAEH/AU0EQCAAQQN2IgNBA3RBhBBqIQBB/A8oAgAiBUEBIANBH3F0IgNxRQ0CIAAoAggMAwsgASAAECQMAwsgACAFNgIAIAAgACgCBCAHajYCBCAFIAJBA3I2AgQgBSACaiEAIAMgBWsgAmshAkGYEygCACADRg0EQZQTKAIAIANGDQUgAygCBCIBQQNxQQFHDQkgAUF4cSIEQf8BSw0GIAMoAgwiByADKAIIIgZGDQcgBiAHNgIMIAcgBjYCCAwIC0H8DyAFIANyNgIAIAALIQMgAEEIaiABNgIAIAMgATYCDCABIAA2AgwgASADNgIIC0EAIQFBkBMoAgAiACACTQ0ADAgLIAEPC0GYEyAANgIAQZATQZATKAIAIAJqIgI2AgAgACACQQFyNgIEDAULIABBjBMoAgAgAmoiAkEBcjYCBEGUEyAANgIAQYwTIAI2AgAgACACaiACNgIADAQLIAMQIwwBC0H8D0H8DygCAEF+IAFBA3Z3cTYCAAsgBCACaiECIAMgBGohAwsgAyADKAIEQX5xNgIEIAAgAkEBcjYCBCAAIAJqIAI2AgACfwJAIAJB/wFNBEAgAkEDdiIBQQN0QYQQaiECQfwPKAIAIgNBASABQR9xdCIBcUUNASACQQhqIQMgAigCCAwCCyAAIAIQJAwCC0H8DyADIAFyNgIAIAJBCGohAyACCyEBIAMgADYCACABIAA2AgwgACACNgIMIAAgATYCCAsgBUEIag8LQZATIAAgAmsiATYCAEGYE0GYEygCACIAIAJqIgM2AgAgAyABQQFyNgIEIAAgAkEDcjYCBCAAQQhqC6UBAQJ/QQIhBQJAAkACQAJAAkAgACgCBCIGIAFrIAJPDQAgASACaiICIAFJIQECQCAEBEBBACEFIAENAiAGQQF0IgEgAiACIAFJGyECDAELQQAhBSABDQELIAJBAEgNACAGRQ0BIAAoAgAgAhATIgFFDQIMAwsgBQ8LIAIQBCIBDQELIAMNAQsgAQRAIAAgATYCACAAQQRqIAI2AgBBAg8LQQEPCwALCABBnBQQBwALZgIBfwN+IwBBMGsiASQAIAApAhAhAiAAKQIIIQMgACkCACEEIAFBFGpBADYCACABIAQ3AxggAUIBNwIEIAFBhA02AhAgASABQRhqNgIAIAEgAzcDICABIAI3AyggASABQSBqECgAC8UBAQF/IwBBkAJrIgMkACADQTBqQQBBzAAQLRogA0GUAWpB4AopAgA3AgAgA0GMAWpB2AopAgA3AgAgA0GEAWpB0AopAgA3AgAgA0HICikCADcCfCADQTBqIAEgAhAJIANBoAFqIANBMGpB8AAQKxogA0EQaiADQaABahAKIANBMGogA0EQakEgEAMgA0GoAWogA0E4aigCADYCACADIAMpAzA3A6ABIANBCGogA0GgAWoQCyAAIAMpAwg3AgAgA0GQAmokAAubAwEEfyMAQUBqIgMkACAAIAApAwAgAq1CA4Z8NwMAIAMgAEHMAGo2AiggAyADQShqNgIsAkACQAJAAkACQAJAIAAoAggiBQRAQcAAIAVrIgQgAk0NASADQRhqIAUgBSACaiIEIABBDGoQFSADKAIcIAJHDQUgAygCGCABIAIQKxoMAwsgAiEEDAELIANBMGogASACIAQQFiADQTxqKAIAIQQgAygCOCEBIAMoAjAhBSADKAI0IQIgA0EgaiAAQQxqIgYgACgCCBAXIAIgAygCJEcNBCADKAIgIAUgAhArGiAAQQhqQQA2AgAgA0EsaiAGEBgLIANBPGohAiADQThqIQUCQANAIARBP00NASADQTBqIAEgBEHAABAWIAIoAgAhBCAFKAIAIQEgA0EIakEAQcAAIAMoAjAgAygCNBAZIANBLGogAygCCBAYDAALAAsgA0EQaiAAQQxqIAQQGiADKAIUIARHDQEgAygCECABIAQQKxoLIABBCGogBDYCACADQUBrJAAPC0GEFBAHAAtBhBQQBwALQYQUEAcAC98EAgN/AX4jAEHQAGsiAiQAIAIgAUHMAGo2AiQgASkDACEFIAEoAgghBCACIAJBJGo2AigCQCAEQT9NBEAgAUEMaiIDIARqQYABOgAAIAEgASgCCEEBaiIENgIIIAJBGGogAyAEEBcgAigCGEEAIAIoAhwQLRpBwAAgASgCCGtBB00EQCACQShqIAMQGCACQRBqIAMgAUEIaigCABAaIAIoAhBBACACKAIUEC0aCyACQQhqIANBOBAXIAIoAgxBCEcNASACKAIIIAVCOIYgBUIohkKAgICAgIDA/wCDhCAFQhiGQoCAgICA4D+DIAVCCIZCgICAgPAfg4SEIAVCCIhCgICA+A+DIAVCGIhCgID8B4OEIAVCKIhCgP4DgyAFQjiIhISENwAAIAJBKGogAxAYIAFBCGpBADYCACACQQA2AiggAkEoakEEciEEQQAhAwJAA0AgA0EgRg0BIAQgA2pBADoAACACIAIoAihBAWo2AiggA0EBaiEDDAALAAsgAkFAayABQeQAaikAADcDACACQThqIAFB3ABqKQAANwMAIAJBMGogAUHUAGopAAA3AwAgAiABKQBMNwMoQQAhAwJAA0AgA0EgRg0BIAJBKGogA2oiBCAEKAIAIgRBGHQgBEEIdEGAgPwHcXIgBEEIdkGA/gNxIARBGHZycjYCACADQQRqIQMMAAsACyAAIAIpAyg3AAAgAEEYaiACQUBrKQMANwAAIABBEGogAkE4aikDADcAACAAQQhqIAJBMGopAwA3AAAgAkHQAGokAA8LQdwTIARBwAAQHQALQewTEAcAC2MBAn8gASgCACECAkACQCABKAIEIgMgASgCCCIBRgRAIAMhAQwBCyADIAFJDQEgAQRAIAIgARATIgINAQALIAIgAxARQQEhAkEAIQELIAAgATYCBCAAIAI2AgAPC0HEExAHAAuaAQEBfyMAQZABayIBJAAgAUEgakEAQcwAEC0aIAFBhAFqQeAKKQIANwIAIAFB/ABqQdgKKQIANwIAIAFB9ABqQdAKKQIANwIAIAFByAopAgA3AmwgAUEQaiABQSBqQfAAEAMgAUEoaiABQRhqKAIANgIAIAEgASkDEDcDICABQQhqIAFBIGoQCyAAIAEpAwg3AgAgAUGQAWokAAuGAQEBfyMAQYACayIFJAAgBUEgaiABIAIQAUHwABAsGiAFQSBqIAMgBBAJIAVBkAFqIAVBIGpB8AAQKxogBUEQaiAFQZABakHwABADIAVBmAFqIAVBGGooAgA2AgAgBSAFKQMQNwOQASAFQQhqIAVBkAFqEAsgACAFKQMINwIAIAVBgAJqJAALcgEBfyMAQbABayIDJAAgA0FAayABIAIQAUHwABAsGiADQSBqIANBQGsQCiADQRBqIANBIGpBIBADIANByABqIANBGGooAgA2AgAgAyADKQMQNwNAIANBCGogA0FAaxALIAAgAykDCDcCACADQbABaiQAC0oBAX8jAEEQayIBJAAgAUIBNwMAIAFBADYCCCABQQAgAEEAQQAQBUH/AXFBAkYEQCABKAIAIQAgAUEQaiQAIAAPC0GACEEWEAAACwgAIAAgARARCwsAIAEEQCAAEBQLCwUAQaAPC8cFAQh/AkACQAJAAkACQAJAIAFBv39LDQBBECABQQtqQXhxIAFBC0kbIQIgAEF8aiIGKAIAIgdBeHEhAwJAAkACQAJAIAdBA3EEQCAAQXhqIgggA2ohBSADIAJPDQFBmBMoAgAgBUYNAkGUEygCACAFRg0DIAUoAgQiB0ECcQ0EIAdBeHEiCSADaiIDIAJJDQQgAyACayEBIAlB/wFLDQcgBSgCDCIEIAUoAggiBUYNCCAFIAQ2AgwgBCAFNgIIDAkLIAJBgAJJDQMgAyACQQRySQ0DIAMgAmtBgYAITw0DDAkLIAMgAmsiAUEQSQ0IIAYgAiAHQQFxckECcjYCACAIIAJqIgQgAUEDcjYCBCAFIAUoAgRBAXI2AgQgBCABECUMCAtBkBMoAgAgA2oiAyACTQ0BIAYgAiAHQQFxckECcjYCAEGYEyAIIAJqIgE2AgBBkBMgAyACayIENgIAIAEgBEEBcjYCBAwHC0GMEygCACADaiIDIAJPDQILIAEQBCICRQ0AIAIgACABIAYoAgAiBEF4cUEEQQggBEEDcRtrIgQgBCABSxsQKyEBIAAQFCABIQQLIAQPCwJAIAMgAmsiAUEQSQRAIAYgB0EBcSADckECcjYCACAIIANqIgEgASgCBEEBcjYCBEEAIQEMAQsgBiACIAdBAXFyQQJyNgIAIAggAmoiBCABQQFyNgIEIAggA2oiAiABNgIAIAIgAigCBEF+cTYCBAtBlBMgBDYCAEGMEyABNgIADAMLIAUQIwwBC0H8D0H8DygCAEF+IAdBA3Z3cTYCAAsgAUEPTQRAIAYgAyAGKAIAQQFxckECcjYCACAIIANqIgEgASgCBEEBcjYCBAwBCyAGIAIgBigCAEEBcXJBAnI2AgAgCCACaiIEIAFBA3I2AgQgCCADaiICIAIoAgRBAXI2AgQgBCABECUgAA8LIAAL4AYBBX8CQCAAQXhqIgEgAEF8aigCACIDQXhxIgBqIQICQAJAIANBAXENACADQQNxRQ0BIAEoAgAiAyAAaiEAAkACQEGUEygCACABIANrIgFHBEAgA0H/AUsNASABKAIMIgQgASgCCCIFRg0CIAUgBDYCDCAEIAU2AggMAwsgAigCBCIDQQNxQQNHDQJBjBMgADYCACACQQRqIANBfnE2AgAMBAsgARAjDAELQfwPQfwPKAIAQX4gA0EDdndxNgIACwJAAn8CQAJAAkACQAJAAkAgAigCBCIDQQJxRQRAQZgTKAIAIAJGDQFBlBMoAgAgAkYNAiADQXhxIgQgAGohACAEQf8BSw0DIAIoAgwiBCACKAIIIgJGDQQgAiAENgIMIAQgAjYCCAwFCyACQQRqIANBfnE2AgAgASAAQQFyNgIEIAEgAGogADYCAAwHC0GYEyABNgIAQZATQZATKAIAIABqIgA2AgAgASAAQQFyNgIEIAFBlBMoAgBGBEBBjBNBADYCAEGUE0EANgIAC0G0EygCACAATw0HAkAgAEEpSQ0AQaQTIQADQCAAKAIAIgIgAU0EQCACIAAoAgRqIAFLDQILIAAoAggiAA0ACwtBACEBQawTKAIAIgBFDQQDQCABQQFqIQEgACgCCCIADQALIAFB/x8gAUH/H0sbDAULQZQTIAE2AgBBjBNBjBMoAgAgAGoiADYCAAwHCyACECMMAQtB/A9B/A8oAgBBfiADQQN2d3E2AgALIAEgAEEBcjYCBCABIABqIAA2AgAgAUGUEygCAEcNAkGMEyAANgIADwtB/x8LIQFBtBNBfzYCAEG8EyABNgIADwtBvBMCfwJAAn8CQCAAQf8BTQRAIABBA3YiAkEDdEGEEGohAEH8DygCACIDQQEgAkEfcXQiAnFFDQEgAEEIaiEDIAAoAggMAgsgASAAECRBvBNBvBMoAgBBf2oiATYCACABDQRBrBMoAgAiAEUNAkEAIQEDQCABQQFqIQEgACgCCCIADQALIAFB/x8gAUH/H0sbDAMLQfwPIAMgAnI2AgAgAEEIaiEDIAALIQIgAyABNgIAIAIgATYCDCABIAA2AgwgASACNgIIDwtB/x8LIgE2AgALDwsgASAAQQFyNgIEIAEgAGogADYCAAs5AAJAIAIgAU8EQCACQcEATw0BIAAgAiABazYCBCAAIAMgAWo2AgAPCyABIAIQHAALIAJBwAAQAgALTQIBfwJ+IwBBEGsiBCQAIARBCGpBACADIAEgAhAZIAQpAwghBSAEIAMgAiABIAIQGSAEKQMAIQYgACAFNwIAIAAgBjcCCCAEQRBqJAALLAEBfyMAQRBrIgMkACADQQhqIAJBwAAgARAVIAAgAykDCDcCACADQRBqJAALDgAgACgCACgCACABEBsLNwACQCACIAFPBEAgBCACSQ0BIAAgAiABazYCBCAAIAMgAWo2AgAPCyABIAIQHAALIAIgBBACAAsrAQF/IwBBEGsiAyQAIANBCGpBACACIAEQFSAAIAMpAwg3AgAgA0EQaiQAC7IuASN/IwBBgAFrIgckACAHIAFBwAAQKyEBQQAhBwJAA0AgB0HAAEYNASABIAdqIgggCCgCACIIQRh0IAhBCHRBgID8B3FyIAhBCHZBgP4DcSAIQRh2cnI2AgAgB0EEaiEHDAALAAsgACgCFCEbIAAoAhAhHCAAKAIAIR0gACgCBCEeIAAoAhwhHyAAKAIYISAgACgCCCEhIAEoAgwhDSABKAIIIRggASgCBCEVIAEoAgAhEiABIAAoAgwiIjYCZCABICE2AmAgASAgNgJoIAEgHzYCbCABIB42AnQgASAdNgJwIAEgHDYCeCABIBs2AnwgAUHQAGogAUHgAGogAUHwAGogFUGRid2JB2ogEkGY36iUBGoQHiABKAJcIQcgASgCWCEIIAEoAlAhCiABKAJUIRMgASAeNgJkIAEgHTYCYCABIBw2AmggASAbNgJsIAEgEzYCdCABIAo2AnAgASAINgJ4IAEgBzYCfCABQdAAaiABQeAAaiABQfAAaiANQaW3181+aiAYQc/3g657ahAeIAEoAlwhGSABKAJYIQ4gASgCUCEPIAEoAlQhFiABKAIcIQwgASgCGCEQIAEoAhQhFyABKAIQIREgASATNgJkIAEgCjYCYCABIAg2AmggASAHNgJsIAEgFjYCdCABIA82AnAgASAONgJ4IAEgGTYCfCABQdAAaiABQeAAaiABQfAAaiAXQfGjxM8FaiARQduE28oDahAeIAEoAlwhByABKAJYIQggASgCUCEKIAEoAlQhAiABIBY2AmQgASAPNgJgIAEgDjYCaCABIBk2AmwgASACNgJ0IAEgCjYCcCABIAg2AnggASAHNgJ8IAFB0ABqIAFB4ABqIAFB8ABqIAxB1b3x2HpqIBBBpIX+kXlqEB4gASgCXCEWIAEoAlghAyABKAJQIQQgASgCVCEFIAEoAiwhEyABKAIoIRkgASgCJCEOIAEoAiAhDyABIAI2AmQgASAKNgJgIAEgCDYCaCABIAc2AmwgASAFNgJ0IAEgBDYCcCABIAM2AnggASAWNgJ8IAFB0ABqIAFB4ABqIAFB8ABqIA5BgbaNlAFqIA9BmNWewH1qEB4gASgCXCECIAEoAlghBiABKAJQIQkgASgCVCELIAEgBTYCZCABIAQ2AmAgASADNgJoIAEgFjYCbCABIAs2AnQgASAJNgJwIAEgBjYCeCABIAI2AnwgAUHQAGogAUHgAGogAUHwAGogE0HD+7GoBWogGUG+i8ahAmoQHiABKAJcIQMgASgCWCEEIAEoAlAhBSABKAJUIRQgASgCPCEHIAEoAjghCCABKAI0IRYgASgCMCEKIAEgCzYCZCABIAk2AmAgASAGNgJoIAEgAjYCbCABIBQ2AnQgASAFNgJwIAEgBDYCeCABIAM2AnwgAUHQAGogAUHgAGogAUHwAGogFkH+4/qGeGogCkH0uvmVB2oQHiABKAJcIQIgASgCWCEGIAEoAlAhCSABKAJUIQsgASAUNgJkIAEgBTYCYCABIAQ2AmggASADNgJsIAEgCzYCdCABIAk2AnAgASAGNgJ4IAEgAjYCfCABQdAAaiABQeAAaiABQfAAaiAHQfTi74x8aiAIQaeN8N55ahAeIAEoAlwhAyABKAJYIQQgASgCUCEFIAEoAlQhFCABIBg2AnQgASANNgJwIAEgFTYCeCABIBI2AnwgAUHgAGogAUHwAGogERAfIAEgCiABKAJgajYCcCABIBMgASgCZGo2AnQgASAZIAEoAmhqNgJ4IAEgDiABKAJsajYCfCABQUBrIAFB8ABqIAcgCBAgIAEgCzYCZCABIAk2AmAgASAGNgJoIAEgAjYCbCABIBQ2AnQgASAFNgJwIAEgBDYCeCABIAM2AnwgASgCQCEVIAEoAkQhEiABQdAAaiABQeAAaiABQfAAaiABKAJIIhpBho/5/X5qIAEoAkwiDUHB0+2kfmoQHiABKAJcIQIgASgCWCEGIAEoAlAhCSABKAJUIQsgASAUNgJkIAEgBTYCYCABIAQ2AmggASADNgJsIAEgCzYCdCABIAk2AnAgASAGNgJ4IAEgAjYCfCABQdAAaiABQeAAaiABQfAAaiAVQczDsqACaiASQca7hv4AahAeIAEoAlwhAyABKAJYIQQgASgCUCEFIAEoAlQhFCABIBA2AnQgASAMNgJwIAEgFzYCeCABIBE2AnwgAUHgAGogAUHwAGogDxAfIAEgDSABKAJgajYCcCABIAcgASgCZGo2AnQgASAIIAEoAmhqNgJ4IAEgFiABKAJsajYCfCABQeAAaiABQfAAaiAVIBIQICABKAJgIREgASgCZCENIAEoAmghDCABKAJsIRggASALNgJkIAEgCTYCYCABIAY2AmggASACNgJsIAEgFDYCdCABIAU2AnAgASAENgJ4IAEgAzYCfCABQdAAaiABQeAAaiABQfAAaiAMQaqJ0tMEaiAYQe/YpO8CahAeIAEoAlwhECABKAJYIRcgASgCUCECIAEoAlQhBiABIBQ2AmQgASAFNgJgIAEgBDYCaCABIAM2AmwgASAGNgJ0IAEgAjYCcCABIBc2AnggASAQNgJ8IAFB0ABqIAFB4ABqIAFB8ABqIBFB2pHmtwdqIA1B3NPC5QVqEB4gASgCXCEDIAEoAlghBCABKAJQIQUgASgCVCEJIAEgGTYCdCABIBM2AnAgASAONgJ4IAEgDzYCfCABQeAAaiABQfAAaiAKEB8gASAYIAEoAmBqNgJwIAEgFSABKAJkajYCdCABIBIgASgCaGo2AnggASAaIAEoAmxqNgJ8IAFB4ABqIAFB8ABqIBEgDRAgIAEoAmAhEyABKAJkIRkgASgCaCESIAEoAmwhDiABIAY2AmQgASACNgJgIAEgFzYCaCABIBA2AmwgASAJNgJ0IAEgBTYCcCABIAQ2AnggASADNgJ8IAFB0ABqIAFB4ABqIAFB8ABqIBJB7YzHwXpqIA5B0qL5wXlqEB4gASgCXCEPIAEoAlghFSABKAJQIRcgASgCVCECIAEgCTYCZCABIAU2AmAgASAENgJoIAEgAzYCbCABIAI2AnQgASAXNgJwIAEgFTYCeCABIA82AnwgAUHQAGogAUHgAGogAUHwAGogE0HH/+X6e2ogGUHIz4yAe2oQHiABKAJcIQMgASgCWCEEIAEoAlAhBSABKAJUIQYgASAINgJ0IAEgBzYCcCABIBY2AnggASAKNgJ8IAFB4ABqIAFB8ABqIAEoAkwQHyABIA4gASgCYGo2AnAgASARIAEoAmRqNgJ0IAEgDSABKAJoajYCeCABIAwgASgCbGo2AnwgAUHgAGogAUHwAGogEyAZECAgASgCYCEHIAEoAmQhCCABKAJoIRAgASgCbCEKIAEgAjYCZCABIBc2AmAgASAVNgJoIAEgDzYCbCABIAY2AnQgASAFNgJwIAEgBDYCeCABIAM2AnwgAUHQAGogAUHgAGogAUHwAGogEEHHop6tfWogCkHzl4C3fGoQHiABKAJcIQIgASgCWCEJIAEoAlAhCyABKAJUIRQgASAGNgJkIAEgBTYCYCABIAQ2AmggASADNgJsIAEgFDYCdCABIAs2AnAgASAJNgJ4IAEgAjYCfCABQdAAaiABQeAAaiABQfAAaiAHQefSpKEBaiAIQdHGqTZqEB4gASgCXCEDIAEoAlghBCABKAJQIQUgASgCVCEGIAFB+ABqIiMgASkDSDcDACABIAEpA0A3A3AgAUHgAGogAUHwAGogGBAfIAEgCiABKAJgajYCcCABIBMgASgCZGo2AnQgASAZIAEoAmhqNgJ4IAEgEiABKAJsajYCfCABQeAAaiABQfAAaiAHIAgQICABKAJgIQ8gASgCZCEWIAEoAmghFyABKAJsIRUgASAUNgJkIAEgCzYCYCABIAk2AmggASACNgJsIAEgBjYCdCABIAU2AnAgASAENgJ4IAEgAzYCfCABQdAAaiABQeAAaiABQfAAaiAXQbjC7PACaiAVQYWV3L0CahAeIAEoAlwhAiABKAJYIQkgASgCUCELIAEoAlQhFCABIAY2AmQgASAFNgJgIAEgBDYCaCABIAM2AmwgASAUNgJ0IAEgCzYCcCABIAk2AnggASACNgJ8IAFB0ABqIAFB4ABqIAFB8ABqIA9Bk5rgmQVqIBZB/Nux6QRqEB4gASgCXCEDIAEoAlghBCABKAJQIQUgASgCVCEGIAEgDTYCdCABIBE2AnAgASAMNgJ4IAEgGDYCfCABQeAAaiABQfAAaiAOEB8gASAVIAEoAmBqNgJwIAEgByABKAJkajYCdCABIAggASgCaGo2AnggASAQIAEoAmxqNgJ8IAFBQGsgAUHwAGogDyAWECAgASAUNgJkIAEgCzYCYCABIAk2AmggASACNgJsIAEgBjYCdCABIAU2AnAgASAENgJ4IAEgAzYCfCABKAJAIQwgASgCRCECIAFB0ABqIAFB4ABqIAFB8ABqIAEoAkgiJEG7laizB2ogASgCTCIRQdTmqagGahAeIAEoAlwhCSABKAJYIQsgASgCUCEUIAEoAlQhGiABIAY2AmQgASAFNgJgIAEgBDYCaCABIAM2AmwgASAaNgJ0IAEgFDYCcCABIAs2AnggASAJNgJ8IAFB0ABqIAFB4ABqIAFB8ABqIAxBhdnIk3lqIAJBrpKLjnhqEB4gASgCXCEDIAEoAlghBCABKAJQIQUgASgCVCEGIAEgGTYCdCABIBM2AnAgASASNgJ4IAEgDjYCfCABQeAAaiABQfAAaiAKEB8gASARIAEoAmBqNgJwIAEgDyABKAJkajYCdCABIBYgASgCaGo2AnggASAXIAEoAmxqNgJ8IAFB4ABqIAFB8ABqIAwgAhAgIAEoAmAhESABKAJkIQ0gASgCaCETIAEoAmwhGCABIBo2AmQgASAUNgJgIAEgCzYCaCABIAk2AmwgASAGNgJ0IAEgBTYCcCABIAQ2AnggASADNgJ8IAFB0ABqIAFB4ABqIAFB8ABqIBNBy8zpwHpqIBhBodH/lXpqEB4gASgCXCEOIAEoAlghEiABKAJQIQkgASgCVCELIAEgBjYCZCABIAU2AmAgASAENgJoIAEgAzYCbCABIAs2AnQgASAJNgJwIAEgEjYCeCABIA42AnwgAUHQAGogAUHgAGogAUHwAGogEUGjo7G7fGogDUHwlq6SfGoQHiABKAJcIQMgASgCWCEEIAEoAlAhBSABKAJUIQYgASAINgJ0IAEgBzYCcCABIBA2AnggASAKNgJ8IAFB4ABqIAFB8ABqIBUQHyABIBggASgCYGo2AnAgASAMIAEoAmRqNgJ0IAEgAiABKAJoajYCeCABICQgASgCbGo2AnwgAUHgAGogAUHwAGogESANECAgASgCYCEHIAEoAmQhCCABKAJoIRkgASgCbCEKIAEgCzYCZCABIAk2AmAgASASNgJoIAEgDjYCbCABIAY2AnQgASAFNgJwIAEgBDYCeCABIAM2AnwgAUHQAGogAUHgAGogAUHwAGogGUGkjOS0fWogCkGZ0MuMfWoQHiABKAJcIRIgASgCWCEMIAEoAlAhECABKAJUIQIgASAGNgJkIAEgBTYCYCABIAQ2AmggASADNgJsIAEgAjYCdCABIBA2AnAgASAMNgJ4IAEgEjYCfCABQdAAaiABQeAAaiABQfAAaiAHQfDAqoMBaiAIQYXruKB/ahAeIAEoAlwhAyABKAJYIQQgASgCUCEFIAEoAlQhBiABIBY2AnQgASAPNgJwIAEgFzYCeCABIBU2AnwgAUHgAGogAUHwAGogASgCTBAfIAEgCiABKAJgajYCcCABIBEgASgCZGo2AnQgASANIAEoAmhqNgJ4IAEgEyABKAJsajYCfCABQeAAaiABQfAAaiAHIAgQICABKAJgIQ4gASgCZCEPIAEoAmghFyABKAJsIRYgASACNgJkIAEgEDYCYCABIAw2AmggASASNgJsIAEgBjYCdCABIAU2AnAgASAENgJ4IAEgAzYCfCABQdAAaiABQeAAaiABQfAAaiAXQYjY3fEBaiAWQZaCk80BahAeIAEoAlwhDCABKAJYIRAgASgCUCECIAEoAlQhCSABIAY2AmQgASAFNgJgIAEgBDYCaCABIAM2AmwgASAJNgJ0IAEgAjYCcCABIBA2AnggASAMNgJ8IAFB0ABqIAFB4ABqIAFB8ABqIA5BtfnCpQNqIA9BzO6hugJqEB4gASgCXCEDIAEoAlghBCABKAJQIQUgASgCVCEGICMgASkDSDcDACABIAEpA0A3A3AgAUHgAGogAUHwAGogGBAfIAEgFiABKAJgajYCcCABIAcgASgCZGo2AnQgASAIIAEoAmhqNgJ4IAEgGSABKAJsajYCfCABQeAAaiABQfAAaiAOIA8QICABKAJgIRUgASgCZCESIAEoAmghCyABKAJsIRQgASAJNgJkIAEgAjYCYCABIBA2AmggASAMNgJsIAEgBjYCdCABIAU2AnAgASAENgJ4IAEgAzYCfCABQdAAaiABQeAAaiABQfAAaiALQcrU4vYEaiAUQbOZ8MgDahAeIAEoAlwhDCABKAJYIRAgASgCUCECIAEoAlQhCSABIAY2AmQgASAFNgJgIAEgBDYCaCABIAM2AmwgASAJNgJ0IAEgAjYCcCABIBA2AnggASAMNgJ8IAFB0ABqIAFB4ABqIAFB8ABqIBVB89+5wQZqIBJBz5Tz3AVqEB4gASgCXCEDIAEoAlghBCABKAJQIQUgASgCVCEGIAEgDTYCdCABIBE2AnAgASATNgJ4IAEgGDYCfCABQeAAaiABQfAAaiAKEB8gASAUIAEoAmBqNgJwIAEgDiABKAJkajYCdCABIA8gASgCaGo2AnggASAXIAEoAmxqNgJ8IAFBQGsgAUHwAGogFSASECAgASAJNgJkIAEgAjYCYCABIBA2AmggASAMNgJsIAEgBjYCdCABIAU2AnAgASAENgJ4IAEgAzYCfCABKAJAIREgASgCRCENIAFB0ABqIAFB4ABqIAFB8ABqIAEoAkhB78aVxQdqIAEoAkwiCUHuhb6kB2oQHiABKAJcIRggASgCWCETIAEoAlAhDiABKAJUIQ8gASAGNgJkIAEgBTYCYCABIAQ2AmggASADNgJsIAEgDzYCdCABIA42AnAgASATNgJ4IAEgGDYCfCABQdAAaiABQeAAaiABQfAAaiARQYiEnOZ4aiANQZTwoaZ4ahAeIAEoAlwhDCABKAJYIRAgASgCUCEXIAEoAlQhAiABIAg2AnQgASAHNgJwIAEgGTYCeCABIAo2AnwgAUHgAGogAUHwAGogFhAfIAEgCSABKAJgajYCcCABIBUgASgCZGo2AnQgASASIAEoAmhqNgJ4IAEgCyABKAJsajYCfCABQeAAaiABQfAAaiARIA0QICABKAJgIQ0gASgCZCEZIAEoAmghByABKAJsIQggASAPNgJkIAEgDjYCYCABIBM2AmggASAYNgJsIAEgAjYCdCABIBc2AnAgASAQNgJ4IAEgDDYCfCABQdAAaiABQeAAaiABQfAAaiAHQevZwaJ6aiAIQfr/+4V5ahAeIAEoAlwhByABKAJYIQggASgCUCEKIAEoAlQhESABIAI2AmQgASAXNgJgIAEgEDYCaCABIAw2AmwgASARNgJ0IAEgCjYCcCABIAg2AnggASAHNgJ8IAFB0ABqIAFB4ABqIAFB8ABqIA1B8vHFs3xqIBlB98fm93tqEB4gASgCXCENIAEoAlghGCABKAJQIRMgACAeIAEoAlRqNgIEIAAgEyAdajYCACAAIAogIWo2AgggACARICJqNgIMIAAgGCAcajYCECAAIA0gG2o2AhQgACAIICBqNgIYIAAgByAfajYCHCABQYABaiQAC30BAX8jAEEwayICJAAgAiABNgIEIAIgADYCACACQSxqQQE2AgAgAkEUakECNgIAIAJBHGpBAjYCACACQQE2AiQgAkGMFTYCCCACQQI2AgwgAkHMDTYCECACIAI2AiAgAiACQQRqNgIoIAIgAkEgajYCGCACQQhqQZwVECgAC3wBAX8jAEEwayIDJAAgAyACNgIEIAMgATYCACADQSxqQQE2AgAgA0EUakECNgIAIANBHGpBAjYCACADQQE2AiQgA0HcFDYCCCADQQI2AgwgA0HMDTYCECADIANBBGo2AiAgAyADNgIoIAMgA0EgajYCGCADQQhqIAAQKAAL1gEBBn8gACABKAIAIgggAigCBCIHcyACKAIAIgVxIAggB3FzIAVBHncgBUETd3MgBUEKd3NqIAIoAggiBkEadyAGQRV3cyAGQQd3cyAEaiABKAIMaiABKAIIIgQgAigCDCIJcyAGcSAEc2oiCmoiAjYCBCAAIAogASgCBGoiATYCDCAAIAJBHncgAkETd3MgAkEKd3MgAiAHIAVzcSAHIAVxc2ogBCADaiAJIAEgCSAGc3FzaiABQRp3IAFBFXdzIAFBB3dzaiIFajYCACAAIAUgCGo2AggLeAAgACACQRl3IAJBA3ZzIAJBDndzIAEoAgAiAmo2AgAgACACQRl3IAJBA3ZzIAJBDndzIAEoAgQiAmo2AgQgACACQRl3IAJBA3ZzIAJBDndzIAEoAggiAmo2AgggACACQRl3IAJBA3ZzIAJBDndzIAEoAgxqNgIMC3YAIAAgAkENdyACQQp2cyACQQ93cyABKAIIaiICNgIIIAAgA0ENdyADQQp2cyADQQ93cyABKAIMaiIDNgIMIAAgAkENdyACQQp2cyACQQ93cyABKAIAajYCACAAIANBDXcgA0EKdnMgA0EPd3MgASgCBGo2AgQLUAACQAJAQegPKAIAQQFGBEBB7A9B7A8oAgBBAWoiADYCACAAQQNJDQEMAgtB6A9CgYCAgBA3AwALQfQPKAIAIgBBf0wNAEH0DyAANgIACwALPwECfyMAQRBrIgEkAAJ/IAAoAggiAiACDQAaQbQUEAcACxogASAAKQIMNwMAIAEgAEEUaikCADcDCCABECEAC7MCAQV/IAAoAhghAwJAAkACQCAAKAIMIgIgAEcEQCAAKAIIIgEgAjYCDCACIAE2AgggAw0BDAILIABBFGoiASAAQRBqIAEoAgAbIgQoAgAiAQRAAkADQCAEIQUgASICQRRqIgQoAgAiAQRAIAENAQwCCyACQRBqIQQgAigCECIBDQALCyAFQQA2AgAgAw0BDAILQQAhAiADRQ0BCwJAIAAoAhwiBEECdEGMEmoiASgCACAARwRAIANBEGogA0EUaiADKAIQIABGGyACNgIAIAINAQwCCyABIAI2AgAgAkUNAgsgAiADNgIYIAAoAhAiAQRAIAIgATYCECABIAI2AhgLIABBFGooAgAiAUUNACACQRRqIAE2AgAgASACNgIYCw8LQYAQQYAQKAIAQX4gBHdxNgIAC8UCAQR/IAACf0EAIAFBCHYiA0UNABpBHyICIAFB////B0sNABogAUEmIANnIgJrQR9xdkEBcUEfIAJrQQF0cgsiAjYCHCAAQgA3AhAgAkECdEGMEmohAwJAAkACQEGAECgCACIEQQEgAkEfcXQiBXEEQCADKAIAIgQoAgRBeHEgAUcNASAEIQIMAgsgAyAANgIAQYAQIAQgBXI2AgAgACADNgIYIAAgADYCCCAAIAA2AgwPCyABQQBBGSACQQF2a0EfcSACQR9GG3QhAwNAIAQgA0EddkEEcWpBEGoiBSgCACICRQ0CIANBAXQhAyACIQQgAigCBEF4cSABRw0ACwsgAigCCCIDIAA2AgwgAiAANgIIIAAgAjYCDCAAIAM2AgggAEEANgIYDwsgBSAANgIAIAAgBDYCGCAAIAA2AgwgACAANgIIC/UEAQR/IAAgAWohAgJAAkACQAJAAkACQAJAAkAgACgCBCIDQQFxDQAgA0EDcUUNASAAKAIAIgMgAWohAQJAAkBBlBMoAgAgACADayIARwRAIANB/wFLDQEgACgCDCIEIAAoAggiBUYNAiAFIAQ2AgwgBCAFNgIIDAMLIAIoAgQiA0EDcUEDRw0CQYwTIAE2AgAgAkEEaiADQX5xNgIAIAAgAUEBcjYCBCACIAE2AgAPCyAAECMMAQtB/A9B/A8oAgBBfiADQQN2d3E2AgALAkAgAigCBCIDQQJxRQRAQZgTKAIAIAJGDQFBlBMoAgAgAkYNAyADQXhxIgQgAWohASAEQf8BSw0EIAIoAgwiBCACKAIIIgJGDQYgAiAENgIMIAQgAjYCCAwHCyACQQRqIANBfnE2AgAgACABQQFyNgIEIAAgAWogATYCAAwHC0GYEyAANgIAQZATQZATKAIAIAFqIgE2AgAgACABQQFyNgIEIABBlBMoAgBGDQMLDwtBlBMgADYCAEGME0GMEygCACABaiIBNgIAIAAgAUEBcjYCBCAAIAFqIAE2AgAPCyACECMMAgtBjBNBADYCAEGUE0EANgIADwtB/A9B/A8oAgBBfiADQQN2d3E2AgALIAAgAUEBcjYCBCAAIAFqIAE2AgAgAEGUEygCAEcNAEGMEyABNgIADwsCfwJAIAFB/wFNBEAgAUEDdiICQQN0QYQQaiEBQfwPKAIAIgNBASACQR9xdCICcUUNASABKAIIDAILIAAgARAkDwtB/A8gAyACcjYCACABCyECIAFBCGogADYCACACIAA2AgwgACABNgIMIAAgAjYCCAvSAgEFfyMAQRBrIgMkAAJ/IAAoAgAoAgAiAkGAgMQARwRAIAFBHGooAgAhBCABKAIYIQUgA0EANgIMAn8gAkH/AE0EQCADIAI6AAxBAQwBCyACQf8PTQRAIAMgAkE/cUGAAXI6AA0gAyACQQZ2QR9xQcABcjoADEECDAELIAJB//8DTQRAIAMgAkE/cUGAAXI6AA4gAyACQQZ2QT9xQYABcjoADSADIAJBDHZBD3FB4AFyOgAMQQMMAQsgAyACQRJ2QfABcjoADCADIAJBP3FBgAFyOgAPIAMgAkEMdkE/cUGAAXI6AA0gAyACQQZ2QT9xQYABcjoADkEECyEGQQEiAiAFIANBDGogBiAEKAIMEQUADQEaCyAAKAIELQAABEAgASgCGCAAKAIIIgAoAgAgACgCBCABQRxqKAIAKAIMEQUADAELQQALIQIgA0EQaiQAIAILqggBCX8jAEHQAGsiAiQAQSchAwJAIAAoAgAiAEGQzgBPBEADQCACQQlqIANqIgVBfGogACAAQZDOAG4iBEHwsX9saiIHQeQAbiIGQQF0QboLai8AADsAACAFQX5qIAcgBkGcf2xqQQF0QboLai8AADsAACADQXxqIQMgAEH/wdcvSyEFIAQhACAFDQALDAELIAAhBAsCQCAEQeQATgRAIAJBCWogA0F+aiIDaiAEIARB5ABuIgBBnH9sakEBdEG6C2ovAAA7AAAMAQsgBCEACwJAIABBCUwEQCACQQlqIANBf2oiA2oiCCAAQTBqOgAADAELIAJBCWogA0F+aiIDaiIIIABBAXRBugtqLwAAOwAACyACQQA2AjQgAkGEDTYCMCACQYCAxAA2AjhBJyADayIGIQMgASgCACIAQQFxBEAgAkErNgI4IAZBAWohAwsgAiAAQQJ2QQFxOgA/IAEoAgghBCACIAJBP2o2AkQgAiACQThqNgJAIAIgAkEwajYCSAJ/AkACQAJ/AkACQAJAAkACQAJAAkAgBEEBRgRAIAFBDGooAgAiBCADTQ0BIABBCHENAiAEIANrIQVBASABLQAwIgAgAEEDRhtBA3EiAEUNAyAAQQJGDQQMBQsgAkFAayABECYNCCABKAIYIAggBiABQRxqKAIAKAIMEQUADAoLIAJBQGsgARAmDQcgASgCGCAIIAYgAUEcaigCACgCDBEFAAwJCyABQQE6ADAgAUEwNgIEIAJBQGsgARAmDQYgAkEwNgJMIAQgA2shAyABKAIYIQRBfyEAIAFBHGooAgAiB0EMaiEFA0AgAEEBaiIAIANPDQQgBCACQcwAakEBIAUoAgARBQBFDQALDAYLIAUhCUEAIQUMAQsgBUEBakEBdiEJIAVBAXYhBQsgAkEANgJMIAEoAgQiAEH/AE0EQCACIAA6AExBAQwDCyAAQf8PSw0BIAIgAEE/cUGAAXI6AE0gAiAAQQZ2QR9xQcABcjoATEECDAILIAQgCCAGIAdBDGooAgARBQANAgwDCyAAQf//A00EQCACIABBP3FBgAFyOgBOIAIgAEEGdkE/cUGAAXI6AE0gAiAAQQx2QQ9xQeABcjoATEEDDAELIAIgAEESdkHwAXI6AEwgAiAAQT9xQYABcjoATyACIABBDHZBP3FBgAFyOgBNIAIgAEEGdkE/cUGAAXI6AE5BBAshBCABKAIYIQNBfyEAIAFBHGooAgAiCkEMaiEHAkADQCAAQQFqIgAgBU8NASADIAJBzABqIAQgBygCABEFAEUNAAsMAQsgAkFAayABECYNACADIAggBiAKQQxqKAIAIgURBQANAEF/IQADQCAAQQFqIgAgCU8NAiADIAJBzABqIAQgBREFAEUNAAsLQQEMAQtBAAshACACQdAAaiQAIAALRgIBfwF+IwBBIGsiAiQAIAEpAgAhAyACQRRqIAEpAgg3AgAgAkHMFDYCBCACQYQNNgIAIAIgADYCCCACIAM3AgwgAhAiAAsDAAELDQBCiLKUk5iBlYz/AAszAQF/IAIEQCAAIQMDQCADIAEtAAA6AAAgAUEBaiEBIANBAWohAyACQX9qIgINAAsLIAALZwEBfwJAIAEgAEkEQCACRQ0BA0AgACACakF/aiABIAJqQX9qLQAAOgAAIAJBf2oiAg0ACwwBCyACRQ0AIAAhAwNAIAMgAS0AADoAACABQQFqIQEgA0EBaiEDIAJBf2oiAg0ACwsgAAspAQF/IAIEQCAAIQMDQCADIAE6AAAgA0EBaiEDIAJBf2oiAg0ACwsgAAsLoQkDAEGACAu0AWludmFsaWQgbWFsbG9jIHJlcXVlc3RUcmllZCB0byBzaHJpbmsgdG8gYSBsYXJnZXIgY2FwYWNpdHlhc3NlcnRpb24gZmFpbGVkOiA4ID09IGRzdC5sZW4oKS9yb290Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL2J5dGUtdG9vbHMtMC4yLjAvc3JjL3dyaXRlX3NpbmdsZS5ycwBBwAkL2gUvcm9vdC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9ibG9jay1idWZmZXItMC4zLjMvc3JjL2xpYi5yc2Rlc3RpbmF0aW9uIGFuZCBzb3VyY2Ugc2xpY2VzIGhhdmUgZGlmZmVyZW50IGxlbmd0aHMAZ+YJaoWuZ7ty8248OvVPpX9SDlGMaAWbq9mDHxnN4FsAAAAAAGNhcGFjaXR5IG92ZXJmbG93Y2FsbGVkIGBPcHRpb246OnVud3JhcCgpYCBvbiBhIGBOb25lYCB2YWx1ZWxpYmNvcmUvb3B0aW9uLnJzMDAwMTAyMDMwNDA1MDYwNzA4MDkxMDExMTIxMzE0MTUxNjE3MTgxOTIwMjEyMjIzMjQyNTI2MjcyODI5MzAzMTMyMzMzNDM1MzYzNzM4Mzk0MDQxNDI0MzQ0NDU0NjQ3NDg0OTUwNTE1MjUzNTQ1NTU2NTc1ODU5NjA2MTYyNjM2NDY1NjY2NzY4Njk3MDcxNzI3Mzc0NzU3Njc3Nzg3OTgwODE4MjgzODQ4NTg2ODc4ODg5OTA5MTkyOTM5NDk1OTY5Nzk4OTkAAABpbmRleCBvdXQgb2YgYm91bmRzOiB0aGUgbGVuIGlzICBidXQgdGhlIGluZGV4IGlzIGxpYmNvcmUvc2xpY2UvbW9kLnJzAAEAAAAAAAAAIAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAwAAAAEAAAABAAAAIAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAwAAAGluZGV4ICBvdXQgb2YgcmFuZ2UgZm9yIHNsaWNlIG9mIGxlbmd0aCBzbGljZSBpbmRleCBzdGFydHMgYXQgIGJ1dCBlbmRzIGF0IGludGVybmFsIGVycm9yOiBlbnRlcmVkIHVucmVhY2hhYmxlIGNvZGVsaWJhbGxvYy9yYXdfdmVjLnJzAEHEEwv9ARYEAAAkAAAAhwcAABMAAABIAgAACQAAAMAEAABTAAAASwAAABEAAAA6BAAAIAAAAFoEAABaAAAAHwAAAAUAAAATBQAANAAAALcGAAAUAAAAbQYAAAkAAABtBQAAEQAAAIcHAAATAAAA8gIAAAUAAAB+BQAAKwAAAKkFAAARAAAAWQEAABUAAAACAAAAAAAAAAEAAAADAAAAhQYAACAAAAClBgAAEgAAABQHAAAGAAAAGgcAACIAAAC3BgAAFAAAAK0HAAAFAAAAPAcAABYAAABSBwAADQAAALcGAAAUAAAAswcAAAUAAABfBwAAKAAAAIcHAAATAAAA9QEAAB4ADAdsaW5raW5nAwLEDQ==';\n//# sourceMappingURL=sha256.base64.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/bin/sha256/sha256.base64.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/bin/sha512/sha512.base64.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/bin/sha512/sha512.base64.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sha512Base64Bytes\": () => (/* binding */ sha512Base64Bytes)\n/* harmony export */ });\n/* eslint-disable tsdoc/syntax */\n/**\n * @hidden\n */\n// prettier-ignore\nconst sha512Base64Bytes = '';\n//# sourceMappingURL=sha512.base64.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/bin/sha512/sha512.base64.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-bch/compiler-bch.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-bch/compiler-bch.js ***!
  \*******************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"authenticationTemplateToCompilerBCH\": () => (/* binding */ authenticationTemplateToCompilerBCH)\n/* harmony export */ });\n/* unused harmony exports SigningSerializationAlgorithmIdentifier, compilerOperationHelperComputeSignatureBCH, compilerOperationHelperHdKeySignatureBCH, compilerOperationHdKeyEcdsaSignatureBCH, compilerOperationHdKeySchnorrSignatureBCH, compilerOperationHelperKeySignatureBCH, compilerOperationKeyEcdsaSignatureBCH, compilerOperationKeySchnorrSignatureBCH, compilerOperationHelperComputeDataSignatureBCH, compilerOperationHelperKeyDataSignatureBCH, compilerOperationKeyEcdsaDataSignatureBCH, compilerOperationKeySchnorrDataSignatureBCH, compilerOperationHelperHdKeyDataSignatureBCH, compilerOperationHdKeyEcdsaDataSignatureBCH, compilerOperationHdKeySchnorrDataSignatureBCH, compilerOperationSigningSerializationFullBCH, compilerOperationsBCH, createCompilerBCH, createCompiler */\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/combinations.js\");\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\n/* harmony import */ var _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vm/vm.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/signing-serialization.js\");\n/* harmony import */ var _vm_vm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../vm/vm.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\n/* harmony import */ var _vm_vm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../vm/vm.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/chips/bch-chips-opcodes.js\");\n/* harmony import */ var _vm_vm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../vm/vm.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-vm.js\");\n/* harmony import */ var _compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../compiler-operation-helpers.js */ \"../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-operation-helpers.js\");\n/* harmony import */ var _compiler_operations_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../compiler-operations.js */ \"../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-operations.js\");\n/* harmony import */ var _compiler_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../compiler-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_vm_vm_js__WEBPACK_IMPORTED_MODULE_0__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__, _compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__, _compiler_operations_js__WEBPACK_IMPORTED_MODULE_3__, _compiler_utils_js__WEBPACK_IMPORTED_MODULE_4__, _vm_vm_js__WEBPACK_IMPORTED_MODULE_5__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_7__, _vm_vm_js__WEBPACK_IMPORTED_MODULE_8__]);\n([_vm_vm_js__WEBPACK_IMPORTED_MODULE_0__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__, _compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__, _compiler_operations_js__WEBPACK_IMPORTED_MODULE_3__, _compiler_utils_js__WEBPACK_IMPORTED_MODULE_4__, _vm_vm_js__WEBPACK_IMPORTED_MODULE_5__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_7__, _vm_vm_js__WEBPACK_IMPORTED_MODULE_8__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nvar SigningSerializationAlgorithmIdentifier;\n(function (SigningSerializationAlgorithmIdentifier) {\n    /**\n     * A.K.A. `SIGHASH_ALL|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"allOutputs\"] = \"all_outputs\";\n    /**\n     * A.K.A. `SIGHASH_ALL|SIGHASH_UTXOS|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"allOutputsAllUtxos\"] = \"all_outputs_all_utxos\";\n    /**\n     * A.K.A. `SIGHASH_ALL|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"allOutputsSingleInput\"] = \"all_outputs_single_input\";\n    /**\n     * A.K.A. `SIGHASH_ALL|SIGHASH_UTXOS|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"allOutputsSingleInputInvalidAllUtxos\"] = \"all_outputs_single_input_INVALID_all_utxos\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"correspondingOutput\"] = \"corresponding_output\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE|SIGHASH_UTXOS|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"correspondingOutputAllUtxos\"] = \"corresponding_output_all_utxos\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"correspondingOutputSingleInput\"] = \"corresponding_output_single_input\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE|SIGHASH_UTXOS|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"correspondingOutputSingleInputInvalidAllUtxos\"] = \"corresponding_output_single_input_INVALID_all_utxos\";\n    /**\n     * An alias for `all_outputs_all_utxos`\n     * (A.K.A. `SIGHASH_ALL|SIGHASH_UTXOS|SIGHASH_FORKID`),\n     * the most secure signing serialization algorithm.\n     *\n     * Note that as of 2022, `all_outputs` (A.K.A. `SIGHASH_ALL|SIGHASH_FORKID`)\n     * is more commonly used and is therefore a better choice for privacy in\n     * common, existing contract types.\n     */\n    SigningSerializationAlgorithmIdentifier[\"default\"] = \"default\";\n    /**\n     * A.K.A `SIGHASH_NONE|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"noOutputs\"] = \"no_outputs\";\n    /**\n     * A.K.A `SIGHASH_NONE|SIGHASH_UTXOS|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"noOutputsAllUtxos\"] = \"no_outputs_all_utxos\";\n    /**\n     * A.K.A `SIGHASH_NONE|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"noOutputsSingleInput\"] = \"no_outputs_single_input\";\n    /**\n     * A.K.A. `SIGHASH_NONE|SIGHASH_UTXOS|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"noOutputsSingleInputInvalidAllUtxos\"] = \"no_outputs_single_input_INVALID_all_utxos\";\n})(SigningSerializationAlgorithmIdentifier || (SigningSerializationAlgorithmIdentifier = {}));\n// eslint-disable-next-line complexity\nconst getSigningSerializationType = (algorithmIdentifier, prefix = '') => {\n    switch (algorithmIdentifier) {\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputs}`:\n            return Uint8Array.of(_vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypeBCH.allOutputs);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputsAllUtxos}`:\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.default}`:\n            return Uint8Array.of(_vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypeBCH.allOutputsAllUtxos);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputsSingleInput}`:\n            return Uint8Array.of(_vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypeBCH.allOutputsSingleInput);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputsSingleInputInvalidAllUtxos}`:\n            return Uint8Array.of(\n            // eslint-disable-next-line no-bitwise\n            _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationFlag.allOutputs |\n                _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationFlag.singleInput |\n                _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationFlag.utxos |\n                _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationFlag.forkId);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutput}`:\n            return Uint8Array.of(_vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypeBCH.correspondingOutput);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutputAllUtxos}`:\n            return Uint8Array.of(_vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypeBCH.correspondingOutputAllUtxos);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutputSingleInput}`:\n            return Uint8Array.of(_vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypeBCH.correspondingOutputSingleInput);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutputSingleInputInvalidAllUtxos}`:\n            return Uint8Array.of(\n            // eslint-disable-next-line no-bitwise\n            _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationFlag.correspondingOutput |\n                _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationFlag.singleInput |\n                _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationFlag.utxos |\n                _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationFlag.forkId);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputs}`:\n            return Uint8Array.of(_vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypeBCH.noOutputs);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputsAllUtxos}`:\n            return Uint8Array.of(_vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypeBCH.noOutputsAllUtxos);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputsSingleInput}`:\n            return Uint8Array.of(_vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypeBCH.noOutputsSingleInput);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputsSingleInputInvalidAllUtxos}`:\n            return Uint8Array.of(\n            // eslint-disable-next-line no-bitwise\n            _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationFlag.noOutputs |\n                _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationFlag.singleInput |\n                _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationFlag.utxos |\n                _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationFlag.forkId);\n        default:\n            return undefined;\n    }\n};\nconst compilerOperationHelperComputeSignatureBCH = ({ coveredBytecode, identifier, compilationContext, operationName, privateKey, sha256, sign, }) => {\n    const [, , algorithm, unknown] = identifier.split('.');\n    if (unknown !== undefined) {\n        return {\n            error: `Unknown component in \"${identifier}\" - the fragment \"${unknown}\" is not recognized.`,\n            status: 'error',\n        };\n    }\n    if (algorithm === undefined) {\n        return {\n            error: `Invalid signature identifier. Signatures must be of the form: \"[variable_id].${operationName}.[signing_serialization_type]\".`,\n            status: 'error',\n        };\n    }\n    const signingSerializationType = getSigningSerializationType(algorithm);\n    if (signingSerializationType === undefined) {\n        return {\n            error: `Unknown signing serialization algorithm, \"${algorithm}\".`,\n            status: 'error',\n        };\n    }\n    const serialization = (0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.generateSigningSerializationBCH)(compilationContext, { coveredBytecode, signingSerializationType }, sha256);\n    const digest = (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256)(serialization, sha256);\n    const bitcoinEncodedSignature = Uint8Array.from([\n        ...sign(privateKey, digest),\n        ...signingSerializationType,\n    ]);\n    return {\n        bytecode: bitcoinEncodedSignature,\n        signature: { serialization },\n        status: 'success',\n    };\n};\nconst compilerOperationHelperHdKeySignatureBCH = ({ operationName, secp256k1Method, }) => (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.attemptCompilerOperations)([_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [\n        'entityOwnership',\n        'ripemd160',\n        'secp256k1',\n        'sha256',\n        'sha512',\n        'variables',\n        'sourceScriptIds',\n        'unlockingScripts',\n    ],\n    dataProperties: ['hdKeys', 'compilationContext'],\n    operation: (identifier, data, configuration) => {\n        const { hdKeys, compilationContext } = data;\n        const { secp256k1, sha256, sourceScriptIds, unlockingScripts } = configuration;\n        const derivationResult = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.compilerOperationHelperDeriveHdKeyPrivate)({\n            configuration,\n            hdKeys,\n            identifier,\n        });\n        if (derivationResult.status === 'error')\n            return derivationResult;\n        const result = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.compilerOperationHelperGenerateCoveredBytecode)({\n            configuration,\n            data,\n            identifier,\n            sourceScriptIds,\n            unlockingScripts,\n        });\n        if ('error' in result) {\n            return result;\n        }\n        return compilerOperationHelperComputeSignatureBCH({\n            compilationContext,\n            coveredBytecode: result,\n            identifier,\n            operationName,\n            privateKey: derivationResult.bytecode,\n            sha256,\n            sign: secp256k1[secp256k1Method],\n        });\n    },\n}));\nconst compilerOperationHdKeyEcdsaSignatureBCH = compilerOperationHelperHdKeySignatureBCH({\n    operationName: 'signature',\n    secp256k1Method: 'signMessageHashDER',\n});\nconst compilerOperationHdKeySchnorrSignatureBCH = compilerOperationHelperHdKeySignatureBCH({\n    operationName: 'schnorr_signature',\n    secp256k1Method: 'signMessageHashSchnorr',\n});\nconst compilerOperationHelperKeySignatureBCH = ({ operationName, secp256k1Method, }) => (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.attemptCompilerOperations)([_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [\n        'sha256',\n        'secp256k1',\n        'unlockingScripts',\n        'sourceScriptIds',\n    ],\n    dataProperties: ['keys', 'compilationContext'],\n    operation: (identifier, data, configuration) => {\n        const { keys, compilationContext } = data;\n        const { secp256k1, sha256, unlockingScripts, sourceScriptIds } = configuration;\n        const { privateKeys } = keys;\n        const [variableId] = identifier.split('.');\n        const privateKey = privateKeys === undefined ? undefined : privateKeys[variableId];\n        if (privateKey === undefined) {\n            return {\n                error: `Identifier \"${identifier}\" refers to a Key, but a private key for \"${variableId}\" (or an existing signature) was not provided in the compilation data.`,\n                recoverable: true,\n                status: 'error',\n            };\n        }\n        const result = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.compilerOperationHelperGenerateCoveredBytecode)({\n            configuration,\n            data,\n            identifier,\n            sourceScriptIds,\n            unlockingScripts,\n        });\n        if ('error' in result) {\n            return result;\n        }\n        return compilerOperationHelperComputeSignatureBCH({\n            compilationContext,\n            coveredBytecode: result,\n            identifier,\n            operationName,\n            privateKey,\n            sha256,\n            sign: secp256k1[secp256k1Method],\n        });\n    },\n}));\nconst compilerOperationKeyEcdsaSignatureBCH = compilerOperationHelperKeySignatureBCH({\n    operationName: 'signature',\n    secp256k1Method: 'signMessageHashDER',\n});\nconst compilerOperationKeySchnorrSignatureBCH = compilerOperationHelperKeySignatureBCH({\n    operationName: 'schnorr_signature',\n    secp256k1Method: 'signMessageHashSchnorr',\n});\nconst compilerOperationHelperComputeDataSignatureBCH = ({ data, configuration, identifier, operationName, privateKey, sha256, sign, }) => {\n    const [, , scriptId, unknown] = identifier.split('.');\n    if (unknown !== undefined) {\n        return {\n            error: `Unknown component in \"${identifier}\" - the fragment \"${unknown}\" is not recognized.`,\n            status: 'error',\n        };\n    }\n    if (scriptId === undefined) {\n        return {\n            error: `Invalid data signature identifier. Data signatures must be of the form: \"[variable_id].${operationName}.[target_script_id]\".`,\n            status: 'error',\n        };\n    }\n    const result = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.compilerOperationHelperCompileScript)({\n        configuration,\n        data,\n        targetScriptId: scriptId,\n    });\n    if (result === false) {\n        return {\n            error: `Data signature tried to sign an unknown target script, \"${scriptId}\".`,\n            status: 'error',\n        };\n    }\n    if ('error' in result) {\n        return result;\n    }\n    const digest = sha256.hash(result);\n    return {\n        bytecode: sign(privateKey, digest),\n        signature: { digest, message: result },\n        status: 'success',\n    };\n};\nconst compilerOperationHelperKeyDataSignatureBCH = ({ operationName, secp256k1Method, }) => (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.attemptCompilerOperations)([_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: ['sha256', 'secp256k1'],\n    dataProperties: ['keys'],\n    operation: (identifier, data, configuration) => {\n        const { keys } = data;\n        const { secp256k1, sha256 } = configuration;\n        const { privateKeys } = keys;\n        const [variableId] = identifier.split('.');\n        const privateKey = privateKeys === undefined ? undefined : privateKeys[variableId];\n        if (privateKey === undefined) {\n            return {\n                error: `Identifier \"${identifier}\" refers to a Key, but a private key for \"${variableId}\" (or an existing signature) was not provided in the compilation data.`,\n                recoverable: true,\n                status: 'error',\n            };\n        }\n        return compilerOperationHelperComputeDataSignatureBCH({\n            configuration,\n            data,\n            identifier,\n            operationName,\n            privateKey,\n            sha256,\n            sign: secp256k1[secp256k1Method],\n        });\n    },\n}));\nconst compilerOperationKeyEcdsaDataSignatureBCH = compilerOperationHelperKeyDataSignatureBCH({\n    operationName: 'data_signature',\n    secp256k1Method: 'signMessageHashDER',\n});\nconst compilerOperationKeySchnorrDataSignatureBCH = compilerOperationHelperKeyDataSignatureBCH({\n    operationName: 'schnorr_data_signature',\n    secp256k1Method: 'signMessageHashSchnorr',\n});\nconst compilerOperationHelperHdKeyDataSignatureBCH = ({ operationName, secp256k1Method, }) => (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.attemptCompilerOperations)([_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [\n        'entityOwnership',\n        'ripemd160',\n        'secp256k1',\n        'sha256',\n        'sha512',\n        'variables',\n    ],\n    dataProperties: ['hdKeys'],\n    operation: (identifier, data, configuration) => {\n        const { hdKeys } = data;\n        const { secp256k1, sha256 } = configuration;\n        const derivationResult = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.compilerOperationHelperDeriveHdKeyPrivate)({\n            configuration,\n            hdKeys,\n            identifier,\n        });\n        if (derivationResult.status === 'error')\n            return derivationResult;\n        return compilerOperationHelperComputeDataSignatureBCH({\n            configuration,\n            data,\n            identifier,\n            operationName,\n            privateKey: derivationResult.bytecode,\n            sha256,\n            sign: secp256k1[secp256k1Method],\n        });\n    },\n}));\nconst compilerOperationHdKeyEcdsaDataSignatureBCH = compilerOperationHelperHdKeyDataSignatureBCH({\n    operationName: 'data_signature',\n    secp256k1Method: 'signMessageHashDER',\n});\nconst compilerOperationHdKeySchnorrDataSignatureBCH = compilerOperationHelperHdKeyDataSignatureBCH({\n    operationName: 'schnorr_data_signature',\n    secp256k1Method: 'signMessageHashSchnorr',\n});\nconst compilerOperationSigningSerializationFullBCH = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: ['sha256', 'sourceScriptIds', 'unlockingScripts'],\n    dataProperties: ['compilationContext'],\n    operation: (identifier, data, configuration) => {\n        const [, algorithmOrComponent, unknownPart] = identifier.split('.');\n        if (algorithmOrComponent === undefined) {\n            return {\n                error: `Invalid signing serialization operation. Include the desired component or algorithm, e.g. \"signing_serialization.version\".`,\n                status: 'error',\n            };\n        }\n        if (unknownPart !== undefined) {\n            return {\n                error: `Unknown component in \"${identifier}\" - the fragment \"${unknownPart}\" is not recognized.`,\n                status: 'error',\n            };\n        }\n        const signingSerializationType = getSigningSerializationType(algorithmOrComponent, 'full_');\n        if (signingSerializationType === undefined) {\n            return {\n                error: `Unknown signing serialization algorithm, \"${algorithmOrComponent}\".`,\n                status: 'error',\n            };\n        }\n        const { sha256, sourceScriptIds, unlockingScripts } = configuration;\n        const result = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_2__.compilerOperationHelperGenerateCoveredBytecode)({\n            configuration,\n            data,\n            identifier,\n            sourceScriptIds,\n            unlockingScripts,\n        });\n        if ('error' in result) {\n            return result;\n        }\n        const { compilationContext } = data;\n        return {\n            bytecode: (0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.generateSigningSerializationBCH)(compilationContext, {\n                coveredBytecode: result,\n                signingSerializationType,\n            }, sha256),\n            status: 'success',\n        };\n    },\n});\n/* eslint-disable camelcase, @typescript-eslint/naming-convention */\nconst compilerOperationsBCH = {\n    ..._compiler_operations_js__WEBPACK_IMPORTED_MODULE_3__.compilerOperationsCommon,\n    hdKey: {\n        data_signature: compilerOperationHdKeyEcdsaDataSignatureBCH,\n        public_key: _compiler_operations_js__WEBPACK_IMPORTED_MODULE_3__.compilerOperationsCommon.hdKey.public_key,\n        schnorr_data_signature: compilerOperationHdKeySchnorrDataSignatureBCH,\n        schnorr_signature: compilerOperationHdKeySchnorrSignatureBCH,\n        signature: compilerOperationHdKeyEcdsaSignatureBCH,\n    },\n    key: {\n        data_signature: compilerOperationKeyEcdsaDataSignatureBCH,\n        public_key: _compiler_operations_js__WEBPACK_IMPORTED_MODULE_3__.compilerOperationsCommon.key.public_key,\n        schnorr_data_signature: compilerOperationKeySchnorrDataSignatureBCH,\n        schnorr_signature: compilerOperationKeySchnorrSignatureBCH,\n        signature: compilerOperationKeyEcdsaSignatureBCH,\n    },\n    signingSerialization: {\n        ..._compiler_operations_js__WEBPACK_IMPORTED_MODULE_3__.compilerOperationsCommon.signingSerialization,\n        full_all_outputs: compilerOperationSigningSerializationFullBCH,\n        full_all_outputs_all_utxos: compilerOperationSigningSerializationFullBCH,\n        full_all_outputs_single_input: compilerOperationSigningSerializationFullBCH,\n        full_all_outputs_single_input_INVALID_all_utxos: compilerOperationSigningSerializationFullBCH,\n        full_corresponding_output: compilerOperationSigningSerializationFullBCH,\n        full_corresponding_output_all_utxos: compilerOperationSigningSerializationFullBCH,\n        full_corresponding_output_single_input: compilerOperationSigningSerializationFullBCH,\n        full_corresponding_output_single_input_INVALID_all_utxos: compilerOperationSigningSerializationFullBCH,\n        full_default: compilerOperationSigningSerializationFullBCH,\n        full_no_outputs: compilerOperationSigningSerializationFullBCH,\n        full_no_outputs_all_utxos: compilerOperationSigningSerializationFullBCH,\n        full_no_outputs_single_input: compilerOperationSigningSerializationFullBCH,\n        full_no_outputs_single_input_INVALID_all_utxos: compilerOperationSigningSerializationFullBCH,\n    },\n};\n/**\n * Create a compiler using the default BCH compiler configuration.\n *\n * Internally instantiates the necessary crypto and VM implementations – use\n * {@link compilerConfigurationToCompilerBCH} for more control.\n *\n * @param configuration - a compiler configuration from which properties\n * will be used to override properties of the default BCH configuration – must\n * include the `scripts` property\n */\nconst createCompilerBCH = (configuration) => (0,_compiler_utils_js__WEBPACK_IMPORTED_MODULE_4__.compilerConfigurationToCompilerBCH)({\n    ...{\n        createAuthenticationProgram: _compiler_utils_js__WEBPACK_IMPORTED_MODULE_4__.createAuthenticationProgramEvaluationCommon,\n        opcodes: (0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_5__.generateBytecodeMap)(_vm_vm_js__WEBPACK_IMPORTED_MODULE_6__.OpcodesBCHCHIPs),\n        operations: compilerOperationsBCH,\n        ripemd160: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_7__.ripemd160,\n        secp256k1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_7__.secp256k1,\n        sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_7__.sha256,\n        sha512: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_7__.sha512,\n        vm: configuration.vm === undefined\n            ? (0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_8__.createVirtualMachineBCH)()\n            : configuration.vm,\n    },\n    ...configuration,\n});\nconst createCompiler = createCompilerBCH;\n/**\n * Create a BCH `Compiler` from an `AuthenticationTemplate` and an optional set\n * of overrides.\n * @param template - the `AuthenticationTemplate` from which to create the BCH\n * compiler\n * @param overrides - a compiler configuration from which properties will be\n * used to override properties of the default BCH configuration\n */\nconst authenticationTemplateToCompilerBCH = (template, overrides) => createCompilerBCH({\n    ...overrides,\n    ...(0,_compiler_utils_js__WEBPACK_IMPORTED_MODULE_4__.authenticationTemplateToCompilerConfiguration)(template),\n});\n//# sourceMappingURL=compiler-bch.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-bch/compiler-bch.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-defaults.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-defaults.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CompilerDefaults\": () => (/* binding */ CompilerDefaults)\n/* harmony export */ });\n/* eslint-disable @typescript-eslint/no-duplicate-enum-values */\nvar CompilerDefaults;\n(function (CompilerDefaults) {\n    /**\n     * The `addressIndex` used by the default scenario `data`.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioAddressIndex\"] = 0] = \"defaultScenarioAddressIndex\";\n    /**\n     * The value used for `[\"slot\"]` and `[\"copy\"]` locking or unlocking bytecode\n     * when generating a scenario and no `unlockingScriptId` is provided.\n     */\n    CompilerDefaults[\"defaultScenarioBytecode\"] = \"\";\n    /**\n     *\n     * The value of `currentBlockHeight` in the default authentication template\n     * scenario. This is the height of the second mined block after the genesis\n     * block: `000000006a625f06636b8bb6ac7b960a8d03705d1ace08b1a19da3fdcc99ddbd`.\n     *\n     * This default value was chosen to be low enough to simplify the debugging of\n     * block height offsets while remaining differentiated from `0` and `1`, which\n     * are used both as boolean return values and for control flow.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioCurrentBlockHeight\"] = 2] = \"defaultScenarioCurrentBlockHeight\";\n    /**\n     * The value of `currentBlockTime` in the default authentication template\n     * scenario. This is the Median Time-Past block time (BIP113) of block `2`\n     * (the block used in\n     * {@link CompilerDefaults.defaultScenarioCurrentBlockHeight}).\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioCurrentBlockTime\"] = 1231469665] = \"defaultScenarioCurrentBlockTime\";\n    /**\n     * The default `outpointTransactionHash` of inputs in scenarios.\n     */\n    CompilerDefaults[\"defaultScenarioInputOutpointTransactionHash\"] = \"0000000000000000000000000000000000000000000000000000000000000001\";\n    /**\n     * The default `category` of tokens in scenarios.\n     */\n    CompilerDefaults[\"defaultScenarioOutputTokenCategory\"] = \"0000000000000000000000000000000000000000000000000000000000000002\";\n    /**\n     * The default `sequenceNumber` of inputs in scenarios.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioInputSequenceNumber\"] = 0] = \"defaultScenarioInputSequenceNumber\";\n    /**\n     * The default `valueSatoshis` of outputs in scenarios.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioOutputValueSatoshis\"] = 0] = \"defaultScenarioOutputValueSatoshis\";\n    /**\n     * The value of `transaction.locktime` in the default authentication template\n     * scenario.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioTransactionLocktime\"] = 0] = \"defaultScenarioTransactionLocktime\";\n    /**\n     * The value of `transaction.version` in the default authentication template\n     * scenario. Transaction version `2` enables `OP_CHECKSEQUENCEVERIFY` as\n     * described in BIP68, BIP112, and BIP113.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioTransactionVersion\"] = 2] = \"defaultScenarioTransactionVersion\";\n    /**\n     *s\n     * If unset, each `HdKey` uses this `addressOffset`.\n     */\n    CompilerDefaults[CompilerDefaults[\"hdKeyAddressOffset\"] = 0] = \"hdKeyAddressOffset\";\n    /**\n     * If unset, each `HdKey` uses this `hdPublicKeyDerivationPath`.\n     */\n    CompilerDefaults[\"hdKeyHdPublicKeyDerivationPath\"] = \"m\";\n    /**\n     * If unset, each `HdKey` uses this `privateDerivationPath`.\n     */\n    CompilerDefaults[\"hdKeyPrivateDerivationPath\"] = \"m/i\";\n    /**\n     * The prefix used to refer to other scenario bytecode scripts from within a\n     * bytecode script. See {@link AuthenticationTemplateScenarioData.bytecode}\n     * for details.\n     */\n    CompilerDefaults[\"scenarioBytecodeScriptPrefix\"] = \"_scenario.\";\n})(CompilerDefaults || (CompilerDefaults = {}));\n//# sourceMappingURL=compiler-defaults.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-defaults.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-operation-helpers.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-operation-helpers.js ***!
  \********************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"attemptCompilerOperations\": () => (/* binding */ attemptCompilerOperations),\n/* harmony export */   \"compilerOperationAttemptBytecodeResolution\": () => (/* binding */ compilerOperationAttemptBytecodeResolution),\n/* harmony export */   \"compilerOperationHelperAddressIndex\": () => (/* binding */ compilerOperationHelperAddressIndex),\n/* harmony export */   \"compilerOperationHelperCompileScript\": () => (/* binding */ compilerOperationHelperCompileScript),\n/* harmony export */   \"compilerOperationHelperDeriveHdKeyPrivate\": () => (/* binding */ compilerOperationHelperDeriveHdKeyPrivate),\n/* harmony export */   \"compilerOperationHelperDeriveHdPrivateNode\": () => (/* binding */ compilerOperationHelperDeriveHdPrivateNode),\n/* harmony export */   \"compilerOperationHelperGenerateCoveredBytecode\": () => (/* binding */ compilerOperationHelperGenerateCoveredBytecode),\n/* harmony export */   \"compilerOperationHelperUnknownEntity\": () => (/* binding */ compilerOperationHelperUnknownEntity),\n/* harmony export */   \"compilerOperationRequires\": () => (/* binding */ compilerOperationRequires)\n/* harmony export */ });\n/* harmony import */ var _key_key_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../key/key.js */ \"../../node_modules/@bitauth/libauth/build/lib/key/hd-key.js\");\n/* harmony import */ var _language_language_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../language/language.js */ \"../../node_modules/@bitauth/libauth/build/lib/language/resolve.js\");\n/* harmony import */ var _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compiler-defaults.js */ \"../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-defaults.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_key_key_js__WEBPACK_IMPORTED_MODULE_1__, _language_language_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_key_key_js__WEBPACK_IMPORTED_MODULE_1__, _language_language_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n/**\n * Attempt a series of compiler operations, skipping to the next operation if\n * the current operation returns a {@link CompilerOperationSkip} (indicating it\n * failed and can be skipped). The `finalOperation` may not be skipped, and must\n * either return {@link CompilerOperationSuccess} or\n * {@link CompilerOperationError}.\n *\n * @param operations - an array of skippable operations to try\n * @param finalOperation - a final, un-skippable operation\n */\nconst attemptCompilerOperations = (operations, finalOperation) => (identifier, data, configuration) => {\n    // eslint-disable-next-line functional/no-loop-statement\n    for (const operation of operations) {\n        const result = operation(identifier, data, configuration);\n        if (result.status !== 'skip')\n            return result;\n    }\n    return finalOperation(identifier, data, configuration);\n};\n/**\n * Modify a compiler operation to verify that certain properties exist in the\n * {@link CompilationData} and {@link CompilerConfiguration} before executing\n * the provided operation. If the properties don't exist, an error message\n * is returned.\n *\n * This is useful for eliminating repetitive existence checks.\n */\nconst compilerOperationRequires = ({ \n/**\n * If `true`, the accepted operation may return `false`, and any missing\n * properties will cause the returned operation to return `false` (meaning\n * the operation should be skipped)\n */\ncanBeSkipped, \n/**\n * An array of the top-level properties required in the\n * {@link CompilationData}.\n */\ndataProperties, \n/**\n * An array of the top-level properties required in the\n * {@link CompilerConfiguration}\n */\nconfigurationProperties, \n/**\n * The operation to run if all required properties exist\n */\noperation, }) => \n// eslint-disable-next-line complexity\n(identifier, data, configuration) => {\n    // eslint-disable-next-line functional/no-loop-statement\n    for (const property of configurationProperties) {\n        if (configuration[property] === undefined)\n            return (canBeSkipped\n                ? { status: 'skip' }\n                : {\n                    error: `Cannot resolve \"${identifier}\" - the \"${property}\" property was not provided in the compiler configuration.`,\n                    status: 'error',\n                });\n    }\n    // eslint-disable-next-line functional/no-loop-statement\n    for (const property of dataProperties) {\n        if (data[property] ===\n            undefined)\n            return (canBeSkipped\n                ? { status: 'skip' }\n                : {\n                    error: `Cannot resolve \"${identifier}\" - the \"${property}\" property was not provided in the compilation data.`,\n                    status: 'error',\n                });\n    }\n    return operation(identifier, data, configuration);\n};\nconst compilerOperationAttemptBytecodeResolution = compilerOperationRequires({\n    canBeSkipped: true,\n    configurationProperties: [],\n    dataProperties: ['bytecode'],\n    operation: (identifier, data) => {\n        const bytecode = data.bytecode[identifier];\n        if (bytecode !== undefined) {\n            return { bytecode, status: 'success' };\n        }\n        return { status: 'skip' };\n    },\n});\n// eslint-disable-next-line complexity\nconst compilerOperationHelperDeriveHdPrivateNode = ({ addressIndex, entityId, entityHdPrivateKey, configuration, hdKey, identifier, }) => {\n    const addressOffset = hdKey.addressOffset ?? _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_0__.CompilerDefaults.hdKeyAddressOffset;\n    const privateDerivationPath = hdKey.privateDerivationPath ?? _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_0__.CompilerDefaults.hdKeyPrivateDerivationPath;\n    const i = addressIndex + addressOffset;\n    const validPrivatePathWithIndex = /^m(?:\\/(?:[0-9]+|i)'?)*$/u;\n    if (!validPrivatePathWithIndex.test(privateDerivationPath)) {\n        return {\n            error: `Could not generate ${identifier} - the path \"${privateDerivationPath}\" is not a valid \"privateDerivationPath\".`,\n            status: 'error',\n        };\n    }\n    const instancePath = privateDerivationPath.replace('i', i.toString());\n    const masterContents = (0,_key_key_js__WEBPACK_IMPORTED_MODULE_1__.decodeHdPrivateKey)(entityHdPrivateKey, configuration);\n    if (typeof masterContents === 'string') {\n        return {\n            error: `Could not generate ${identifier} - the HD private key provided for ${entityId} could not be decoded: ${masterContents}`,\n            status: 'error',\n        };\n    }\n    const instanceNode = (0,_key_key_js__WEBPACK_IMPORTED_MODULE_1__.deriveHdPath)(masterContents.node, instancePath, configuration);\n    if (typeof instanceNode === 'string') {\n        return {\n            error: `Could not generate ${identifier} - the path \"${instancePath}\" could not be derived for entity \"${entityId}\": ${instanceNode}`,\n            status: 'error',\n        };\n    }\n    return {\n        bytecode: instanceNode.privateKey,\n        status: 'success',\n    };\n};\nconst compilerOperationHelperUnknownEntity = (identifier, variableId) => ({\n    error: `Identifier \"${identifier}\" refers to an HdKey, but the \"entityOwnership\" for \"${variableId}\" is not available in this compiler configuration.`,\n    status: 'error',\n});\nconst compilerOperationHelperAddressIndex = (identifier) => ({\n    error: `Identifier \"${identifier}\" refers to an HdKey, but \"hdKeys.addressIndex\" was not provided in the compilation data.`,\n    status: 'error',\n});\nconst compilerOperationHelperDeriveHdKeyPrivate = ({ configuration, hdKeys, identifier, }) => {\n    const { addressIndex, hdPrivateKeys } = hdKeys;\n    const [variableId] = identifier.split('.');\n    const entityId = configuration.entityOwnership[variableId];\n    if (entityId === undefined) {\n        return compilerOperationHelperUnknownEntity(identifier, variableId);\n    }\n    if (addressIndex === undefined) {\n        return compilerOperationHelperAddressIndex(identifier);\n    }\n    const entityHdPrivateKey = hdPrivateKeys === undefined ? undefined : hdPrivateKeys[entityId];\n    if (entityHdPrivateKey === undefined) {\n        return {\n            error: `Identifier \"${identifier}\" refers to an HdKey owned by \"${entityId}\", but an HD private key for this entity (or an existing signature) was not provided in the compilation data.`,\n            recoverable: true,\n            status: 'error',\n        };\n    }\n    /**\n     * Guaranteed to be an `HdKey` if this method is reached in the compiler.\n     */\n    const hdKey = configuration.variables[variableId];\n    return compilerOperationHelperDeriveHdPrivateNode({\n        addressIndex,\n        configuration,\n        entityHdPrivateKey,\n        entityId,\n        hdKey,\n        identifier,\n    });\n};\n/**\n * Returns `false` if the target script ID doesn't exist in the compiler\n * configuration (allows for the caller to generate the error message).\n *\n * If the compilation produced errors, returns a\n * {@link CompilerOperationErrorFatal}.\n *\n * If the compilation was successful, returns the compiled bytecode as a\n * `Uint8Array`.\n */\nconst compilerOperationHelperCompileScript = ({ targetScriptId, data, configuration, }) => {\n    const signingTarget = configuration.scripts[targetScriptId];\n    const compiledTarget = (0,_language_language_js__WEBPACK_IMPORTED_MODULE_2__.resolveScriptIdentifier)({\n        configuration,\n        data,\n        identifier: targetScriptId,\n    });\n    if (signingTarget === undefined || compiledTarget === false) {\n        return false;\n    }\n    if (typeof compiledTarget === 'string') {\n        return {\n            error: compiledTarget,\n            status: 'error',\n        };\n    }\n    return compiledTarget.bytecode;\n};\n/**\n * Returns either the properly generated `coveredBytecode` or a\n * {@link CompilerOperationErrorFatal}.\n */\nconst compilerOperationHelperGenerateCoveredBytecode = ({ data, configuration, identifier, sourceScriptIds, unlockingScripts, }) => {\n    const currentScriptId = sourceScriptIds[sourceScriptIds.length - 1];\n    if (currentScriptId === undefined) {\n        return {\n            error: `Identifier \"${identifier}\" requires a signing serialization, but \"coveredBytecode\" cannot be determined because the compiler configuration's \"sourceScriptIds\" is empty.`,\n            status: 'error',\n        };\n    }\n    const targetLockingScriptId = unlockingScripts[currentScriptId];\n    if (targetLockingScriptId === undefined) {\n        return {\n            error: `Identifier \"${identifier}\" requires a signing serialization, but \"coveredBytecode\" cannot be determined because \"${currentScriptId}\" is not present in the compiler configuration's \"unlockingScripts\".`,\n            status: 'error',\n        };\n    }\n    const result = compilerOperationHelperCompileScript({\n        configuration,\n        data,\n        targetScriptId: targetLockingScriptId,\n    });\n    if (result === false) {\n        return {\n            error: `Identifier \"${identifier}\" requires a signing serialization that covers an unknown locking script, \"${targetLockingScriptId}\".`,\n            status: 'error',\n        };\n    }\n    return result;\n};\n//# sourceMappingURL=compiler-operation-helpers.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-operation-helpers.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-operations.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-operations.js ***!
  \*************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"compilerOperationsCommon\": () => (/* binding */ compilerOperationsCommon)\n/* harmony export */ });\n/* unused harmony exports compilerOperationAddressData, compilerOperationWalletData, compilerOperationCurrentBlockTime, compilerOperationCurrentBlockHeight, compilerOperationSigningSerializationCorrespondingOutput, compilerOperationSigningSerializationCorrespondingOutputHash, compilerOperationSigningSerializationCoveredBytecode, compilerOperationSigningSerializationCoveredBytecodeLength, compilerOperationSigningSerializationLocktime, compilerOperationSigningSerializationOutpointIndex, compilerOperationSigningSerializationOutpointTransactionHash, compilerOperationSigningSerializationOutputValue, compilerOperationSigningSerializationSequenceNumber, compilerOperationSigningSerializationTransactionOutpoints, compilerOperationSigningSerializationTransactionOutpointsHash, compilerOperationSigningSerializationTransactionOutputs, compilerOperationSigningSerializationTransactionOutputsHash, compilerOperationSigningSerializationTransactionSequenceNumbers, compilerOperationSigningSerializationTransactionSequenceNumbersHash, compilerOperationSigningSerializationVersion, compilerOperationKeyPublicKeyCommon, compilerOperationHdKeyPublicKeyCommon */\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/number.js\");\n/* harmony import */ var _key_key_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../key/key.js */ \"../../node_modules/@bitauth/libauth/build/lib/key/hd-key.js\");\n/* harmony import */ var _message_message_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../message/message.js */ \"../../node_modules/@bitauth/libauth/build/lib/message/transaction-encoding.js\");\n/* harmony import */ var _vm_vm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vm/vm.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\n/* harmony import */ var _vm_vm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../vm/vm.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/signing-serialization.js\");\n/* harmony import */ var _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./compiler-defaults.js */ \"../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-defaults.js\");\n/* harmony import */ var _compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compiler-operation-helpers.js */ \"../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-operation-helpers.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__, _vm_vm_js__WEBPACK_IMPORTED_MODULE_2__, _vm_vm_js__WEBPACK_IMPORTED_MODULE_3__, _message_message_js__WEBPACK_IMPORTED_MODULE_4__, _key_key_js__WEBPACK_IMPORTED_MODULE_6__]);\n([_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__, _vm_vm_js__WEBPACK_IMPORTED_MODULE_2__, _vm_vm_js__WEBPACK_IMPORTED_MODULE_3__, _message_message_js__WEBPACK_IMPORTED_MODULE_4__, _key_key_js__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\nconst compilerOperationAddressData = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['bytecode'],\n    operation: (identifier, data) => {\n        const bytecode = data.bytecode[identifier];\n        if (bytecode !== undefined) {\n            return { bytecode, status: 'success' };\n        }\n        return {\n            error: `Identifier \"${identifier}\" refers to an AddressData, but \"${identifier}\" was not provided in the CompilationData \"bytecode\".`,\n            recoverable: true,\n            status: 'error',\n        };\n    },\n});\nconst compilerOperationWalletData = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['bytecode'],\n    operation: (identifier, data) => {\n        const bytecode = data.bytecode[identifier];\n        if (bytecode !== undefined) {\n            return { bytecode, status: 'success' };\n        }\n        return {\n            error: `Identifier \"${identifier}\" refers to a WalletData, but \"${identifier}\" was not provided in the CompilationData \"bytecode\".`,\n            recoverable: true,\n            status: 'error',\n        };\n    },\n});\nconst compilerOperationCurrentBlockTime = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['currentBlockTime'],\n    operation: (_, data) => ({\n        bytecode: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.numberToBinUint32LE)(data.currentBlockTime),\n        status: 'success',\n    }),\n});\nconst compilerOperationCurrentBlockHeight = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['currentBlockHeight'],\n    operation: (_, data) => ({\n        bytecode: (0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_2__.bigIntToVmNumber)(BigInt(data.currentBlockHeight)),\n        status: 'success',\n    }),\n});\nconst compilerOperationSigningSerializationCorrespondingOutput = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => {\n        const { correspondingOutput } = (0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_3__.generateSigningSerializationComponentsBCH)(data.compilationContext);\n        return correspondingOutput === undefined\n            ? { bytecode: Uint8Array.of(), status: 'success' }\n            : {\n                bytecode: correspondingOutput,\n                status: 'success',\n            };\n    },\n});\nconst compilerOperationSigningSerializationCorrespondingOutputHash = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: ['sha256'],\n    dataProperties: ['compilationContext'],\n    operation: (_, data, configuration) => {\n        const { correspondingOutput } = (0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_3__.generateSigningSerializationComponentsBCH)(data.compilationContext);\n        return correspondingOutput === undefined\n            ? { bytecode: Uint8Array.of(), status: 'success' }\n            : {\n                bytecode: configuration.sha256.hash(configuration.sha256.hash(correspondingOutput)),\n                status: 'success',\n            };\n    },\n});\nconst compilerOperationHelperSigningSerializationCoveredBytecode = (returnLength) => (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: ['sourceScriptIds', 'unlockingScripts'],\n    dataProperties: ['compilationContext'],\n    operation: (identifier, data, configuration) => {\n        const { unlockingScripts, sourceScriptIds } = configuration;\n        const result = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperGenerateCoveredBytecode)({\n            configuration,\n            data,\n            identifier,\n            sourceScriptIds,\n            unlockingScripts,\n        });\n        if ('error' in result) {\n            return result;\n        }\n        return {\n            bytecode: returnLength\n                ? (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToCompactSize)(BigInt(result.length))\n                : result,\n            status: 'success',\n        };\n    },\n});\nconst compilerOperationSigningSerializationCoveredBytecode = compilerOperationHelperSigningSerializationCoveredBytecode(false);\nconst compilerOperationSigningSerializationCoveredBytecodeLength = compilerOperationHelperSigningSerializationCoveredBytecode(true);\nconst compilerOperationSigningSerializationLocktime = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.numberToBinUint32LE)(data.compilationContext.transaction.locktime),\n        status: 'success',\n    }),\n});\nconst compilerOperationSigningSerializationOutpointIndex = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.numberToBinUint32LE)(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.transaction.inputs[data.compilationContext.inputIndex].outpointIndex),\n        status: 'success',\n    }),\n});\nconst compilerOperationSigningSerializationOutpointTransactionHash = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.transaction.inputs[data.compilationContext.inputIndex].outpointTransactionHash,\n        status: 'success',\n    }),\n});\nconst compilerOperationSigningSerializationOutputValue = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.valueSatoshisToBin)(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.sourceOutputs[data.compilationContext.inputIndex].valueSatoshis),\n        status: 'success',\n    }),\n});\nconst compilerOperationSigningSerializationSequenceNumber = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.numberToBinUint32LE)(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.transaction.inputs[data.compilationContext.inputIndex].sequenceNumber),\n        status: 'success',\n    }),\n});\nconst compilerOperationSigningSerializationTransactionOutpoints = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: (0,_message_message_js__WEBPACK_IMPORTED_MODULE_4__.encodeTransactionOutpoints)(data.compilationContext.transaction.inputs),\n        status: 'success',\n    }),\n});\nconst compilerOperationSigningSerializationTransactionOutpointsHash = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: ['sha256'],\n    dataProperties: ['compilationContext'],\n    operation: (_, data, configuration) => ({\n        bytecode: configuration.sha256.hash(configuration.sha256.hash((0,_message_message_js__WEBPACK_IMPORTED_MODULE_4__.encodeTransactionOutpoints)(data.compilationContext.transaction.inputs))),\n        status: 'success',\n    }),\n});\nconst compilerOperationSigningSerializationTransactionOutputs = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: (0,_message_message_js__WEBPACK_IMPORTED_MODULE_4__.encodeTransactionOutputsForSigning)(data.compilationContext.transaction.outputs),\n        status: 'success',\n    }),\n});\nconst compilerOperationSigningSerializationTransactionOutputsHash = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: ['sha256'],\n    dataProperties: ['compilationContext'],\n    operation: (_, data, configuration) => ({\n        bytecode: configuration.sha256.hash(configuration.sha256.hash((0,_message_message_js__WEBPACK_IMPORTED_MODULE_4__.encodeTransactionOutputsForSigning)(data.compilationContext.transaction.outputs))),\n        status: 'success',\n    }),\n});\nconst compilerOperationSigningSerializationTransactionSequenceNumbers = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: (0,_message_message_js__WEBPACK_IMPORTED_MODULE_4__.encodeTransactionInputSequenceNumbersForSigning)(data.compilationContext.transaction.inputs),\n        status: 'success',\n    }),\n});\nconst compilerOperationSigningSerializationTransactionSequenceNumbersHash = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: ['sha256'],\n    dataProperties: ['compilationContext'],\n    operation: (_, data, configuration) => ({\n        bytecode: configuration.sha256.hash(configuration.sha256.hash((0,_message_message_js__WEBPACK_IMPORTED_MODULE_4__.encodeTransactionInputSequenceNumbersForSigning)(data.compilationContext.transaction.inputs))),\n        status: 'success',\n    }),\n});\nconst compilerOperationSigningSerializationVersion = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.numberToBinUint32LE)(data.compilationContext.transaction.version),\n        status: 'success',\n    }),\n});\nconst compilerOperationKeyPublicKeyCommon = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.attemptCompilerOperations)([_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: ['secp256k1'],\n    dataProperties: ['keys'],\n    operation: (identifier, data, configuration) => {\n        const { keys } = data;\n        const { secp256k1 } = configuration;\n        const { privateKeys } = keys;\n        const [variableId] = identifier.split('.');\n        if (privateKeys?.[variableId] !== undefined) {\n            return {\n                bytecode: secp256k1.derivePublicKeyCompressed(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                privateKeys[variableId]),\n                status: 'success',\n            };\n        }\n        return {\n            error: `Identifier \"${identifier}\" refers to a public key, but no public or private keys for \"${variableId}\" were provided in the compilation data.`,\n            recoverable: true,\n            status: 'error',\n        };\n    },\n}));\nconst compilerOperationHdKeyPublicKeyCommon = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.attemptCompilerOperations)([_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationRequires)({\n    canBeSkipped: false,\n    configurationProperties: [\n        'entityOwnership',\n        'ripemd160',\n        'secp256k1',\n        'sha256',\n        'sha512',\n        'variables',\n    ],\n    dataProperties: ['hdKeys'],\n    operation: \n    // eslint-disable-next-line complexity\n    (identifier, data, configuration) => {\n        const { hdKeys } = data;\n        const { hdPrivateKeys, addressIndex, hdPublicKeys } = hdKeys;\n        const [variableId] = identifier.split('.');\n        const entityId = configuration.entityOwnership[variableId];\n        if (entityId === undefined) {\n            return (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperUnknownEntity)(identifier, variableId);\n        }\n        if (addressIndex === undefined) {\n            return (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperAddressIndex)(identifier);\n        }\n        const entityHdPrivateKey = hdPrivateKeys === undefined ? undefined : hdPrivateKeys[entityId];\n        /**\n         * Guaranteed to be an `HdKey` if this method is reached in the compiler.\n         */\n        const hdKey = configuration.variables[variableId];\n        if (entityHdPrivateKey !== undefined) {\n            const privateResult = (0,_compiler_operation_helpers_js__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperDeriveHdPrivateNode)({\n                addressIndex,\n                configuration,\n                entityHdPrivateKey,\n                entityId,\n                hdKey,\n                identifier,\n            });\n            if (privateResult.status === 'error')\n                return privateResult;\n            return {\n                bytecode: configuration.secp256k1.derivePublicKeyCompressed(privateResult.bytecode),\n                status: 'success',\n            };\n        }\n        const entityHdPublicKey = hdPublicKeys === undefined ? undefined : hdPublicKeys[entityId];\n        if (entityHdPublicKey === undefined) {\n            return {\n                error: `Identifier \"${identifier}\" refers to an HdKey owned by \"${entityId}\", but an HD private key or HD public key for this entity was not provided in the compilation data.`,\n                recoverable: true,\n                status: 'error',\n            };\n        }\n        const addressOffset = hdKey.addressOffset ?? _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_5__.CompilerDefaults.hdKeyAddressOffset;\n        const privateDerivationPath = hdKey.privateDerivationPath ??\n            _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_5__.CompilerDefaults.hdKeyPrivateDerivationPath;\n        const publicDerivationPath = hdKey.publicDerivationPath ?? privateDerivationPath.replace('m', 'M');\n        const validPublicPathWithIndex = /^M(?:\\/(?:[0-9]+|i))*$/u;\n        if (!validPublicPathWithIndex.test(publicDerivationPath)) {\n            return {\n                error: `Could not generate ${identifier} - the path \"${publicDerivationPath}\" is not a valid \"publicDerivationPath\".`,\n                status: 'error',\n            };\n        }\n        const i = addressIndex + addressOffset;\n        const instancePath = publicDerivationPath.replace('i', i.toString());\n        const masterContents = (0,_key_key_js__WEBPACK_IMPORTED_MODULE_6__.decodeHdPublicKey)(entityHdPublicKey, configuration);\n        if (typeof masterContents === 'string') {\n            return {\n                error: `Could not generate \"${identifier}\" - the HD public key provided for \"${entityId}\" could not be decoded: ${masterContents}`,\n                status: 'error',\n            };\n        }\n        const instanceNode = (0,_key_key_js__WEBPACK_IMPORTED_MODULE_6__.deriveHdPath)(masterContents.node, instancePath, configuration);\n        if (typeof instanceNode === 'string') {\n            return {\n                error: `Could not generate \"${identifier}\" - the path \"${instancePath}\" could not be derived for entity \"${entityId}\": ${instanceNode}`,\n                status: 'error',\n            };\n        }\n        return { bytecode: instanceNode.publicKey, status: 'success' };\n    },\n}));\n/* eslint-disable camelcase, @typescript-eslint/naming-convention */\nconst compilerOperationsCommon = {\n    addressData: compilerOperationAddressData,\n    currentBlockHeight: compilerOperationCurrentBlockHeight,\n    currentBlockTime: compilerOperationCurrentBlockTime,\n    hdKey: {\n        public_key: compilerOperationHdKeyPublicKeyCommon,\n    },\n    key: {\n        public_key: compilerOperationKeyPublicKeyCommon,\n    },\n    signingSerialization: {\n        corresponding_output: compilerOperationSigningSerializationCorrespondingOutput,\n        corresponding_output_hash: compilerOperationSigningSerializationCorrespondingOutputHash,\n        covered_bytecode: compilerOperationSigningSerializationCoveredBytecode,\n        covered_bytecode_length: compilerOperationSigningSerializationCoveredBytecodeLength,\n        locktime: compilerOperationSigningSerializationLocktime,\n        outpoint_index: compilerOperationSigningSerializationOutpointIndex,\n        outpoint_transaction_hash: compilerOperationSigningSerializationOutpointTransactionHash,\n        output_value: compilerOperationSigningSerializationOutputValue,\n        sequence_number: compilerOperationSigningSerializationSequenceNumber,\n        transaction_outpoints: compilerOperationSigningSerializationTransactionOutpoints,\n        transaction_outpoints_hash: compilerOperationSigningSerializationTransactionOutpointsHash,\n        transaction_outputs: compilerOperationSigningSerializationTransactionOutputs,\n        transaction_outputs_hash: compilerOperationSigningSerializationTransactionOutputsHash,\n        transaction_sequence_numbers: compilerOperationSigningSerializationTransactionSequenceNumbers,\n        transaction_sequence_numbers_hash: compilerOperationSigningSerializationTransactionSequenceNumbersHash,\n        version: compilerOperationSigningSerializationVersion,\n    },\n    walletData: compilerOperationWalletData,\n};\n/* eslint-enable camelcase, @typescript-eslint/naming-convention */\n//# sourceMappingURL=compiler-operations.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-operations.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-utils.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-utils.js ***!
  \********************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"authenticationTemplateToCompilerConfiguration\": () => (/* binding */ authenticationTemplateToCompilerConfiguration),\n/* harmony export */   \"compilerConfigurationToCompilerBCH\": () => (/* binding */ compilerConfigurationToCompilerBCH),\n/* harmony export */   \"createAuthenticationProgramEvaluationCommon\": () => (/* binding */ createAuthenticationProgramEvaluationCommon)\n/* harmony export */ });\n/* unused harmony exports createCompilerGenerateBytecodeFunction, compilerConfigurationToCompiler, createCompilerCommon, compileCashAssembly, assembleBytecode, assembleBytecodeBCH, cashAssemblyToBin, assembleBytecodeBTC */\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\n/* harmony import */ var _language_language_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/language.js */ \"../../node_modules/@bitauth/libauth/build/lib/language/compile.js\");\n/* harmony import */ var _vm_vm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vm/vm.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\n/* harmony import */ var _vm_vm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../vm/vm.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-opcodes.js\");\n/* harmony import */ var _vm_vm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../vm/vm.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/btc/btc-opcodes.js\");\n/* harmony import */ var _compiler_operations_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./compiler-operations.js */ \"../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-operations.js\");\n/* harmony import */ var _scenarios_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scenarios.js */ \"../../node_modules/@bitauth/libauth/build/lib/compiler/scenarios.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_language_language_js__WEBPACK_IMPORTED_MODULE_0__, _scenarios_js__WEBPACK_IMPORTED_MODULE_1__, _vm_vm_js__WEBPACK_IMPORTED_MODULE_2__, _compiler_operations_js__WEBPACK_IMPORTED_MODULE_4__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_5__]);\n([_language_language_js__WEBPACK_IMPORTED_MODULE_0__, _scenarios_js__WEBPACK_IMPORTED_MODULE_1__, _vm_vm_js__WEBPACK_IMPORTED_MODULE_2__, _compiler_operations_js__WEBPACK_IMPORTED_MODULE_4__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n/**\n * Create a {@link Compiler.generateBytecode} method given a compiler\n * configuration.\n */\nconst createCompilerGenerateBytecodeFunction = (compilerConfiguration) => ({ data, debug, scriptId, }) => {\n    const result = (0,_language_language_js__WEBPACK_IMPORTED_MODULE_0__.compileScript)(scriptId, data, compilerConfiguration);\n    return (debug === true\n        ? result\n        : result.success\n            ? { bytecode: result.bytecode, success: true }\n            : {\n                errorType: result.errorType,\n                errors: result.errors,\n                success: false,\n            });\n};\n/**\n * Create a {@link Compiler} from the provided compiler configuration. This\n * method requires a full {@link CompilerConfiguration} and does not provide any\n * crypto or VM implementations.\n *\n * @param configuration - the configuration from which to create the compiler\n */\nconst compilerConfigurationToCompilerBCH = (configuration) => {\n    const generateBytecode = createCompilerGenerateBytecodeFunction(configuration);\n    return {\n        configuration,\n        generateBytecode,\n        generateScenario: ({ lockingScriptId, unlockingScriptId, scenarioId, debug, }) => (0,_scenarios_js__WEBPACK_IMPORTED_MODULE_1__.generateScenarioBCH)({\n            configuration,\n            generateBytecode,\n            lockingScriptId,\n            scenarioId,\n            unlockingScriptId,\n        }, debug),\n    };\n};\nconst compilerConfigurationToCompiler = compilerConfigurationToCompilerBCH;\nconst nullHashLength = 32;\n/**\n * A common {@link createAuthenticationProgram} implementation for\n * most compilers.\n *\n * Accepts the compiled contents of an evaluation and produces a\n * {@link AuthenticationProgramCommon} that can be evaluated to produce the\n * resulting program state.\n *\n * The precise shape of the authentication program produced by this method is\n * critical to the determinism of CashAssembly evaluations for the compiler in\n * which it is used, it therefore must be standardized between compiler\n * implementations.\n *\n * @param evaluationBytecode - the compiled bytecode to incorporate in the\n * created authentication program\n */\nconst createAuthenticationProgramEvaluationCommon = (evaluationBytecode) => ({\n    inputIndex: 0,\n    sourceOutputs: [\n        {\n            lockingBytecode: evaluationBytecode,\n            valueSatoshis: 0n,\n        },\n    ],\n    transaction: {\n        inputs: [\n            {\n                outpointIndex: 0,\n                outpointTransactionHash: new Uint8Array(nullHashLength),\n                sequenceNumber: 0,\n                unlockingBytecode: Uint8Array.of(),\n            },\n        ],\n        locktime: 0,\n        outputs: [\n            {\n                lockingBytecode: Uint8Array.of(),\n                valueSatoshis: 0n,\n            },\n        ],\n        version: 0,\n    },\n});\n/**\n * Create a compiler using the default common compiler configuration. Because\n * this compiler has no access to a VM, it cannot compile evaluations.\n *\n * @param scriptsAndOverrides - a compiler configuration from which properties\n * will be used to override properties of the default common compiler\n * configuration – must include the `scripts` property\n */\nconst createCompilerCommon = (scriptsAndOverrides) => compilerConfigurationToCompilerBCH({\n    ...{\n        createAuthenticationProgram: createAuthenticationProgramEvaluationCommon,\n        opcodes: (0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_2__.generateBytecodeMap)(_vm_vm_js__WEBPACK_IMPORTED_MODULE_3__.Opcodes),\n        operations: _compiler_operations_js__WEBPACK_IMPORTED_MODULE_4__.compilerOperationsCommon,\n        ripemd160: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_5__.ripemd160,\n        secp256k1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_5__.secp256k1,\n        sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_5__.sha256,\n        sha512: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_5__.sha512,\n    },\n    ...scriptsAndOverrides,\n});\n/**\n * Perform a simplified compilation on a CashAssembly script containing only hex\n * literals, bigint literals, UTF8 literals, and push statements. Scripts may\n * not contain variables/operations, evaluations, or opcode identifiers (use hex\n * literals instead).\n *\n * This is useful for accepting complex user input in advanced interfaces,\n * especially for `AddressData` and `WalletData`.\n *\n * Returns the compiled bytecode as a `Uint8Array`, or throws an error message.\n *\n * @param script - a simple CashAssembly script containing no variables or\n * evaluations\n */\nconst compileCashAssembly = (script) => {\n    const result = createCompilerCommon({\n        opcodes: {},\n        operations: {},\n        scripts: { script },\n    }).generateBytecode({ data: {}, scriptId: 'script' });\n    if (result.success) {\n        return result.bytecode;\n    }\n    return `CashAssembly compilation error:${result.errors.reduce((all, { error, range }) => `${all} [${range.startLineNumber}, ${range.startColumn}]: ${error}`, '')}`;\n};\n/**\n * Re-assemble a string of disassembled bytecode\n * (see {@link disassembleBytecode}).\n *\n * @param opcodes - a mapping of opcodes to their respective Uint8Array\n * representation\n * @param disassembledBytecode - the disassembled bytecode to re-assemble\n */\nconst assembleBytecode = (opcodes, disassembledBytecode) => {\n    const configuration = {\n        opcodes,\n        scripts: { asm: disassembledBytecode },\n    };\n    return createCompilerCommon(configuration).generateBytecode({ data: {}, scriptId: 'asm' });\n};\n/**\n * Re-assemble a string of disassembled BCH bytecode; see\n * {@link disassembleBytecodeBCH}.\n *\n * Note, this method performs automatic minimization of push instructions.\n *\n * @param disassembledBytecode - the disassembled BCH bytecode to re-assemble\n */\nconst assembleBytecodeBCH = (disassembledBytecode) => assembleBytecode((0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_2__.generateBytecodeMap)(_vm_vm_js__WEBPACK_IMPORTED_MODULE_3__.OpcodesBCH), disassembledBytecode);\n/**\n * A convenience method to compile CashAssembly (using\n * {@link assembleBytecodeBCH}) to bytecode. If compilation fails, errors are\n * returned as a string.\n */\nconst cashAssemblyToBin = (cashAssemblyScript) => {\n    const result = assembleBytecodeBCH(cashAssemblyScript);\n    return result.success\n        ? result.bytecode\n        : `CashAssembly compilation ${result.errorType} error: ${result.errors\n            .map((err) => err.error)\n            .join(' ')}`;\n};\n/**\n * Re-assemble a string of disassembled BCH bytecode; see\n * {@link disassembleBytecodeBTC}.\n *\n * Note, this method performs automatic minimization of push instructions.\n *\n * @param disassembledBytecode - the disassembled BTC bytecode to re-assemble\n */\nconst assembleBytecodeBTC = (disassembledBytecode) => assembleBytecode((0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_2__.generateBytecodeMap)(_vm_vm_js__WEBPACK_IMPORTED_MODULE_6__.OpcodesBTC), disassembledBytecode);\n/**\n * Create a partial {@link CompilerConfiguration} from an\n * {@link AuthenticationTemplate} by extracting and formatting the `scripts` and\n * `variables` properties.\n *\n * Note, if this {@link AuthenticationTemplate} might be malformed, first\n * validate it with {@link importAuthenticationTemplate}.\n *\n * @param template - the {@link AuthenticationTemplate} from which to extract\n * the compiler configuration\n */\nconst authenticationTemplateToCompilerConfiguration = (template) => {\n    /**\n     * Template scripts including virtualized test scripts.\n     */\n    const virtualizedScripts = Object.entries(template.scripts).reduce((all, [scriptId, script]) => {\n        if ('tests' in script) {\n            return {\n                ...all,\n                ...Object.entries(script.tests).reduce((tests, [testId, test]) => {\n                    const pushTestedScript = script.pushed === true;\n                    const checkScriptId = `${scriptId}.${testId}.check`;\n                    const virtualizedLockingScriptId = `${scriptId}.${testId}.lock`;\n                    const virtualizedUnlockingScriptId = `${scriptId}.${testId}.unlock`;\n                    return {\n                        ...tests,\n                        [checkScriptId]: { script: test.check },\n                        [virtualizedLockingScriptId]: {\n                            script: pushTestedScript\n                                ? `<${scriptId}> ${checkScriptId}`\n                                : `${scriptId} ${checkScriptId}`,\n                        },\n                        [virtualizedUnlockingScriptId]: {\n                            script: test.setup ?? '',\n                            unlocks: virtualizedLockingScriptId,\n                        },\n                    };\n                }, {}),\n            };\n        }\n        return all;\n    }, {});\n    const allScripts = {\n        ...template.scripts,\n        ...virtualizedScripts,\n    };\n    const scripts = Object.entries(allScripts).reduce((all, [id, def]) => ({ ...all, [id]: def.script }), {});\n    const variables = Object.values(template.entities).reduce((all, entity) => ({ ...all, ...entity.variables }), {});\n    const entityOwnership = Object.entries(template.entities).reduce((all, [entityId, entity]) => ({\n        ...all,\n        ...Object.keys(entity.variables ?? {}).reduce((entityVariables, variableId) => ({\n            ...entityVariables,\n            [variableId]: entityId,\n        }), {}),\n    }), {});\n    const unlockingScripts = Object.entries(allScripts).reduce((all, [id, def]) => 'unlocks' in def && def.unlocks !== undefined\n        ? { ...all, [id]: def.unlocks }\n        : all, {});\n    const unlockingScriptTimeLockTypes = Object.entries(allScripts).reduce((all, [id, def]) => 'timeLockType' in def && def.timeLockType !== undefined\n        ? { ...all, [id]: def.timeLockType }\n        : all, {});\n    const lockingScriptTypes = Object.entries(allScripts).reduce((all, [id, def]) => 'lockingType' in def &&\n        def.lockingType !== undefined\n        ? { ...all, [id]: def.lockingType }\n        : all, {});\n    const scenarios = template.scenarios === undefined\n        ? undefined\n        : Object.entries(template.scenarios).reduce((all, [id, def]) => ({ ...all, [id]: def }), {});\n    return {\n        entityOwnership,\n        lockingScriptTypes,\n        ...(scenarios === undefined ? {} : { scenarios }),\n        scripts,\n        unlockingScriptTimeLockTypes,\n        unlockingScripts,\n        variables,\n    };\n};\n//# sourceMappingURL=compiler-utils.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-utils.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/compiler/scenarios.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/compiler/scenarios.js ***!
  \***************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateScenarioBCH\": () => (/* binding */ generateScenarioBCH)\n/* harmony export */ });\n/* unused harmony exports generateDefaultScenarioDefinition, extendScenarioDefinitionData, extendScenarioDefinition, generateExtendedScenario, extendedScenarioDefinitionToCompilationData, extendCompilationDataWithScenarioBytecode, compileAuthenticationTemplateScenarioValueSatoshis, compileAuthenticationTemplateScenarioBytecode, compileScenarioOutputTokenData */\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/number.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _key_key_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../key/key.js */ \"../../node_modules/@bitauth/libauth/build/lib/key/hd-key.js\");\n/* harmony import */ var _language_language_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../language/language.js */ \"../../node_modules/@bitauth/libauth/build/lib/language/resolve.js\");\n/* harmony import */ var _language_language_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../language/language.js */ \"../../node_modules/@bitauth/libauth/build/lib/language/language-utils.js\");\n/* harmony import */ var _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compiler-defaults.js */ \"../../node_modules/@bitauth/libauth/build/lib/compiler/compiler-defaults.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_key_key_js__WEBPACK_IMPORTED_MODULE_3__, _language_language_js__WEBPACK_IMPORTED_MODULE_4__, _language_language_js__WEBPACK_IMPORTED_MODULE_5__]);\n([_key_key_js__WEBPACK_IMPORTED_MODULE_3__, _language_language_js__WEBPACK_IMPORTED_MODULE_4__, _language_language_js__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* eslint-disable max-lines */\n\n\n\n\n/**\n * The default `lockingBytecode` value for scenario outputs is a new empty\n * object (`{}`).\n */\nconst defaultScenarioOutputLockingBytecode = () => ({});\n/**\n * Given a compiler configuration, generate the default scenario that is\n * extended by all the configuration's scenarios.\n *\n * For details on default scenario generation, see\n * {@link AuthenticationTemplateScenario.extends}.\n *\n * @param configuration - the compiler configuration from which to generate the\n * default scenario\n */\n// eslint-disable-next-line complexity\nconst generateDefaultScenarioDefinition = (configuration) => {\n    const { variables, entityOwnership } = configuration;\n    const keyVariableIds = variables === undefined\n        ? []\n        : Object.entries(variables)\n            .filter((entry) => entry[1].type === 'Key')\n            .map(([id]) => id);\n    const entityIds = entityOwnership === undefined\n        ? []\n        : Object.keys(Object.values(entityOwnership).reduce((all, entityId) => ({ ...all, [entityId]: true }), {}));\n    const valueMap = [...keyVariableIds, ...entityIds]\n        .sort((idA, idB) => idA.localeCompare(idB, 'en'))\n        .reduce((all, id, index) => ({\n        ...all,\n        [id]: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.bigIntToBinUint256BEClamped)(BigInt(index + 1)),\n    }), {});\n    const privateKeys = variables === undefined\n        ? undefined\n        : Object.entries(variables).reduce((all, [variableId, variable]) => variable.type === 'Key'\n            ? {\n                ...all,\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                [variableId]: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.binToHex)(valueMap[variableId]),\n            }\n            : all, {});\n    const defaultScenario = {\n        data: {\n            currentBlockHeight: _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.defaultScenarioCurrentBlockHeight,\n            currentBlockTime: _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.defaultScenarioCurrentBlockTime,\n            ...(privateKeys === undefined || Object.keys(privateKeys).length === 0\n                ? {}\n                : { keys: { privateKeys } }),\n        },\n        sourceOutputs: [{ lockingBytecode: ['slot'] }],\n        transaction: {\n            inputs: [{ unlockingBytecode: ['slot'] }],\n            locktime: _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.defaultScenarioTransactionLocktime,\n            outputs: [{ lockingBytecode: defaultScenarioOutputLockingBytecode() }],\n            version: _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.defaultScenarioTransactionVersion,\n        },\n    };\n    const hasHdKeys = variables === undefined\n        ? false\n        : Object.values(variables).findIndex((variable) => variable.type === 'HdKey') !== -1;\n    if (!hasHdKeys) {\n        return defaultScenario;\n    }\n    const { sha256, sha512 } = configuration;\n    if (sha256 === undefined) {\n        return 'An implementations of \"sha256\" is required to generate defaults for HD keys, but the \"sha256\" property is not included in this compiler configuration.';\n    }\n    if (sha512 === undefined) {\n        return 'An implementations of \"sha512\" is required to generate defaults for HD keys, but the \"sha512\" property is not included in this compiler configuration.';\n    }\n    const crypto = { sha256, sha512 };\n    const hdPrivateKeys = entityIds.reduce((all, entityId) => {\n        /**\n         * The first 5,000,000,000 seeds have been tested, scenarios are\n         * unlikely to exceed this number of entities.\n         */\n        const assumeValid = true;\n        const masterNode = (0,_key_key_js__WEBPACK_IMPORTED_MODULE_3__.deriveHdPrivateNodeFromSeed)(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        valueMap[entityId], assumeValid, crypto);\n        const hdPrivateKey = (0,_key_key_js__WEBPACK_IMPORTED_MODULE_3__.encodeHdPrivateKey)({\n            network: 'mainnet',\n            node: masterNode,\n        }, crypto);\n        return { ...all, [entityId]: hdPrivateKey };\n    }, {});\n    return {\n        ...defaultScenario,\n        data: {\n            ...defaultScenario.data,\n            hdKeys: {\n                addressIndex: _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.defaultScenarioAddressIndex,\n                hdPrivateKeys,\n            },\n        },\n    };\n};\n/**\n * Extend the `data` property of a scenario definition with values from a parent\n * scenario definition. Returns the extended value for `data`.\n *\n * @param parentData - the scenario `data` that is extended by the child\n * scenario\n * @param childData - the scenario `data` that may override values from the\n * parent scenario\n */\n// eslint-disable-next-line complexity\nconst extendScenarioDefinitionData = (parentData, childData) => ({\n    ...parentData,\n    ...childData,\n    ...(parentData.bytecode === undefined && childData.bytecode === undefined\n        ? {}\n        : {\n            bytecode: {\n                ...parentData.bytecode,\n                ...childData.bytecode,\n            },\n        }),\n    ...(parentData.hdKeys === undefined && childData.hdKeys === undefined\n        ? {}\n        : {\n            hdKeys: {\n                ...parentData.hdKeys,\n                ...childData.hdKeys,\n                ...(parentData.hdKeys?.hdPrivateKeys === undefined &&\n                    childData.hdKeys?.hdPrivateKeys === undefined\n                    ? {}\n                    : {\n                        hdPrivateKeys: {\n                            ...parentData.hdKeys?.hdPrivateKeys,\n                            ...childData.hdKeys?.hdPrivateKeys,\n                        },\n                    }),\n                ...(parentData.hdKeys?.hdPublicKeys === undefined &&\n                    childData.hdKeys?.hdPublicKeys === undefined\n                    ? {}\n                    : {\n                        hdPublicKeys: {\n                            ...parentData.hdKeys?.hdPublicKeys,\n                            ...childData.hdKeys?.hdPublicKeys,\n                        },\n                    }),\n            },\n        }),\n    ...(parentData.keys === undefined && childData.keys === undefined\n        ? {}\n        : {\n            keys: {\n                privateKeys: {\n                    ...parentData.keys?.privateKeys,\n                    ...childData.keys?.privateKeys,\n                },\n            },\n        }),\n});\n/**\n * Extend a child scenario definition with values from a parent scenario\n * definition. Returns the extended values for `data`, `transaction`, and\n * `value`.\n *\n * @param parentScenario - the scenario that is extended by the child scenario\n * @param childScenario - the scenario that may override values from the parent\n * scenario\n */\n// eslint-disable-next-line complexity\nconst extendScenarioDefinition = (parentScenario, childScenario) => ({\n    ...(parentScenario.data === undefined && childScenario.data === undefined\n        ? {}\n        : {\n            data: extendScenarioDefinitionData(parentScenario.data ?? {}, childScenario.data ?? {}),\n        }),\n    ...(parentScenario.transaction === undefined &&\n        childScenario.transaction === undefined\n        ? {}\n        : {\n            transaction: {\n                ...parentScenario.transaction,\n                ...childScenario.transaction,\n            },\n        }),\n    ...(parentScenario.sourceOutputs === undefined &&\n        childScenario.sourceOutputs === undefined\n        ? {}\n        : {\n            sourceOutputs: childScenario.sourceOutputs ?? parentScenario.sourceOutputs,\n        }),\n});\n/**\n * Generate the full scenario that is extended by the provided scenario\n * identifier. Scenarios for which `extends` is `undefined` extend the default\n * scenario for the provided compiler configuration.\n */\n// eslint-disable-next-line complexity\nconst generateExtendedScenario = ({ configuration, scenarioId, sourceScenarioIds = [], }) => {\n    if (scenarioId === undefined) {\n        return generateDefaultScenarioDefinition(configuration);\n    }\n    if (sourceScenarioIds.includes(scenarioId)) {\n        return `Cannot extend scenario \"${scenarioId}\": scenario \"${scenarioId}\" extends itself. Scenario inheritance path: ${sourceScenarioIds.join(' → ')}`;\n    }\n    const scenario = configuration.scenarios?.[scenarioId];\n    if (scenario === undefined) {\n        return `Cannot extend scenario \"${scenarioId}\": a scenario with the identifier ${scenarioId} is not included in this compiler configuration.`;\n    }\n    const parentScenario = scenario.extends === undefined\n        ? generateDefaultScenarioDefinition(configuration)\n        : generateExtendedScenario({\n            configuration,\n            scenarioId: scenario.extends,\n            sourceScenarioIds: [...sourceScenarioIds, scenarioId],\n        });\n    if (typeof parentScenario === 'string') {\n        return parentScenario;\n    }\n    return extendScenarioDefinition(parentScenario, scenario);\n};\n/**\n * Derive standard {@link CompilationData} properties from an extended scenario\n * definition.\n *\n * @param definition - a scenario definition that has been extended by the\n * default scenario definition\n */\n// eslint-disable-next-line complexity\nconst extendedScenarioDefinitionToCompilationData = (definition) => ({\n    ...(definition.data.currentBlockHeight === undefined\n        ? {}\n        : {\n            currentBlockHeight: definition.data.currentBlockHeight,\n        }),\n    ...(definition.data.currentBlockTime === undefined\n        ? {}\n        : {\n            currentBlockTime: definition.data.currentBlockTime,\n        }),\n    ...(definition.data.hdKeys === undefined\n        ? {}\n        : {\n            hdKeys: {\n                ...(definition.data.hdKeys.addressIndex === undefined\n                    ? {}\n                    : {\n                        addressIndex: definition.data.hdKeys.addressIndex,\n                    }),\n                ...(definition.data.hdKeys.hdPrivateKeys !== undefined &&\n                    Object.keys(definition.data.hdKeys.hdPrivateKeys).length > 0\n                    ? {\n                        hdPrivateKeys: definition.data.hdKeys.hdPrivateKeys,\n                    }\n                    : {}),\n                ...(definition.data.hdKeys.hdPublicKeys === undefined\n                    ? {}\n                    : {\n                        hdPublicKeys: definition.data.hdKeys.hdPublicKeys,\n                    }),\n            },\n        }),\n    ...(definition.data.keys?.privateKeys !== undefined &&\n        Object.keys(definition.data.keys.privateKeys).length > 0\n        ? {\n            keys: {\n                privateKeys: Object.entries(definition.data.keys.privateKeys).reduce((all, [id, hex]) => ({ ...all, [id]: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.hexToBin)(hex) }), {}),\n            },\n        }\n        : {}),\n});\n/**\n * Extend a {@link CompilationData} object with the compiled result of the\n * bytecode scripts provided by an {@link AuthenticationTemplateScenarioData}.\n */\nconst extendCompilationDataWithScenarioBytecode = ({ compilationData, configuration, scenarioDataBytecodeScripts, }) => {\n    const prefixBytecodeScriptId = (id) => `${_compiler_defaults_js__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.scenarioBytecodeScriptPrefix}${id}`;\n    const bytecodeScripts = Object.entries(scenarioDataBytecodeScripts).reduce((all, [id, script]) => ({\n        ...all,\n        [prefixBytecodeScriptId(id)]: script,\n    }), {});\n    const bytecodeScriptExtendedConfiguration = {\n        ...configuration,\n        scripts: {\n            ...configuration.scripts,\n            ...bytecodeScripts,\n        },\n    };\n    const bytecodeCompilations = Object.keys(scenarioDataBytecodeScripts).map((id) => {\n        const result = (0,_language_language_js__WEBPACK_IMPORTED_MODULE_4__.compileScriptRaw)({\n            configuration: bytecodeScriptExtendedConfiguration,\n            data: compilationData,\n            scriptId: prefixBytecodeScriptId(id),\n        });\n        if (result.success) {\n            return {\n                bytecode: result.bytecode,\n                id,\n            };\n        }\n        return {\n            errors: result.errors,\n            id,\n        };\n    });\n    const failedResults = bytecodeCompilations.filter((result) => 'errors' in result);\n    if (failedResults.length > 0) {\n        return `${failedResults\n            .map((result) => `Compilation error while generating bytecode for \"${result.id}\": ${(0,_language_language_js__WEBPACK_IMPORTED_MODULE_5__.stringifyErrors)(result.errors)}`)\n            .join('; ')}`;\n    }\n    const compiledBytecode = bytecodeCompilations.reduce((all, result) => ({ ...all, [result.id]: result.bytecode }), {});\n    return {\n        ...(Object.keys(compiledBytecode).length > 0\n            ? { bytecode: compiledBytecode }\n            : {}),\n        ...compilationData,\n    };\n};\n/**\n * Compile a {@link AuthenticationTemplateScenarioOutput.valueSatoshis},\n * returning the `Uint8Array` result.\n */\nconst compileAuthenticationTemplateScenarioValueSatoshis = (valueSatoshisDefinition = _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.defaultScenarioOutputValueSatoshis) => typeof valueSatoshisDefinition === 'string'\n    ? (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.binToValueSatoshis)((0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.hexToBin)(valueSatoshisDefinition))\n    : BigInt(valueSatoshisDefinition);\n/**\n * Compile an {@link AuthenticationTemplateScenarioBytecode} definition for an\n * {@link AuthenticationTemplateScenario}, returning either a\n * simple `Uint8Array` result or a full CashAssembly {@link CompilationResult}.\n */\n// eslint-disable-next-line complexity\nconst compileAuthenticationTemplateScenarioBytecode = ({ bytecodeDefinition, compilationContext, configuration, defaultOverride, extendedScenario, generateBytecode, lockingOrUnlockingScriptIdUnderTest, }) => {\n    if (typeof bytecodeDefinition === 'string') {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.hexToBin)(bytecodeDefinition);\n    }\n    const scriptId = bytecodeDefinition.script === undefined ||\n        Array.isArray(bytecodeDefinition.script)\n        ? lockingOrUnlockingScriptIdUnderTest\n        : bytecodeDefinition.script;\n    /**\n     * The script ID to compile. If `undefined`, we are attempting to \"copy\" the\n     * script ID in a scenario generation that does not define a locking or\n     * unlocking script under test (e.g. the scenario is only used for debugging\n     * values in an editor) - in these cases, simply return an empty `Uint8Array`.\n     */\n    if (scriptId === undefined) {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.hexToBin)('');\n    }\n    const overrides = bytecodeDefinition.overrides ?? defaultOverride;\n    const overriddenDataDefinition = extendScenarioDefinitionData(extendedScenario.data, overrides);\n    const data = extendCompilationDataWithScenarioBytecode({\n        compilationData: extendedScenarioDefinitionToCompilationData({\n            data: overriddenDataDefinition,\n        }),\n        configuration,\n        scenarioDataBytecodeScripts: overriddenDataDefinition.bytecode ?? {},\n    });\n    if (typeof data === 'string') {\n        const error = `Could not compile scenario \"data.bytecode\": ${data}`;\n        return { errors: [{ error }], success: false };\n    }\n    return generateBytecode({\n        data: { ...data, compilationContext },\n        debug: true,\n        scriptId,\n    });\n};\n/**\n * Compile a {@link AuthenticationTemplateScenarioOutput.token},\n * returning the {@link Output.token} result.\n */\n// eslint-disable-next-line complexity\nconst compileScenarioOutputTokenData = (output) => output.token === undefined\n    ? {}\n    : {\n        token: {\n            amount: BigInt(output.token.amount ?? 0),\n            // TODO: doesn't verify length\n            category: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.hexToBin)(output.token.category ??\n                _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.defaultScenarioOutputTokenCategory),\n            ...(output.token.nft === undefined\n                ? {}\n                : {\n                    nft: {\n                        capability: output.token.nft.capability ?? 'none',\n                        commitment: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.hexToBin)(output.token.nft.commitment ?? ''),\n                    },\n                }),\n        },\n    };\n/**\n * Generate a scenario given a compiler configuration. If neither `scenarioId`\n * or `unlockingScriptId` are provided, the default scenario for the compiler\n * configuration will be generated.\n *\n * Returns either the full `CompilationData` for the selected scenario or an\n * error message (as a `string`).\n *\n * Note, this method should typically not be used directly, use\n * {@link Compiler.generateScenario} instead.\n */\n// eslint-disable-next-line complexity\nconst generateScenarioBCH = ({ configuration, generateBytecode, scenarioId, unlockingScriptId, lockingScriptId: providedLockingScriptId, }, debug) => {\n    const { scenarioDefinition, scenarioName } = scenarioId === undefined\n        ? { scenarioDefinition: {}, scenarioName: `the default scenario` }\n        : {\n            scenarioDefinition: configuration.scenarios?.[scenarioId],\n            scenarioName: `scenario \"${scenarioId}\"`,\n        };\n    if (scenarioDefinition === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return `Cannot generate ${scenarioName}: a scenario definition with the identifier ${scenarioId} is not included in this compiler configuration.`;\n    }\n    const parentScenario = generateExtendedScenario({ configuration, scenarioId });\n    if (typeof parentScenario === 'string') {\n        return `Cannot generate ${scenarioName}: ${parentScenario}`;\n    }\n    const extendedScenario = extendScenarioDefinition(parentScenario, scenarioDefinition);\n    const partialCompilationData = extendedScenarioDefinitionToCompilationData(extendedScenario);\n    const fullCompilationData = extendCompilationDataWithScenarioBytecode({\n        compilationData: partialCompilationData,\n        configuration,\n        scenarioDataBytecodeScripts: extendedScenario.data.bytecode ?? {},\n    });\n    if (typeof fullCompilationData === 'string') {\n        return `Cannot generate ${scenarioName}. ${fullCompilationData}`;\n    }\n    if (extendedScenario.transaction.inputs.length !==\n        extendedScenario.sourceOutputs.length) {\n        return `Cannot generate ${scenarioName}: could not match source outputs with inputs - \"sourceOutputs\" must be the same length as \"transaction.inputs\".`;\n    }\n    const testedInputs = extendedScenario.transaction.inputs.filter((input) => Array.isArray(input.unlockingBytecode));\n    if (testedInputs.length !== 1) {\n        return `Cannot generate ${scenarioName}: the specific input under test in this scenario is ambiguous - \"transaction.inputs\" must include exactly one input that has \"unlockingBytecode\" set to [\"slot\"].`;\n    }\n    const testedInputIndex = extendedScenario.transaction.inputs.findIndex((input) => Array.isArray(input.unlockingBytecode));\n    const testedSourceOutputs = extendedScenario.sourceOutputs.filter((output) => Array.isArray(output.lockingBytecode));\n    if (testedSourceOutputs.length !== 1) {\n        return `Cannot generate ${scenarioName}: the source output unlocked by the input under test in this scenario is ambiguous - \"sourceOutputs\" must include exactly one output that has \"lockingBytecode\" set to [\"slot\"].`;\n    }\n    if (!Array.isArray(extendedScenario.sourceOutputs[testedInputIndex]?.lockingBytecode)) {\n        return `Cannot generate ${scenarioName}: the source output unlocked by the input under test in this scenario is ambiguous - the [\"slot\"] in \"transaction.inputs\" and \"sourceOutputs\" must be at the same index.`;\n    }\n    if (unlockingScriptId !== undefined &&\n        providedLockingScriptId !== undefined) {\n        return `Cannot generate ${scenarioName}: a scenario cannot be generated with both unlocking and locking script IDs defined. If an unlocking script is provided, the associated locking script ID must be read from the template.`;\n    }\n    const lockingScriptId = providedLockingScriptId === undefined\n        ? unlockingScriptId === undefined\n            ? undefined\n            : configuration.unlockingScripts?.[unlockingScriptId]\n        : providedLockingScriptId;\n    if (unlockingScriptId !== undefined && lockingScriptId === undefined) {\n        return `Cannot generate ${scenarioName} using unlocking script \"${unlockingScriptId}\": the locking script unlocked by \"${unlockingScriptId}\" is not provided in this compiler configuration.`;\n    }\n    const sourceOutputCompilations = extendedScenario.sourceOutputs.map((sourceOutput, index) => {\n        const slot = Array.isArray(sourceOutput.lockingBytecode);\n        const bytecodeDefinition = slot\n            ? lockingScriptId === undefined\n                ? _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.defaultScenarioBytecode\n                : { script: lockingScriptId }\n            : sourceOutput.lockingBytecode ?? {};\n        const defaultOverride = {};\n        return {\n            compiled: {\n                lockingBytecode: compileAuthenticationTemplateScenarioBytecode({\n                    bytecodeDefinition,\n                    configuration,\n                    defaultOverride,\n                    extendedScenario,\n                    generateBytecode,\n                    lockingOrUnlockingScriptIdUnderTest: lockingScriptId,\n                }),\n                valueSatoshis: compileAuthenticationTemplateScenarioValueSatoshis(sourceOutput.valueSatoshis),\n                ...compileScenarioOutputTokenData(sourceOutput),\n            },\n            index,\n            slot,\n            type: 'source output',\n        };\n    });\n    const lockingCompilation = sourceOutputCompilations.find((compilation) => compilation.slot)?.compiled.lockingBytecode;\n    const transactionOutputCompilations = extendedScenario.transaction.outputs.map((transactionOutput, index) => {\n        const defaultOverride = { hdKeys: { addressIndex: 1 } };\n        return {\n            compiled: {\n                lockingBytecode: compileAuthenticationTemplateScenarioBytecode({\n                    bytecodeDefinition: transactionOutput.lockingBytecode ?? {},\n                    configuration,\n                    defaultOverride,\n                    extendedScenario,\n                    generateBytecode,\n                    lockingOrUnlockingScriptIdUnderTest: lockingScriptId,\n                }),\n                valueSatoshis: compileAuthenticationTemplateScenarioValueSatoshis(transactionOutput.valueSatoshis),\n                ...compileScenarioOutputTokenData(transactionOutput),\n            },\n            index,\n            type: 'transaction output',\n        };\n    });\n    const outputCompilationErrors = [\n        ...sourceOutputCompilations,\n        ...transactionOutputCompilations,\n    ].reduce((accumulated, result) => {\n        if ('errors' in result.compiled.lockingBytecode) {\n            return [\n                ...accumulated,\n                ...result.compiled.lockingBytecode.errors.map((errorObject) => `Failed compilation of ${result.type} at index ${result.index}: ${errorObject.error}`),\n            ];\n        }\n        return accumulated;\n    }, []);\n    if (outputCompilationErrors.length > 0) {\n        const error = `Cannot generate ${scenarioName}: ${outputCompilationErrors.join(' ')}`;\n        if (debug === true) {\n            return {\n                lockingCompilation,\n                scenario: error,\n            };\n        }\n        return error;\n    }\n    const sourceOutputCompilationsSuccess = sourceOutputCompilations;\n    const transactionOutputCompilationsSuccess = transactionOutputCompilations;\n    const extractOutput = (compilation) => {\n        const { lockingBytecode, valueSatoshis, token } = compilation.compiled;\n        return {\n            lockingBytecode: 'bytecode' in lockingBytecode\n                ? lockingBytecode.bytecode\n                : lockingBytecode,\n            valueSatoshis,\n            ...(token === undefined ? {} : { token }),\n        };\n    };\n    const sourceOutputs = sourceOutputCompilationsSuccess.map(extractOutput);\n    const outputs = transactionOutputCompilationsSuccess.map(extractOutput);\n    const inputsContext = extendedScenario.transaction.inputs.map((input, inputIndex) => ({\n        outpointIndex: input.outpointIndex ?? inputIndex,\n        // TODO: doesn't verify length\n        outpointTransactionHash: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.hexToBin)(input.outpointTransactionHash ??\n            _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.defaultScenarioInputOutpointTransactionHash),\n        sequenceNumber: input.sequenceNumber ??\n            _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.defaultScenarioInputSequenceNumber,\n        unlockingBytecode: undefined,\n    }));\n    const transactionInputCompilations = extendedScenario.transaction.inputs.map((input, index) => {\n        const slot = Array.isArray(input.unlockingBytecode);\n        const bytecodeDefinition = Array.isArray(input.unlockingBytecode)\n            ? unlockingScriptId === undefined\n                ? _compiler_defaults_js__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.defaultScenarioBytecode\n                : { script: unlockingScriptId }\n            : input.unlockingBytecode ?? {};\n        const defaultOverride = {};\n        return {\n            compiled: {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                outpointIndex: inputsContext[index].outpointIndex,\n                outpointTransactionHash: \n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                inputsContext[index].outpointTransactionHash,\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                sequenceNumber: inputsContext[index].sequenceNumber,\n                unlockingBytecode: compileAuthenticationTemplateScenarioBytecode({\n                    bytecodeDefinition,\n                    compilationContext: {\n                        inputIndex: index,\n                        sourceOutputs,\n                        transaction: {\n                            inputs: inputsContext,\n                            locktime: extendedScenario.transaction.locktime,\n                            outputs,\n                            version: extendedScenario.transaction.version,\n                        },\n                    },\n                    configuration,\n                    defaultOverride,\n                    extendedScenario,\n                    generateBytecode,\n                    lockingOrUnlockingScriptIdUnderTest: unlockingScriptId,\n                }),\n            },\n            index,\n            slot,\n        };\n    });\n    const unlockingCompilation = transactionInputCompilations.find((compilation) => compilation.slot)?.compiled.unlockingBytecode;\n    const inputCompilationErrors = transactionInputCompilations.reduce((accumulated, result) => {\n        if ('errors' in result.compiled.unlockingBytecode) {\n            return [\n                ...accumulated,\n                ...result.compiled.unlockingBytecode.errors.map((errorObject) => `Failed compilation of input at index ${result.index}: ${errorObject.error}`),\n            ];\n        }\n        return accumulated;\n    }, []);\n    if (inputCompilationErrors.length > 0) {\n        const error = `Cannot generate ${scenarioName}: ${inputCompilationErrors.join(' ')}`;\n        if (debug === true) {\n            return {\n                lockingCompilation,\n                scenario: error,\n                unlockingCompilation,\n            };\n        }\n        return error;\n    }\n    const transactionInputCompilationsSuccess = transactionInputCompilations;\n    const inputs = transactionInputCompilationsSuccess.map((compilation) => {\n        const { outpointIndex, outpointTransactionHash, sequenceNumber, unlockingBytecode, } = compilation.compiled;\n        return {\n            outpointIndex,\n            outpointTransactionHash,\n            sequenceNumber,\n            unlockingBytecode: 'bytecode' in unlockingBytecode\n                ? unlockingBytecode.bytecode\n                : unlockingBytecode,\n        };\n    });\n    const scenario = {\n        data: fullCompilationData,\n        program: {\n            inputIndex: testedInputIndex,\n            sourceOutputs,\n            transaction: {\n                inputs,\n                locktime: extendedScenario.transaction.locktime,\n                outputs,\n                version: extendedScenario.transaction.version,\n            },\n        },\n    };\n    return (debug === true\n        ? { lockingCompilation, scenario, unlockingCompilation }\n        : scenario);\n};\n//# sourceMappingURL=scenarios.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/compiler/scenarios.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/compiler/standard/p2pkh.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/compiler/standard/p2pkh.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"authenticationTemplateP2pkh\": () => (/* binding */ authenticationTemplateP2pkh),\n/* harmony export */   \"authenticationTemplateP2pkhNonHd\": () => (/* binding */ authenticationTemplateP2pkhNonHd)\n/* harmony export */ });\n/**\n * A standard single-factor authentication template that uses\n * Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use\n * on the network.\n *\n * This P2PKH template uses BCH Schnorr signatures, reducing the size of\n * transactions.\n *\n * Note, this authentication template uses only a single `Key`. For HD key\n * support, see {@link authenticationTemplateP2pkhHd}.\n */\nconst authenticationTemplateP2pkhNonHd = {\n    $schema: 'https://bitauth.com/schemas/authentication-template-v0.schema.json',\n    description: 'A standard single-factor authentication template that uses Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use on the network.\\n\\nThis P2PKH template uses BCH Schnorr signatures, reducing the size of transactions.',\n    entities: {\n        owner: {\n            description: 'The individual who can spend from this wallet.',\n            name: 'Owner',\n            scripts: ['lock', 'unlock'],\n            variables: {\n                key: {\n                    description: 'The private key that controls this wallet.',\n                    name: 'Key',\n                    type: 'Key',\n                },\n            },\n        },\n    },\n    name: 'Single Signature (P2PKH)',\n    scripts: {\n        lock: {\n            lockingType: 'standard',\n            name: 'P2PKH Lock',\n            script: 'OP_DUP\\nOP_HASH160 <$(<key.public_key> OP_HASH160\\n)> OP_EQUALVERIFY\\nOP_CHECKSIG',\n        },\n        unlock: {\n            name: 'Unlock',\n            script: '<key.schnorr_signature.all_outputs>\\n<key.public_key>',\n            unlocks: 'lock',\n        },\n    },\n    supported: ['BCH_2020_05', 'BCH_2021_05', 'BCH_2022_05'],\n    version: 0,\n};\n/**\n * A standard single-factor authentication template that uses\n * Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use\n * on the network.\n *\n * This P2PKH template uses BCH Schnorr signatures, reducing the size of\n * transactions.\n *\n * Because the template uses a Hierarchical Deterministic (HD) key, it also\n * supports watch-only clients.\n */\nconst authenticationTemplateP2pkh = {\n    $schema: 'https://bitauth.com/schemas/authentication-template-v0.schema.json',\n    description: 'A standard single-factor authentication template that uses Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use on the network.\\n\\nThis P2PKH template uses BCH Schnorr signatures, reducing the size of transactions. Because the template uses a Hierarchical Deterministic (HD) key, it also supports watch-only clients.',\n    entities: {\n        owner: {\n            description: 'The individual who can spend from this wallet.',\n            name: 'Owner',\n            scripts: ['lock', 'unlock'],\n            variables: {\n                key: {\n                    description: 'The private key that controls this wallet.',\n                    name: 'Key',\n                    type: 'HdKey',\n                },\n            },\n        },\n    },\n    name: 'Single Signature (P2PKH)',\n    scripts: {\n        lock: {\n            lockingType: 'standard',\n            name: 'P2PKH Lock',\n            script: 'OP_DUP\\nOP_HASH160 <$(<key.public_key> OP_HASH160\\n)> OP_EQUALVERIFY\\nOP_CHECKSIG',\n        },\n        unlock: {\n            name: 'Unlock',\n            script: '<key.schnorr_signature.all_outputs>\\n<key.public_key>',\n            unlocks: 'lock',\n        },\n    },\n    supported: ['BCH_2020_05', 'BCH_2021_05', 'BCH_2022_05'],\n    version: 0,\n};\n//# sourceMappingURL=p2pkh.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/compiler/standard/p2pkh.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/crypto/combinations.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/crypto/combinations.js ***!
  \****************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hash256\": () => (/* binding */ hash256)\n/* harmony export */ });\n/* unused harmony export hash160 */\n/* harmony import */ var _default_crypto_instances_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./default-crypto-instances.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_default_crypto_instances_js__WEBPACK_IMPORTED_MODULE_0__]);\n_default_crypto_instances_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n/**\n * Hash the given payload with sha256, then hash the 32-byte result with\n * ripemd160, returning a 20-byte hash.\n *\n * This hash is used in both {@link AddressType.p2pkh} and\n * {@link AddressType.p2sh20} addresses.\n *\n * @param payload - the Uint8Array to hash\n */\nconst hash160 = (payload, crypto = { ripemd160: _default_crypto_instances_js__WEBPACK_IMPORTED_MODULE_0__.ripemd160, sha256: _default_crypto_instances_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => crypto.ripemd160.hash(crypto.sha256.hash(payload));\n/**\n * Hash the given payload with sha256, then hash the 32-byte result with\n * one final round of sha256, returning a 32-byte hash.\n *\n * This type of hash is used to generate identifiers for transactions and blocks\n * (and therefore in block mining).\n *\n * @param payload - the Uint8Array to hash\n */\nconst hash256 = (payload, sha256 = _default_crypto_instances_js__WEBPACK_IMPORTED_MODULE_0__.sha256) => sha256.hash(sha256.hash(payload));\n//# sourceMappingURL=combinations.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/crypto/combinations.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js ***!
  \****************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ripemd160\": () => (/* binding */ ripemd160),\n/* harmony export */   \"secp256k1\": () => (/* binding */ secp256k1),\n/* harmony export */   \"sha1\": () => (/* binding */ sha1),\n/* harmony export */   \"sha256\": () => (/* binding */ sha256),\n/* harmony export */   \"sha512\": () => (/* binding */ sha512)\n/* harmony export */ });\n/* harmony import */ var _ripemd160_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ripemd160.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/ripemd160.js\");\n/* harmony import */ var _secp256k1_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./secp256k1.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/secp256k1.js\");\n/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sha1.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/sha1.js\");\n/* harmony import */ var _sha256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha256.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/sha256.js\");\n/* harmony import */ var _sha512_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sha512.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/sha512.js\");\n\n\n\n\n\nconst [sha1, sha256, sha512, ripemd160, secp256k1] = await Promise.all([\n    (0,_sha1_js__WEBPACK_IMPORTED_MODULE_0__.instantiateSha1)(),\n    (0,_sha256_js__WEBPACK_IMPORTED_MODULE_1__.instantiateSha256)(),\n    (0,_sha512_js__WEBPACK_IMPORTED_MODULE_2__.instantiateSha512)(),\n    (0,_ripemd160_js__WEBPACK_IMPORTED_MODULE_3__.instantiateRipemd160)(),\n    (0,_secp256k1_js__WEBPACK_IMPORTED_MODULE_4__.instantiateSecp256k1)(),\n]);\n\n//# sourceMappingURL=default-crypto-instances.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/crypto/hmac.js":
/*!********************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/crypto/hmac.js ***!
  \********************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hmacSha512\": () => (/* binding */ hmacSha512)\n/* harmony export */ });\n/* unused harmony exports instantiateHmacFunction, hmacSha256 */\n/* harmony import */ var _crypto_default_crypto_instances_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../crypto/default-crypto-instances.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_crypto_default_crypto_instances_js__WEBPACK_IMPORTED_MODULE_1__]);\n_crypto_default_crypto_instances_js__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n/**\n * Instantiate a hash-based message authentication code (HMAC) function as\n * specified by RFC 2104.\n *\n * @param hashFunction - a cryptographic hash function that iterates a basic\n * compression function over blocks of data\n * @param blockByteLength - the byte-length of blocks used in `hashFunction`\n */\nconst instantiateHmacFunction = (hashFunction, blockByteLength) => (secret, message) => {\n    const key = new Uint8Array(blockByteLength).fill(0);\n    // eslint-disable-next-line functional/no-expression-statement\n    key.set(secret.length > blockByteLength ? hashFunction(secret) : secret, 0);\n    const innerPaddingFill = 0x36;\n    const innerPadding = new Uint8Array(blockByteLength).fill(innerPaddingFill);\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n    const innerPrefix = innerPadding.map((pad, index) => pad ^ key[index]);\n    const innerContent = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([innerPrefix, message]);\n    const innerResult = hashFunction(innerContent);\n    const outerPaddingFill = 0x5c;\n    const outerPadding = new Uint8Array(blockByteLength).fill(outerPaddingFill);\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n    const outerPrefix = outerPadding.map((pad, index) => pad ^ key[index]);\n    return hashFunction((0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([outerPrefix, innerResult]));\n};\nconst sha256BlockByteLength = 64;\n/**\n * Create a hash-based message authentication code using HMAC-SHA256 as\n * specified in `RFC 4231`. Returns a 32-byte Uint8Array.\n *\n * Secrets longer than the block byte-length (64 bytes) are hashed before\n * use, shortening their length to the minimum recommended length (32 bytes).\n * See `RFC 2104` for details.\n *\n * @param secret - the secret key (recommended length: 32-64 bytes)\n * @param message - the message to authenticate\n * @param sha256 - an implementation of Sha256\n */\nconst hmacSha256 = (secret, message, sha256 = _crypto_default_crypto_instances_js__WEBPACK_IMPORTED_MODULE_1__.sha256) => instantiateHmacFunction(sha256.hash, sha256BlockByteLength)(secret, message);\nconst sha512BlockByteLength = 128;\n/**\n * Create a hash-based message authentication code using HMAC-SHA512 as\n * specified in `RFC 4231`. Returns a 64-byte Uint8Array.\n *\n * Secrets longer than the block byte-length (128 bytes) are hashed before\n * use, shortening their length to the minimum recommended length (64 bytes).\n * See `RFC 2104` for details.\n *\n * @param secret - the secret key (recommended length: 64-128 bytes)\n * @param message - the message to authenticate\n * @param sha512 - an implementation of Sha512\n */\nconst hmacSha512 = (secret, message, sha512 = _crypto_default_crypto_instances_js__WEBPACK_IMPORTED_MODULE_1__.sha512) => instantiateHmacFunction(sha512.hash, sha512BlockByteLength)(secret, message);\n//# sourceMappingURL=hmac.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/crypto/hmac.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/crypto/ripemd160.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/crypto/ripemd160.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"instantiateRipemd160\": () => (/* binding */ instantiateRipemd160)\n/* harmony export */ });\n/* unused harmony exports instantiateRipemd160Bytes, getEmbeddedRipemd160Binary */\n/* harmony import */ var _dependencies_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependencies.js */ \"../../node_modules/@bitauth/libauth/build/lib/bin/hashes.js\");\n/* harmony import */ var _dependencies_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependencies.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/base64.js\");\n/* harmony import */ var _dependencies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependencies.js */ \"../../node_modules/@bitauth/libauth/build/lib/bin/ripemd160/ripemd160.base64.js\");\n\n/**\n * The most performant way to instantiate ripemd160 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use {@link instantiateRipemd160}.\n *\n * @param webassemblyBytes - A buffer containing the ripemd160 binary.\n */\nconst instantiateRipemd160Bytes = async (webassemblyBytes) => {\n    const wasm = await (0,_dependencies_js__WEBPACK_IMPORTED_MODULE_0__.instantiateRustWasm)(webassemblyBytes, './ripemd160', 'ripemd160', 'ripemd160_init', 'ripemd160_update', 'ripemd160_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update,\n    };\n};\nconst getEmbeddedRipemd160Binary = () => (0,_dependencies_js__WEBPACK_IMPORTED_MODULE_1__.base64ToBin)(_dependencies_js__WEBPACK_IMPORTED_MODULE_2__.ripemd160Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of\n * {@link instantiateRipemd160Bytes} that does not require the consumer to\n * provide the ripemd160 binary buffer.\n */\nconst instantiateRipemd160 = async () => instantiateRipemd160Bytes(getEmbeddedRipemd160Binary());\n//# sourceMappingURL=ripemd160.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/crypto/ripemd160.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/crypto/secp256k1.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/crypto/secp256k1.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"instantiateSecp256k1\": () => (/* binding */ instantiateSecp256k1)\n/* harmony export */ });\n/* unused harmony exports Secp256k1Error, instantiateSecp256k1Bytes */\n/* harmony import */ var _dependencies_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependencies.js */ \"../../node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1-wasm-types.js\");\n/* harmony import */ var _dependencies_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependencies.js */ \"../../node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1-wasm.js\");\n\n/* eslint-enable @typescript-eslint/no-duplicate-enum-values */\nvar Secp256k1Error;\n(function (Secp256k1Error) {\n    Secp256k1Error[\"unparsableSignature\"] = \"Failed to parse signature.\";\n    Secp256k1Error[\"unparsablePublicKey\"] = \"Failed to parse public key.\";\n    Secp256k1Error[\"derivePublicKeyFromInvalidPrivateKey\"] = \"Cannot derive public key from invalid private key.\";\n    Secp256k1Error[\"signWithInvalidPrivateKey\"] = \"Failed to sign message hash. The private key is not valid.\";\n    Secp256k1Error[\"recoverPublicKeyWithUnparsableSignature\"] = \"Failed to recover public key. Could not parse signature.\";\n    Secp256k1Error[\"recoverPublicKeyInvalidMaterial\"] = \"Failed to recover public key. The compact signature, recovery, or message hash is invalid.\";\n    Secp256k1Error[\"addTweakPrivateKey\"] = \"Private key is invalid or adding failed.\";\n    Secp256k1Error[\"mulTweakPrivateKey\"] = \"Private key is invalid or multiplying failed.\";\n    Secp256k1Error[\"addTweakPublicKey\"] = \"Failed to tweak public key (by addition).\";\n    Secp256k1Error[\"mulTweakPublicKey\"] = \"Failed to tweak public key (by multiplication).\";\n})(Secp256k1Error || (Secp256k1Error = {}));\n/**\n * @param secp256k1Wasm - a Secp256k1Wasm object\n * @param randomSeed - a 32-byte random seed used to randomize the context after\n * creation\n */\nconst wrapSecp256k1Wasm = (secp256k1Wasm, randomSeed) => {\n    /**\n     * Currently, this wrapper creates a context with both SIGN and VERIFY\n     * capabilities. For better initialization performance, consumers could\n     * re-implement a wrapper with only the capabilities they require.\n     */\n    const contextPtr = secp256k1Wasm.contextCreate(_dependencies_js__WEBPACK_IMPORTED_MODULE_0__.ContextFlag.BOTH);\n    /**\n     * Since all of these methods are single-threaded and synchronous, we can\n     * reuse allocated WebAssembly memory for each method without worrying about\n     * calls interfering with each other. Likewise, these spaces never need to be\n     * `free`d, since we will continue using them until this entire object (and\n     * with it, the entire WebAssembly instance) is garbage collected.\n     *\n     * If malicious javascript gained access to this object, it should be\n     * considered a critical vulnerability in the consumer. However, as a best\n     * practice, we zero out private keys below when we're finished with them.\n     */\n    const sigScratch = secp256k1Wasm.malloc(72 /* ByteLength.maxECDSASig */);\n    const publicKeyScratch = secp256k1Wasm.malloc(65 /* ByteLength.maxPublicKey */);\n    const messageHashScratch = secp256k1Wasm.malloc(32 /* ByteLength.messageHash */);\n    const internalPublicKeyPtr = secp256k1Wasm.malloc(64 /* ByteLength.internalPublicKey */);\n    const internalSigPtr = secp256k1Wasm.malloc(64 /* ByteLength.internalSig */);\n    const schnorrSigPtr = secp256k1Wasm.malloc(64 /* ByteLength.schnorrSig */);\n    const privateKeyPtr = secp256k1Wasm.malloc(32 /* ByteLength.privateKey */);\n    const internalRSigPtr = secp256k1Wasm.malloc(65 /* ByteLength.recoverableSig */);\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    const recoveryNumPtr = secp256k1Wasm.malloc(4);\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n    const recoveryNumPtrView32 = recoveryNumPtr >> 2;\n    const getRecoveryNumPtr = () => secp256k1Wasm.heapU32[recoveryNumPtrView32];\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    const lengthPtr = secp256k1Wasm.malloc(4);\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n    const lengthPtrView32 = lengthPtr >> 2;\n    const cloneAndPad = (value, expectedLength) => {\n        const zeroPaddedValue = new Uint8Array(expectedLength);\n        zeroPaddedValue.set(value);\n        return zeroPaddedValue;\n    };\n    const parsePublicKey = (publicKey) => {\n        const paddedPublicKey = cloneAndPad(publicKey, 65 /* ByteLength.maxPublicKey */);\n        secp256k1Wasm.heapU8.set(paddedPublicKey, publicKeyScratch);\n        return (secp256k1Wasm.pubkeyParse(contextPtr, internalPublicKeyPtr, publicKeyScratch, \n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n        publicKey.length) === 1);\n    };\n    const setLengthPtr = (value) => {\n        secp256k1Wasm.heapU32.set([value], lengthPtrView32);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const getLengthPtr = () => secp256k1Wasm.heapU32[lengthPtrView32];\n    const serializePublicKey = (length, flag) => {\n        setLengthPtr(length);\n        secp256k1Wasm.pubkeySerialize(contextPtr, publicKeyScratch, lengthPtr, internalPublicKeyPtr, flag);\n        return secp256k1Wasm.readHeapU8(publicKeyScratch, getLengthPtr()).slice();\n    };\n    const getSerializedPublicKey = (compressed) => compressed\n        ? serializePublicKey(33 /* ByteLength.compressedPublicKey */, _dependencies_js__WEBPACK_IMPORTED_MODULE_0__.CompressionFlag.COMPRESSED)\n        : serializePublicKey(65 /* ByteLength.uncompressedPublicKey */, _dependencies_js__WEBPACK_IMPORTED_MODULE_0__.CompressionFlag.UNCOMPRESSED);\n    const convertPublicKey = (compressed) => (publicKey) => {\n        if (!parsePublicKey(publicKey)) {\n            return Secp256k1Error.unparsablePublicKey;\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const parseSignature = (signature, isDer) => {\n        const paddedSignature = cloneAndPad(signature, 72 /* ByteLength.maxECDSASig */);\n        secp256k1Wasm.heapU8.set(paddedSignature, sigScratch);\n        return isDer\n            ? secp256k1Wasm.signatureParseDER(contextPtr, internalSigPtr, sigScratch, signature.length) === 1\n            : secp256k1Wasm.signatureParseCompact(contextPtr, internalSigPtr, sigScratch) === 1;\n    };\n    const getCompactSig = () => {\n        secp256k1Wasm.signatureSerializeCompact(contextPtr, sigScratch, internalSigPtr);\n        return secp256k1Wasm.readHeapU8(sigScratch, 64 /* ByteLength.compactSig */).slice();\n    };\n    const getDERSig = () => {\n        setLengthPtr(72 /* ByteLength.maxECDSASig */);\n        secp256k1Wasm.signatureSerializeDER(contextPtr, sigScratch, lengthPtr, internalSigPtr);\n        return secp256k1Wasm.readHeapU8(sigScratch, getLengthPtr()).slice();\n    };\n    const convertSignature = (wasDER) => (signature) => {\n        if (!parseSignature(signature, wasDER)) {\n            return Secp256k1Error.unparsableSignature;\n        }\n        return wasDER ? getCompactSig() : getDERSig();\n    };\n    const fillPrivateKeyPtr = (privateKey) => {\n        const paddedPrivateKey = cloneAndPad(privateKey, 32 /* ByteLength.privateKey */);\n        secp256k1Wasm.heapU8.set(paddedPrivateKey, privateKeyPtr);\n    };\n    const zeroOutPtr = (pointer, bytes) => {\n        secp256k1Wasm.heapU8.fill(0, pointer, pointer + bytes);\n    };\n    const zeroOutPrivateKeyPtr = () => {\n        zeroOutPtr(privateKeyPtr, 32 /* ByteLength.privateKey */);\n    };\n    const withPrivateKey = (privateKey, instructions) => {\n        fillPrivateKeyPtr(privateKey);\n        const ret = instructions();\n        zeroOutPrivateKeyPtr();\n        return ret;\n    };\n    const derivePublicKey = (compressed) => (privateKey) => {\n        const invalid = withPrivateKey(privateKey, () => secp256k1Wasm.pubkeyCreate(contextPtr, internalPublicKeyPtr, privateKeyPtr) !== 1);\n        if (invalid) {\n            return Secp256k1Error.derivePublicKeyFromInvalidPrivateKey;\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const fillMessageHashScratch = (messageHash) => {\n        const paddedMessageHash = cloneAndPad(messageHash, 32 /* ByteLength.messageHash */);\n        secp256k1Wasm.heapU8.set(paddedMessageHash, messageHashScratch);\n    };\n    const normalizeSignature = () => {\n        secp256k1Wasm.signatureNormalize(contextPtr, internalSigPtr, internalSigPtr);\n    };\n    const modifySignature = (isDer, normalize) => (signature) => {\n        if (!parseSignature(signature, isDer)) {\n            return Secp256k1Error.unparsableSignature;\n        }\n        if (normalize) {\n            normalizeSignature();\n        }\n        else {\n            secp256k1Wasm.signatureMalleate(contextPtr, internalSigPtr, internalSigPtr);\n        }\n        return isDer ? getDERSig() : getCompactSig();\n    };\n    const parseAndNormalizeSignature = (signature, isDer, normalize) => {\n        const ret = parseSignature(signature, isDer);\n        if (normalize) {\n            normalizeSignature();\n        }\n        return ret;\n    };\n    const signMessageHash = (isDer) => (privateKey, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return withPrivateKey(privateKey, () => {\n            const failed = secp256k1Wasm.sign(contextPtr, internalSigPtr, messageHashScratch, privateKeyPtr) !== 1;\n            if (failed) {\n                return Secp256k1Error.signWithInvalidPrivateKey;\n            }\n            if (isDer) {\n                setLengthPtr(72 /* ByteLength.maxECDSASig */);\n                secp256k1Wasm.signatureSerializeDER(contextPtr, sigScratch, lengthPtr, internalSigPtr);\n                return secp256k1Wasm.readHeapU8(sigScratch, getLengthPtr()).slice();\n            }\n            secp256k1Wasm.signatureSerializeCompact(contextPtr, sigScratch, internalSigPtr);\n            return secp256k1Wasm\n                .readHeapU8(sigScratch, 64 /* ByteLength.compactSig */)\n                .slice();\n        });\n    };\n    const signMessageHashSchnorr = () => (privateKey, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return withPrivateKey(privateKey, () => {\n            const failed = secp256k1Wasm.schnorrSign(contextPtr, schnorrSigPtr, messageHashScratch, privateKeyPtr) !== 1;\n            if (failed) {\n                return Secp256k1Error.signWithInvalidPrivateKey;\n            }\n            return secp256k1Wasm\n                .readHeapU8(schnorrSigPtr, 64 /* ByteLength.schnorrSig */)\n                .slice();\n        });\n    };\n    const verifyMessage = (messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return (secp256k1Wasm.verify(contextPtr, internalSigPtr, messageHashScratch, internalPublicKeyPtr) === 1);\n    };\n    const verifySignature = (isDer, normalize) => (signature, publicKey, messageHash) => parsePublicKey(publicKey) &&\n        parseAndNormalizeSignature(signature, isDer, normalize) &&\n        verifyMessage(messageHash);\n    const verifyMessageSchnorr = (messageHash, signature) => {\n        fillMessageHashScratch(messageHash);\n        const paddedSignature = cloneAndPad(signature, 64 /* ByteLength.schnorrSig */);\n        secp256k1Wasm.heapU8.set(paddedSignature, schnorrSigPtr);\n        return (secp256k1Wasm.schnorrVerify(contextPtr, schnorrSigPtr, messageHashScratch, internalPublicKeyPtr) === 1);\n    };\n    const verifySignatureSchnorr = () => (signature, publicKey, messageHash) => parsePublicKey(publicKey)\n        ? verifyMessageSchnorr(messageHash, signature)\n        : false;\n    const signMessageHashRecoverable = (privateKey, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return withPrivateKey(privateKey, () => {\n            if (secp256k1Wasm.signRecoverable(contextPtr, internalRSigPtr, messageHashScratch, privateKeyPtr) !== 1) {\n                return Secp256k1Error.signWithInvalidPrivateKey;\n            }\n            secp256k1Wasm.recoverableSignatureSerialize(contextPtr, sigScratch, recoveryNumPtr, internalRSigPtr);\n            return {\n                recoveryId: getRecoveryNumPtr(),\n                signature: secp256k1Wasm\n                    .readHeapU8(sigScratch, 64 /* ByteLength.compactSig */)\n                    .slice(),\n            };\n        });\n    };\n    const recoverPublicKey = (compressed) => (signature, recoveryId, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        const paddedSignature = cloneAndPad(signature, 72 /* ByteLength.maxECDSASig */);\n        secp256k1Wasm.heapU8.set(paddedSignature, sigScratch);\n        if (secp256k1Wasm.recoverableSignatureParse(contextPtr, internalRSigPtr, sigScratch, recoveryId) !== 1) {\n            return Secp256k1Error.recoverPublicKeyWithUnparsableSignature;\n        }\n        if (secp256k1Wasm.recover(contextPtr, internalPublicKeyPtr, internalRSigPtr, messageHashScratch) !== 1) {\n            return Secp256k1Error.recoverPublicKeyInvalidMaterial;\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const addTweakPrivateKey = (privateKey, tweakValue) => {\n        fillMessageHashScratch(tweakValue);\n        return withPrivateKey(privateKey, () => {\n            if (secp256k1Wasm.privkeyTweakAdd(contextPtr, privateKeyPtr, messageHashScratch) !== 1) {\n                return Secp256k1Error.addTweakPrivateKey;\n            }\n            return secp256k1Wasm\n                .readHeapU8(privateKeyPtr, 32 /* ByteLength.privateKey */)\n                .slice();\n        });\n    };\n    const mulTweakPrivateKey = (privateKey, tweakValue) => {\n        fillMessageHashScratch(tweakValue);\n        return withPrivateKey(privateKey, () => {\n            if (secp256k1Wasm.privkeyTweakMul(contextPtr, privateKeyPtr, messageHashScratch) !== 1) {\n                return Secp256k1Error.mulTweakPrivateKey;\n            }\n            return secp256k1Wasm\n                .readHeapU8(privateKeyPtr, 32 /* ByteLength.privateKey */)\n                .slice();\n        });\n    };\n    const addTweakPublicKey = (compressed) => (publicKey, tweakValue) => {\n        if (!parsePublicKey(publicKey)) {\n            return Secp256k1Error.unparsablePublicKey;\n        }\n        fillMessageHashScratch(tweakValue);\n        if (secp256k1Wasm.pubkeyTweakAdd(contextPtr, internalPublicKeyPtr, messageHashScratch) !== 1) {\n            return Secp256k1Error.addTweakPublicKey;\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const mulTweakPublicKey = (compressed) => (publicKey, tweakValue) => {\n        if (!parsePublicKey(publicKey)) {\n            return Secp256k1Error.unparsablePublicKey;\n        }\n        fillMessageHashScratch(tweakValue);\n        if (secp256k1Wasm.pubkeyTweakMul(contextPtr, internalPublicKeyPtr, messageHashScratch) !== 1) {\n            return Secp256k1Error.mulTweakPublicKey;\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    if (randomSeed !== undefined) {\n        const randomSeedPtr = messageHashScratch;\n        const paddedRandomSeed = cloneAndPad(randomSeed, 32 /* ByteLength.randomSeed */);\n        secp256k1Wasm.heapU8.set(paddedRandomSeed, randomSeedPtr);\n        secp256k1Wasm.contextRandomize(contextPtr, randomSeedPtr);\n        zeroOutPtr(randomSeedPtr, 32 /* ByteLength.randomSeed */);\n    }\n    return {\n        addTweakPrivateKey,\n        addTweakPublicKeyCompressed: addTweakPublicKey(true),\n        addTweakPublicKeyUncompressed: addTweakPublicKey(false),\n        compressPublicKey: convertPublicKey(true),\n        derivePublicKeyCompressed: derivePublicKey(true),\n        derivePublicKeyUncompressed: derivePublicKey(false),\n        malleateSignatureCompact: modifySignature(false, false),\n        malleateSignatureDER: modifySignature(true, false),\n        mulTweakPrivateKey,\n        mulTweakPublicKeyCompressed: mulTweakPublicKey(true),\n        mulTweakPublicKeyUncompressed: mulTweakPublicKey(false),\n        normalizeSignatureCompact: modifySignature(false, true),\n        normalizeSignatureDER: modifySignature(true, true),\n        recoverPublicKeyCompressed: recoverPublicKey(true),\n        recoverPublicKeyUncompressed: recoverPublicKey(false),\n        signMessageHashCompact: signMessageHash(false),\n        signMessageHashDER: signMessageHash(true),\n        signMessageHashRecoverableCompact: signMessageHashRecoverable,\n        signMessageHashSchnorr: signMessageHashSchnorr(),\n        signatureCompactToDER: convertSignature(false),\n        signatureDERToCompact: convertSignature(true),\n        uncompressPublicKey: convertPublicKey(false),\n        validatePrivateKey: (privateKey) => withPrivateKey(privateKey, () => secp256k1Wasm.seckeyVerify(contextPtr, privateKeyPtr) === 1),\n        validatePublicKey: parsePublicKey,\n        verifySignatureCompact: verifySignature(false, true),\n        verifySignatureCompactLowS: verifySignature(false, false),\n        verifySignatureDER: verifySignature(true, true),\n        verifySignatureDERLowS: verifySignature(true, false),\n        verifySignatureSchnorr: verifySignatureSchnorr(),\n    };\n};\n/**\n * This method is like {@link instantiateSecp256k1}, but requires the consumer\n * to `Window.fetch` or `fs.readFile` the `secp256k1.wasm` binary and provide it\n * to this method as `webassemblyBytes`. This skips a base64 decoding of an\n * embedded binary.\n *\n * ### Randomizing the Context with `randomSeed`\n * This method also accepts an optional, 32-byte `randomSeed`, which is passed\n * to the `contextRandomize` method in the underlying WebAssembly.\n *\n * In the secp256k1 C library, context randomization is an additional layer of\n * security from side-channel attacks that attempt to extract private key\n * information by analyzing things like a CPU's emitted radio frequencies or\n * power usage.\n *\n * As most applications also benefit from deterministic, reproducible behavior,\n * context is not randomized by default in Libauth. To randomize the context,\n * provide a 32-byte Uint8Array of cryptographically strong random values\n * (e.g. `Crypto.getRandomValues()`).\n *\n * @param webassemblyBytes - an ArrayBuffer containing the bytes from Libauth's\n * `secp256k1.wasm` binary. Providing this buffer manually may be faster than\n * the internal base64 decode that happens in {@link instantiateSecp256k1}.\n * @param randomSeed - a 32-byte random seed used to randomize the secp256k1\n * context after creation. See above for details.\n */\nconst instantiateSecp256k1Bytes = async (webassemblyBytes, randomSeed) => wrapSecp256k1Wasm(await (0,_dependencies_js__WEBPACK_IMPORTED_MODULE_1__.instantiateSecp256k1WasmBytes)(webassemblyBytes), randomSeed);\n/**\n * Create and wrap a Secp256k1 WebAssembly instance to expose a set of\n * purely-functional Secp256k1 methods. For slightly faster initialization, use\n * {@link instantiateSecp256k1Bytes}.\n *\n * @param randomSeed - a 32-byte random seed used to randomize the secp256k1\n * context after creation. See the description in\n * {@link instantiateSecp256k1Bytes} for details.\n */\nconst instantiateSecp256k1 = async (randomSeed) => wrapSecp256k1Wasm(await (0,_dependencies_js__WEBPACK_IMPORTED_MODULE_1__.instantiateSecp256k1Wasm)(), randomSeed);\n//# sourceMappingURL=secp256k1.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/crypto/secp256k1.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/crypto/sha1.js":
/*!********************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/crypto/sha1.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"instantiateSha1\": () => (/* binding */ instantiateSha1)\n/* harmony export */ });\n/* unused harmony exports instantiateSha1Bytes, getEmbeddedSha1Binary */\n/* harmony import */ var _dependencies_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependencies.js */ \"../../node_modules/@bitauth/libauth/build/lib/bin/hashes.js\");\n/* harmony import */ var _dependencies_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependencies.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/base64.js\");\n/* harmony import */ var _dependencies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependencies.js */ \"../../node_modules/@bitauth/libauth/build/lib/bin/sha1/sha1.base64.js\");\n\n/**\n * The most performant way to instantiate sha1 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use {@link instantiateSha1}.\n *\n * @param webassemblyBytes - A buffer containing the sha1 binary.\n */\nconst instantiateSha1Bytes = async (webassemblyBytes) => {\n    const wasm = await (0,_dependencies_js__WEBPACK_IMPORTED_MODULE_0__.instantiateRustWasm)(webassemblyBytes, './sha1', 'sha1', 'sha1_init', 'sha1_update', 'sha1_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update,\n    };\n};\nconst getEmbeddedSha1Binary = () => (0,_dependencies_js__WEBPACK_IMPORTED_MODULE_1__.base64ToBin)(_dependencies_js__WEBPACK_IMPORTED_MODULE_2__.sha1Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of {@link instantiateSha1Bytes}\n * that does not require the consumer to provide the sha1 binary buffer.\n */\nconst instantiateSha1 = async () => instantiateSha1Bytes(getEmbeddedSha1Binary());\n//# sourceMappingURL=sha1.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/crypto/sha1.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/crypto/sha256.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/crypto/sha256.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"instantiateSha256\": () => (/* binding */ instantiateSha256)\n/* harmony export */ });\n/* unused harmony exports instantiateSha256Bytes, getEmbeddedSha256Binary */\n/* harmony import */ var _dependencies_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependencies.js */ \"../../node_modules/@bitauth/libauth/build/lib/bin/hashes.js\");\n/* harmony import */ var _dependencies_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependencies.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/base64.js\");\n/* harmony import */ var _dependencies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependencies.js */ \"../../node_modules/@bitauth/libauth/build/lib/bin/sha256/sha256.base64.js\");\n\n/**\n * The most performant way to instantiate sha256 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use {@link instantiateSha256}.\n *\n * @param webassemblyBytes - A buffer containing the sha256 binary.\n */\nconst instantiateSha256Bytes = async (webassemblyBytes) => {\n    const wasm = await (0,_dependencies_js__WEBPACK_IMPORTED_MODULE_0__.instantiateRustWasm)(webassemblyBytes, './sha256', 'sha256', 'sha256_init', 'sha256_update', 'sha256_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update,\n    };\n};\nconst getEmbeddedSha256Binary = () => (0,_dependencies_js__WEBPACK_IMPORTED_MODULE_1__.base64ToBin)(_dependencies_js__WEBPACK_IMPORTED_MODULE_2__.sha256Base64Bytes).buffer;\n/**\n * An ultimately-portable (but possibly slower) version of\n * {@link instantiateSha256Bytes} which does not require the consumer to provide\n * the sha256 binary buffer.\n */\nconst instantiateSha256 = async () => instantiateSha256Bytes(getEmbeddedSha256Binary());\n//# sourceMappingURL=sha256.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/crypto/sha256.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/crypto/sha512.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/crypto/sha512.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"instantiateSha512\": () => (/* binding */ instantiateSha512)\n/* harmony export */ });\n/* unused harmony exports instantiateSha512Bytes, getEmbeddedSha512Binary */\n/* harmony import */ var _dependencies_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dependencies.js */ \"../../node_modules/@bitauth/libauth/build/lib/bin/hashes.js\");\n/* harmony import */ var _dependencies_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dependencies.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/base64.js\");\n/* harmony import */ var _dependencies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependencies.js */ \"../../node_modules/@bitauth/libauth/build/lib/bin/sha512/sha512.base64.js\");\n\n/**\n * The most performant way to instantiate sha512 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use {@link instantiateSha512}.\n *\n * @param webassemblyBytes - A buffer containing the sha512 binary.\n */\nconst instantiateSha512Bytes = async (webassemblyBytes) => {\n    const wasm = await (0,_dependencies_js__WEBPACK_IMPORTED_MODULE_0__.instantiateRustWasm)(webassemblyBytes, './sha512', 'sha512', 'sha512_init', 'sha512_update', 'sha512_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update,\n    };\n};\nconst getEmbeddedSha512Binary = () => (0,_dependencies_js__WEBPACK_IMPORTED_MODULE_1__.base64ToBin)(_dependencies_js__WEBPACK_IMPORTED_MODULE_2__.sha512Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of {@link instantiateSha512Bytes}\n * that does not require the consumer to provide the sha512 binary buffer.\n */\nconst instantiateSha512 = async () => instantiateSha512Bytes(getEmbeddedSha512Binary());\n//# sourceMappingURL=sha512.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/crypto/sha512.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/format/base-convert.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/format/base-convert.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseConversionError\": () => (/* binding */ BaseConversionError),\n/* harmony export */   \"base58ToBin\": () => (/* binding */ base58ToBin),\n/* harmony export */   \"binToBase58\": () => (/* binding */ binToBase58)\n/* harmony export */ });\n/* unused harmony exports createBaseConverter, bitcoinBase58Alphabet */\nvar BaseConversionError;\n(function (BaseConversionError) {\n    BaseConversionError[\"tooLong\"] = \"An alphabet may be no longer than 254 characters.\";\n    BaseConversionError[\"ambiguousCharacter\"] = \"A character code may only appear once in a single alphabet.\";\n    BaseConversionError[\"unknownCharacter\"] = \"Encountered an unknown character for this alphabet.\";\n})(BaseConversionError || (BaseConversionError = {}));\n/**\n * Create a {@link BaseConverter}, exposing methods for encoding and decoding\n * `Uint8Array`s using bitcoin-style padding: each leading zero in the input is\n * replaced with the zero-index character of the `alphabet`, then the remainder\n * of the input is encoded as a large number in the specified alphabet.\n *\n * For example, using the alphabet `01`, the input `[0, 15]` is encoded `01111`\n * – a single `0` represents the leading padding, followed by the base2 encoded\n * `0x1111` (15). With the same alphabet, the input `[0, 0, 255]` is encoded\n * `0011111111` - only two `0` characters are required to represent both\n * leading zeros, followed by the base2 encoded `0x11111111` (255).\n *\n * **This is not compatible with `RFC 3548`'s `Base16`, `Base32`, or `Base64`.**\n *\n * If the alphabet is malformed, this method returns the error as a `string`.\n *\n * @param alphabet - an ordered string that maps each index to a character,\n * e.g. `0123456789`.\n */\n// Algorithm from the `base-x` implementation (derived from the original Satoshi implementation): https://github.com/cryptocoinjs/base-x\nconst createBaseConverter = (alphabet) => {\n    const undefinedValue = 255;\n    const uint8ArrayBase = 256;\n    if (alphabet.length >= undefinedValue)\n        return BaseConversionError.tooLong;\n    const alphabetMap = new Uint8Array(uint8ArrayBase).fill(undefinedValue);\n    // eslint-disable-next-line functional/no-loop-statement, functional/no-let, no-plusplus\n    for (let index = 0; index < alphabet.length; index++) {\n        const characterCode = alphabet.charCodeAt(index);\n        if (alphabetMap[characterCode] !== undefinedValue) {\n            return BaseConversionError.ambiguousCharacter;\n        }\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n        alphabetMap[characterCode] = index;\n    }\n    const base = alphabet.length;\n    const paddingCharacter = alphabet.charAt(0);\n    const factor = Math.log(base) / Math.log(uint8ArrayBase);\n    const inverseFactor = Math.log(uint8ArrayBase) / Math.log(base);\n    return {\n        // eslint-disable-next-line complexity\n        decode: (input) => {\n            if (input.length === 0)\n                return Uint8Array.of();\n            const firstNonZeroIndex = input\n                .split('')\n                .findIndex((character) => character !== paddingCharacter);\n            if (firstNonZeroIndex === -1) {\n                return new Uint8Array(input.length);\n            }\n            const requiredLength = Math.floor((input.length - firstNonZeroIndex) * factor + 1);\n            const decoded = new Uint8Array(requiredLength);\n            /* eslint-disable functional/no-let, functional/no-expression-statement */\n            let nextByte = firstNonZeroIndex;\n            let remainingBytes = 0;\n            // eslint-disable-next-line functional/no-loop-statement\n            while (input[nextByte] !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                let carry = alphabetMap[input.charCodeAt(nextByte)];\n                if (carry === undefinedValue)\n                    return BaseConversionError.unknownCharacter;\n                let digit = 0;\n                // eslint-disable-next-line functional/no-loop-statement\n                for (let steps = requiredLength - 1; (carry !== 0 || digit < remainingBytes) && steps !== -1; \n                // eslint-disable-next-line no-plusplus\n                steps--, digit++) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    carry += Math.floor(base * decoded[steps]);\n                    // eslint-disable-next-line functional/immutable-data\n                    decoded[steps] = Math.floor(carry % uint8ArrayBase);\n                    carry = Math.floor(carry / uint8ArrayBase);\n                }\n                remainingBytes = digit;\n                // eslint-disable-next-line no-plusplus\n                nextByte++;\n            }\n            /* eslint-enable functional/no-let, functional/no-expression-statement */\n            const firstNonZeroResultDigit = decoded.findIndex((value) => value !== 0);\n            const bin = new Uint8Array(firstNonZeroIndex + (requiredLength - firstNonZeroResultDigit));\n            // eslint-disable-next-line functional/no-expression-statement\n            bin.set(decoded.slice(firstNonZeroResultDigit), firstNonZeroIndex);\n            return bin;\n        },\n        // eslint-disable-next-line complexity\n        encode: (input) => {\n            if (input.length === 0)\n                return '';\n            const firstNonZeroIndex = input.findIndex((byte) => byte !== 0);\n            if (firstNonZeroIndex === -1) {\n                return paddingCharacter.repeat(input.length);\n            }\n            const requiredLength = Math.floor((input.length - firstNonZeroIndex) * inverseFactor + 1);\n            const encoded = new Uint8Array(requiredLength);\n            /* eslint-disable functional/no-let, functional/no-expression-statement */\n            let nextByte = firstNonZeroIndex;\n            let remainingBytes = 0;\n            // eslint-disable-next-line functional/no-loop-statement\n            while (nextByte !== input.length) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                let carry = input[nextByte];\n                let digit = 0;\n                // eslint-disable-next-line functional/no-loop-statement\n                for (let steps = requiredLength - 1; (carry !== 0 || digit < remainingBytes) && steps !== -1; \n                // eslint-disable-next-line no-plusplus\n                steps--, digit++) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    carry += Math.floor(uint8ArrayBase * encoded[steps]);\n                    // eslint-disable-next-line functional/immutable-data\n                    encoded[steps] = Math.floor(carry % base);\n                    carry = Math.floor(carry / base);\n                }\n                remainingBytes = digit;\n                // eslint-disable-next-line no-plusplus\n                nextByte++;\n            }\n            /* eslint-enable functional/no-let, functional/no-expression-statement */\n            const firstNonZeroResultDigit = encoded.findIndex((value) => value !== 0);\n            const padding = paddingCharacter.repeat(firstNonZeroIndex);\n            return encoded\n                .slice(firstNonZeroResultDigit)\n                .reduce((all, digit) => all + alphabet.charAt(digit), padding);\n        },\n    };\n};\nconst bitcoinBase58Alphabet = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst base58 = createBaseConverter(bitcoinBase58Alphabet);\n/**\n * Convert a bitcoin-style base58-encoded string to a Uint8Array.\n *\n * See {@link createBaseConverter} for format details.\n * @param input - a valid base58-encoded string to decode\n */\nconst base58ToBin = base58.decode;\n/**\n * Convert a Uint8Array to a bitcoin-style base58-encoded string.\n *\n * See {@link createBaseConverter} for format details.\n * @param input - the Uint8Array to base58 encode\n */\nconst binToBase58 = base58.encode;\n//# sourceMappingURL=base-convert.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/format/base-convert.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/format/base64.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/format/base64.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"base64ToBin\": () => (/* binding */ base64ToBin),\n/* harmony export */   \"binToBase64\": () => (/* binding */ binToBase64),\n/* harmony export */   \"isBase64\": () => (/* binding */ isBase64)\n/* harmony export */ });\n// base64 encode/decode derived from: https://github.com/niklasvh/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64GroupLength = 4;\nconst nonBase64Chars = new RegExp(`[^${chars}=]`, 'u');\n/**\n * For use before {@link base64ToBin}. Returns true if the provided string is\n * valid base64 (length is divisible by 4, only uses base64 characters).\n * @param maybeBase64 - a string to test\n */\nconst isBase64 = (maybeBase64) => maybeBase64.length % base64GroupLength === 0 &&\n    !nonBase64Chars.test(maybeBase64);\n/* eslint-disable functional/no-expression-statement, functional/immutable-data, @typescript-eslint/no-magic-numbers, no-bitwise, no-plusplus, @typescript-eslint/no-non-null-assertion */\n/**\n * Convert a base64-encoded string to a Uint8Array.\n *\n * Note, this method always completes. If `validBase64` is not valid base64, an\n * incorrect result will be returned. If `validBase64` is potentially malformed,\n * check it with {@link isBase64} before calling this method.\n *\n * @param validBase64 - a valid base64-encoded string to decode\n */\nconst base64ToBin = (validBase64) => {\n    const lookup = new Uint8Array(123);\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statement\n    for (let i = 0; i < chars.length; i++) {\n        lookup[chars.charCodeAt(i)] = i;\n    }\n    const bufferLengthEstimate = validBase64.length * 0.75;\n    const stringLength = validBase64.length;\n    const bufferLength = validBase64[validBase64.length - 1] === '=' // eslint-disable-line @typescript-eslint/prefer-string-starts-ends-with\n        ? validBase64[validBase64.length - 2] === '='\n            ? bufferLengthEstimate - 2\n            : bufferLengthEstimate - 1\n        : bufferLengthEstimate;\n    const buffer = new ArrayBuffer(bufferLength);\n    const bytes = new Uint8Array(buffer);\n    // eslint-disable-next-line functional/no-let\n    let p = 0;\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statement\n    for (let i = 0; i < stringLength; i += 4) {\n        const encoded1 = lookup[validBase64.charCodeAt(i)];\n        const encoded2 = lookup[validBase64.charCodeAt(i + 1)];\n        const encoded3 = lookup[validBase64.charCodeAt(i + 2)];\n        const encoded4 = lookup[validBase64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return bytes;\n};\n/**\n * Convert a Uint8Array to a base64-encoded string.\n * @param bytes - the Uint8Array to base64 encode\n */\nconst binToBase64 = (bytes) => {\n    // eslint-disable-next-line functional/no-let\n    let result = '';\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statement\n    for (let i = 0; i < bytes.length; i += 3) {\n        result += chars[bytes[i] >> 2];\n        result += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        result += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        result += chars[bytes[i + 2] & 63];\n    }\n    const padded = bytes.length % 3 === 2\n        ? `${result.substring(0, result.length - 1)}=`\n        : bytes.length % 3 === 1\n            ? `${result.substring(0, result.length - 2)}==`\n            : result;\n    return padded;\n};\n/* eslint-enable functional/no-expression-statement, functional/immutable-data, @typescript-eslint/no-magic-numbers, no-bitwise, no-plusplus, @typescript-eslint/no-non-null-assertion */\n//# sourceMappingURL=base64.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/format/base64.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/format/bin-string.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/format/bin-string.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"binStringToBin\": () => (/* binding */ binStringToBin)\n/* harmony export */ });\n/* unused harmony exports binToBinString, isBinString */\n/* harmony import */ var _hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hex.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n\nconst binaryByteWidth = 8;\nconst binary = 2;\n/**\n * Decode a binary-encoded string into a Uint8Array.\n *\n * E.g.: `binStringToBin('0010101001100100')` → `new Uint8Array([42, 100])`\n *\n * Note, this method always completes. If `binaryDigits` is not divisible by 8,\n * the final byte will be parsed as if it were prepended with `0`s (e.g. `1`\n * is interpreted as `00000001`). If `binaryDigits` is potentially malformed,\n * check it with `isBinString` before calling this method.\n *\n * @param binaryDigits - a string of `0`s and `1`s with a length divisible by 8\n */\nconst binStringToBin = (binaryDigits) => Uint8Array.from((0,_hex_js__WEBPACK_IMPORTED_MODULE_0__.splitEvery)(binaryDigits, binaryByteWidth).map((byteString) => parseInt(byteString, binary)));\n/**\n * Encode a Uint8Array into a binary-encoded string.\n *\n * E.g.: `binToBinString(Uint8Array.from([42, 100]))` → `'0010101001100100'`\n *\n * @param bytes - a Uint8Array to encode\n */\nconst binToBinString = (bytes) => bytes.reduce((str, byte) => str + byte.toString(binary).padStart(binaryByteWidth, '0'), '');\n/**\n * For use before {@link binStringToBin}. Returns true if the provided string is\n * a valid binary string (length is divisible by 8 and only uses the characters\n * `0` and `1`).\n * @param maybeBinString - a string to test\n */\nconst isBinString = (maybeBinString) => maybeBinString.length % binaryByteWidth === 0 &&\n    !/[^01]/u.test(maybeBinString);\n//# sourceMappingURL=bin-string.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/format/bin-string.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/format/error.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/format/error.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"formatError\": () => (/* binding */ formatError),\n/* harmony export */   \"unknownValue\": () => (/* binding */ unknownValue)\n/* harmony export */ });\n/**\n * A simple method used throughout Libauth to format error messages. By\n * formatting errors this way, downstream consumers can detect specific error\n * types by matching the `errorType`. For example, the error:\n *\n * ```ts\n * formatError(SomeTypeOfError.exceedsMaximum, `Provided value: ${value}`);\n * ```\n *\n * Can be detected with `String.includes()`, even if the\n * `SomeTypeOfError.exceedsMaximum` error message changes:\n * ```ts\n * error.includes(SomeTypeOfError.exceedsMaximum);\n * // => true\n * ```\n *\n * Using this method ensures consistency across the library.\n *\n * @remarks\n * In Libauth, expected errors use the type `string` rather than `Error` (or\n * other objects that inherit from `Error`) to simplify the resulting types and\n * typechecking requirements. This ensures consistency of returned errors in all\n * environments, avoids exposing internal details like stack traces and line\n * numbers, and allows error messages to be recorded or used as text without an\n * intermediate `toString()` method.\n *\n * @param errorType - the error enum member representing this error type\n * @param errorDetails - optional, additional details to include in the error\n * message\n */\nconst formatError = (errorType, errorDetails) => `${errorType}${errorDetails === undefined ? '' : ` ${errorDetails}`}`;\nconst unknownValue = (value, message = `Received an unknown value: ${String(value)}. This should have been caught by TypeScript - are your types correct?`) => {\n    // eslint-disable-next-line functional/no-throw-statement\n    throw new Error(message);\n};\n//# sourceMappingURL=error.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/format/error.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/format/hex.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/format/hex.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"binToHex\": () => (/* binding */ binToHex),\n/* harmony export */   \"binsAreEqual\": () => (/* binding */ binsAreEqual),\n/* harmony export */   \"flattenBinArray\": () => (/* binding */ flattenBinArray),\n/* harmony export */   \"hexToBin\": () => (/* binding */ hexToBin),\n/* harmony export */   \"range\": () => (/* binding */ range),\n/* harmony export */   \"splitEvery\": () => (/* binding */ splitEvery)\n/* harmony export */ });\n/* unused harmony exports isHex, swapEndianness */\n/**\n * Returns an array of incrementing values starting at `begin` and incrementing\n * by one for `length`.\n *\n * E.g.: `range(3)` → `[0, 1, 2]` and `range(3, 1)` → `[1, 2, 3]`\n *\n * @param length - the number of elements in the array\n * @param begin - the index at which the range starts (default: `0`)\n */\nconst range = (length, begin = 0) => Array.from({ length }, (_, index) => begin + index);\n/**\n * Split a string into an array of `chunkLength` strings. The final string may\n * have a length between 1 and `chunkLength`.\n *\n * E.g.: `splitEvery('abcde', 2)` → `['ab', 'cd', 'e']`\n */\nconst splitEvery = (input, chunkLength) => range(Math.ceil(input.length / chunkLength))\n    .map((index) => index * chunkLength)\n    .map((begin) => input.slice(begin, begin + chunkLength));\nconst hexByteWidth = 2;\nconst hexadecimal = 16;\n/**\n * Decode a hexadecimal-encoded string into a Uint8Array.\n *\n * E.g.: `hexToBin('2a64ff')` → `new Uint8Array([42, 100, 255])`\n *\n * Note, this method always completes. If `validHex` is not divisible by 2,\n * the final byte will be parsed as if it were prepended with a `0` (e.g. `aaa`\n * is interpreted as `aa0a`). If `validHex` is potentially malformed, check\n * it with {@link isHex} before calling this method.\n *\n * @param validHex - a string of valid, hexadecimal-encoded data\n */\nconst hexToBin = (validHex) => Uint8Array.from(splitEvery(validHex, hexByteWidth).map((byte) => parseInt(byte, hexadecimal)));\n/**\n * For use before {@link hexToBin}. Returns true if the provided string is valid\n * hexadecimal (length is divisible by 2, only uses hexadecimal characters).\n * @param maybeHex - a string to test\n */\nconst isHex = (maybeHex) => maybeHex.length % hexByteWidth === 0 && !/[^a-fA-F0-9]/u.test(maybeHex);\n/**\n * Encode a Uint8Array into a hexadecimal-encoded string.\n *\n * E.g.: `binToHex(new Uint8Array([42, 100, 255]))` → `'2a64ff'`\n *\n * @param bytes - a Uint8Array to encode\n */\nconst binToHex = (bytes) => bytes.reduce((str, byte) => str + byte.toString(hexadecimal).padStart(hexByteWidth, '0'), '');\n/**\n * Decode a hexadecimal-encoded string into bytes, reverse it, then re-encode.\n *\n * @param validHex - a string of valid, hexadecimal-encoded data. See\n * {@link hexToBin} for more information.\n */\nconst swapEndianness = (validHex) => binToHex(hexToBin(validHex).reverse());\n/**\n * Reduce an array of `Uint8Array`s into a single `Uint8Array`.\n * @param array - the array of `Uint8Array`s to flatten\n */\nconst flattenBinArray = (array) => {\n    const totalLength = array.reduce((total, bin) => total + bin.length, 0);\n    const flattened = new Uint8Array(totalLength);\n    // eslint-disable-next-line functional/no-expression-statement\n    array.reduce((index, bin) => {\n        // eslint-disable-next-line functional/no-expression-statement\n        flattened.set(bin, index);\n        return index + bin.length;\n    }, 0);\n    return flattened;\n};\n/**\n * Compare to `Uint8Array`s, return true if their contents are exactly the same,\n * otherwise return false.\n * @param a - the first Uint8Array\n * @param b - the second Uint8Array\n */\nconst binsAreEqual = (a, b) => {\n    if (a.length !== b.length) {\n        return false;\n    }\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n};\n//# sourceMappingURL=hex.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/format/hex.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/format/number.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/format/number.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bigIntToBinUint256BEClamped\": () => (/* binding */ bigIntToBinUint256BEClamped),\n/* harmony export */   \"bigIntToBinUint64LE\": () => (/* binding */ bigIntToBinUint64LE),\n/* harmony export */   \"bigIntToCompactSize\": () => (/* binding */ bigIntToCompactSize),\n/* harmony export */   \"binToBigIntUint256BE\": () => (/* binding */ binToBigIntUint256BE),\n/* harmony export */   \"binToBigIntUint64LE\": () => (/* binding */ binToBigIntUint64LE),\n/* harmony export */   \"binToNumberUint16LE\": () => (/* binding */ binToNumberUint16LE),\n/* harmony export */   \"binToNumberUint32LE\": () => (/* binding */ binToNumberUint32LE),\n/* harmony export */   \"binToValueSatoshis\": () => (/* binding */ binToValueSatoshis),\n/* harmony export */   \"int32UnsignedToSigned\": () => (/* binding */ int32UnsignedToSigned),\n/* harmony export */   \"numberToBinUint16LE\": () => (/* binding */ numberToBinUint16LE),\n/* harmony export */   \"numberToBinUint32BE\": () => (/* binding */ numberToBinUint32BE),\n/* harmony export */   \"numberToBinUint32LE\": () => (/* binding */ numberToBinUint32LE),\n/* harmony export */   \"readCompactSizeMinimal\": () => (/* binding */ readCompactSizeMinimal),\n/* harmony export */   \"valueSatoshisToBin\": () => (/* binding */ valueSatoshisToBin)\n/* harmony export */ });\n/* unused harmony exports numberToBinUintLE, binToFixedLength, numberToBinUint16LEClamped, numberToBinUint32LEClamped, numberToBinInt16LE, numberToBinInt32LE, binToNumberInt16LE, binToNumberInt32LE, numberToBinUint16BE, bigIntToBinUintLE, bigIntToBinUint64LEClamped, numberToBinInt32TwosCompliment, binToNumberUintLE, binToBigIntUintBE, binToBigIntUintLE, compactSizePrefixToSize, CompactSizeError, readCompactSize, compactSizeToBigInt, int32SignedToUnsigned */\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/error.js\");\n\n/**\n * Encode a positive integer as a little-endian Uint8Array. For values exceeding\n * `Number.MAX_SAFE_INTEGER` (`9007199254740991`), use `bigIntToBinUintLE`.\n * Negative values will return the same result as `0`.\n *\n * @param value - the number to encode\n */\nconst numberToBinUintLE = (value) => {\n    const baseUint8Array = 256;\n    const result = [];\n    // eslint-disable-next-line functional/no-let\n    let remaining = value;\n    // eslint-disable-next-line functional/no-loop-statement\n    while (remaining >= baseUint8Array) {\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n        result.push(remaining % baseUint8Array);\n        // eslint-disable-next-line functional/no-expression-statement\n        remaining = Math.floor(remaining / baseUint8Array);\n    }\n    // eslint-disable-next-line functional/no-conditional-statement, functional/no-expression-statement, functional/immutable-data\n    if (remaining > 0)\n        result.push(remaining);\n    return Uint8Array.from(result);\n};\n/**\n * Fill a new Uint8Array of a specific byte-length with the contents of a given\n * Uint8Array, truncating or padding the Uint8Array with zeros.\n *\n * @param bin - the Uint8Array to resize\n * @param bytes - the desired byte-length\n */\nconst binToFixedLength = (bin, bytes) => {\n    const fixedBytes = new Uint8Array(bytes);\n    const maxValue = 255;\n    // eslint-disable-next-line functional/no-expression-statement\n    bin.length > bytes ? fixedBytes.fill(maxValue) : fixedBytes.set(bin);\n    return fixedBytes;\n};\n/**\n * Encode a positive integer as a 2-byte Uint16LE Uint8Array, clamping the\n * results – values exceeding `0xffff` (`65535`) return the same result as\n * `0xffff`, negative values will return the same result as `0`.\n *\n * @param value - the number to encode\n */\nconst numberToBinUint16LEClamped = (value) => {\n    const uint16 = 2;\n    return binToFixedLength(numberToBinUintLE(value), uint16);\n};\n/**\n * Encode a positive integer as a 4-byte Uint32LE Uint8Array, clamping the\n * results – values exceeding `0xffffffff` (`4294967295`) return the same result\n * as `0xffffffff`, negative values will return the same result as `0`.\n *\n * @param value - the number to encode\n */\nconst numberToBinUint32LEClamped = (value) => {\n    const uint32 = 4;\n    return binToFixedLength(numberToBinUintLE(value), uint32);\n};\n/**\n * Encode a positive integer as a 2-byte Uint16LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0` to `0xffff` (`65535`). If applicable, applications should handle such\n * cases prior to calling this method.\n *\n * @param value - the number to encode\n */\nconst numberToBinUint16LE = (value) => {\n    const uint16Length = 2;\n    const bin = new Uint8Array(uint16Length);\n    const writeAsLittleEndian = true;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statement\n    view.setUint16(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Encode an integer as a 2-byte Int16LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0x0000` to `0xffff` (`65535`). If applicable, applications should handle\n * such cases prior to calling this method.\n *\n * @param value - the number to encode\n */\nconst numberToBinInt16LE = (value) => {\n    const int16Length = 2;\n    const bin = new Uint8Array(int16Length);\n    const writeAsLittleEndian = true;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statement\n    view.setInt16(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Encode an integer as a 4-byte Uint32LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0x00000000` to `0xffffffff` (`4294967295`). If applicable, applications\n * should handle such cases prior to calling this method.\n *\n * @param value - the number to encode\n */\nconst numberToBinInt32LE = (value) => {\n    const int32Length = 4;\n    const bin = new Uint8Array(int32Length);\n    const writeAsLittleEndian = true;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statement\n    view.setInt32(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Decode a 2-byte Int16LE Uint8Array into a number.\n *\n * Throws if `bin` is shorter than 2 bytes.\n *\n * @param bin - the Uint8Array to decode\n */\nconst binToNumberInt16LE = (bin) => {\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    const readAsLittleEndian = true;\n    return view.getInt16(0, readAsLittleEndian);\n};\n/**\n * Decode a 4-byte Int32LE Uint8Array into a number.\n *\n * Throws if `bin` is shorter than 4 bytes.\n *\n * @param bin - the Uint8Array to decode\n */\nconst binToNumberInt32LE = (bin) => {\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    const readAsLittleEndian = true;\n    return view.getInt32(0, readAsLittleEndian);\n};\n/**\n * Encode a positive integer as a 2-byte Uint16LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0` to `0xffff` (`65535`). If applicable, applications should handle such\n * cases prior to calling this method.\n *\n * @param value - the number to encode\n */\nconst numberToBinUint16BE = (value) => {\n    const uint16Length = 2;\n    const bin = new Uint8Array(uint16Length);\n    const writeAsLittleEndian = false;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statement\n    view.setUint16(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Encode a positive number as a 4-byte Uint32LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0` to `0xffffffff` (`4294967295`). If applicable, applications should handle\n * such cases prior to calling this method.\n *\n * @param value - the number to encode\n */\nconst numberToBinUint32LE = (value) => {\n    const uint32Length = 4;\n    const bin = new Uint8Array(uint32Length);\n    const writeAsLittleEndian = true;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statement\n    view.setUint32(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Encode a positive number as a 4-byte Uint32BE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0` to `0xffffffff` (`4294967295`). If applicable, applications should handle\n * such cases prior to calling this method.\n *\n * @param value - the number to encode\n */\nconst numberToBinUint32BE = (value) => {\n    const uint32Length = 4;\n    const bin = new Uint8Array(uint32Length);\n    const writeAsLittleEndian = false;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statement\n    view.setUint32(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Encode a positive BigInt as little-endian Uint8Array. Negative values will\n * return the same result as `0`.\n *\n * @param value - the number to encode\n */\nconst bigIntToBinUintLE = (value) => {\n    const baseUint8Array = 256;\n    const base = BigInt(baseUint8Array);\n    const result = [];\n    // eslint-disable-next-line functional/no-let\n    let remaining = value;\n    // eslint-disable-next-line functional/no-loop-statement\n    while (remaining >= base) {\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n        result.push(Number(remaining % base));\n        // eslint-disable-next-line functional/no-expression-statement\n        remaining /= base;\n    }\n    // eslint-disable-next-line functional/no-conditional-statement, functional/no-expression-statement, functional/immutable-data\n    if (remaining > 0n)\n        result.push(Number(remaining));\n    return Uint8Array.from(result.length > 0 ? result : [0]);\n};\n/**\n * Encode a positive BigInt as an 8-byte Uint64LE Uint8Array, clamping the\n * results – values exceeding `0xffff_ffff_ffff_ffff` (`18446744073709551615`)\n * return the same result as `0xffff_ffff_ffff_ffff`, negative values return the\n * same result as `0`.\n *\n * @param value - the number to encode\n */\nconst bigIntToBinUint64LEClamped = (value) => {\n    const uint64 = 8;\n    return binToFixedLength(bigIntToBinUintLE(value), uint64);\n};\n/**\n * Encode a positive BigInt as an 8-byte Uint64LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0` to `0xffff_ffff_ffff_ffff` (`18446744073709551615`).\n *\n * @param value - the number to encode\n */\nconst bigIntToBinUint64LE = (value) => {\n    const uint64LengthInBits = 64;\n    const valueAsUint64 = BigInt.asUintN(uint64LengthInBits, value);\n    const fixedLengthBin = bigIntToBinUint64LEClamped(valueAsUint64);\n    return fixedLengthBin;\n};\n/**\n * Encode an integer as a 4-byte, little-endian Uint8Array using the number's\n * two's compliment representation (the format used by JavaScript's bitwise\n * operators).\n *\n * @remarks\n * The C++ bitcoin implementations sometimes represent short vectors using\n * signed 32-bit integers (e.g. `sighashType`). This method can be used to test\n * compatibility with those implementations.\n *\n * @param value - the number to encode\n */\nconst numberToBinInt32TwosCompliment = (value) => {\n    const bytes = 4;\n    const bitsInAByte = 8;\n    const bin = new Uint8Array(bytes);\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus\n    for (let index = 0; index < bytes; index++) {\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n        bin[index] = value;\n        // eslint-disable-next-line functional/no-expression-statement, no-bitwise, no-param-reassign\n        value >>>= bitsInAByte;\n    }\n    return bin;\n};\n/**\n * Decode a little-endian Uint8Array of any length into a number. For numbers\n * larger than `Number.MAX_SAFE_INTEGER` (`9007199254740991`), use\n * `binToBigIntUintLE`.\n *\n * The `bytes` parameter can be set to constrain the expected length (default:\n * `bin.length`). This method throws if `bin.length` is not equal to `bytes`.\n *\n * @privateRemarks\n * We avoid a bitwise strategy here because JavaScript uses 32-bit signed\n * integers for bitwise math, so larger numbers are converted incorrectly. E.g.\n * `2147483648 << 8` is `0`, while `2147483648n << 8n` is `549755813888n`.\n *\n * @param bin - the Uint8Array to decode\n * @param bytes - the number of bytes to read (default: `bin.length`)\n */\nconst binToNumberUintLE = (bin, bytes = bin.length) => {\n    const base = 2;\n    const bitsInAByte = 8;\n    if (bin.length !== bytes) {\n        // eslint-disable-next-line functional/no-throw-statement\n        throw new TypeError(`Bin length must be ${bytes}.`);\n    }\n    return new Uint8Array(bin.buffer, bin.byteOffset, bin.length).reduce((accumulated, byte, i) => accumulated + byte * base ** (bitsInAByte * i), 0);\n};\n/**\n * Decode a 2-byte Uint16LE Uint8Array into a number.\n *\n * Throws if `bin` is shorter than 2 bytes.\n *\n * @param bin - the Uint8Array to decode\n */\nconst binToNumberUint16LE = (bin) => {\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    const readAsLittleEndian = true;\n    return view.getUint16(0, readAsLittleEndian);\n};\n/**\n * Decode a 4-byte Uint32LE Uint8Array into a number.\n *\n * Throws if `bin` is shorter than 4 bytes.\n *\n * @param bin - the Uint8Array to decode\n */\nconst binToNumberUint32LE = (bin) => {\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    const readAsLittleEndian = true;\n    return view.getUint32(0, readAsLittleEndian);\n};\n/**\n * Decode a big-endian Uint8Array of any length into a BigInt. If starting from\n * a hex value, consider using the BigInt constructor instead:\n * ```\n * BigInt(`0x${hex}`)\n * ```\n *\n * The `bytes` parameter can be set to constrain the expected length (default:\n * `bin.length`). This method throws if `bin.length` is not equal to `bytes`.\n *\n * @param bin - the Uint8Array to decode\n * @param bytes - the number of bytes to read (default: `bin.length`)\n */\nconst binToBigIntUintBE = (bin, bytes = bin.length) => {\n    const bitsInAByte = 8;\n    const shift = BigInt(bitsInAByte);\n    if (bin.length !== bytes) {\n        // eslint-disable-next-line functional/no-throw-statement\n        throw new TypeError(`Bin length must be ${bytes}.`);\n    }\n    return new Uint8Array(bin.buffer, bin.byteOffset, bin.length).reduce(\n    // eslint-disable-next-line no-bitwise\n    (accumulated, byte) => (accumulated << shift) | BigInt(byte), 0n);\n};\n/**\n * Decode an unsigned, 32-byte big-endian Uint8Array into a BigInt. This can be\n * used to decode Uint8Array-encoded cryptographic primitives like private\n * keys, public keys, curve parameters, and signature points.\n *\n * If starting from a hex value, consider using the BigInt constructor instead:\n * ```\n * BigInt(`0x${hex}`)\n * ```\n * @param bin - the Uint8Array to decode\n */\nconst binToBigIntUint256BE = (bin) => {\n    const uint256Bytes = 32;\n    return binToBigIntUintBE(bin, uint256Bytes);\n};\n/**\n * Encode a positive BigInt into an unsigned 32-byte big-endian Uint8Array. This\n * can be used to encoded numbers for cryptographic primitives like private\n * keys, public keys, curve parameters, and signature points.\n *\n * Negative values will return the same result as `0`, values higher than\n * 2^256-1 will return the maximum expressible unsigned 256-bit value\n * (`0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff`).\n *\n * @param value - the BigInt to encode\n */\nconst bigIntToBinUint256BEClamped = (value) => {\n    const uint256Bytes = 32;\n    return binToFixedLength(bigIntToBinUintLE(value), uint256Bytes).reverse();\n};\n/**\n * Decode a little-endian Uint8Array of any length into a BigInt.\n *\n * The `bytes` parameter can be set to constrain the expected length (default:\n * `bin.length`). This method throws if `bin.length` is not equal to `bytes`.\n *\n * @param bin - the Uint8Array to decode\n * @param bytes - the number of bytes to read (default: `bin.length`)\n */\nconst binToBigIntUintLE = (bin, bytes = bin.length) => {\n    const bitsInAByte = 8;\n    if (bin.length !== bytes) {\n        // eslint-disable-next-line functional/no-throw-statement\n        throw new TypeError(`Bin length must be ${bytes}.`);\n    }\n    return new Uint8Array(bin.buffer, bin.byteOffset, bin.length).reduceRight(\n    // eslint-disable-next-line no-bitwise\n    (accumulated, byte) => (accumulated << BigInt(bitsInAByte)) | BigInt(byte), 0n);\n};\n/**\n * Decode an 8-byte Uint64LE Uint8Array into a BigInt.\n *\n * Throws if `bin` is shorter than 8 bytes.\n *\n * @param bin - the Uint8Array to decode\n */\nconst binToBigIntUint64LE = (bin) => {\n    const uint64LengthInBytes = 8;\n    const truncatedBin = bin.length > uint64LengthInBytes ? bin.slice(0, uint64LengthInBytes) : bin;\n    return binToBigIntUintLE(truncatedBin, uint64LengthInBytes);\n};\n/**\n * Decode an {@link Output.valueSatoshis} into a `BigInt`. This is an alias for\n * {@link binToBigIntUint64LE}.\n *\n * Throws if the provided value is shorter than 8 bytes.\n */\nconst binToValueSatoshis = binToBigIntUint64LE;\n/**\n * Encode a `BigInt` into an {@link Output.valueSatoshis}. This is an alias for\n * {@link bigIntToBinUint64LE}.\n *\n * This method will return an incorrect result for values outside of the range 0\n * to 0xffff_ffff_ffff_ffff (`18446744073709551615`).\n */\nconst valueSatoshisToBin = bigIntToBinUint64LE;\n/**\n * Get the expected byte length of a CompactSize given a first byte.\n *\n * @param firstByte - the first byte of the CompactSize\n */\nconst compactSizePrefixToSize = (firstByte) => {\n    switch (firstByte) {\n        case 253 /* CompactSize.uint16Prefix */:\n            return 2 /* CompactSize.uint16 */ + 1;\n        case 254 /* CompactSize.uint32Prefix */:\n            return 4 /* CompactSize.uint32 */ + 1;\n        case 255 /* CompactSize.uint64Prefix */:\n            return 8 /* CompactSize.uint64 */ + 1;\n        default:\n            return 1 /* CompactSize.uint8 */;\n    }\n};\nvar CompactSizeError;\n(function (CompactSizeError) {\n    CompactSizeError[\"noPrefix\"] = \"Error reading CompactSize: requires at least one byte.\";\n    CompactSizeError[\"insufficientBytes\"] = \"Error reading CompactSize: insufficient bytes.\";\n    CompactSizeError[\"nonMinimal\"] = \"Error reading CompactSize: CompactSize is not minimally encoded.\";\n    CompactSizeError[\"excessiveBytes\"] = \"Error decoding CompactSize: unexpected bytes after CompactSize.\";\n})(CompactSizeError || (CompactSizeError = {}));\n/**\n * Read a non-minimally-encoded `CompactSize` (see {@link bigIntToCompactSize})\n * from the provided {@link ReadPosition}, returning either an error message (as\n * a string) or an object containing the value and the\n * next {@link ReadPosition}.\n *\n * Rather than this function, most applications should\n * use {@link readCompactSizeMinimal}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * `CompactSize`\n */\nconst readCompactSize = (position) => {\n    const { bin, index } = position;\n    const prefix = bin[index];\n    if (prefix === undefined) {\n        return (0,_error_js__WEBPACK_IMPORTED_MODULE_0__.formatError)(CompactSizeError.noPrefix);\n    }\n    const bytes = compactSizePrefixToSize(prefix);\n    if (bin.length - index < bytes) {\n        return (0,_error_js__WEBPACK_IMPORTED_MODULE_0__.formatError)(CompactSizeError.insufficientBytes, `CompactSize prefix ${prefix} requires at least ${bytes} bytes. Remaining bytes: ${bin.length - index}`);\n    }\n    const hasPrefix = bytes !== 1;\n    const contents = hasPrefix\n        ? bin.subarray(index + 1, index + bytes)\n        : bin.subarray(index, index + bytes);\n    return {\n        position: { bin, index: index + bytes },\n        result: binToBigIntUintLE(contents),\n    };\n};\n/**\n * Encode a positive BigInt as a `CompactSize` (Satoshi's variable-length,\n * positive integer format).\n *\n * Note: the maximum value of a CompactSize is `0xffff_ffff_ffff_ffff`\n * (`18446744073709551615`). This method will return an incorrect result for\n * values outside of the range `0` to `0xffff_ffff_ffff_ffff`. If applicable,\n * applications should handle such cases prior to calling this method.\n *\n * @param value - the BigInt to encode (must be no larger than\n * `0xffff_ffff_ffff_ffff`)\n */\nconst bigIntToCompactSize = (value) => value <= BigInt(252 /* CompactSize.uint8MaxValue */)\n    ? Uint8Array.of(Number(value))\n    : value <= BigInt(65535 /* CompactSize.uint16MaxValue */)\n        ? Uint8Array.from([\n            253 /* CompactSize.uint16Prefix */,\n            ...numberToBinUint16LE(Number(value)),\n        ])\n        : value <= BigInt(4294967295 /* CompactSize.uint32MaxValue */)\n            ? Uint8Array.from([\n                254 /* CompactSize.uint32Prefix */,\n                ...numberToBinUint32LE(Number(value)),\n            ])\n            : Uint8Array.from([\n                255 /* CompactSize.uint64Prefix */,\n                ...bigIntToBinUint64LE(value),\n            ]);\n/**\n * Read a minimally-encoded `CompactSize` from the provided\n * {@link ReadPosition}, returning either an error message (as a string) or an\n * object containing the value and the next {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * `CompactSize`\n */\nconst readCompactSizeMinimal = (position) => {\n    const read = readCompactSize(position);\n    if (typeof read === 'string') {\n        return read;\n    }\n    const readLength = read.position.index - position.index;\n    const canonicalEncoding = bigIntToCompactSize(read.result);\n    if (readLength !== canonicalEncoding.length) {\n        return (0,_error_js__WEBPACK_IMPORTED_MODULE_0__.formatError)(CompactSizeError.nonMinimal, `Value: ${read.result.toString()}, encoded length: ${readLength}, canonical length: ${canonicalEncoding.length}`);\n    }\n    return read;\n};\n/**\n * Decode a minimally-encoded `CompactSize` (Satoshi's variable-length, positive\n * integer format) from a Uint8Array, returning the value as a BigInt. This\n * function returns an error if the entire input is not consumed – to read a\n * `CompactSize` from a position within a larger `Uint8Array`,\n * use {@link readCompactSizeMinimal} or {@link readCompactSize}.\n *\n * @param bin - the Uint8Array from which to read the CompactSize\n */\nconst compactSizeToBigInt = (bin) => {\n    const read = readCompactSizeMinimal({ bin, index: 0 });\n    if (typeof read === 'string') {\n        return read;\n    }\n    if (read.position.index !== bin.length) {\n        return (0,_error_js__WEBPACK_IMPORTED_MODULE_0__.formatError)(CompactSizeError.excessiveBytes, `CompactSize ends at index ${read.position.index}, but input includes ${bin.length} bytes.`);\n    }\n    return read.result;\n};\n/**\n * Convert a signed integer into it's two's compliment unsigned equivalent, e.g.\n * `0b11111111111111111111111111111110` is `-2` as a signed integer or\n * `4294967294` as an unsigned integer.\n */\nconst int32SignedToUnsigned = (int32) => \n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nUint32Array.from(Int32Array.of(int32))[0];\n/**\n * Convert an unsigned integer into it's two's compliment signed equivalent,\n * e.g. `0b11111111111111111111111111111110` is `4294967294` as an unsigned\n * integer or `-2` as a signed integer.\n */\nconst int32UnsignedToSigned = (int32) => \n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nInt32Array.from(Uint32Array.of(int32))[0];\n//# sourceMappingURL=number.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/format/number.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/format/read.js":
/*!********************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/format/read.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"readItemCount\": () => (/* binding */ readItemCount),\n/* harmony export */   \"readMultiple\": () => (/* binding */ readMultiple)\n/* harmony export */ });\n/* unused harmony export ReadItemCountError */\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/error.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/number.js\");\n\n\n/**\n * Given an initial {@link ReadPosition} and a list of {@link ReadFunction}s,\n * apply each {@link ReadFunction} in order, aggregating each result and passing\n * the next {@link ReadPosition} into the next {@link ReadFunction}. If an error\n * occurs, immediately return the error message (`string`), otherwise, return\n * the array of results.\n *\n * @param position - the {@link ReadPosition} at which to start the first read\n * @param readFunctions - the ordered list of {@link ReadFunction}s to apply to\n * the {@link ReadPosition}\n */\nconst readMultiple = (position, readFunctions) => {\n    // eslint-disable-next-line functional/no-let\n    let nextPosition = position;\n    const results = [];\n    // eslint-disable-next-line functional/no-loop-statement\n    for (const readFunction of readFunctions) {\n        const out = readFunction(nextPosition);\n        if (typeof out === 'string') {\n            return out;\n        }\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n        results.push(out.result);\n        // eslint-disable-next-line functional/no-expression-statement\n        nextPosition = out.position;\n    }\n    return {\n        position: nextPosition,\n        result: results,\n    };\n};\nvar ReadItemCountError;\n(function (ReadItemCountError) {\n    ReadItemCountError[\"itemCount\"] = \"Error reading item count.\";\n    ReadItemCountError[\"item\"] = \"Error reading item.\";\n})(ReadItemCountError || (ReadItemCountError = {}));\n/**\n * Read a count of items indicated by the CompactSize at {@link ReadPosition}.\n * The CompactSize will be read to determine the number of items, and the read\n * function will be applied in series, aggregated each result and passing the\n * next {@link ReadPosition} into each iteration. If an error occurs,\n * immediately return the error message (`string`), otherwise, return the array\n * of results.\n */\nconst readItemCount = (position, readFunction) => {\n    const countRead = (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.readCompactSizeMinimal)(position);\n    if (typeof countRead === 'string') {\n        return (0,_error_js__WEBPACK_IMPORTED_MODULE_1__.formatError)(ReadItemCountError.itemCount, countRead);\n    }\n    // eslint-disable-next-line functional/no-let\n    let nextPosition = countRead.position;\n    const result = [];\n    // eslint-disable-next-line functional/no-loop-statement, functional/no-let, no-plusplus\n    for (let remaining = Number(countRead.result); remaining > 0; remaining--) {\n        const read = readFunction(nextPosition);\n        if (typeof read === 'string') {\n            return (0,_error_js__WEBPACK_IMPORTED_MODULE_1__.formatError)(ReadItemCountError.item, read);\n        }\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n        result.push(read.result);\n        // eslint-disable-next-line functional/no-expression-statement\n        nextPosition = read.position;\n    }\n    return { position: nextPosition, result };\n};\n//# sourceMappingURL=read.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/format/read.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/format/utf8.js":
/*!********************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/format/utf8.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"binToUtf8\": () => (/* binding */ binToUtf8),\n/* harmony export */   \"utf8ToBin\": () => (/* binding */ utf8ToBin)\n/* harmony export */ });\nconst utf8Encoder = new TextEncoder();\n/**\n * Interpret a string as UTF-8 and encode it as a Uint8Array.\n * @param utf8 - the string to encode\n */\nconst utf8ToBin = (utf8) => utf8Encoder.encode(utf8);\nconst utf8Decoder = new TextDecoder();\n/**\n * Decode a Uint8Array as a UTF-8 string.\n * @param bytes - the Uint8Array to decode\n */\nconst binToUtf8 = (bytes) => utf8Decoder.decode(bytes);\n//# sourceMappingURL=utf8.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/format/utf8.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/key/hd-key.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/key/hd-key.js ***!
  \*******************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decodeHdPrivateKey\": () => (/* binding */ decodeHdPrivateKey),\n/* harmony export */   \"decodeHdPublicKey\": () => (/* binding */ decodeHdPublicKey),\n/* harmony export */   \"deriveHdPath\": () => (/* binding */ deriveHdPath),\n/* harmony export */   \"deriveHdPrivateNodeFromSeed\": () => (/* binding */ deriveHdPrivateNodeFromSeed),\n/* harmony export */   \"deriveHdPublicNode\": () => (/* binding */ deriveHdPublicNode),\n/* harmony export */   \"deriveHdPublicNodeChild\": () => (/* binding */ deriveHdPublicNodeChild),\n/* harmony export */   \"encodeHdPrivateKey\": () => (/* binding */ encodeHdPrivateKey),\n/* harmony export */   \"encodeHdPublicKey\": () => (/* binding */ encodeHdPublicKey)\n/* harmony export */ });\n/* unused harmony exports deriveHdPrivateNodeIdentifier, deriveHdPublicNodeIdentifier, HdKeyVersion, HdKeyDecodingError, decodeHdKey, hdPrivateKeyToIdentifier, hdPublicKeyToIdentifier, HdNodeDerivationError, deriveHdPrivateNodeChild, HdNodeCrackingError, crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode */\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/hmac.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/base-convert.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/number.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _key_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./key-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/key/key-utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* eslint-disable max-lines */\n\n\n\n/**\n * The HMAC SHA-512 key used by BIP32, \"Bitcoin seed\"\n * (`utf8ToBin('Bitcoin seed')`)\n */\nconst bip32HmacSha512Key = Uint8Array.from([\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    66, 105, 116, 99, 111, 105, 110, 32, 115, 101, 101, 100,\n]);\nconst halfHmacSha512Length = 32;\n/**\n * Derive an {@link HdPrivateNode} from the provided seed following the BIP32\n * specification. A seed should include between 16 bytes and 64 bytes of\n * entropy (recommended: 32 bytes).\n *\n * @param seed - the entropy from which to derive the {@link HdPrivateNode}\n * @param assumeValidity - if set, the derived private key will not be checked\n * for validity, and will be assumed valid if `true` or invalid if `false` (this\n * is useful for testing)\n * @param crypto - an optional object containing an implementation of sha512\n * to use\n */\nconst deriveHdPrivateNodeFromSeed = (seed, assumeValidity, crypto = { sha512: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha512 }) => {\n    const mac = (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__.hmacSha512)(bip32HmacSha512Key, seed, crypto.sha512);\n    const privateKey = mac.slice(0, halfHmacSha512Length);\n    const chainCode = mac.slice(halfHmacSha512Length);\n    const depth = 0;\n    const childIndex = 0;\n    const parentFingerprint = Uint8Array.from([0, 0, 0, 0]);\n    const valid = assumeValidity ?? (0,_key_utils_js__WEBPACK_IMPORTED_MODULE_2__.validateSecp256k1PrivateKey)(privateKey);\n    return (valid\n        ? { chainCode, childIndex, depth, parentFingerprint, privateKey, valid }\n        : {\n            chainCode,\n            childIndex,\n            depth,\n            invalidPrivateKey: privateKey,\n            parentFingerprint,\n            valid,\n        });\n};\n/**\n * Derive the public identifier for a given {@link HdPrivateNode}. This is used\n * to uniquely identify HD nodes in software. The first 4 bytes of this\n * identifier are considered its \"fingerprint\".\n *\n * @param hdPrivateNode - the {@link HdPrivateNode} from which to derive the\n * public identifier (not require to be valid)\n * @param crypto - an optional object containing implementations implementations\n * of sha256, ripemd160, and secp256k1 compressed public key derivation to use\n */\nconst deriveHdPrivateNodeIdentifier = (hdPrivateNode, crypto = {\n    ripemd160: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.ripemd160,\n    secp256k1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1,\n    sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256,\n}) => {\n    const publicKey = crypto.secp256k1.derivePublicKeyCompressed(hdPrivateNode.privateKey);\n    if (typeof publicKey === 'string')\n        return publicKey;\n    return crypto.ripemd160.hash(crypto.sha256.hash(publicKey));\n};\n/**\n * Derive the public identifier for a given {@link HdPublicNode}. This is used\n * to uniquely identify HD nodes in software. The first 4 bytes of this\n * identifier are considered its fingerprint.\n *\n * @param node - the {@link HdPublicNode} from which to derive the identifier\n * @param crypto - an optional object containing implementations of sha256 and\n * ripemd160 to use\n */\nconst deriveHdPublicNodeIdentifier = (node, crypto = { ripemd160: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.ripemd160, sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => crypto.ripemd160.hash(crypto.sha256.hash(node.publicKey));\n/**\n * The 4-byte version indicating the network and type of an {@link HdPrivateKey}\n * or {@link HdPublicKey}.\n */\nvar HdKeyVersion;\n(function (HdKeyVersion) {\n    /**\n     * Version indicating the HD key is an {@link HdPrivateKey} intended for use\n     * on the main network. Base58 encoding at the expected length of an HD key\n     * results in a prefix of `xprv`.\n     *\n     * Hex: `0x0488ade4`\n     */\n    HdKeyVersion[HdKeyVersion[\"mainnetPrivateKey\"] = 76066276] = \"mainnetPrivateKey\";\n    /**\n     * Version indicating the HD key is an {@link HdPrivateKey} intended for use\n     * on the main network. Base58 encoding at the expected length of an HD key\n     * results in a prefix of `xpub`.\n     *\n     * Hex: `0x0488b21e`\n     */\n    HdKeyVersion[HdKeyVersion[\"mainnetPublicKey\"] = 76067358] = \"mainnetPublicKey\";\n    /**\n     * Version indicating the HD key is an {@link HdPrivateKey} intended for use\n     * on the test network. Base58 encoding at the expected length of an HD key\n     * results in a prefix of `tprv`.\n     *\n     * Hex: `0x04358394`\n     */\n    HdKeyVersion[HdKeyVersion[\"testnetPrivateKey\"] = 70615956] = \"testnetPrivateKey\";\n    /**\n     * Version indicating the HD key is an {@link HdPrivateKey} intended for use\n     * on the test network. Base58 encoding at the expected length of an HD key\n     * results in a prefix of `tpub`.\n     *\n     * Hex: `0x043587cf`\n     */\n    HdKeyVersion[HdKeyVersion[\"testnetPublicKey\"] = 70617039] = \"testnetPublicKey\";\n})(HdKeyVersion || (HdKeyVersion = {}));\n/**\n * An error in the decoding of an HD public or private key.\n */\nvar HdKeyDecodingError;\n(function (HdKeyDecodingError) {\n    HdKeyDecodingError[\"incorrectLength\"] = \"HD key decoding error: length is incorrect (must encode 82 bytes).\";\n    HdKeyDecodingError[\"invalidChecksum\"] = \"HD key decoding error: checksum is invalid.\";\n    HdKeyDecodingError[\"invalidPrivateNode\"] = \"HD key decoding error: the key for this HD private node is not a valid Secp256k1 private key.\";\n    HdKeyDecodingError[\"missingPrivateKeyPaddingByte\"] = \"HD key decoding error: version indicates a private key, but the key data is missing a padding byte.\";\n    HdKeyDecodingError[\"privateKeyExpected\"] = \"HD key decoding error: expected an HD private key, but encountered an HD public key.\";\n    HdKeyDecodingError[\"publicKeyExpected\"] = \"HD key decoding error: expected an HD public key, but encountered an HD private key.\";\n    HdKeyDecodingError[\"unknownCharacter\"] = \"HD key decoding error: key includes a non-base58 character.\";\n    HdKeyDecodingError[\"unknownVersion\"] = \"HD key decoding error: key uses an unknown version.\";\n})(HdKeyDecodingError || (HdKeyDecodingError = {}));\n/**\n * Decode an HD private key as defined by BIP32, returning a `node` and a\n * `network`. Decoding errors are returned as strings.\n *\n * If the type of the key is known, use {@link decodeHdPrivateKey} or\n * {@link decodeHdPublicKey}.\n *\n * @param hdKey - a BIP32 HD private key or HD public key\n * @param crypto -  an optional object containing an implementation of sha256\n * to use\n */\n// eslint-disable-next-line complexity\nconst decodeHdKey = (hdKey, crypto = { sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => {\n    const decoded = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.base58ToBin)(hdKey);\n    if (decoded === _format_format_js__WEBPACK_IMPORTED_MODULE_3__.BaseConversionError.unknownCharacter)\n        return HdKeyDecodingError.unknownCharacter;\n    const expectedLength = 82;\n    if (decoded.length !== expectedLength)\n        return HdKeyDecodingError.incorrectLength;\n    const checksumIndex = 78;\n    const payload = decoded.slice(0, checksumIndex);\n    const checksumBits = decoded.slice(checksumIndex);\n    const checksum = crypto.sha256.hash(crypto.sha256.hash(payload));\n    if (!checksumBits.every((value, i) => value === checksum[i])) {\n        return HdKeyDecodingError.invalidChecksum;\n    }\n    const depthIndex = 4;\n    const fingerprintIndex = 5;\n    const childIndexIndex = 9;\n    const chainCodeIndex = 13;\n    const keyDataIndex = 45;\n    const version = new DataView(decoded.buffer, decoded.byteOffset, depthIndex).getUint32(0);\n    const depth = decoded[depthIndex];\n    const parentFingerprint = decoded.slice(fingerprintIndex, childIndexIndex);\n    const childIndex = new DataView(decoded.buffer, decoded.byteOffset + childIndexIndex, decoded.byteOffset + chainCodeIndex).getUint32(0);\n    const chainCode = decoded.slice(chainCodeIndex, keyDataIndex);\n    const keyData = decoded.slice(keyDataIndex, checksumIndex);\n    const isPrivateKey = version === HdKeyVersion.mainnetPrivateKey ||\n        version === HdKeyVersion.testnetPrivateKey;\n    if (isPrivateKey && keyData[0] !== 0x00) {\n        return HdKeyDecodingError.missingPrivateKeyPaddingByte;\n    }\n    if (isPrivateKey) {\n        const privateKey = keyData.slice(1);\n        const valid = (0,_key_utils_js__WEBPACK_IMPORTED_MODULE_2__.validateSecp256k1PrivateKey)(privateKey);\n        return {\n            node: valid\n                ? {\n                    chainCode,\n                    childIndex,\n                    depth,\n                    parentFingerprint,\n                    privateKey,\n                    valid: true,\n                }\n                : {\n                    chainCode,\n                    childIndex,\n                    depth,\n                    invalidPrivateKey: privateKey,\n                    parentFingerprint,\n                    valid: false,\n                },\n            version,\n        };\n    }\n    const isPublicKey = version === HdKeyVersion.mainnetPublicKey ||\n        version === HdKeyVersion.testnetPublicKey;\n    if (!isPublicKey) {\n        return HdKeyDecodingError.unknownVersion;\n    }\n    return {\n        node: {\n            chainCode,\n            childIndex,\n            depth,\n            parentFingerprint,\n            publicKey: keyData,\n        },\n        version,\n    };\n};\n/**\n * Decode an HD private key as defined by BIP32.\n *\n * This method is similar to {@link decodeHdKey} but ensures that the result is\n * a valid HD private node. Decoding error messages are returned as strings.\n *\n * @param hdPrivateKey - a BIP32 HD private key\n * @param crypto -  an optional object containing an implementation of sha256\n * to use\n */\nconst decodeHdPrivateKey = (hdPrivateKey, crypto = { sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => {\n    const decoded = decodeHdKey(hdPrivateKey, crypto);\n    if (typeof decoded === 'string')\n        return decoded;\n    if ('publicKey' in decoded.node) {\n        return HdKeyDecodingError.privateKeyExpected;\n    }\n    if (!decoded.node.valid) {\n        return HdKeyDecodingError.invalidPrivateNode;\n    }\n    if (decoded.version === HdKeyVersion.mainnetPrivateKey) {\n        return {\n            network: 'mainnet',\n            node: decoded.node,\n        };\n    }\n    return {\n        network: 'testnet',\n        node: decoded.node,\n    };\n};\n/**\n * Decode an HD public key as defined by BIP32.\n *\n * This method is similar to {@link decodeHdKey} but ensures that the result is\n * an HD public node. Decoding error messages are returned as strings.\n *\n * @param hdPublicKey - a BIP32 HD public key\n * @param crypto - an optional object containing an implementation of sha256\n * to use\n */\nconst decodeHdPublicKey = (hdPublicKey, crypto = { sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => {\n    const decoded = decodeHdKey(hdPublicKey, crypto);\n    if (typeof decoded === 'string')\n        return decoded;\n    if (decoded.version === HdKeyVersion.mainnetPublicKey) {\n        return {\n            network: 'mainnet',\n            node: decoded.node,\n        };\n    }\n    if (decoded.version === HdKeyVersion.testnetPublicKey) {\n        return {\n            network: 'testnet',\n            node: decoded.node,\n        };\n    }\n    return HdKeyDecodingError.publicKeyExpected;\n};\n/**\n * Decode the provided HD private key and compute its identifier. Error messages\n * are returned as a string.\n */\nconst hdPrivateKeyToIdentifier = (hdPrivateKey, crypto = { sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => {\n    const privateKeyParams = decodeHdPrivateKey(hdPrivateKey, crypto);\n    if (typeof privateKeyParams === 'string') {\n        return privateKeyParams;\n    }\n    return deriveHdPrivateNodeIdentifier(privateKeyParams.node);\n};\n/**\n * Decode the provided HD public key and compute its identifier. Error messages\n * are returned as a string.\n */\nconst hdPublicKeyToIdentifier = (hdPublicKey, crypto = { sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => {\n    const publicKeyParams = decodeHdPublicKey(hdPublicKey, crypto);\n    if (typeof publicKeyParams === 'string') {\n        return publicKeyParams;\n    }\n    return deriveHdPublicNodeIdentifier(publicKeyParams.node);\n};\n/**\n * Encode an HD private key (as defined by BIP32) given a valid\n * {@link HdPrivateNode} and network.\n *\n * @param keyParameters - a valid HD private node and the network for which to\n * encode the key\n * @param crypto - an optional object containing an implementation of sha256\n * to use\n */\nconst encodeHdPrivateKey = (keyParameters, crypto = { sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => {\n    const version = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint32BE)(keyParameters.network === 'mainnet'\n        ? HdKeyVersion.mainnetPrivateKey\n        : HdKeyVersion.testnetPrivateKey);\n    const depth = Uint8Array.of(keyParameters.node.depth);\n    const childIndex = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint32BE)(keyParameters.node.childIndex);\n    const isPrivateKey = Uint8Array.of(0x00);\n    const payload = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_5__.flattenBinArray)([\n        version,\n        depth,\n        keyParameters.node.parentFingerprint,\n        childIndex,\n        keyParameters.node.chainCode,\n        isPrivateKey,\n        keyParameters.node.privateKey,\n    ]);\n    const checksumLength = 4;\n    const checksum = crypto.sha256\n        .hash(crypto.sha256.hash(payload))\n        .slice(0, checksumLength);\n    return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.binToBase58)((0,_format_format_js__WEBPACK_IMPORTED_MODULE_5__.flattenBinArray)([payload, checksum]));\n};\n/**\n * Encode an HD public key (as defined by BIP32) given an HD public node.\n *\n * @param keyParameters - an HD public node and the network for which to encode\n * the key\n * @param crypto - an optional object containing an implementation of sha256\n * to use\n */\nconst encodeHdPublicKey = (keyParameters, crypto = { sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => {\n    const version = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint32BE)(keyParameters.network === 'mainnet'\n        ? HdKeyVersion.mainnetPublicKey\n        : HdKeyVersion.testnetPublicKey);\n    const depth = Uint8Array.of(keyParameters.node.depth);\n    const childIndex = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint32BE)(keyParameters.node.childIndex);\n    const payload = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_5__.flattenBinArray)([\n        version,\n        depth,\n        keyParameters.node.parentFingerprint,\n        childIndex,\n        keyParameters.node.chainCode,\n        keyParameters.node.publicKey,\n    ]);\n    const checksumLength = 4;\n    const checksum = crypto.sha256\n        .hash(crypto.sha256.hash(payload))\n        .slice(0, checksumLength);\n    return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.binToBase58)((0,_format_format_js__WEBPACK_IMPORTED_MODULE_5__.flattenBinArray)([payload, checksum]));\n};\n/**\n * Derive the HD public node of an HD private node.\n *\n * Though private keys cannot be derived from HD public keys, sharing HD public\n * keys still carries risk. Along with allowing an attacker to associate wallet\n * addresses together (breaking privacy), should an attacker gain knowledge of a\n * single child private key, **it's possible to derive all parent HD private\n * keys**. See {@link crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode} for\n * details.\n *\n * @param node - a valid HD private node\n * @param crypto - an optional object containing an implementation of secp256k1\n * compressed public key derivation to use\n */\nconst deriveHdPublicNode = (node, crypto = { secp256k1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1 }) => ({\n    chainCode: node.chainCode,\n    childIndex: node.childIndex,\n    depth: node.depth,\n    parentFingerprint: node.parentFingerprint,\n    ...(node.parentIdentifier === undefined\n        ? {}\n        : { parentIdentifier: node.parentIdentifier }),\n    publicKey: crypto.secp256k1.derivePublicKeyCompressed(node.privateKey),\n});\n/**\n * An error in the derivation of child HD public or private nodes.\n */\nvar HdNodeDerivationError;\n(function (HdNodeDerivationError) {\n    HdNodeDerivationError[\"childIndexExceedsMaximum\"] = \"HD key derivation error: child index exceeds maximum (4294967295).\";\n    HdNodeDerivationError[\"nextChildIndexRequiresHardenedAlgorithm\"] = \"HD key derivation error: an incredibly rare HMAC-SHA512 result occurred, and incrementing the child index would require switching to the hardened algorithm.\";\n    HdNodeDerivationError[\"hardenedDerivationRequiresPrivateNode\"] = \"HD key derivation error: derivation for hardened child indexes (indexes greater than or equal to 2147483648) requires an HD private node.\";\n    HdNodeDerivationError[\"invalidDerivationPath\"] = \"HD key derivation error: invalid derivation path - paths must begin with \\\"m\\\" or \\\"M\\\" and contain only forward slashes (\\\"/\\\"), apostrophes (\\\"'\\\"), or positive child index numbers.\";\n    HdNodeDerivationError[\"invalidPrivateDerivationPrefix\"] = \"HD key derivation error: private derivation paths must begin with \\\"m\\\".\";\n    HdNodeDerivationError[\"invalidPublicDerivationPrefix\"] = \"HD key derivation error: public derivation paths must begin with \\\"M\\\".\";\n})(HdNodeDerivationError || (HdNodeDerivationError = {}));\n/**\n * Derive a child HD private node from an HD private node.\n *\n * To derive a child HD public node, use {@link deriveHdPublicNode} on the\n * result of this method. If the child uses a non-hardened index, it's also\n * possible to use {@link deriveHdPublicNodeChild}.\n *\n * @privateRemarks\n * The {@link Secp256k1.addTweakPrivateKey} method throws if the tweak is out of\n * range or if the resulting private key would be invalid. The procedure to\n * handle this error is standardized by BIP32: return the HD node at the next\n * child index. (Regardless, this scenario is incredibly unlikely without a\n * weakness in HMAC-SHA512.)\n *\n * @param node - the valid HD private node from which to derive the child node\n * @param index - the index at which to derive the child node - indexes greater\n * than or equal to the hardened index offset (`0x80000000`/`2147483648`) are\n * derived using the \"hardened\" derivation algorithm\n * @param crypto - an optional object containing implementations of sha256,\n * ripemd160, secp256k1 compressed public key derivation, and secp256k1 private\n * key \"tweak addition\" (application of the EC group operation)\n */\n// eslint-disable-next-line complexity\nconst deriveHdPrivateNodeChild = (node, index, crypto = {\n    ripemd160: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.ripemd160,\n    secp256k1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1,\n    sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256,\n    sha512: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha512,\n}) => {\n    const maximumIndex = 0xffffffff;\n    if (index > maximumIndex) {\n        return HdNodeDerivationError.childIndexExceedsMaximum;\n    }\n    const hardenedIndexOffset = 0x80000000;\n    const useHardenedAlgorithm = index >= hardenedIndexOffset;\n    const keyMaterial = useHardenedAlgorithm\n        ? node.privateKey\n        : crypto.secp256k1.derivePublicKeyCompressed(node.privateKey);\n    const serialization = Uint8Array.from([\n        ...(useHardenedAlgorithm ? [0x00] : []),\n        ...keyMaterial,\n        ...(0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint32BE)(index),\n    ]);\n    const derivation = (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__.hmacSha512)(node.chainCode, serialization, crypto.sha512);\n    const tweakValueLength = 32;\n    const tweakValue = derivation.slice(0, tweakValueLength);\n    const nextChainCode = derivation.slice(tweakValueLength);\n    const nextPrivateKey = crypto.secp256k1.addTweakPrivateKey(node.privateKey, tweakValue);\n    if (typeof nextPrivateKey === 'string') {\n        if (index === hardenedIndexOffset - 1) {\n            return HdNodeDerivationError.nextChildIndexRequiresHardenedAlgorithm;\n        }\n        return deriveHdPrivateNodeChild(node, index + 1, crypto);\n    }\n    const parentIdentifier = deriveHdPrivateNodeIdentifier(node, crypto);\n    const parentFingerprintLength = 4;\n    return {\n        chainCode: nextChainCode,\n        childIndex: index,\n        depth: node.depth + 1,\n        parentFingerprint: parentIdentifier.slice(0, parentFingerprintLength),\n        parentIdentifier,\n        privateKey: nextPrivateKey,\n        valid: true,\n    };\n};\n/**\n * Derive a non-hardened child HD public node from an HD public node.\n *\n * Because hardened derivation also requires knowledge of the parent private\n * node, it's not possible to use an HD public node to derive a hardened child\n * HD public node.\n *\n * Though private keys cannot be derived from HD public keys, sharing HD public\n * keys still carries risk. Along with allowing an attacker to associate wallet\n * addresses together (breaking privacy), should an attacker gain knowledge of a\n * single child private key, **it's possible to derive all parent HD private\n * keys**. See {@link crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode}\n * for details.\n *\n * @privateRemarks\n * The {@link secp256k1.addTweakPublicKeyCompressed} method returns an error as\n * a string if the tweak is out of range or if the resulting public key would be\n * invalid. The procedure to handle this error is standardized by BIP32: return\n * the HD node at the next child index. (Regardless, this scenario is incredibly\n * unlikely without a weakness in HMAC-SHA512.)\n *\n * @param node - the HD public node from which to derive the child public node\n * @param index - the index at which to derive the child node\n * @param crypto - an optional object containing implementations of sha256,\n * sha512, ripemd160, and secp256k1 compressed public key \"tweak addition\"\n * (application of the EC group operation)\n */\nconst deriveHdPublicNodeChild = (node, index, crypto = {\n    ripemd160: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.ripemd160,\n    secp256k1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1,\n    sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256,\n    sha512: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha512,\n}) => {\n    const hardenedIndexOffset = 0x80000000;\n    if (index >= hardenedIndexOffset) {\n        return HdNodeDerivationError.hardenedDerivationRequiresPrivateNode;\n    }\n    const serialization = Uint8Array.from([\n        ...node.publicKey,\n        ...(0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint32BE)(index),\n    ]);\n    const derivation = (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__.hmacSha512)(node.chainCode, serialization, crypto.sha512);\n    const tweakValueLength = 32;\n    const tweakValue = derivation.slice(0, tweakValueLength);\n    const nextChainCode = derivation.slice(tweakValueLength);\n    const nextPublicKey = crypto.secp256k1.addTweakPublicKeyCompressed(node.publicKey, tweakValue);\n    if (typeof nextPublicKey === 'string') {\n        if (index === hardenedIndexOffset - 1) {\n            return HdNodeDerivationError.nextChildIndexRequiresHardenedAlgorithm;\n        }\n        return deriveHdPublicNodeChild(node, index + 1, crypto);\n    }\n    const parentIdentifier = deriveHdPublicNodeIdentifier(node, crypto);\n    const parentFingerprintLength = 4;\n    return {\n        chainCode: nextChainCode,\n        childIndex: index,\n        depth: node.depth + 1,\n        parentFingerprint: parentIdentifier.slice(0, parentFingerprintLength),\n        parentIdentifier,\n        publicKey: nextPublicKey,\n    };\n};\n/**\n * Derive a child HD node from a parent node given a derivation path. The\n * resulting node is the same type as the parent node (private nodes return\n * private nodes, public nodes return public nodes).\n *\n * @remarks\n * The derivation path uses the notation specified in BIP32:\n *\n * The first character must be either `m` for private derivation or `M` for\n * public derivation, followed by sets of `/` and a number representing the\n * child index used in the derivation at that depth. Hardened derivation is\n * represented by a trailing `'`, and may only appear in private derivation\n * paths (hardened derivation requires knowledge of the private key). Hardened\n * child indexes are represented with the hardened index offset (`2147483648`)\n * subtracted.\n *\n * For example, `m/0/1'/2` uses private derivation (`m`), with child indexes in\n * the following order:\n *\n * `derivePrivate(derivePrivate(derivePrivate(node, 0), 2147483648 + 1), 2)`\n *\n * Likewise, `M/3/4/5` uses public derivation (`M`), with child indexes in the\n * following order:\n *\n * `derivePublic(derivePublic(derivePublic(node, 3), 4), 5)`\n *\n * Because hardened derivation requires a private node, paths that specify\n * public derivation (`M`) using hardened derivation (`'`) will return an error.\n * To derive the public node associated with a child private node that requires\n * hardened derivation, begin with private derivation, then provide the result\n * to `deriveHdPublicNode`.\n *\n * @param node - the HD node from which to begin the derivation (for paths\n * beginning with `m`, an {@link HdPrivateNodeValid}; for paths beginning with\n * `M`, an {@link HdPublicNode})\n * @param path - the BIP32 derivation path, e.g. `m/0/1'/2` or `M/3/4/5`\n * @param crypto - an optional object containing implementations of sha256,\n * sha512, ripemd160, and secp256k1 derivation functions\n */\n// eslint-disable-next-line complexity\nconst deriveHdPath = (node, path, crypto = {\n    ripemd160: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.ripemd160,\n    secp256k1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1,\n    sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256,\n    sha512: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha512,\n}) => {\n    const validDerivationPath = /^[mM](?:\\/[0-9]+'?)*$/u;\n    if (!validDerivationPath.test(path)) {\n        return HdNodeDerivationError.invalidDerivationPath;\n    }\n    const parsed = path.split('/');\n    const isPrivateDerivation = 'privateKey' in node;\n    if (isPrivateDerivation && parsed[0] !== 'm') {\n        return HdNodeDerivationError.invalidPrivateDerivationPrefix;\n    }\n    if (!isPrivateDerivation && parsed[0] !== 'M') {\n        return HdNodeDerivationError.invalidPublicDerivationPrefix;\n    }\n    const base = 10;\n    const hardenedIndexOffset = 0x80000000;\n    const indexes = parsed\n        .slice(1)\n        .map((index) => index.endsWith(\"'\")\n        ? parseInt(index.slice(0, -1), base) + hardenedIndexOffset\n        : parseInt(index, base));\n    return (isPrivateDerivation\n        ? indexes.reduce((result, nextIndex) => typeof result === 'string'\n            ? result\n            : deriveHdPrivateNodeChild(result, nextIndex, crypto), node // eslint-disable-line @typescript-eslint/prefer-reduce-type-parameter\n        )\n        : indexes.reduce((result, nextIndex) => typeof result === 'string'\n            ? result\n            : deriveHdPublicNodeChild(result, nextIndex, crypto), node // eslint-disable-line @typescript-eslint/prefer-reduce-type-parameter\n        ));\n};\nvar HdNodeCrackingError;\n(function (HdNodeCrackingError) {\n    HdNodeCrackingError[\"cannotCrackHardenedDerivation\"] = \"HD node cracking error: cannot crack an HD parent node using hardened child node.\";\n})(HdNodeCrackingError || (HdNodeCrackingError = {}));\n/**\n * Derive the HD private node from a HD public node, given any non-hardened\n * child private node.\n *\n * @remarks\n * This exploits the \"non-hardened\" BIP32 derivation algorithm. Because\n * non-hardened derivation only requires knowledge of the \"chain code\" (rather\n * than requiring knowledge of the parent private key) it's possible to\n * calculate the value by which the parent private key is \"tweaked\" to arrive at\n * the child private key. Since we have the child private key, we simply\n * subtract this \"tweaked\" amount to get back to the parent private key.\n *\n * The BIP32 \"hardened\" derivation algorithm is designed to address this\n * weakness. Using hardened derivation, child private nodes can be shared\n * without risk of leaking the parent private node, but this comes at the cost\n * of public node derivation. Given only a parent public node, it is not\n * possible to derive hardened child public keys, so applications must choose\n * between support for HD public node derivation or support for sharing child\n * private nodes.\n *\n * @param parentPublicNode - the parent HD public node for which to derive a\n * private node\n * @param childPrivateNode - any non-hardened child private node of the parent\n * node (only the `privateKey` and the `childIndex` are required)\n * * @param crypto - an optional object containing an implementation of sha512\n */\nconst crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode = (parentPublicNode, childPrivateNode, crypto = { sha512: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha512 }) => {\n    const hardenedIndexOffset = 0x80000000;\n    if (childPrivateNode.childIndex >= hardenedIndexOffset) {\n        return HdNodeCrackingError.cannotCrackHardenedDerivation;\n    }\n    const serialization = Uint8Array.from([\n        ...parentPublicNode.publicKey,\n        ...(0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint32BE)(childPrivateNode.childIndex),\n    ]);\n    const derivation = (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__.hmacSha512)(parentPublicNode.chainCode, serialization, crypto.sha512);\n    const tweakValueLength = 32;\n    const tweakValue = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.binToBigIntUint256BE)(derivation.slice(0, tweakValueLength));\n    const childPrivateValue = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.binToBigIntUint256BE)(childPrivateNode.privateKey);\n    const secp256k1OrderN = 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n;\n    const trueMod = (n, m) => ((n % m) + m) % m;\n    const parentPrivateValue = trueMod(childPrivateValue - tweakValue, secp256k1OrderN);\n    const privateKey = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToBinUint256BEClamped)(parentPrivateValue);\n    return {\n        chainCode: parentPublicNode.chainCode,\n        childIndex: parentPublicNode.childIndex,\n        depth: parentPublicNode.depth,\n        parentFingerprint: parentPublicNode.parentFingerprint,\n        ...(parentPublicNode.parentIdentifier === undefined\n            ? {}\n            : { parentIdentifier: parentPublicNode.parentIdentifier }),\n        privateKey,\n        valid: true,\n    };\n};\n//# sourceMappingURL=hd-key.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/key/hd-key.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/key/key-utils.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/key/key-utils.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generatePrivateKey\": () => (/* binding */ generatePrivateKey),\n/* harmony export */   \"validateSecp256k1PrivateKey\": () => (/* binding */ validateSecp256k1PrivateKey)\n/* harmony export */ });\n/**\n * Verify that a private key is valid for the Secp256k1 curve. Returns `true`\n * for success, or `false` on failure.\n *\n * Private keys are 256-bit numbers encoded as a 32-byte, big-endian Uint8Array.\n * Nearly every 256-bit number is a valid secp256k1 private key. Specifically,\n * any 256-bit number greater than `0x01` and less than\n * `0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364140`\n * is a valid private key. This range is part of the definition of the\n * secp256k1 elliptic curve parameters.\n *\n * This method does not require a `Secp256k1` implementation.\n */\nconst validateSecp256k1PrivateKey = (privateKey) => {\n    const privateKeyLength = 32;\n    if (privateKey.length !== privateKeyLength ||\n        privateKey.every((value) => value === 0)) {\n        return false;\n    }\n    /**\n     * The largest possible Secp256k1 private key – equal to the order of the\n     * Secp256k1 curve minus one.\n     */\n    // prettier-ignore\n    const maximumSecp256k1PrivateKey = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 186, 174, 220, 230, 175, 72, 160, 59, 191, 210, 94, 140, 208, 54, 65, 63]; // eslint-disable-line @typescript-eslint/no-magic-numbers\n    const firstDifference = privateKey.findIndex((value, i) => value !== maximumSecp256k1PrivateKey[i]);\n    if (firstDifference === -1 ||\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        privateKey[firstDifference] < maximumSecp256k1PrivateKey[firstDifference]) {\n        return true;\n    }\n    return false;\n};\n/**\n * Securely generate a valid Secp256k1 private key given a secure source of\n * randomness.\n *\n * **Node.js Usage**\n * ```ts\n * import { randomBytes } from 'crypto';\n * import { generatePrivateKey } from '@bitauth/libauth';\n *\n * const key = generatePrivateKey(() => randomBytes(32));\n * ```\n *\n * **Browser Usage**\n * ```ts\n * import { generatePrivateKey } from '@bitauth/libauth';\n *\n * const key = generatePrivateKey(() =>\n *   window.crypto.getRandomValues(new Uint8Array(32))\n * );\n * ```\n *\n * @param secureRandom - a method that returns a securely-random 32-byte\n * Uint8Array\n */\nconst generatePrivateKey = (secureRandom) => {\n    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations\n    let maybeKey;\n    // eslint-disable-next-line functional/no-loop-statement\n    do {\n        // eslint-disable-next-line functional/no-expression-statement\n        maybeKey = secureRandom();\n    } while (!validateSecp256k1PrivateKey(maybeKey));\n    return maybeKey;\n};\n//# sourceMappingURL=key-utils.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/key/key-utils.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/key/wallet-import-format.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/key/wallet-import-format.js ***!
  \*********************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decodePrivateKeyWif\": () => (/* binding */ decodePrivateKeyWif),\n/* harmony export */   \"encodePrivateKeyWif\": () => (/* binding */ encodePrivateKeyWif)\n/* harmony export */ });\n/* unused harmony export WalletImportFormatError */\n/* harmony import */ var _address_address_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../address/address.js */ \"../../node_modules/@bitauth/libauth/build/lib/address/base58-address.js\");\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__, _address_address_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__, _address_address_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nvar WalletImportFormatError;\n(function (WalletImportFormatError) {\n    WalletImportFormatError[\"incorrectLength\"] = \"The WIF private key payload is not the correct length.\";\n})(WalletImportFormatError || (WalletImportFormatError = {}));\n/**\n * Encode a private key using Wallet Import Format (WIF).\n *\n * WIF encodes the 32-byte private key, a 4-byte checksum, and a `type`\n * indicating the intended usage for the private key. See\n * {@link WalletImportFormatType} for details.\n *\n * @remarks\n * WIF-encoding uses the Base58Address format with version\n * {@link Base58AddressFormatVersion.wif} (`128`/`0x80`) or\n * {@link Base58AddressFormatVersion.wifTestnet} (`239`/`0xef`), respectively.\n *\n * To indicate that the private key is intended for use in a P2PKH address using\n * the compressed form of its derived public key, a `0x01` is appended to the\n * payload prior to encoding. For the uncompressed construction, the extra byte\n * is omitted.\n *\n * @param privateKey - a 32-byte Secp256k1 ECDSA private key\n * @param type - the intended usage of the private key (e.g. `mainnet` or\n * `testnet`)\n * @param sha256 - an implementation of sha256\n */\nconst encodePrivateKeyWif = (privateKey, type, sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256) => {\n    const compressedByte = 0x01;\n    const mainnet = type === 'mainnet' || type === 'mainnetUncompressed';\n    const compressed = type === 'mainnet' || type === 'testnet';\n    const payload = compressed\n        ? Uint8Array.from([...privateKey, compressedByte])\n        : privateKey;\n    return (0,_address_address_js__WEBPACK_IMPORTED_MODULE_1__.encodeBase58AddressFormat)(mainnet\n        ? _address_address_js__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.wif\n        : _address_address_js__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.wifTestnet, payload, sha256);\n};\n/**\n * Decode a private key using Wallet Import Format (WIF). See\n * {@link encodePrivateKeyWif} for details.\n *\n * @param wifKey - the private key to decode (in Wallet Import Format)\n * @param sha256 - an implementation of sha256\n */\n// eslint-disable-next-line complexity\nconst decodePrivateKeyWif = (wifKey, sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256) => {\n    const compressedPayloadLength = 33;\n    const decoded = (0,_address_address_js__WEBPACK_IMPORTED_MODULE_1__.decodeBase58AddressFormat)(wifKey, sha256);\n    if (typeof decoded === 'string')\n        return decoded;\n    const mainnet = decoded.version === _address_address_js__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.wif;\n    const compressed = decoded.payload.length === compressedPayloadLength;\n    const privateKey = compressed\n        ? decoded.payload.slice(0, -1)\n        : decoded.payload;\n    const type = mainnet\n        ? compressed\n            ? 'mainnet'\n            : 'mainnetUncompressed'\n        : compressed\n            ? 'testnet'\n            : 'testnetUncompressed';\n    return { privateKey, type };\n};\n//# sourceMappingURL=wallet-import-format.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/key/wallet-import-format.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/language/compile.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/language/compile.js ***!
  \*************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"compileScript\": () => (/* binding */ compileScript)\n/* harmony export */ });\n/* harmony import */ var _resolve_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./resolve.js */ \"../../node_modules/@bitauth/libauth/build/lib/language/resolve.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_resolve_js__WEBPACK_IMPORTED_MODULE_0__]);\n_resolve_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n/**\n * Parse, resolve, and reduce the selected script using the provided `data` and\n * `configuration`.\n *\n * Note, locktime validation only occurs if `compilationContext` is provided in\n * the configuration.\n */\n// eslint-disable-next-line complexity\nconst compileScript = (scriptId, data, configuration) => {\n    const locktimeDisablingSequenceNumber = 0xffffffff;\n    const lockTimeTypeBecomesTimestamp = 500000000;\n    if (data.compilationContext?.transaction.locktime !== undefined) {\n        if (configuration.unlockingScriptTimeLockTypes?.[scriptId] === 'height' &&\n            data.compilationContext.transaction.locktime >=\n                lockTimeTypeBecomesTimestamp) {\n            return {\n                errorType: 'parse',\n                errors: [\n                    {\n                        error: `The script \"${scriptId}\" requires a height-based locktime (less than 500,000,000), but this transaction uses a timestamp-based locktime (\"${data.compilationContext.transaction.locktime}\").`,\n                        range: (0,_resolve_js__WEBPACK_IMPORTED_MODULE_0__.createEmptyRange)(),\n                    },\n                ],\n                success: false,\n            };\n        }\n        if (configuration.unlockingScriptTimeLockTypes?.[scriptId] === 'timestamp' &&\n            data.compilationContext.transaction.locktime <\n                lockTimeTypeBecomesTimestamp) {\n            return {\n                errorType: 'parse',\n                errors: [\n                    {\n                        error: `The script \"${scriptId}\" requires a timestamp-based locktime (greater than or equal to 500,000,000), but this transaction uses a height-based locktime (\"${data.compilationContext.transaction.locktime}\").`,\n                        range: (0,_resolve_js__WEBPACK_IMPORTED_MODULE_0__.createEmptyRange)(),\n                    },\n                ],\n                success: false,\n            };\n        }\n    }\n    if (data.compilationContext?.transaction.inputs[data.compilationContext.inputIndex]?.sequenceNumber !== undefined &&\n        configuration.unlockingScriptTimeLockTypes?.[scriptId] !== undefined &&\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.transaction.inputs[data.compilationContext.inputIndex].sequenceNumber === locktimeDisablingSequenceNumber) {\n        return {\n            errorType: 'parse',\n            errors: [\n                {\n                    error: `The script \"${scriptId}\" requires a locktime, but this input's sequence number is set to disable transaction locktime (0xffffffff). This will cause the OP_CHECKLOCKTIMEVERIFY operation to error when the transaction is verified. To be valid, this input must use a sequence number that does not disable locktime.`,\n                    range: (0,_resolve_js__WEBPACK_IMPORTED_MODULE_0__.createEmptyRange)(),\n                },\n            ],\n            success: false,\n        };\n    }\n    const rawResult = (0,_resolve_js__WEBPACK_IMPORTED_MODULE_0__.compileScriptRaw)({\n        configuration,\n        data,\n        scriptId,\n    });\n    if (!rawResult.success) {\n        return rawResult;\n    }\n    const unlocks = configuration.unlockingScripts?.[scriptId];\n    const unlockingScriptType = unlocks === undefined\n        ? undefined\n        : configuration.lockingScriptTypes?.[unlocks];\n    const isP2shUnlock = unlockingScriptType === 'p2sh20' || unlockingScriptType === 'p2sh32';\n    const lockingScriptType = configuration.lockingScriptTypes?.[scriptId];\n    const isP2shLock = lockingScriptType === 'p2sh20' || lockingScriptType === 'p2sh32';\n    if (isP2shLock) {\n        const transformedResult = (0,_resolve_js__WEBPACK_IMPORTED_MODULE_0__.compileScriptRaw)({\n            configuration: {\n                ...configuration,\n                scripts: {\n                    p2sh20Locking: 'OP_HASH160 <$(<lockingBytecode> OP_HASH160)> OP_EQUAL',\n                    p2sh32Locking: 'OP_HASH256 <$(<lockingBytecode> OP_HASH256)> OP_EQUAL',\n                },\n                variables: { lockingBytecode: { type: 'AddressData' } },\n            },\n            data: { bytecode: { lockingBytecode: rawResult.bytecode } },\n            scriptId: lockingScriptType === 'p2sh20' ? 'p2sh20Locking' : 'p2sh32Locking',\n        });\n        if (!transformedResult.success) {\n            return transformedResult;\n        }\n        return {\n            ...rawResult,\n            bytecode: transformedResult.bytecode,\n            transformed: lockingScriptType === 'p2sh20' ? 'p2sh20-locking' : 'p2sh32-locking',\n        };\n    }\n    if (isP2shUnlock) {\n        const lockingBytecodeResult = (0,_resolve_js__WEBPACK_IMPORTED_MODULE_0__.compileScriptRaw)({\n            configuration,\n            data,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            scriptId: unlocks,\n        });\n        if (!lockingBytecodeResult.success) {\n            return lockingBytecodeResult;\n        }\n        const transformedResult = (0,_resolve_js__WEBPACK_IMPORTED_MODULE_0__.compileScriptRaw)({\n            configuration: {\n                ...configuration,\n                scripts: {\n                    p2shUnlocking: 'unlockingBytecode <lockingBytecode>',\n                },\n                variables: {\n                    lockingBytecode: { type: 'AddressData' },\n                    unlockingBytecode: { type: 'AddressData' },\n                },\n            },\n            data: {\n                bytecode: {\n                    lockingBytecode: lockingBytecodeResult.bytecode,\n                    unlockingBytecode: rawResult.bytecode,\n                },\n            },\n            scriptId: 'p2shUnlocking',\n        });\n        return {\n            ...rawResult,\n            bytecode: transformedResult.bytecode,\n            transformed: unlockingScriptType === 'p2sh20'\n                ? 'p2sh20-unlocking'\n                : 'p2sh32-unlocking',\n        };\n    }\n    return rawResult;\n};\n//# sourceMappingURL=compile.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/language/compile.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/language/language-types.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/language/language-types.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IdentifierResolutionErrorType\": () => (/* binding */ IdentifierResolutionErrorType),\n/* harmony export */   \"IdentifierResolutionType\": () => (/* binding */ IdentifierResolutionType)\n/* harmony export */ });\nvar IdentifierResolutionType;\n(function (IdentifierResolutionType) {\n    IdentifierResolutionType[\"opcode\"] = \"opcode\";\n    IdentifierResolutionType[\"variable\"] = \"variable\";\n    IdentifierResolutionType[\"script\"] = \"script\";\n})(IdentifierResolutionType || (IdentifierResolutionType = {}));\nvar IdentifierResolutionErrorType;\n(function (IdentifierResolutionErrorType) {\n    IdentifierResolutionErrorType[\"unknown\"] = \"unknown\";\n    IdentifierResolutionErrorType[\"variable\"] = \"variable\";\n    IdentifierResolutionErrorType[\"script\"] = \"script\";\n})(IdentifierResolutionErrorType || (IdentifierResolutionErrorType = {}));\n//# sourceMappingURL=language-types.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/language/language-types.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/language/language-utils.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/language/language-utils.js ***!
  \********************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"allErrorsAreRecoverable\": () => (/* binding */ allErrorsAreRecoverable),\n/* harmony export */   \"extractResolvedVariableBytecodeMap\": () => (/* binding */ extractResolvedVariableBytecodeMap),\n/* harmony export */   \"getResolutionErrors\": () => (/* binding */ getResolutionErrors),\n/* harmony export */   \"mergeRanges\": () => (/* binding */ mergeRanges),\n/* harmony export */   \"stringifyErrors\": () => (/* binding */ stringifyErrors)\n/* harmony export */ });\n/* unused harmony exports containsRange, extractBytecodeResolutions, extractEvaluationSamples, extractEvaluationSamplesRecursive, extractUnexecutedRanges, summarizeStack, summarizeDebugTrace, stringifyDebugTraceSummary */\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _vm_vm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vm/vm.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\n/* harmony import */ var _vm_vm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vm/vm.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/chips/bch-chips-opcodes.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_vm_vm_js__WEBPACK_IMPORTED_MODULE_1__]);\n_vm_vm_js__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst pluckStartPosition = (range) => ({\n    startColumn: range.startColumn,\n    startLineNumber: range.startLineNumber,\n});\nconst pluckEndPosition = (range) => ({\n    endColumn: range.endColumn,\n    endLineNumber: range.endLineNumber,\n});\n/**\n * Combine an array of `Range`s into a single larger `Range`.\n *\n * @param ranges - an array of `Range`s\n * @param parentRange - the range to assume if `ranges` is an empty array\n */\nconst mergeRanges = (ranges, parentRange = {\n    endColumn: 0,\n    endLineNumber: 0,\n    startColumn: 0,\n    startLineNumber: 0,\n}) => {\n    const minimumRangesToMerge = 2;\n    const unsortedMerged = ranges.length < minimumRangesToMerge\n        ? ranges.length === 1\n            ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                ranges[0]\n            : parentRange\n        : ranges.reduce(\n        // eslint-disable-next-line complexity\n        (merged, range) => ({\n            ...(range.endLineNumber > merged.endLineNumber\n                ? pluckEndPosition(range)\n                : range.endLineNumber === merged.endLineNumber &&\n                    range.endColumn > merged.endColumn\n                    ? pluckEndPosition(range)\n                    : pluckEndPosition(merged)),\n            ...(range.startLineNumber < merged.startLineNumber\n                ? pluckStartPosition(range)\n                : range.startLineNumber === merged.startLineNumber &&\n                    range.startColumn < merged.startColumn\n                    ? pluckStartPosition(range)\n                    : pluckStartPosition(merged)),\n        }), \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        ranges[0]);\n    return {\n        ...pluckEndPosition(unsortedMerged),\n        ...pluckStartPosition(unsortedMerged),\n    };\n};\n/**\n * Returns true if the `outerRange` fully contains the `innerRange`, otherwise,\n * `false`.\n *\n * @param outerRange - the bounds of the outer range\n * @param innerRange - the inner range to test\n * @param exclusive - disallow the `innerRange` from overlapping the\n * `outerRange` (such that the outer start and end columns may not be equal) –\n * defaults to `true`\n */\n// eslint-disable-next-line complexity\nconst containsRange = (outerRange, innerRange, exclusive = true) => {\n    const startsAfter = outerRange.startLineNumber < innerRange.startLineNumber\n        ? true\n        : outerRange.startLineNumber === innerRange.startLineNumber\n            ? exclusive\n                ? outerRange.startColumn < innerRange.startColumn\n                : outerRange.startColumn <= innerRange.startColumn\n            : false;\n    const endsBefore = outerRange.endLineNumber > innerRange.endLineNumber\n        ? true\n        : outerRange.endLineNumber === innerRange.endLineNumber\n            ? exclusive\n                ? outerRange.endColumn > innerRange.endColumn\n                : outerRange.endColumn >= innerRange.endColumn\n            : false;\n    return startsAfter && endsBefore;\n};\n/**\n * Extract a list of the errors that occurred while resolving a script.\n *\n * @param resolvedScript - the result of {@link resolveScript} from which to\n * extract errors\n */\nconst getResolutionErrors = (resolvedScript) => resolvedScript.reduce((errors, segment) => {\n    switch (segment.type) {\n        case 'error':\n            return [\n                ...errors,\n                {\n                    error: segment.value,\n                    ...(segment.missingIdentifier === undefined\n                        ? {}\n                        : {\n                            missingIdentifier: segment.missingIdentifier,\n                            owningEntity: segment.owningEntity,\n                        }),\n                    range: segment.range,\n                },\n            ];\n        case 'push':\n        case 'evaluation':\n            return [...errors, ...getResolutionErrors(segment.value)];\n        default:\n            return errors;\n    }\n}, []);\n/**\n * Verify that every error in the provided array can be resolved by providing\n * additional variables in the compilation data (rather than deeper issues, like\n * problems with the authentication template or wallet implementation).\n *\n * Note, errors are only recoverable if the \"entity ownership\" of each missing\n * identifier is known (specified in `CompilationData`'s `entityOwnership`).\n *\n * @param errors - an array of compilation errors\n */\nconst allErrorsAreRecoverable = (errors) => errors.every((error) => 'missingIdentifier' in error && 'owningEntity' in error);\n/**\n * Get an array of all resolutions used in a {@link ResolvedScript}.\n * @param resolvedScript - the resolved script to search\n */\nconst extractBytecodeResolutions = (resolvedScript) => \n// eslint-disable-next-line complexity\nresolvedScript.reduce((all, segment) => {\n    switch (segment.type) {\n        case 'push':\n        case 'evaluation':\n            return [...all, ...extractBytecodeResolutions(segment.value)];\n        case 'bytecode':\n            if ('variable' in segment) {\n                return [\n                    ...all,\n                    {\n                        bytecode: segment.value,\n                        text: segment.variable,\n                        type: 'variable',\n                    },\n                ];\n            }\n            if ('script' in segment) {\n                return [\n                    ...all,\n                    ...extractBytecodeResolutions(segment.source),\n                    {\n                        bytecode: segment.value,\n                        text: segment.script,\n                        type: 'script',\n                    },\n                ];\n            }\n            if ('opcode' in segment) {\n                return [\n                    ...all,\n                    {\n                        bytecode: segment.value,\n                        text: segment.opcode,\n                        type: 'opcode',\n                    },\n                ];\n            }\n            return [\n                ...all,\n                {\n                    bytecode: segment.value,\n                    text: segment.literal,\n                    type: segment.literalType,\n                },\n            ];\n        default:\n            return all;\n    }\n}, []);\n/**\n * Extract an object mapping the variable identifiers used in a\n * {@link ResolvedScript} to their resolved bytecode.\n *\n * @param resolvedScript - the resolved script to search\n */\nconst extractResolvedVariableBytecodeMap = (resolvedScript) => extractBytecodeResolutions(resolvedScript).reduce((all, resolution) => resolution.type === 'variable'\n    ? { ...all, [resolution.text]: resolution.bytecode }\n    : all, {});\n/**\n * Format a list of {@link CompilationError}s into a single string, with an\n * error start position following each error. E.g. for line 1, column 2:\n * `The error message. [1, 2]`\n *\n * Errors are separated with the `separator`, which defaults to `; `, e.g.:\n * `The first error message. [1, 2]; The second error message. [3, 4]`\n *\n * @param errors - an array of compilation errors\n * @param separator - the characters with which to join the formatted errors.\n */\nconst stringifyErrors = (errors, separator = '; ') => `${errors\n    .map((error) => `[${error.range.startLineNumber}, ${error.range.startColumn}] ${error.error}`)\n    .join(separator)}`;\n/**\n * Extract a set of \"evaluation samples\" from the result of a CashAssembly\n * compilation and a matching debug trace (from `vm.debug`), pairing program\n * states with the source ranges that produced them – like a \"source map\" for\n * complete evaluations. This is useful for omniscient debuggers like\n * Bitauth IDE.\n *\n * Returns an array of samples and an array of unmatched program states\n * remaining if `nodes` doesn't contain enough instructions to consume all\n * program states provided in `trace`. Returned samples are ordered by the\n * ending position (line and column) of their range.\n *\n * If all program states are consumed before the available nodes are exhausted,\n * the remaining nodes are ignored (the produced samples end at the last\n * instruction for which a program state exists). This usually occurs when an\n * error halts evaluation before the end of the script. (Note: if this occurs,\n * the final trace state will not be used, as it is expected to be the\n * duplicated final result produced by `vm.debug`, and should not be matched\n * with the next instruction. The returned `unmatchedStates` will have a length\n * of `0`.)\n *\n * This method allows for samples to be extracted from a single evaluation;\n * most applications should use\n * {@link extractEvaluationSamplesRecursive} instead.\n *\n * @remarks\n * This method incrementally concatenates the reduced bytecode from each node,\n * parsing the result into evaluation samples.\n *\n * Each node can contain only a portion of an instruction (like a long push\n * operation), or it can contain multiple instructions (like a long hex literal\n * representing a string of bytecode or an evaluation that is not wrapped by a\n * push).\n *\n * If a node contains only a portion of an instruction, the bytecode from\n * additional nodes are concatenated (and ranges merged) until an instruction\n * can be created. If any bytecode remains after a sample has been created, the\n * next sample begins in the same range. (For this reason, it's possible that\n * samples overlap.)\n *\n * If a node contains more than one instruction, the intermediate states\n * produced before the final state for that sample are saved to the sample's\n * `intermediateStates` array.\n *\n * If the program states in `trace` are exhausted before the final instruction\n * in a sample (usually caused by an evaluation error), the last instruction\n * with a matching program state is used for the sample (with its program\n * state), and the unmatched instructions are ignored. (This allows the \"last\n * known state\" to be displayed for the sample that caused evaluation to halt.)\n *\n * ---\n *\n * For example, the following script demonstrates many of these cases:\n *\n * `0x00 0x01 0xab01 0xcd9300 $(OP_3 <0x00> OP_SWAP OP_CAT) 0x010203`\n *\n * Which compiles to `0x0001ab01cd93000003010203`, disassembled:\n *\n * `OP_0 OP_PUSHBYTES_1 0xab OP_PUSHBYTES_1 0xcd OP_ADD OP_0 OP_0 OP_PUSHBYTES_3 0x010203`\n *\n * In the script, there are 6 top-level nodes (identified below within `[]`):\n *\n * `[0x00] [0x01] [0xab01] [0xcd9300] [$(OP_3 <0x00> OP_SWAP OP_CAT)] [0x010203]`\n *\n * These nodes together encode 7 instructions, some within a single node, and\n * some split between several nodes. Below we substitute the evaluation for its\n * result `0x0003` to group instructions by `[]`:\n *\n * `[0x00] [0x01 0xab][01 0xcd][93][00] [0x00][03 0x010203]`\n *\n * The \"resolution\" of samples is limited to the range of single nodes: nodes\n * cannot always be introspected to determine where contained instructions begin\n * and end. For example, it is ambiguous which portions of the evaluation are\n * responsible for the initial `0x00` and which are responsible for the `0x03`.\n *\n * For this reason, the range of each sample is limited to the range(s) of one\n * or more adjacent nodes. Samples may overlap in the range of a node that is\n * responsible for both ending a previous sample and beginning a new sample.\n * (Though, only 2 samples can overlap. If a node is responsible for more than 2\n * instructions, the second sample includes `internalStates` for instructions\n * that occur before the end of the second sample.)\n *\n * In this case, there are 6 samples identified below within `[]`, where each\n * `[` is closed by the closest following `]` (no nesting):\n *\n * `[0x00] [0x01 [0xab01] [0xcd9300]] [[$(OP_3 <0x00> OP_SWAP OP_CAT)] 0x010203]`\n *\n * The ranges for each sample (in terms of nodes) are as follows:\n * - Sample 1: node 1\n * - Sample 2: node 2 + node 3\n * - Sample 3: node 3 + node 4\n * - Sample 4: node 4\n * - Sample 5: node 5\n * - Sample 6: node 5 + node 6\n *\n * Note that the following samples overlap:\n * - Sample 2 and Sample 3\n * - Sample 3 and Sample 4\n * - Sample 5 and Sample 6\n *\n * Finally, note that Sample 4 will have one internal state produced by the\n * `OP_ADD` instruction. Sample 4 then ends with the `OP_0` (`0x00`) instruction\n * at the end of the `0xcd9300` node.\n *\n * ---\n *\n * Note, this implementation relies on the expectation that `trace` begins with\n * the initial program state, contains a single program state per instruction,\n * and ends with the final program state (as produced by `vm.debug`). It also\n * expects the `bytecode` provided by nodes to be parsable by\n * {@link decodeAuthenticationInstructions}.\n */\n// eslint-disable-next-line complexity\nconst extractEvaluationSamples = ({ evaluationRange, nodes, trace, }) => {\n    const traceWithoutFinalState = trace.length > 1 ? trace.slice(0, -1) : trace.slice();\n    if (traceWithoutFinalState.length === 0) {\n        return {\n            samples: [],\n            unmatchedStates: [],\n        };\n    }\n    const samples = [\n        {\n            evaluationRange,\n            internalStates: [],\n            range: {\n                endColumn: evaluationRange.startColumn,\n                endLineNumber: evaluationRange.startLineNumber,\n                startColumn: evaluationRange.startColumn,\n                startLineNumber: evaluationRange.startLineNumber,\n            },\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            state: traceWithoutFinalState[0],\n        },\n    ];\n    // eslint-disable-next-line functional/no-let\n    let nextState = 1;\n    // eslint-disable-next-line functional/no-let\n    let nextNode = 0;\n    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations\n    let incomplete;\n    // eslint-disable-next-line functional/no-loop-statement\n    while (nextState < traceWithoutFinalState.length && nextNode < nodes.length) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const currentNode = nodes[nextNode];\n        const { mergedBytecode, mergedRange } = incomplete === undefined\n            ? {\n                mergedBytecode: currentNode.bytecode,\n                mergedRange: currentNode.range,\n            }\n            : {\n                mergedBytecode: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([\n                    incomplete.bytecode,\n                    currentNode.bytecode,\n                ]),\n                mergedRange: mergeRanges([incomplete.range, currentNode.range]),\n            };\n        const decoded = (0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_1__.decodeAuthenticationInstructions)(mergedBytecode);\n        const [zeroth] = decoded;\n        const hasNonMalformedInstructions = zeroth !== undefined && !('malformed' in zeroth);\n        if (hasNonMalformedInstructions) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const lastInstruction = decoded[decoded.length - 1];\n            const validInstructions = (0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_1__.authenticationInstructionIsMalformed)(lastInstruction)\n                ? decoded.slice(0, decoded.length - 1)\n                : decoded;\n            const firstUnmatchedStateIndex = nextState + validInstructions.length;\n            const matchingStates = traceWithoutFinalState.slice(nextState, firstUnmatchedStateIndex);\n            const pairedStates = validInstructions.map((instruction, index) => ({\n                instruction,\n                state: matchingStates[index],\n            }));\n            /**\n             * Guaranteed to have a defined `state` (or the loop would have exited).\n             */\n            const firstPairedState = pairedStates[0];\n            const closesCurrentlyOpenSample = incomplete !== undefined;\n            // eslint-disable-next-line functional/no-conditional-statement\n            if (closesCurrentlyOpenSample) {\n                // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n                samples.push({\n                    evaluationRange,\n                    instruction: firstPairedState.instruction,\n                    internalStates: [],\n                    range: mergedRange,\n                    state: firstPairedState.state,\n                });\n            }\n            const firstUndefinedStateIndex = pairedStates.findIndex(({ state }) => state === undefined);\n            const sampleHasError = firstUndefinedStateIndex !== -1;\n            const sampleClosingIndex = sampleHasError\n                ? firstUndefinedStateIndex - 1\n                : pairedStates.length - 1;\n            const closesASecondSample = !closesCurrentlyOpenSample || sampleClosingIndex > 0;\n            // eslint-disable-next-line functional/no-conditional-statement\n            if (closesASecondSample) {\n                const finalState = pairedStates[sampleClosingIndex];\n                const secondSamplePairsBegin = closesCurrentlyOpenSample ? 1 : 0;\n                const internalStates = pairedStates.slice(secondSamplePairsBegin, sampleClosingIndex);\n                // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n                samples.push({\n                    evaluationRange,\n                    instruction: finalState.instruction,\n                    internalStates,\n                    range: currentNode.range,\n                    state: finalState.state,\n                });\n            }\n            // eslint-disable-next-line functional/no-expression-statement\n            nextState = firstUnmatchedStateIndex;\n            // eslint-disable-next-line functional/no-conditional-statement\n            if ((0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_1__.authenticationInstructionIsMalformed)(lastInstruction)) {\n                // eslint-disable-next-line functional/no-expression-statement\n                incomplete = {\n                    bytecode: (0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_1__.encodeAuthenticationInstructionMalformed)(lastInstruction),\n                    range: currentNode.range,\n                };\n                // eslint-disable-next-line functional/no-conditional-statement\n            }\n            else {\n                // eslint-disable-next-line functional/no-expression-statement\n                incomplete = undefined;\n            }\n            // eslint-disable-next-line functional/no-conditional-statement\n        }\n        else {\n            const lastInstruction = decoded[decoded.length - 1];\n            // eslint-disable-next-line functional/no-expression-statement\n            incomplete =\n                lastInstruction === undefined\n                    ? undefined\n                    : {\n                        bytecode: (0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_1__.encodeAuthenticationInstructionMalformed)(lastInstruction),\n                        range: mergedRange,\n                    };\n        }\n        // eslint-disable-next-line functional/no-expression-statement\n        nextNode += 1;\n    }\n    /**\n     * Because we ran out of `trace` states before all `nodes` were matched, we\n     * know an error occurred which halted evaluation. This error is indicated in\n     * the result by returning an empty array of `unmatchedStates`. Successful\n     * evaluations will always return at least one unmatched state: the final\n     * \"evaluation result\" state produced by `vm.debug`.\n     */\n    const errorOccurred = nextNode < nodes.length;\n    const unmatchedStates = errorOccurred\n        ? []\n        : trace.slice(nextState);\n    return {\n        samples,\n        unmatchedStates,\n    };\n};\n/**\n * Similar to {@link extractEvaluationSamples}, but recursively extracts samples\n * from evaluations within the provided array of nodes.\n *\n * Because CashAssembly evaluations are fully self-contained, there should never\n * be unmatched states from evaluations within a script reduction trace tree.\n * (For this reason, this method does not return the `unmatchedStates` from\n * nested evaluations.)\n *\n * Returned samples are ordered by the ending position (line and column) of\n * their range. Samples from CashAssembly evaluations that occur within an\n * outer evaluation appear before their parent sample (which uses their result).\n */\nconst extractEvaluationSamplesRecursive = ({ \n/**\n * The range of the script node that was evaluated to produce the `trace`\n */\nevaluationRange, \n/**\n * An array of reduced nodes to parse\n */\nnodes, \n/**\n * The `vm.debug` result to map to these nodes\n */\ntrace, }) => {\n    const extractEvaluations = (node, depth = 1) => {\n        if ('push' in node) {\n            return node.push.script.reduce((all, childNode) => [...all, ...extractEvaluations(childNode, depth)], []);\n        }\n        if ('source' in node) {\n            const childSamples = node.source.script.reduce((all, childNode) => [\n                ...all,\n                ...extractEvaluations(childNode, depth + 1),\n            ], []);\n            const traceWithoutUnlockingPhase = node.trace.slice(1);\n            const evaluationBeginToken = '$(';\n            const evaluationEndToken = ')';\n            const extracted = extractEvaluationSamples({\n                evaluationRange: {\n                    endColumn: node.range.endColumn - evaluationEndToken.length,\n                    endLineNumber: node.range.endLineNumber,\n                    startColumn: node.range.startColumn + evaluationBeginToken.length,\n                    startLineNumber: node.range.startLineNumber,\n                },\n                nodes: node.source.script,\n                trace: traceWithoutUnlockingPhase,\n            });\n            return [...extracted.samples, ...childSamples];\n        }\n        return [];\n    };\n    const { samples, unmatchedStates } = extractEvaluationSamples({\n        evaluationRange,\n        nodes,\n        trace,\n    });\n    const childSamples = nodes.reduce((all, node) => [...all, ...extractEvaluations(node)], []);\n    const endingOrderedSamples = [...samples, ...childSamples].sort((a, b) => {\n        const linesOrdered = a.range.endLineNumber - b.range.endLineNumber;\n        return linesOrdered === 0\n            ? a.range.endColumn - b.range.endColumn\n            : linesOrdered;\n    });\n    return {\n        samples: endingOrderedSamples,\n        unmatchedStates,\n    };\n};\nconst stateIsExecuting = (state) => state.controlStack.every((item) => item !== false);\n/**\n * Extract an array of ranges that were unused by an evaluation. This is useful\n * in development tooling for fading out or hiding code that is unimportant to\n * the current evaluation being tested.\n *\n * @remarks\n * Only ranges that are guaranteed to be unimportant to an evaluation are\n * returned by this method. These ranges are extracted from samples that:\n * - are preceded by a sample that ends with execution disabled (e.g. an\n * unsuccessful `OP_IF`)\n * - end with execution disabled, and\n * - contain no `internalStates` that enable execution.\n *\n * Note, internal states that temporarily re-enable and then disable execution\n * again can still have an effect on the parent evaluation, so this method\n * conservatively excludes such samples. For example, the hex literal\n * `0x675167`, which encodes `OP_ELSE OP_1 OP_ELSE`, could begin and end with\n * states in which execution is disabled, yet a `1` is pushed to the stack\n * during the sample's evaluation. (Samples like this are unusual, and can\n * almost always be reformatted to clearly separate the executed and unexecuted\n * instructions.)\n *\n * @param samples - an array of samples ordered by the ending position (line and\n * column) of their range.\n * @param evaluationBegins - the line and column at which the initial sample's\n * evaluation range begins (where the preceding state is assumed to be\n * executing), defaults to `1,1`\n */\nconst extractUnexecutedRanges = (samples, evaluationBegins = '1,1') => {\n    const reduced = samples.reduce((all, sample) => {\n        const { precedingStateSkipsByEvaluation, unexecutedRanges } = all;\n        const currentEvaluationStartLineAndColumn = `${sample.evaluationRange.startLineNumber},${sample.evaluationRange.startColumn}`;\n        const precedingStateSkips = \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        precedingStateSkipsByEvaluation[currentEvaluationStartLineAndColumn];\n        const endsWithSkip = !stateIsExecuting(sample.state);\n        const sampleHasNoExecutedInstructions = endsWithSkip &&\n            sample.internalStates.every((group) => !stateIsExecuting(group.state));\n        if (precedingStateSkips && sampleHasNoExecutedInstructions) {\n            return {\n                precedingStateSkipsByEvaluation: {\n                    ...precedingStateSkipsByEvaluation,\n                    [currentEvaluationStartLineAndColumn]: true,\n                },\n                unexecutedRanges: [...unexecutedRanges, sample.range],\n            };\n        }\n        return {\n            precedingStateSkipsByEvaluation: {\n                ...precedingStateSkipsByEvaluation,\n                [currentEvaluationStartLineAndColumn]: endsWithSkip,\n            },\n            unexecutedRanges,\n        };\n    }, {\n        precedingStateSkipsByEvaluation: {\n            [evaluationBegins]: false,\n        },\n        unexecutedRanges: [],\n    });\n    const canHaveContainedRanges = 2;\n    const containedRangesExcluded = reduced.unexecutedRanges.length < canHaveContainedRanges\n        ? reduced.unexecutedRanges\n        : reduced.unexecutedRanges.slice(0, -1).reduceRight((all, range) => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            if (containsRange(all[0], range)) {\n                return all;\n            }\n            return [range, ...all];\n        }, \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        [reduced.unexecutedRanges[reduced.unexecutedRanges.length - 1]]);\n    return containedRangesExcluded;\n};\n/**\n * Given a stack, return a summary of the stack's contents, encoding valid VM\n * numbers as numbers, and all other stack items as hex literals.\n *\n * @param stack - a stack of Uint8Array values\n */\nconst summarizeStack = (stack) => stack.map((item) => {\n    const asNumber = (0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_1__.vmNumberToBigInt)(item);\n    return `0x${(0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.binToHex)(item)}${typeof asNumber === 'string' ? '' : `(${asNumber.toString()})`}`;\n});\n/**\n * Given a debug trace (produced by {@link AuthenticationVirtualMachine.debug}),\n * return an array summarizing each step of the trace. Note, debug traces\n * include the full program state at the beginning of each evaluation step; the\n * summary produced by this method instead shows the resulting stacks after each\n * evaluation step.\n */\nconst summarizeDebugTrace = (trace) => trace.reduce(\n// eslint-disable-next-line max-params\n(steps, state, stateIndex, states) => {\n    const nextState = states[stateIndex + 1];\n    return nextState === undefined\n        ? steps\n        : [\n            ...steps,\n            {\n                alternateStack: summarizeStack(nextState.alternateStack),\n                ...(nextState.error === undefined\n                    ? {}\n                    : { error: nextState.error }),\n                execute: state.controlStack[state.controlStack.length - 1] !== false,\n                instruction: state.instructions[state.ip],\n                ip: state.ip,\n                stack: summarizeStack(nextState.stack),\n            },\n        ];\n}, []);\n/**\n * Return a string with the result of {@link summarizeDebugTrace} including one\n * step per line.\n *\n * @param summary - a summary produced by {@link summarizeDebugTrace}\n */\nconst stringifyDebugTraceSummary = (summary, { opcodes, padInstruction, } = {\n    opcodes: _vm_vm_js__WEBPACK_IMPORTED_MODULE_2__.OpcodesBCHCHIPs,\n    padInstruction: 23,\n}) => summary\n    .map(\n// eslint-disable-next-line complexity\n(line) => `${(line.instruction === undefined\n    ? '=>'\n    : `${line.ip}. ${line.execute ? '' : '(skip)'}${opcodes[line.instruction.opcode] ??\n        `OP_UNKNOWN${line.instruction.opcode}`}:`).padEnd(padInstruction)} ${typeof line.error === 'string'\n    ? line.error\n    : `${line.stack.join(' ')}${line.alternateStack.length === 0\n        ? ''\n        : `| alt: ${line.alternateStack.join(' ')}`}`}`)\n    .join('\\n');\n//# sourceMappingURL=language-utils.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/language/language-utils.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/language/parse.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/language/parse.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseScript\": () => (/* binding */ parseScript)\n/* harmony export */ });\n/* harmony import */ var _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parsimmon.js */ \"../../node_modules/@bitauth/libauth/build/lib/language/parsimmon.js\");\n\n/* eslint-disable sort-keys, @typescript-eslint/naming-convention, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\nconst cashAssemblyParser = _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.createLanguage({\n    script: (r) => _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.optWhitespace, r.expression.sepBy(_parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.optWhitespace), _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.optWhitespace, (_, expressions) => expressions).node('Script'),\n    expression: (r) => _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.alt(r.comment, r.push, r.evaluation, r.utf8, r.binary, r.hex, r.bigint, r.identifier),\n    comment: (r) => _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.alt(r.singleLineComment, r.multiLineComment).node('Comment'),\n    singleLineComment: () => _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.string('//').desc(\"the start of a single-line comment ('//')\"), _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[^\\n]*/u), (__, comment) => comment.trim()),\n    multiLineComment: () => _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.string('/*').desc(\"the start of a multi-line comment ('/*')\"), _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[\\s\\S]*?\\*\\//u).desc(\"the end of this multi-line comment ('*/')\"), (__, comment) => comment.slice(0, -'*/'.length).trim()),\n    push: (r) => _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.string('<').desc(\"the start of a push statement ('<')\"), r.script, _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.string('>').desc(\"the end of this push statement ('>')\"), (_, push) => push).node('Push'),\n    evaluation: (r) => _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.string('$').desc(\"the start of an evaluation ('$')\"), _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.string('(').desc(\"the opening parenthesis of this evaluation ('(')\"), r.script, _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.string(')').desc(\"the closing parenthesis of this evaluation (')')\"), (_, __, evaluation) => evaluation).node('Evaluation'),\n    identifier: () => _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[a-zA-Z_][.a-zA-Z0-9_-]*/u)\n        .desc('a valid identifier')\n        .node('Identifier'),\n    utf8: () => _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.alt(_parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.string('\"').desc('a double quote (\")'), _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[^\"]*/u), _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.string('\"').desc('a closing double quote (\")'), (__, literal) => literal), _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.string(\"'\").desc(\"a single quote (')\"), _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[^']*/u), _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.string(\"'\").desc(\"a closing single quote (')\"), (__, literal) => literal)).node('UTF8Literal'),\n    hex: () => _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.string('0x').desc(\"a hex literal ('0x...')\"), _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[0-9a-f]_*(?:_*[0-9a-f]_*[0-9a-f]_*)*[0-9a-f]/iu).desc('a valid hexadecimal string'), (__, literal) => literal).node('HexLiteral'),\n    binary: () => _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.string('0b').desc(\"a binary literal ('0b...')\"), _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[01]+(?:[01_]*[01]+)*/iu).desc('a string of binary digits'), (__, literal) => literal).node('BinaryLiteral'),\n    bigint: () => _parsimmon_js__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/-?[0-9]+(?:[0-9_]*[0-9]+)*/u)\n        .desc('an integer literal')\n        .node('BigIntLiteral'),\n});\n/* eslint-enable sort-keys, @typescript-eslint/naming-convention, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\nconst parseScript = (script) => cashAssemblyParser.script.parse(script);\n//# sourceMappingURL=parse.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/language/parse.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/language/parsimmon.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/language/parsimmon.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"P\": () => (/* binding */ P)\n/* harmony export */ });\n/**\n * This file is derived from https://github.com/jneen/parsimmon and\n * https://github.com/DefinitelyTyped/DefinitelyTyped.\n */\n/* eslint-disable @typescript-eslint/unified-signatures, functional/no-method-signature, functional/no-throw-statement, functional/no-conditional-statement, @typescript-eslint/no-this-alias, consistent-this, @typescript-eslint/ban-ts-comment, prefer-spread, @typescript-eslint/restrict-template-expressions, func-names, @typescript-eslint/init-declarations, new-cap, @typescript-eslint/require-array-sort-compare, guard-for-in, no-plusplus, functional/no-let, functional/no-loop-statement, @typescript-eslint/prefer-for-of, @typescript-eslint/restrict-plus-operands, functional/immutable-data, @typescript-eslint/no-use-before-define, @typescript-eslint/strict-boolean-expressions, no-param-reassign, functional/no-expression-statement, functional/no-this-expression, @typescript-eslint/no-explicit-any, func-style, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-return, @typescript-eslint/naming-convention, @typescript-eslint/method-signature-style, @typescript-eslint/no-confusing-void-expression, prefer-arrow-callback, functional/no-return-void, @typescript-eslint/no-unsafe-argument */\n// cspell: ignore accum\nfunction Parsimmon(action) {\n    // @ts-expect-error\n    if (!(this instanceof Parsimmon)) {\n        // @ts-expect-error\n        return new Parsimmon(action);\n    }\n    // @ts-expect-error\n    this._ = action;\n}\nconst _ = Parsimmon.prototype;\n// -*- Helpers -*-\nfunction makeSuccess(index, value) {\n    return {\n        expected: [],\n        furthest: -1,\n        index,\n        status: true,\n        value,\n    };\n}\nfunction makeFailure(index, expected) {\n    expected = [expected];\n    return {\n        expected,\n        furthest: index,\n        index: -1,\n        status: false,\n        value: null,\n    };\n}\nfunction mergeReplies(result, last) {\n    if (!last) {\n        return result;\n    }\n    if (result.furthest > last.furthest) {\n        return result;\n    }\n    const expected = result.furthest === last.furthest\n        ? union(result.expected, last.expected)\n        : last.expected;\n    return {\n        expected,\n        furthest: last.furthest,\n        index: result.index,\n        status: result.status,\n        value: result.value,\n    };\n}\nfunction makeLineColumnIndex(input, i) {\n    const lines = input.slice(0, i).split('\\n');\n    /*\n     * Note that unlike the character offset, the line and column offsets are\n     * 1-based.\n     */\n    const lineWeAreUpTo = lines.length;\n    const columnWeAreUpTo = lines[lines.length - 1].length + 1;\n    return {\n        column: columnWeAreUpTo,\n        line: lineWeAreUpTo,\n        offset: i,\n    };\n}\n// Returns the sorted set union of two arrays of strings\nfunction union(xs, ys) {\n    const obj = {};\n    for (let i = 0; i < xs.length; i++) {\n        // @ts-expect-error\n        obj[xs[i]] = true;\n    }\n    for (let j = 0; j < ys.length; j++) {\n        // @ts-expect-error\n        obj[ys[j]] = true;\n    }\n    const keys = [];\n    for (const k in obj) {\n        keys.push(k);\n    }\n    keys.sort();\n    return keys;\n}\n// -*- Error Formatting -*-\nfunction flags(re) {\n    const s = String(re);\n    return s.slice(s.lastIndexOf('/') + 1);\n}\nfunction anchoredRegexp(re) {\n    return RegExp(`^(?:${re.source})`, flags(re));\n}\n// -*- Combinators -*-\nfunction seq(...params) {\n    const parsers = [].slice.call(params);\n    const numParsers = parsers.length;\n    return Parsimmon(function (input, i) {\n        let result;\n        const accum = new Array(numParsers);\n        for (let j = 0; j < numParsers; j += 1) {\n            result = mergeReplies(parsers[j]._(input, i), result);\n            if (!result.status) {\n                return result;\n            }\n            accum[j] = result.value;\n            i = result.index;\n        }\n        return mergeReplies(makeSuccess(i, accum), result);\n    });\n}\nfunction seqMap(...params) {\n    const args = [].slice.call(params);\n    const mapper = args.pop();\n    return seq.apply(null, args).map(function (results) {\n        // @ts-expect-error\n        return mapper.apply(null, results);\n    });\n}\nfunction createLanguage(parsers) {\n    const language = {};\n    for (const key in parsers) {\n        (function (rule) {\n            const func = function () {\n                // @ts-expect-error\n                return parsers[rule](language);\n            };\n            // @ts-expect-error\n            language[rule] = lazy(func);\n        })(key);\n    }\n    return language;\n}\nfunction alt(...params) {\n    const parsers = [].slice.call(params);\n    return Parsimmon(function (input, i) {\n        let result;\n        for (let j = 0; j < parsers.length; j += 1) {\n            result = mergeReplies(parsers[j]._(input, i), result);\n            if (result.status) {\n                return result;\n            }\n        }\n        return result;\n    });\n}\nfunction sepBy(parser, separator) {\n    return sepBy1(parser, separator).or(succeed([]));\n}\nfunction sepBy1(parser, separator) {\n    const pairs = separator.then(parser).many();\n    return seqMap(parser, pairs, function (r, rs) {\n        return [r].concat(rs);\n    });\n}\n// -*- Core Parsing Methods -*-\n_.parse = function (input) {\n    const result = this.skip(eof)._(input, 0);\n    if (result.status) {\n        return {\n            status: true,\n            value: result.value,\n        };\n    }\n    return {\n        expected: result.expected,\n        index: makeLineColumnIndex(input, result.furthest),\n        status: false,\n    };\n};\n// -*- Other Methods -*-\n_.or = function (alternative) {\n    return alt(this, alternative);\n};\n_.then = function (next) {\n    return seq(this, next).map(function (results) {\n        return results[1];\n    });\n};\n_.many = function () {\n    const self = this;\n    return Parsimmon(function (input, i) {\n        const accum = [];\n        let result;\n        for (;;) {\n            result = mergeReplies(self._(input, i), result);\n            if (result.status) {\n                /* istanbul ignore if */ if (i === result.index) {\n                    throw new Error('infinite loop detected in .many() parser --- calling .many() on ' +\n                        'a parser that can accept zero characters is usually the cause');\n                }\n                i = result.index;\n                accum.push(result.value);\n            }\n            else {\n                return mergeReplies(makeSuccess(i, accum), result);\n            }\n        }\n    });\n};\n_.map = function (fn) {\n    const self = this;\n    return Parsimmon(function (input, i) {\n        const result = self._(input, i);\n        if (!result.status) {\n            return result;\n        }\n        return mergeReplies(makeSuccess(result.index, fn(result.value)), result);\n    });\n};\n_.skip = function (next) {\n    return seq(this, next).map(function (results) {\n        return results[0];\n    });\n};\n_.node = function (name) {\n    return seqMap(index, this, index, function (start, value, end) {\n        return {\n            end,\n            name,\n            start,\n            value,\n        };\n    });\n};\n_.sepBy = function (separator) {\n    return sepBy(this, separator);\n};\n_.desc = function (expected) {\n    expected = [expected];\n    const self = this;\n    return Parsimmon(function (input, i) {\n        const reply = self._(input, i);\n        if (!reply.status) {\n            reply.expected = expected;\n        }\n        return reply;\n    });\n};\n// -*- Constructors -*-\nfunction string(str) {\n    const expected = `'${str}'`;\n    return Parsimmon(function (input, i) {\n        const j = i + str.length;\n        const head = input.slice(i, j);\n        if (head === str) {\n            return makeSuccess(j, head);\n        }\n        return makeFailure(i, expected);\n    });\n}\nfunction regexp(re, group = 0) {\n    const anchored = anchoredRegexp(re);\n    const expected = String(re);\n    return Parsimmon(function (input, i) {\n        const match = anchored.exec(input.slice(i));\n        if (match) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const fullMatch = match[0];\n            const groupMatch = match[group];\n            return makeSuccess(i + fullMatch.length, groupMatch);\n        }\n        return makeFailure(i, expected);\n    });\n}\nfunction succeed(value) {\n    return Parsimmon(function (__, i) {\n        return makeSuccess(i, value);\n    });\n}\nfunction lazy(f) {\n    const parser = Parsimmon(function (input, i) {\n        parser._ = f()._;\n        return parser._(input, i);\n    });\n    return parser;\n}\n// -*- Base Parsers -*-\nconst index = Parsimmon(function (input, i) {\n    return makeSuccess(i, makeLineColumnIndex(input, i));\n});\nconst eof = Parsimmon(function (input, i) {\n    if (i < input.length) {\n        return makeFailure(i, 'EOF');\n    }\n    return makeSuccess(i, null);\n});\nconst optWhitespace = regexp(/\\s*/u).desc('optional whitespace');\nconst whitespace = regexp(/\\s+/u).desc('whitespace');\nconst P = {\n    alt,\n    createLanguage,\n    index,\n    lazy,\n    makeFailure,\n    makeSuccess,\n    of: succeed,\n    optWhitespace,\n    regexp,\n    sepBy,\n    sepBy1,\n    seq,\n    seqMap,\n    string,\n    succeed,\n    whitespace,\n};\n//# sourceMappingURL=parsimmon.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/language/parsimmon.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/language/reduce.js":
/*!************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/language/reduce.js ***!
  \************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reduceScript\": () => (/* binding */ reduceScript)\n/* harmony export */ });\n/* unused harmony export verifyCashAssemblyEvaluationState */\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vm/vm.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js\");\n/* harmony import */ var _vm_vm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vm/vm.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/push.js\");\n/* harmony import */ var _language_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./language-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/language/language-utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_vm_vm_js__WEBPACK_IMPORTED_MODULE_1__, _language_utils_js__WEBPACK_IMPORTED_MODULE_3__]);\n([_vm_vm_js__WEBPACK_IMPORTED_MODULE_1__, _language_utils_js__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst emptyReductionTraceNode = (range) => ({\n    bytecode: Uint8Array.of(),\n    range,\n});\n/**\n * Perform the standard verification of CashAssembly evaluation results. This\n * ensures that evaluations complete as expected: if an error occurs while\n * computing an evaluation, script compilation should fail.\n *\n * Three requirements are enforced:\n * - the evaluation may not produce an `error`\n * - the resulting stack must contain exactly 1 item\n * - the resulting execution stack must be empty (no missing `OP_ENDIF`s)\n *\n * This differs from the virtual machine's built-in `vm.verify` in that it is\n * often more lenient, for example, evaluations can succeed with an non-truthy\n * value on top of the stack.\n *\n * @param state - the final program state to verify\n */\nconst verifyCashAssemblyEvaluationState = (state) => {\n    if (state.error !== undefined) {\n        return state.error;\n    }\n    if (state.controlStack.length !== 0) {\n        return _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.nonEmptyControlStack;\n    }\n    if (state.stack.length !== 1) {\n        return _vm_vm_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.requiresCleanStack;\n    }\n    return true;\n};\n/**\n * Reduce a resolved script, returning the resulting bytecode and a trace of the\n * reduction process.\n *\n * This method will return an error if provided a {@link resolvedScript} with\n * resolution errors. To check for resolution errors, use\n * {@link getResolutionErrors}.\n *\n * @param resolvedScript - the {@link CompiledScript} to reduce\n * @param vm - the {@link AuthenticationVirtualMachine} to use for evaluations\n * @param createEvaluationProgram - a method which accepts the compiled bytecode\n * of an evaluation and returns the authentication program used to evaluate it\n */\nconst reduceScript = (resolvedScript, vm, createEvaluationProgram) => {\n    const script = resolvedScript.map((segment) => {\n        switch (segment.type) {\n            case 'bytecode':\n                return { bytecode: segment.value, range: segment.range };\n            case 'push': {\n                const push = reduceScript(segment.value, vm, createEvaluationProgram);\n                const bytecode = (0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_1__.encodeDataPush)(push.bytecode);\n                return {\n                    bytecode,\n                    ...(push.errors === undefined ? undefined : { errors: push.errors }),\n                    push,\n                    range: segment.range,\n                };\n            }\n            case 'evaluation': {\n                if (typeof vm === 'undefined' ||\n                    typeof createEvaluationProgram === 'undefined') {\n                    return {\n                        errors: [\n                            {\n                                error: 'Both a VM and a createState method are required to reduce evaluations.',\n                                range: segment.range,\n                            },\n                        ],\n                        ...emptyReductionTraceNode(segment.range),\n                    };\n                }\n                const reductionTrace = reduceScript(segment.value, vm, createEvaluationProgram);\n                if (reductionTrace.errors !== undefined) {\n                    return {\n                        ...emptyReductionTraceNode(segment.range),\n                        errors: reductionTrace.errors,\n                        source: reductionTrace,\n                        trace: [],\n                    };\n                }\n                const trace = vm.debug(createEvaluationProgram(reductionTrace.bytecode));\n                /**\n                 * `vm.debug` should always return at least one state.\n                 */\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const lastState = trace[trace.length - 1];\n                const result = verifyCashAssemblyEvaluationState(lastState);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const bytecode = lastState.stack[lastState.stack.length - 1];\n                return {\n                    ...(typeof result === 'string'\n                        ? {\n                            bytecode: Uint8Array.of(),\n                            errors: [\n                                {\n                                    error: `Failed to reduce evaluation: ${result}`,\n                                    range: segment.range,\n                                },\n                            ],\n                        }\n                        : {\n                            bytecode,\n                        }),\n                    range: segment.range,\n                    source: reductionTrace,\n                    trace,\n                };\n            }\n            case 'comment':\n                return emptyReductionTraceNode(segment.range);\n            case 'error':\n                return {\n                    errors: [\n                        {\n                            error: `Tried to reduce a CashAssembly script with resolution errors: ${segment.value}`,\n                            range: segment.range,\n                        },\n                    ],\n                    ...emptyReductionTraceNode(segment.range),\n                };\n            default:\n                // eslint-disable-next-line functional/no-throw-statement, @typescript-eslint/no-throw-literal\n                throw new Error(`\"${segment.type}\" is not a known segment type.`);\n        }\n    });\n    const reduction = script.reduce((all, segment) => ({\n        bytecode: [...all.bytecode, segment.bytecode],\n        ranges: [...all.ranges, segment.range],\n        ...(all.errors !== undefined || segment.errors !== undefined\n            ? {\n                errors: [\n                    ...(all.errors === undefined ? [] : all.errors),\n                    ...(segment.errors === undefined ? [] : segment.errors),\n                ],\n            }\n            : undefined),\n    }), { bytecode: [], ranges: [] });\n    return {\n        ...(reduction.errors === undefined\n            ? undefined\n            : { errors: reduction.errors }),\n        bytecode: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_2__.flattenBinArray)(reduction.bytecode),\n        range: (0,_language_utils_js__WEBPACK_IMPORTED_MODULE_3__.mergeRanges)(reduction.ranges, \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        resolvedScript.length === 0 ? undefined : resolvedScript[0].range),\n        script,\n    };\n};\n//# sourceMappingURL=reduce.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/language/reduce.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/language/resolve.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/language/resolve.js ***!
  \*************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"compileScriptRaw\": () => (/* binding */ compileScriptRaw),\n/* harmony export */   \"createEmptyRange\": () => (/* binding */ createEmptyRange),\n/* harmony export */   \"resolveScriptIdentifier\": () => (/* binding */ resolveScriptIdentifier)\n/* harmony export */ });\n/* unused harmony exports resolveScriptSegment, BuiltInVariables, resolveVariableIdentifier, describeExpectedInput, createIdentifierResolver, compileScriptContents */\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/bin-string.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/utf8.js\");\n/* harmony import */ var _vm_vm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vm/vm.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\n/* harmony import */ var _language_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./language-types.js */ \"../../node_modules/@bitauth/libauth/build/lib/language/language-types.js\");\n/* harmony import */ var _language_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./language-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/language/language-utils.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parse.js */ \"../../node_modules/@bitauth/libauth/build/lib/language/parse.js\");\n/* harmony import */ var _reduce_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./reduce.js */ \"../../node_modules/@bitauth/libauth/build/lib/language/reduce.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_vm_vm_js__WEBPACK_IMPORTED_MODULE_1__, _language_utils_js__WEBPACK_IMPORTED_MODULE_5__, _reduce_js__WEBPACK_IMPORTED_MODULE_7__]);\n([_vm_vm_js__WEBPACK_IMPORTED_MODULE_1__, _language_utils_js__WEBPACK_IMPORTED_MODULE_5__, _reduce_js__WEBPACK_IMPORTED_MODULE_7__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\nconst pluckRange = (node) => ({\n    endColumn: node.end.column,\n    endLineNumber: node.end.line,\n    startColumn: node.start.column,\n    startLineNumber: node.start.line,\n});\nconst removeNumericSeparators = (numericLiteral) => numericLiteral.replace(/_/gu, '');\nconst resolveScriptSegment = (segment, resolveIdentifiers) => {\n    // eslint-disable-next-line complexity\n    const resolved = segment.value.map((child) => {\n        const range = pluckRange(child);\n        switch (child.name) {\n            case 'Identifier': {\n                const identifier = child.value;\n                const result = resolveIdentifiers(identifier);\n                const ret = result.status\n                    ? {\n                        range,\n                        type: 'bytecode',\n                        value: result.bytecode,\n                        ...(result.type === _language_types_js__WEBPACK_IMPORTED_MODULE_0__.IdentifierResolutionType.opcode\n                            ? {\n                                opcode: identifier,\n                            }\n                            : result.type === _language_types_js__WEBPACK_IMPORTED_MODULE_0__.IdentifierResolutionType.variable\n                                ? {\n                                    ...('debug' in result ? { debug: result.debug } : {}),\n                                    ...('signature' in result\n                                        ? { signature: result.signature }\n                                        : {}),\n                                    variable: identifier,\n                                }\n                                : // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                                    result.type === _language_types_js__WEBPACK_IMPORTED_MODULE_0__.IdentifierResolutionType.script\n                                        ? { script: identifier, source: result.source }\n                                        : { unknown: identifier }),\n                    }\n                    : {\n                        ...('debug' in result ? { debug: result.debug } : {}),\n                        ...('recoverable' in result && result.recoverable\n                            ? {\n                                missingIdentifier: identifier,\n                                owningEntity: result.entityOwnership,\n                            }\n                            : {}),\n                        range,\n                        type: 'error',\n                        value: result.error,\n                    };\n                return ret;\n            }\n            case 'Push':\n                return {\n                    range,\n                    type: 'push',\n                    value: resolveScriptSegment(child.value, resolveIdentifiers),\n                };\n            case 'Evaluation':\n                return {\n                    range,\n                    type: 'evaluation',\n                    value: resolveScriptSegment(child.value, resolveIdentifiers),\n                };\n            case 'BigIntLiteral':\n                return {\n                    literal: child.value,\n                    literalType: 'BigIntLiteral',\n                    range,\n                    type: 'bytecode',\n                    value: (0,_vm_vm_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToVmNumber)(BigInt(removeNumericSeparators(child.value))),\n                };\n            case 'BinaryLiteral':\n                return {\n                    literal: child.value,\n                    literalType: 'BinaryLiteral',\n                    range,\n                    type: 'bytecode',\n                    value: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_2__.binStringToBin)(removeNumericSeparators(child.value)),\n                };\n            case 'HexLiteral':\n                return {\n                    literal: child.value,\n                    literalType: 'HexLiteral',\n                    range,\n                    type: 'bytecode',\n                    value: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.hexToBin)(removeNumericSeparators(child.value)),\n                };\n            case 'UTF8Literal':\n                return {\n                    literal: child.value,\n                    literalType: 'UTF8Literal',\n                    range,\n                    type: 'bytecode',\n                    value: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.utf8ToBin)(child.value),\n                };\n            case 'Comment':\n                return {\n                    range,\n                    type: 'comment',\n                    value: child.value,\n                };\n            default:\n                return {\n                    range,\n                    type: 'error',\n                    value: `Unrecognized segment: ${child.name}`,\n                };\n        }\n    });\n    return resolved.length === 0\n        ? [{ range: pluckRange(segment), type: 'comment', value: '' }]\n        : resolved;\n};\nvar BuiltInVariables;\n(function (BuiltInVariables) {\n    BuiltInVariables[\"currentBlockTime\"] = \"current_block_time\";\n    BuiltInVariables[\"currentBlockHeight\"] = \"current_block_height\";\n    BuiltInVariables[\"signingSerialization\"] = \"signing_serialization\";\n})(BuiltInVariables || (BuiltInVariables = {}));\nconst attemptCompilerOperation = ({ data, configuration, identifier, matchingOperations, operationExample = 'operation_identifier', operationId, variableId, variableType, }) => {\n    if (matchingOperations === undefined) {\n        return {\n            error: `The \"${variableId}\" variable type can not be resolved because the \"${variableType}\" operation has not been included in this compiler's CompilationEnvironment.`,\n            status: 'error',\n        };\n    }\n    if (typeof matchingOperations === 'function') {\n        const operation = matchingOperations;\n        return operation(identifier, data, configuration);\n    }\n    if (operationId === undefined) {\n        return {\n            error: `This \"${variableId}\" variable could not be resolved because this compiler's \"${variableType}\" operations require an operation identifier, e.g. '${variableId}.${operationExample}'.`,\n            status: 'error',\n        };\n    }\n    const operation = matchingOperations[operationId];\n    if (operation === undefined) {\n        return {\n            error: `The identifier \"${identifier}\" could not be resolved because the \"${variableId}.${operationId}\" operation is not available to this compiler.`,\n            status: 'error',\n        };\n    }\n    return operation(identifier, data, configuration);\n};\n/**\n * If the identifier can be successfully resolved as a variable, the result is\n * returned as a Uint8Array. If the identifier references a known variable, but\n * an error occurs in resolving it, the error is returned as a string.\n * Otherwise, the identifier is not recognized as a variable, and this method\n * simply returns `false`.\n *\n * @param identifier - The full identifier used to describe this operation, e.g.\n * `owner.signature.all_outputs`.\n * @param data - The {@link CompilationData} provided to the compiler\n * @param configuration - The {@link CompilerConfiguration} provided to\n * the compiler\n */\nconst resolveVariableIdentifier = ({ data, configuration, identifier, }) => {\n    const [variableId, operationId] = identifier.split('.');\n    switch (variableId) {\n        case BuiltInVariables.currentBlockHeight:\n            return attemptCompilerOperation({\n                configuration,\n                data,\n                identifier,\n                matchingOperations: configuration.operations?.currentBlockHeight,\n                operationId,\n                variableId,\n                variableType: 'currentBlockHeight',\n            });\n        case BuiltInVariables.currentBlockTime:\n            return attemptCompilerOperation({\n                configuration,\n                data,\n                identifier,\n                matchingOperations: configuration.operations?.currentBlockTime,\n                operationId,\n                variableId,\n                variableType: 'currentBlockTime',\n            });\n        case BuiltInVariables.signingSerialization:\n            return attemptCompilerOperation({\n                configuration,\n                data,\n                identifier,\n                matchingOperations: configuration.operations?.signingSerialization,\n                operationExample: 'version',\n                operationId,\n                variableId,\n                variableType: 'signingSerialization',\n            });\n        default: {\n            const expectedVariable = configuration.variables?.[variableId];\n            if (expectedVariable === undefined) {\n                return { status: 'skip' };\n            }\n            return attemptCompilerOperation({\n                configuration,\n                data,\n                identifier,\n                operationId,\n                variableId,\n                ...{\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    AddressData: {\n                        matchingOperations: configuration.operations?.addressData,\n                        variableType: 'addressData',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    HdKey: {\n                        matchingOperations: configuration.operations?.hdKey,\n                        operationExample: 'public_key',\n                        variableType: 'hdKey',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    Key: {\n                        matchingOperations: configuration.operations?.key,\n                        operationExample: 'public_key',\n                        variableType: 'key',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    WalletData: {\n                        matchingOperations: configuration.operations?.walletData,\n                        variableType: 'walletData',\n                    },\n                }[expectedVariable.type],\n            });\n        }\n    }\n};\n/**\n * A text-formatting method to pretty-print the list of expected inputs\n * (`Encountered unexpected input while parsing script. Expected ...`). If\n * present, the `EOF` expectation is always moved to the end of the list.\n * @param expectedArray - the alphabetized list of expected inputs produced by\n * `parseScript`\n */\nconst describeExpectedInput = (expectedArray) => {\n    /**\n     * The constant used by the parser to denote the end of the input\n     */\n    const EOF = 'EOF';\n    const newArray = expectedArray.filter((value) => value !== EOF);\n    // eslint-disable-next-line functional/no-conditional-statement\n    if (newArray.length !== expectedArray.length) {\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n        newArray.push('the end of the script');\n    }\n    const withoutLastElement = newArray.slice(0, newArray.length - 1);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const lastElement = newArray[newArray.length - 1];\n    const arrayRequiresCommas = 3;\n    const arrayRequiresOr = 2;\n    return `Encountered unexpected input while parsing script. Expected ${newArray.length >= arrayRequiresCommas\n        ? withoutLastElement.join(', ').concat(`, or ${lastElement}`)\n        : newArray.length === arrayRequiresOr\n            ? newArray.join(' or ')\n            : lastElement}.`;\n};\nconst createEmptyRange = () => ({\n    endColumn: 0,\n    endLineNumber: 0,\n    startColumn: 0,\n    startLineNumber: 0,\n});\n/**\n * This method is generally for internal use. The {@link compileScript} method\n * is the recommended API for direct compilation.\n */\nconst compileScriptRaw = ({ data, configuration, scriptId, }) => {\n    const script = configuration.scripts[scriptId];\n    if (script === undefined) {\n        return {\n            errorType: 'parse',\n            errors: [\n                {\n                    error: `No script with an ID of \"${scriptId}\" was provided in the compiler configuration.`,\n                    range: createEmptyRange(),\n                },\n            ],\n            success: false,\n        };\n    }\n    if (configuration.sourceScriptIds?.includes(scriptId) === true) {\n        return {\n            errorType: 'parse',\n            errors: [\n                {\n                    error: `A circular dependency was encountered: script \"${scriptId}\" relies on itself to be generated. (Source scripts: ${configuration.sourceScriptIds.join(' → ')})`,\n                    range: createEmptyRange(),\n                },\n            ],\n            success: false,\n        };\n    }\n    const sourceScriptIds = configuration.sourceScriptIds === undefined\n        ? [scriptId]\n        : [...configuration.sourceScriptIds, scriptId];\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return compileScriptContents({\n        configuration: { ...configuration, sourceScriptIds },\n        data,\n        script,\n    });\n};\n/**\n * Compile an internal script identifier.\n *\n * @remarks\n * If the identifier can be successfully resolved as a script, the script is\n * compiled and returned as a {@link CompilationResultSuccess}. If an error\n * occurs in compiling it, the error is returned as a string.\n *\n * Otherwise, the identifier is not recognized as a script, and this method\n * simply returns `false`.\n */\nconst resolveScriptIdentifier = ({ data, configuration, identifier, }) => {\n    if (configuration.scripts[identifier] === undefined) {\n        return false;\n    }\n    const result = compileScriptRaw({\n        configuration,\n        data,\n        scriptId: identifier,\n    });\n    if (result.success) {\n        return result;\n    }\n    return `Compilation error in resolved script \"${identifier}\": ${(0,_language_utils_js__WEBPACK_IMPORTED_MODULE_5__.stringifyErrors)(result.errors)}`;\n};\n/**\n * Return an {@link IdentifierResolutionFunction} for use in\n * {@link resolveScriptSegment}.\n *\n * @param scriptId - the `id` of the script for which the resulting\n * `IdentifierResolutionFunction` will be used.\n */\nconst createIdentifierResolver = ({ data, configuration, }) => \n// eslint-disable-next-line complexity\n(identifier) => {\n    const opcodeResult = configuration.opcodes?.[identifier];\n    if (opcodeResult !== undefined) {\n        return {\n            bytecode: opcodeResult,\n            status: true,\n            type: _language_types_js__WEBPACK_IMPORTED_MODULE_0__.IdentifierResolutionType.opcode,\n        };\n    }\n    const variableResult = resolveVariableIdentifier({\n        configuration,\n        data,\n        identifier,\n    });\n    if (variableResult.status !== 'skip') {\n        return variableResult.status === 'error'\n            ? {\n                ...('debug' in variableResult\n                    ? { debug: variableResult.debug }\n                    : {}),\n                error: variableResult.error,\n                ...(configuration.entityOwnership === undefined\n                    ? {}\n                    : {\n                        entityOwnership: \n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        configuration.entityOwnership[identifier.split('.')[0]],\n                    }),\n                recoverable: 'recoverable' in variableResult,\n                status: false,\n                type: _language_types_js__WEBPACK_IMPORTED_MODULE_0__.IdentifierResolutionErrorType.variable,\n            }\n            : {\n                ...('debug' in variableResult\n                    ? { debug: variableResult.debug }\n                    : {}),\n                bytecode: variableResult.bytecode,\n                ...('signature' in variableResult\n                    ? {\n                        signature: variableResult.signature,\n                    }\n                    : {}),\n                status: true,\n                type: _language_types_js__WEBPACK_IMPORTED_MODULE_0__.IdentifierResolutionType.variable,\n            };\n    }\n    const scriptResult = resolveScriptIdentifier({\n        configuration,\n        data,\n        identifier,\n    });\n    if (scriptResult !== false) {\n        return typeof scriptResult === 'string'\n            ? {\n                error: scriptResult,\n                scriptId: identifier,\n                status: false,\n                type: _language_types_js__WEBPACK_IMPORTED_MODULE_0__.IdentifierResolutionErrorType.script,\n            }\n            : {\n                bytecode: scriptResult.bytecode,\n                source: scriptResult.resolve,\n                status: true,\n                type: _language_types_js__WEBPACK_IMPORTED_MODULE_0__.IdentifierResolutionType.script,\n            };\n    }\n    return {\n        error: `Unknown identifier \"${identifier}\".`,\n        status: false,\n        type: _language_types_js__WEBPACK_IMPORTED_MODULE_0__.IdentifierResolutionErrorType.unknown,\n    };\n};\n/**\n * This method is generally for internal use. The {@link compileScript} method\n * is the recommended API for direct compilation.\n */\nconst compileScriptContents = ({ data, configuration, script, }) => {\n    const parseResult = (0,_parse_js__WEBPACK_IMPORTED_MODULE_6__.parseScript)(script);\n    if (!parseResult.status) {\n        return {\n            errorType: 'parse',\n            errors: [\n                {\n                    error: describeExpectedInput(parseResult.expected),\n                    range: {\n                        endColumn: parseResult.index.column,\n                        endLineNumber: parseResult.index.line,\n                        startColumn: parseResult.index.column,\n                        startLineNumber: parseResult.index.line,\n                    },\n                },\n            ],\n            success: false,\n        };\n    }\n    const resolver = createIdentifierResolver({ configuration, data });\n    const resolvedScript = resolveScriptSegment(parseResult.value, resolver);\n    const resolutionErrors = (0,_language_utils_js__WEBPACK_IMPORTED_MODULE_5__.getResolutionErrors)(resolvedScript);\n    if (resolutionErrors.length !== 0) {\n        return {\n            errorType: 'resolve',\n            errors: resolutionErrors,\n            parse: parseResult.value,\n            resolve: resolvedScript,\n            success: false,\n        };\n    }\n    const reduction = (0,_reduce_js__WEBPACK_IMPORTED_MODULE_7__.reduceScript)(resolvedScript, configuration.vm, configuration.createAuthenticationProgram);\n    return {\n        ...(reduction.errors === undefined\n            ? { bytecode: reduction.bytecode, success: true }\n            : { errorType: 'reduce', errors: reduction.errors, success: false }),\n        parse: parseResult.value,\n        reduce: reduction,\n        resolve: resolvedScript,\n    };\n};\n//# sourceMappingURL=resolve.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/language/resolve.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/message/read-components.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/message/read-components.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"readBytes\": () => (/* binding */ readBytes),\n/* harmony export */   \"readCompactSizePrefixedBin\": () => (/* binding */ readCompactSizePrefixedBin),\n/* harmony export */   \"readRemainingBytes\": () => (/* binding */ readRemainingBytes),\n/* harmony export */   \"readUint32LE\": () => (/* binding */ readUint32LE),\n/* harmony export */   \"readUint64LE\": () => (/* binding */ readUint64LE)\n/* harmony export */ });\n/* unused harmony exports ReadBytesError, ReadUint32LEError, ReadUint64LEError, CompactSizePrefixedBinError */\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/error.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/number.js\");\n\nvar ReadBytesError;\n(function (ReadBytesError) {\n    ReadBytesError[\"insufficientLength\"] = \"Error reading bytes: insufficient length.\";\n})(ReadBytesError || (ReadBytesError = {}));\n/**\n * Returns a function that reads the requested number of bytes from a\n * {@link ReadPosition}, returning either an error message (as a string) or an\n * object containing the `Uint8Array` and the next {@link ReadPosition}.\n *\n * @param length - the number of bytes to read\n */\nconst readBytes = (length) => (\n/**\n * the {@link ReadPosition} at which to start reading the bytes.\n */\nposition) => {\n    const nextPosition = {\n        bin: position.bin,\n        index: position.index + length,\n    };\n    const result = position.bin.slice(position.index, nextPosition.index);\n    if (result.length !== length) {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.formatError)(ReadBytesError.insufficientLength, `Provided length: ${result.length}`);\n    }\n    return { position: nextPosition, result };\n};\nvar ReadUint32LEError;\n(function (ReadUint32LEError) {\n    ReadUint32LEError[\"insufficientBytes\"] = \"Error reading Uint32LE: requires 4 bytes.\";\n})(ReadUint32LEError || (ReadUint32LEError = {}));\n/**\n * Read a 4-byte, Uint32LE from the provided {@link ReadPosition},\n * returning either an error message (as a string) or an object containing the\n * number and the next {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading\n */\nconst readUint32LE = (position) => {\n    const nextPosition = {\n        bin: position.bin,\n        index: position.index + 4 /* ReadConstants.bytesPerUint32 */,\n    };\n    const uint32LEBin = position.bin.subarray(position.index, nextPosition.index);\n    if (uint32LEBin.length !== 4 /* ReadConstants.bytesPerUint32 */) {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.formatError)(ReadUint32LEError.insufficientBytes, `Provided length: ${uint32LEBin.length}`);\n    }\n    const result = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.binToNumberUint32LE)(uint32LEBin);\n    return { position: nextPosition, result };\n};\nvar ReadUint64LEError;\n(function (ReadUint64LEError) {\n    ReadUint64LEError[\"insufficientBytes\"] = \"Error reading Uint64LE: requires 8 bytes.\";\n})(ReadUint64LEError || (ReadUint64LEError = {}));\n/**\n * Read {@link Output.valueSatoshis} from the provided {@link ReadPosition},\n * returning either an error message (as a string) or an object containing the\n * {@link Output.valueSatoshis} and the next {@link ReadPosition}.\n * @param position - the {@link ReadPosition} at which to start reading\n * {@link Output.valueSatoshis}\n */\nconst readUint64LE = (position) => {\n    const nextPosition = {\n        bin: position.bin,\n        index: position.index + 8 /* ReadConstants.bytesPerUint64 */,\n    };\n    const uint64LEBin = position.bin.subarray(position.index, nextPosition.index);\n    if (uint64LEBin.length !== 8 /* ReadConstants.bytesPerUint64 */) {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.formatError)(ReadUint64LEError.insufficientBytes, `Provided length: ${uint64LEBin.length}`);\n    }\n    const result = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.binToBigIntUint64LE)(uint64LEBin);\n    return { position: nextPosition, result };\n};\nvar CompactSizePrefixedBinError;\n(function (CompactSizePrefixedBinError) {\n    CompactSizePrefixedBinError[\"invalidCompactSize\"] = \"Error reading CompactSize-prefixed bin: invalid CompactSize.\";\n    CompactSizePrefixedBinError[\"insufficientBytes\"] = \"Error reading CompactSize-prefixed bin: insufficient bytes.\";\n})(CompactSizePrefixedBinError || (CompactSizePrefixedBinError = {}));\n/**\n * Read a bin (`Uint8Array`) that is prefixed by a minimally-encoded\n * `CompactSize` starting at the provided {@link ReadPosition}, returning either\n * an error message (as a string) or an object containing the `Uint8Array` and\n * the next {@link ReadPosition}. (In the transaction format,\n * `CompactSize`-prefixes are used to indicate the length of unlocking bytecode,\n * locking bytecode, and non-fungible token commitments.)\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * `CompactSize`-prefixed bin (`Uint8Array`)\n */\nconst readCompactSizePrefixedBin = (position) => {\n    const read = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.readCompactSizeMinimal)(position);\n    if (typeof read === 'string') {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.formatError)(CompactSizePrefixedBinError.invalidCompactSize, read);\n    }\n    const { result, position: p2 } = read;\n    const length = Number(result);\n    const nextPosition = { bin: position.bin, index: p2.index + length };\n    const contents = position.bin.slice(p2.index, nextPosition.index);\n    if (contents.length !== length) {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.formatError)(CompactSizePrefixedBinError.insufficientBytes, `Required bytes: ${length}, remaining bytes: ${contents.length}`);\n    }\n    return { position: nextPosition, result: contents };\n};\n/**\n * Read the remaining bytes from the provided {@link ReadPosition}, returning\n * an object containing the `Uint8Array` and the next {@link ReadPosition}\n * (with `index === bin.length`).\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * remaining bytes\n */\nconst readRemainingBytes = (position) => {\n    const nextPosition = {\n        bin: position.bin,\n        index: position.bin.length,\n    };\n    const result = position.bin.subarray(position.index, nextPosition.index);\n    return { position: nextPosition, result };\n};\n//# sourceMappingURL=read-components.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/message/read-components.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/message/transaction-encoding.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/message/transaction-encoding.js ***!
  \*************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cloneTransactionCommon\": () => (/* binding */ cloneTransactionCommon),\n/* harmony export */   \"cloneTransactionOutputsCommon\": () => (/* binding */ cloneTransactionOutputsCommon),\n/* harmony export */   \"decodeTransaction\": () => (/* binding */ decodeTransaction),\n/* harmony export */   \"encodeTokenPrefix\": () => (/* binding */ encodeTokenPrefix),\n/* harmony export */   \"encodeTransaction\": () => (/* binding */ encodeTransaction),\n/* harmony export */   \"encodeTransactionBCH\": () => (/* binding */ encodeTransactionBCH),\n/* harmony export */   \"encodeTransactionInputSequenceNumbersForSigning\": () => (/* binding */ encodeTransactionInputSequenceNumbersForSigning),\n/* harmony export */   \"encodeTransactionOutpoints\": () => (/* binding */ encodeTransactionOutpoints),\n/* harmony export */   \"encodeTransactionOutput\": () => (/* binding */ encodeTransactionOutput),\n/* harmony export */   \"encodeTransactionOutputsForSigning\": () => (/* binding */ encodeTransactionOutputsForSigning)\n/* harmony export */ });\n/* unused harmony exports encodeTransactionInput, TransactionDecodingError, readTransactionInput, encodeTransactionInputs, readTransactionInputs, nftCapabilityNumberToLabel, nftCapabilityLabelToNumber, CashTokenDecodingError, readTokenAmount, readTokenPrefix, readLockingBytecodeWithPrefix, readTransactionOutput, readTransactionOutputs, encodeTransactionOutputs, readTransactionCommon, readTransaction, readTransactionOutputNonTokenAware, readTransactionOutputsNonTokenAware, readTransactionNonTokenAware, decodeTransactionCommon, decodeTransactionBCH, decodeTransactionUnsafeCommon, decodeTransactionUnsafeBCH, decodeTransactionUnsafe, encodeTransactionCommon, cloneTransactionInputsCommon, hashTransactionP2pOrder, hashTransactionUiOrder, hashTransaction */\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/combinations.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/number.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/read.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/error.js\");\n/* harmony import */ var _read_components_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./read-components.js */ \"../../node_modules/@bitauth/libauth/build/lib/message/read-components.js\");\n/* harmony import */ var _transaction_types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./transaction-types.js */ \"../../node_modules/@bitauth/libauth/build/lib/message/transaction-types.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_6__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_7__]);\n([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_6__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_7__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n/**\n * Encode a single input for inclusion in an encoded transaction.\n *\n * @param input - the input to encode\n */\nconst encodeTransactionInput = (input) => (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([\n    input.outpointTransactionHash.slice().reverse(),\n    (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.numberToBinUint32LE)(input.outpointIndex),\n    (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToCompactSize)(BigInt(input.unlockingBytecode.length)),\n    input.unlockingBytecode,\n    (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.numberToBinUint32LE)(input.sequenceNumber),\n]);\nvar TransactionDecodingError;\n(function (TransactionDecodingError) {\n    TransactionDecodingError[\"transaction\"] = \"Error reading transaction.\";\n    TransactionDecodingError[\"endsWithUnexpectedBytes\"] = \"Error decoding transaction: the provided input includes unexpected bytes after the encoded transaction.\";\n    TransactionDecodingError[\"input\"] = \"Error reading transaction input.\";\n    TransactionDecodingError[\"inputs\"] = \"Error reading transaction inputs.\";\n    TransactionDecodingError[\"output\"] = \"Error reading transaction output.\";\n    TransactionDecodingError[\"outputs\"] = \"Error reading transaction outputs.\";\n    TransactionDecodingError[\"lockingBytecodeLength\"] = \"Error reading locking bytecode length.\";\n})(TransactionDecodingError || (TransactionDecodingError = {}));\n/**\n * Read a transaction {@link Input} from the provided {@link ReadPosition},\n * returning either an error message (as a string) or an object containing the\n * {@link Input} and the next {@link ReadPosition}.\n * @param position - the {@link ReadPosition} at which to start reading the\n * transaction output\n */\nconst readTransactionInput = (position) => {\n    const inputRead = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_2__.readMultiple)(position, [\n        (0,_read_components_js__WEBPACK_IMPORTED_MODULE_3__.readBytes)(32 /* TransactionConstants.outpointTransactionHashLength */),\n        _read_components_js__WEBPACK_IMPORTED_MODULE_3__.readUint32LE,\n        _read_components_js__WEBPACK_IMPORTED_MODULE_3__.readCompactSizePrefixedBin,\n        _read_components_js__WEBPACK_IMPORTED_MODULE_3__.readUint32LE,\n    ]);\n    if (typeof inputRead === 'string') {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(TransactionDecodingError.input, inputRead);\n    }\n    const { position: nextPosition, result: [outpointTransactionHash, outpointIndex, unlockingBytecode, sequenceNumber,], } = inputRead;\n    return {\n        position: nextPosition,\n        result: {\n            outpointIndex,\n            outpointTransactionHash: outpointTransactionHash.reverse(),\n            sequenceNumber,\n            unlockingBytecode,\n        },\n    };\n};\n/**\n * Encode a set of {@link Input}s for inclusion in an encoded transaction\n * including the prefixed number of inputs.\n *\n * Format: [CompactSize: input count] [encoded inputs]\n *\n * @param inputs - the set of inputs to encode\n */\nconst encodeTransactionInputs = (inputs) => (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([\n    (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToCompactSize)(BigInt(inputs.length)),\n    ...inputs.map(encodeTransactionInput),\n]);\n/**\n * Read a set of transaction {@link Input}s beginning at {@link ReadPosition}.\n * A CompactSize will be read to determine the number of inputs, and that\n * number of transaction inputs will be read and returned. Returns either an\n * error message (as a string) or an object containing the array of inputs and\n * the next {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * transaction inputs\n */\nconst readTransactionInputs = (position) => {\n    const inputsRead = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_2__.readItemCount)(position, readTransactionInput);\n    if (typeof inputsRead === 'string') {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(TransactionDecodingError.inputs, inputsRead);\n    }\n    return inputsRead;\n};\nconst maximumTokenAmount = 9223372036854775807n;\nconst nftCapabilityNumberToLabel = [\n    _transaction_types_js__WEBPACK_IMPORTED_MODULE_5__.NonFungibleTokenCapability.none,\n    _transaction_types_js__WEBPACK_IMPORTED_MODULE_5__.NonFungibleTokenCapability.mutable,\n    _transaction_types_js__WEBPACK_IMPORTED_MODULE_5__.NonFungibleTokenCapability.minting,\n];\nconst nftCapabilityLabelToNumber = {\n    [_transaction_types_js__WEBPACK_IMPORTED_MODULE_5__.NonFungibleTokenCapability.none]: 0,\n    [_transaction_types_js__WEBPACK_IMPORTED_MODULE_5__.NonFungibleTokenCapability.mutable]: 1,\n    [_transaction_types_js__WEBPACK_IMPORTED_MODULE_5__.NonFungibleTokenCapability.minting]: 2,\n};\nvar CashTokenDecodingError;\n(function (CashTokenDecodingError) {\n    CashTokenDecodingError[\"invalidPrefix\"] = \"Error reading token prefix.\";\n    CashTokenDecodingError[\"insufficientLength\"] = \"Invalid token prefix: insufficient length.\";\n    CashTokenDecodingError[\"reservedBit\"] = \"Invalid token prefix: reserved bit is set.\";\n    CashTokenDecodingError[\"invalidCapability\"] = \"Invalid token prefix: capability must be none (0), mutable (1), or minting (2).\";\n    CashTokenDecodingError[\"commitmentWithoutNft\"] = \"Invalid token prefix: commitment requires an NFT.\";\n    CashTokenDecodingError[\"capabilityWithoutNft\"] = \"Invalid token prefix: capability requires an NFT.\";\n    CashTokenDecodingError[\"commitmentLengthZero\"] = \"Invalid token prefix: if encoded, commitment length must be greater than 0.\";\n    CashTokenDecodingError[\"invalidCommitment\"] = \"Invalid token prefix: invalid non-fungible token commitment.\";\n    CashTokenDecodingError[\"invalidAmountEncoding\"] = \"Invalid token prefix: invalid fungible token amount encoding.\";\n    CashTokenDecodingError[\"zeroAmount\"] = \"Invalid token prefix: if encoded, fungible token amount must be greater than 0.\";\n    CashTokenDecodingError[\"excessiveAmount\"] = \"Invalid token prefix: exceeds maximum fungible token amount of 9223372036854775807.\";\n    CashTokenDecodingError[\"noTokens\"] = \"Invalid token prefix: must encode at least one token.\";\n})(CashTokenDecodingError || (CashTokenDecodingError = {}));\n/**\n * Read a token amount from the provided {@link ReadPosition}, returning either\n * an error message (as a string) or an object containing the value and the next\n * {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * token amount.\n */\nconst readTokenAmount = (position) => {\n    const amountRead = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.readCompactSizeMinimal)(position);\n    if (typeof amountRead === 'string') {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(CashTokenDecodingError.invalidAmountEncoding, amountRead);\n    }\n    if (amountRead.result > maximumTokenAmount) {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(CashTokenDecodingError.excessiveAmount, `Encoded amount: ${amountRead.result}`);\n    }\n    if (amountRead.result === 0n) {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(CashTokenDecodingError.zeroAmount);\n    }\n    return amountRead;\n};\n/**\n * Attempt to read a transaction {@link Output}'s token prefix from the provided\n * {@link ReadPosition}, returning either an error message (as a string) or an\n * object containing the (optional) token information and the\n * next {@link ReadPosition}.\n *\n * Rather than using this function directly, most applications\n * should use {@link readLockingBytecodeWithPrefix}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * token prefix\n */\n// eslint-disable-next-line complexity\nconst readTokenPrefix = (position) => {\n    const { bin, index } = position;\n    if (bin[index] !== 239 /* CashTokens.PREFIX_TOKEN */) {\n        return { position, result: {} };\n    }\n    if (bin.length < index + 34 /* CashTokens.minimumPrefixLength */) {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(CashTokenDecodingError.insufficientLength, `The minimum possible length is ${34 /* CashTokens.minimumPrefixLength */}. Missing bytes: ${34 /* CashTokens.minimumPrefixLength */ - (bin.length - index)}`);\n    }\n    const category = bin\n        .slice(index + 1, index + 33 /* CashTokens.tokenBitfieldIndex */)\n        .reverse();\n    const tokenBitfield = bin[index + 33 /* CashTokens.tokenBitfieldIndex */]; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n    /* eslint-disable no-bitwise */\n    const prefixStructure = tokenBitfield & 240 /* CashTokens.tokenFormatMask */;\n    if ((prefixStructure & 128 /* CashTokens.RESERVED_BIT */) !== 0) {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(CashTokenDecodingError.reservedBit, `Bitfield: 0b${tokenBitfield.toString(2 /* CashTokens.useBinaryOutput */)}`);\n    }\n    const nftCapabilityInt = tokenBitfield & 15 /* CashTokens.nftCapabilityMask */;\n    if (nftCapabilityInt > 2 /* CashTokens.maximumCapability */) {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(CashTokenDecodingError.invalidCapability, `Capability value: ${nftCapabilityInt}`);\n    }\n    const capability = nftCapabilityNumberToLabel[nftCapabilityInt]; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n    const hasNft = (prefixStructure & 32 /* CashTokens.HAS_NFT */) !== 0;\n    const hasCommitmentLength = (prefixStructure & 64 /* CashTokens.HAS_COMMITMENT_LENGTH */) !== 0;\n    if (hasCommitmentLength && !hasNft) {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(CashTokenDecodingError.commitmentWithoutNft, `Bitfield: 0b${tokenBitfield.toString(2 /* CashTokens.useBinaryOutput */)}`);\n    }\n    const hasAmount = (prefixStructure & 16 /* CashTokens.HAS_AMOUNT */) !== 0;\n    /* eslint-enable no-bitwise */\n    const nextPosition = {\n        bin,\n        index: index + 33 /* CashTokens.tokenBitfieldIndex */ + 1,\n    };\n    if (hasNft) {\n        const commitmentRead = hasCommitmentLength\n            ? (0,_read_components_js__WEBPACK_IMPORTED_MODULE_3__.readCompactSizePrefixedBin)(nextPosition)\n            : { position: nextPosition, result: Uint8Array.of() };\n        if (typeof commitmentRead === 'string') {\n            return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(CashTokenDecodingError.invalidCommitment, commitmentRead);\n        }\n        if (hasCommitmentLength && commitmentRead.result.length === 0) {\n            return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(CashTokenDecodingError.commitmentLengthZero);\n        }\n        const amountRead = hasAmount\n            ? readTokenAmount(commitmentRead.position)\n            : { position: commitmentRead.position, result: 0n };\n        if (typeof amountRead === 'string') {\n            return amountRead;\n        }\n        return {\n            position: amountRead.position,\n            result: {\n                token: {\n                    amount: amountRead.result,\n                    category,\n                    nft: { capability, commitment: commitmentRead.result },\n                },\n            },\n        };\n    }\n    if (capability !== _transaction_types_js__WEBPACK_IMPORTED_MODULE_5__.NonFungibleTokenCapability.none) {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(CashTokenDecodingError.capabilityWithoutNft, `Bitfield: 0b${tokenBitfield.toString(2 /* CashTokens.useBinaryOutput */)}`);\n    }\n    if (!hasAmount) {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(CashTokenDecodingError.noTokens, `Bitfield: 0b${tokenBitfield.toString(2 /* CashTokens.useBinaryOutput */)}`);\n    }\n    const amountRead = readTokenAmount(nextPosition);\n    if (typeof amountRead === 'string') {\n        return amountRead;\n    }\n    return {\n        position: amountRead.position,\n        result: { token: { amount: amountRead.result, category } },\n    };\n};\n/**\n * Read the locking bytecode and token prefix (if present) of a transaction\n * {@link Output}, beginning at the `CompactSize` indicating the\n * combined length.\n * @param position - the {@link ReadPosition} at which to start reading the\n * optional token prefix and locking bytecode\n */\nconst readLockingBytecodeWithPrefix = (position) => {\n    const bytecodeRead = (0,_read_components_js__WEBPACK_IMPORTED_MODULE_3__.readCompactSizePrefixedBin)(position);\n    if (typeof bytecodeRead === 'string') {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(TransactionDecodingError.lockingBytecodeLength, bytecodeRead);\n    }\n    const { result: contents, position: nextPosition } = bytecodeRead;\n    const contentsRead = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_2__.readMultiple)({ bin: contents, index: 0 }, [\n        readTokenPrefix,\n        _read_components_js__WEBPACK_IMPORTED_MODULE_3__.readRemainingBytes,\n    ]);\n    if (typeof contentsRead === 'string') {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(CashTokenDecodingError.invalidPrefix, contentsRead);\n    }\n    const { result: [{ token }, lockingBytecode], } = contentsRead;\n    return {\n        position: nextPosition,\n        result: { lockingBytecode, ...(token === undefined ? {} : { token }) },\n    };\n};\n/**\n * Read a transaction {@link Output} from the provided {@link ReadPosition},\n * returning either an error message (as a string) or an object containing the\n * {@link Output} and the next {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * transaction output\n */\nconst readTransactionOutput = (position) => {\n    const outputRead = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_2__.readMultiple)(position, [\n        _read_components_js__WEBPACK_IMPORTED_MODULE_3__.readUint64LE,\n        readLockingBytecodeWithPrefix,\n    ]);\n    if (typeof outputRead === 'string') {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(TransactionDecodingError.output, outputRead);\n    }\n    const { position: nextPosition, result: [valueSatoshis, { lockingBytecode, token }], } = outputRead;\n    return {\n        position: nextPosition,\n        result: {\n            lockingBytecode,\n            ...(token === undefined ? {} : { token }),\n            valueSatoshis,\n        },\n    };\n};\n/**\n * Given {@link Output.token} data, encode a token prefix.\n *\n * This function does not fail, but returns an empty Uint8Array if the token\n * data does not encode any tokens (even if `token.category` is set).\n *\n * @param token - the token data to encode\n */\n// eslint-disable-next-line complexity\nconst encodeTokenPrefix = (token) => {\n    if (token === undefined || (token.nft === undefined && token.amount < 1n)) {\n        return Uint8Array.of();\n    }\n    const hasNft = token.nft === undefined ? 0 : 32 /* CashTokens.HAS_NFT */;\n    const capabilityInt = token.nft === undefined\n        ? 0\n        : nftCapabilityLabelToNumber[token.nft.capability];\n    const hasCommitmentLength = token.nft !== undefined && token.nft.commitment.length > 0\n        ? 64 /* CashTokens.HAS_COMMITMENT_LENGTH */\n        : 0;\n    const hasAmount = token.amount > 0n ? 16 /* CashTokens.HAS_AMOUNT */ : 0;\n    const tokenBitfield = \n    // eslint-disable-next-line no-bitwise\n    hasNft | hasCommitmentLength | hasAmount | capabilityInt;\n    return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([\n        Uint8Array.of(239 /* CashTokens.PREFIX_TOKEN */),\n        token.category.slice().reverse(),\n        Uint8Array.of(tokenBitfield),\n        ...(hasCommitmentLength === 0\n            ? []\n            : [\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToCompactSize)(BigInt(token.nft.commitment.length)),\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                token.nft.commitment,\n            ]),\n        ...(hasAmount === 0 ? [] : [(0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToCompactSize)(token.amount)]),\n    ]);\n};\n/**\n * Encode a single {@link Output} for inclusion in an encoded transaction.\n *\n * @param output - the output to encode\n */\nconst encodeTransactionOutput = (output) => {\n    const lockingBytecodeField = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([\n        encodeTokenPrefix(output.token),\n        output.lockingBytecode,\n    ]);\n    return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([\n        (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.valueSatoshisToBin)(output.valueSatoshis),\n        (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToCompactSize)(BigInt(lockingBytecodeField.length)),\n        lockingBytecodeField,\n    ]);\n};\n/**\n * Read a set of transaction {@link Output}s beginning at {@link ReadPosition}.\n * A CompactSize will be read to determine the number of outputs, and that\n * number of transaction outputs will be read and returned. Returns either an\n * error message (as a string) or an object containing the array of outputs and\n * the next {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * transaction outputs\n */\nconst readTransactionOutputs = (position) => {\n    const outputsRead = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_2__.readItemCount)(position, readTransactionOutput);\n    if (typeof outputsRead === 'string') {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(TransactionDecodingError.outputs, outputsRead);\n    }\n    return outputsRead;\n};\n/**\n * Encode a set of {@link Output}s for inclusion in an encoded transaction\n * including the prefixed number of outputs. Note, this encoding differs from\n * {@link encodeTransactionOutputsForSigning} (used for signing serializations).\n *\n * Format: [CompactSize: output count] [encoded outputs]\n *\n * @param outputs - the set of outputs to encode\n */\nconst encodeTransactionOutputs = (outputs) => (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([\n    (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToCompactSize)(BigInt(outputs.length)),\n    ...outputs.map(encodeTransactionOutput),\n]);\n/**\n * Read a version 1 or 2 transaction beginning at {@link ReadPosition},\n * returning either an error message (as a string) or an object containing the\n * {@link Transaction} and the next {@link ReadPosition}. Rather than using this\n * function directly, most applications should\n * use {@link decodeTransactionCommon}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * {@link TransactionCommon}\n */\nconst readTransactionCommon = (position) => {\n    const transactionRead = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_2__.readMultiple)(position, [\n        _read_components_js__WEBPACK_IMPORTED_MODULE_3__.readUint32LE,\n        readTransactionInputs,\n        readTransactionOutputs,\n        _read_components_js__WEBPACK_IMPORTED_MODULE_3__.readUint32LE,\n    ]);\n    if (typeof transactionRead === 'string') {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(TransactionDecodingError.transaction, transactionRead);\n    }\n    const { position: nextPosition, result: [version, inputs, outputs, locktime], } = transactionRead;\n    return {\n        position: nextPosition,\n        result: { inputs, locktime, outputs, version },\n    };\n};\nconst readTransaction = readTransactionCommon;\nconst readTransactionOutputNonTokenAware = (pos) => {\n    const outputRead = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_2__.readMultiple)(pos, [\n        _read_components_js__WEBPACK_IMPORTED_MODULE_3__.readUint64LE,\n        _read_components_js__WEBPACK_IMPORTED_MODULE_3__.readCompactSizePrefixedBin,\n    ]);\n    if (typeof outputRead === 'string') {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(TransactionDecodingError.output, outputRead);\n    }\n    const { position: nextPosition, result: [valueSatoshis, lockingBytecode], } = outputRead;\n    return {\n        position: nextPosition,\n        result: { lockingBytecode, valueSatoshis },\n    };\n};\nconst readTransactionOutputsNonTokenAware = (pos) => {\n    const outputsRead = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_2__.readItemCount)(pos, readTransactionOutputNonTokenAware);\n    if (typeof outputsRead === 'string') {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(TransactionDecodingError.outputs, outputsRead);\n    }\n    return outputsRead;\n};\n/**\n * Read a version 1 or 2 transaction beginning at a {@link ReadPosition} as if\n * CHIP-2022-02-CashTokens were not deployed, returning either an error message\n * (as a string) or an object containing the {@link Transaction} and the next\n * {@link ReadPosition}.\n *\n * This function emulates legacy transaction parsing to test behavior prior to\n * deployment of CHIP-2022-02-CashTokens; most applications should instead\n * use {@link readTransactionCommon}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * {@link TransactionCommon}\n */\nconst readTransactionNonTokenAware = (position) => {\n    const transactionRead = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_2__.readMultiple)(position, [\n        _read_components_js__WEBPACK_IMPORTED_MODULE_3__.readUint32LE,\n        readTransactionInputs,\n        readTransactionOutputsNonTokenAware,\n        _read_components_js__WEBPACK_IMPORTED_MODULE_3__.readUint32LE,\n    ]);\n    if (typeof transactionRead === 'string') {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(TransactionDecodingError.transaction, transactionRead);\n    }\n    const { position: nextPosition, result: [version, inputs, outputs, locktime], } = transactionRead;\n    return {\n        position: nextPosition,\n        result: { inputs, locktime, outputs, version },\n    };\n};\n/**\n * Decode a {@link TransactionCommon} according to the version 1/2 P2P network\n * transaction format.\n *\n * This function verifies that the provided `bin` contains only one transaction\n * and no additional data. To read a transaction from a specific location within\n * a `Uint8Array`, use {@link readTransactionCommon}.\n *\n * @param bin - the encoded transaction to decode\n */\nconst decodeTransactionCommon = (bin) => {\n    const transactionRead = readTransactionCommon({ bin, index: 0 });\n    if (typeof transactionRead === 'string') {\n        return transactionRead;\n    }\n    if (transactionRead.position.index !== bin.length) {\n        return (0,_format_format_js__WEBPACK_IMPORTED_MODULE_4__.formatError)(TransactionDecodingError.endsWithUnexpectedBytes, `Encoded transaction ends at index ${transactionRead.position.index - 1}, leaving ${bin.length - transactionRead.position.index} remaining bytes.`);\n    }\n    return transactionRead.result;\n};\nconst decodeTransactionBCH = decodeTransactionCommon;\nconst decodeTransaction = decodeTransactionBCH;\n/**\n * Decode a {@link TransactionCommon} from a trusted source according to the\n * version 1/2 P2P network transaction format.\n *\n * Note: this method throws runtime errors when attempting to decode messages\n * which do not properly follow the transaction format. If the input is\n * untrusted, use {@link decodeTransactionCommon}.\n *\n * @param bin - the raw message to decode\n */\nconst decodeTransactionUnsafeCommon = (bin) => {\n    const result = decodeTransactionCommon(bin);\n    if (typeof result === 'string') {\n        // eslint-disable-next-line functional/no-throw-statement\n        throw new Error(result);\n    }\n    return result;\n};\nconst decodeTransactionUnsafeBCH = decodeTransactionUnsafeCommon;\nconst decodeTransactionUnsafe = decodeTransactionUnsafeBCH;\n/**\n * Encode a {@link Transaction} using the standard P2P network format. This\n * serialization is also used when computing the transaction's hash (A.K.A.\n * \"transaction ID\" or \"TXID\").\n */\nconst encodeTransactionCommon = (tx) => (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([\n    (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.numberToBinUint32LE)(tx.version),\n    encodeTransactionInputs(tx.inputs),\n    encodeTransactionOutputs(tx.outputs),\n    (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.numberToBinUint32LE)(tx.locktime),\n]);\nconst encodeTransactionBCH = encodeTransactionCommon;\nconst encodeTransaction = encodeTransactionBCH;\nconst cloneTransactionInputsCommon = (inputs) => inputs.map((input) => ({\n    outpointIndex: input.outpointIndex,\n    outpointTransactionHash: input.outpointTransactionHash.slice(),\n    sequenceNumber: input.sequenceNumber,\n    unlockingBytecode: input.unlockingBytecode.slice(),\n}));\nconst cloneTransactionOutputsCommon = (outputs) => outputs.map((output) => ({\n    lockingBytecode: output.lockingBytecode.slice(),\n    ...(output.token === undefined\n        ? {}\n        : {\n            token: {\n                amount: output.token.amount,\n                category: output.token.category.slice(),\n                ...(output.token.nft === undefined\n                    ? {}\n                    : {\n                        nft: {\n                            capability: output.token.nft.capability,\n                            commitment: output.token.nft.commitment.slice(),\n                        },\n                    }),\n            },\n        }),\n    valueSatoshis: output.valueSatoshis,\n}));\nconst cloneTransactionCommon = (transaction) => ({\n    inputs: cloneTransactionInputsCommon(transaction.inputs),\n    locktime: transaction.locktime,\n    outputs: cloneTransactionOutputsCommon(transaction.outputs),\n    version: transaction.version,\n});\n/**\n * Compute a transaction hash (A.K.A. \"transaction ID\" or \"TXID\") from an\n * encoded transaction in P2P network message order. This is the byte order\n * produced by most sha256 libraries and used by encoded P2P network messages.\n * It is also the byte order produced by `OP_SHA256` and `OP_HASH256` in the\n * virtual machine.\n *\n * @returns the transaction hash in P2P network message byte order\n *\n * @param transaction - the encoded transaction\n * @param sha256 - an implementation of sha256\n */\nconst hashTransactionP2pOrder = (transaction, sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_6__.sha256) => (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_7__.hash256)(transaction, sha256);\n/**\n * Compute a transaction hash (A.K.A. \"transaction ID\" or \"TXID\") from an\n * encoded transaction in user interface byte order. This is the byte order\n * typically used by block explorers, wallets, and other user interfaces.\n *\n * To return this result as a `string`, use {@link hashTransaction}.\n *\n * @returns the transaction hash in User Interface byte order\n *\n * @param transaction - the encoded transaction\n * @param sha256 - an implementation of sha256\n */\nconst hashTransactionUiOrder = (transaction, sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_6__.sha256) => hashTransactionP2pOrder(transaction, sha256).reverse();\n/**\n * Return an encoded {@link Transaction}'s hash/ID as a string in user interface\n * byte order (typically used by wallets and block explorers).\n *\n * To return this result as a `Uint8Array`, use {@link hashTransactionUiOrder}.\n *\n * @param transaction - the encoded transaction\n */\nconst hashTransaction = (transaction) => (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.binToHex)(hashTransactionUiOrder(transaction));\n/**\n * Encode all outpoints in a series of transaction inputs. (For use in\n * {@link hashTransactionOutpoints}.)\n *\n * @param inputs - the series of inputs from which to extract the outpoints\n */\nconst encodeTransactionOutpoints = (inputs) => (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(inputs.map((i) => (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([\n    i.outpointTransactionHash.slice().reverse(),\n    (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.numberToBinUint32LE)(i.outpointIndex),\n])));\n/**\n * Encode an array of transaction {@link Output}s for use in transaction signing\n * serializations. Note, this encoding differs from\n * {@link encodeTransactionOutputs} (used for encoding full transactions).\n *\n * @param outputs - the array of outputs to encode\n */\nconst encodeTransactionOutputsForSigning = (outputs) => (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(outputs.map(encodeTransactionOutput));\n/**\n * Encode the sequence numbers of an array of transaction inputs for use in\n * transaction signing serializations.\n *\n * @param inputs - the array of inputs from which to extract the sequence\n * numbers\n */\nconst encodeTransactionInputSequenceNumbersForSigning = (inputs) => (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(inputs.map((i) => (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.numberToBinUint32LE)(i.sequenceNumber)));\n//# sourceMappingURL=transaction-encoding.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/message/transaction-encoding.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/message/transaction-types.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/message/transaction-types.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NonFungibleTokenCapability\": () => (/* binding */ NonFungibleTokenCapability)\n/* harmony export */ });\n/* unused harmony export excessiveSatoshis */\n/**\n * The capability assigned to a particular non-fungible token.\n */\nvar NonFungibleTokenCapability;\n(function (NonFungibleTokenCapability) {\n    /**\n     * No capability, i.e. the token is an **immutable token**.\n     */\n    NonFungibleTokenCapability[\"none\"] = \"none\";\n    /**\n     * The mutable capability (`0x01`), i.e. the token is a **mutable token**.\n     */\n    NonFungibleTokenCapability[\"mutable\"] = \"mutable\";\n    /**\n     * The minting capability (`0x02`), i.e. the token is a **minting token**.\n     */\n    NonFungibleTokenCapability[\"minting\"] = \"minting\";\n})(NonFungibleTokenCapability || (NonFungibleTokenCapability = {}));\n/**\n * The maximum uint64 value – an impossibly large, intentionally invalid value\n * for `valueSatoshis`. See {@link Transaction.valueSatoshis} for details.\n */\n// prettier-ignore\n// eslint-disable-next-line @typescript-eslint/no-magic-numbers\nconst excessiveSatoshis = Uint8Array.from([255, 255, 255, 255, 255, 255, 255, 255]);\n//# sourceMappingURL=transaction-types.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/message/transaction-types.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/schema/ajv/ajv-utils.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/schema/ajv/ajv-utils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ajvStandaloneJsonParse\": () => (/* binding */ ajvStandaloneJsonParse)\n/* harmony export */ });\n/* harmony import */ var _validate_authentication_template_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate-authentication-template.js */ \"../../node_modules/@bitauth/libauth/build/lib/schema/ajv/validate-authentication-template.js\");\n\nconst avjErrorsToDescription = (errors) => \n// TODO: translate instancePath\nerrors.map((error) => `${error.instancePath}: ${error.message}`).join(',');\nconst ajvStandaloneJsonParse = (untrustedJsonOrObject, validator) => {\n    // eslint-disable-next-line functional/no-try-statement\n    try {\n        const parsed = typeof untrustedJsonOrObject === 'string'\n            ? JSON.parse(untrustedJsonOrObject)\n            : untrustedJsonOrObject;\n        if (validator(parsed)) {\n            return parsed;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return avjErrorsToDescription(_validate_authentication_template_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].errors);\n    }\n    catch (e) {\n        return `Invalid JSON. ${String(e)}`;\n    }\n};\n//# sourceMappingURL=ajv-utils.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/schema/ajv/ajv-utils.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/schema/ajv/validate-authentication-template.js":
/*!****************************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/schema/ajv/validate-authentication-template.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate20);\nconst schema22 = {\n    $ref: '#/definitions/AuthenticationTemplate',\n    $schema: 'http://json-schema.org/draft-07/schema#',\n    definitions: {\n        AuthenticationTemplate: {\n            additionalProperties: false,\n            description: 'An `AuthenticationTemplate` (A.K.A. `CashAssembly Template`) specifies a set of locking scripts, unlocking scripts, and other information required to use a certain authentication scheme. Templates fully describe wallets and protocols in a way that can be shared between software clients.',\n            properties: {\n                $schema: {\n                    description: 'The URI that identifies the JSON Schema used by this template. Try: `https://libauth.org/schemas/authentication-template-v0.schema.json` to enable documentation, autocompletion, and validation in JSON documents.',\n                    type: 'string',\n                },\n                description: {\n                    description: 'An optionally multi-line, free-form, human-readable description for this authentication template (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.',\n                    type: 'string',\n                },\n                entities: {\n                    additionalProperties: {\n                        $ref: '#/definitions/AuthenticationTemplateEntity',\n                    },\n                    description: 'A map of entities defined in this authentication template.\\n\\nObject keys are used as entity identifiers, and by convention, should use `snake_case`.',\n                    type: 'object',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this authentication template (for use in user interfaces).',\n                    type: 'string',\n                },\n                scenarios: {\n                    additionalProperties: {\n                        $ref: '#/definitions/AuthenticationTemplateScenario',\n                    },\n                    description: 'A scenario describes a context in which one or more scripts might be used. Scenarios are used for transaction estimation and as an integrated testing system for authentication templates.\\n\\nObject keys are used as scenario identifiers, and by convention, should use `snake_case`.',\n                    type: 'object',\n                },\n                scripts: {\n                    additionalProperties: {\n                        anyOf: [\n                            { $ref: '#/definitions/AuthenticationTemplateScript' },\n                            { $ref: '#/definitions/AuthenticationTemplateScriptLocking' },\n                            { $ref: '#/definitions/AuthenticationTemplateScriptTested' },\n                            { $ref: '#/definitions/AuthenticationTemplateScriptUnlocking' },\n                        ],\n                    },\n                    description: 'A map of scripts used in this authentication template.\\n\\nObject keys are used as script identifiers, and by convention, should use `snake_case`.',\n                    type: 'object',\n                },\n                supported: {\n                    description: 'A list of authentication virtual machine versions supported by this template.\\n\\nVirtual machine identifiers use the format `CODE_YYYY_MM`, where `CODE` is the currency code used to identify the network, and `YYYY_MM` is the year and month in which the specified VM version became active on the indicated network.\\n\\nIdentifiers with the `_SPEC` suffix indicate that this template is intended for compatibility with a future virtual machine version, but at the time the template was created, that virtual machine had not yet become active on the specified chain.',\n                    items: {\n                        $ref: '#/definitions/AuthenticationVirtualMachineIdentifier',\n                    },\n                    type: 'array',\n                },\n                version: {\n                    const: 0,\n                    description: 'A number identifying the format of this AuthenticationTemplate. Currently, this implementation requires `version` be set to `0`.',\n                    type: 'number',\n                },\n            },\n            required: ['entities', 'scripts', 'supported', 'version'],\n            type: 'object',\n        },\n        AuthenticationTemplateAddressData: {\n            additionalProperties: false,\n            properties: {\n                description: {\n                    description: 'A single-line, human readable description for this address data.',\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this address data.',\n                    type: 'string',\n                },\n                type: {\n                    const: 'AddressData',\n                    description: '`AddressData` is the most low-level variable type. It must be collected and stored each time a script is generated (usually, a locking script). `AddressData` can include any type of data, and can be used in any way.\\n\\nFor more persistent data, use `WalletData`.',\n                    type: 'string',\n                },\n            },\n            required: ['type'],\n            type: 'object',\n        },\n        AuthenticationTemplateEntity: {\n            additionalProperties: false,\n            description: 'An object describing the configuration for a particular entity within an authentication template.',\n            properties: {\n                description: {\n                    description: 'An optionally multi-line, free-form, human-readable description for this entity (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.',\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this entity for use in user interfaces and error messages, e.g.: `Trusted Third-Party`.',\n                    type: 'string',\n                },\n                scripts: {\n                    description: 'An array of the identifiers of each script the entity must be capable of generating, e.g. each of the unlocking scripts this entity might use.\\n\\nProvided the necessary variables, any entity can construct any script, but this option allows us to hint to more advanced wallets which scripts to recommend to users. (Especially when many scripts require inter-entity communication initiated by a user.)\\n\\nIf not provided, this property is assumed to include all scripts in the template.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                variables: {\n                    additionalProperties: {\n                        $ref: '#/definitions/AuthenticationTemplateVariable',\n                    },\n                    description: \"A map of variables that must be provided by this entity for use in the template's scripts. Some variables are required before locking script generation, while some variables can or must be resolved only before unlocking script generation.\\n\\nObject keys are used as variable identifiers, and by convention, should use `snake_case`.\",\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        AuthenticationTemplateHdKey: {\n            additionalProperties: false,\n            properties: {\n                addressOffset: {\n                    description: 'The offset by which to increment the `addressIndex` provided in the compilation data when deriving this `HdKey`. (Default: 0)\\n\\nThis is useful for deriving the \"next\" (`1`) or \"previous\" (`-1`) address to be used in the current compiler configuration.',\n                    type: 'number',\n                },\n                description: {\n                    description: 'A single-line, human readable description for this HD key.',\n                    type: 'string',\n                },\n                hdPublicKeyDerivationPath: {\n                    description: \"The path to derive the entity's HD public key from the entity's master HD private key. By default, `m` (i.e. the entity's HD public key represents the same node in the HD tree as its HD private key).\\n\\nThis can be used to specify another derivation path from which the `publicDerivationPath` begins, e.g. `m/0'/1'/2'`. See `publicDerivationPath` for details.\\n\\nThis path must begin with an `m` (private derivation) and be fixed – it cannot contain an `i` character to represent the address index, as a dynamic hardened path would require a new HD public key for each address.\",\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this HD key.',\n                    type: 'string',\n                },\n                privateDerivationPath: {\n                    description: \"The derivation path used to derive this `HdKey` from the owning entity's HD private key. By default, `m/i`.\\n\\nThis path uses the notation specified in BIP32 and the `i` character to represent the location of the `addressIndex`:\\n\\nThe first character must be `m` (private derivation), followed by sets of `/` and a number representing the child index used in the derivation at that depth. Hardened derivation is represented by a trailing `'`, and hardened child indexes are represented with the hardened index offset (`2147483648`) subtracted. The `i` character is replaced with the value of `addressIndex` plus this `HdKey`'s `addressOffset`. If the `i` character is followed by `'`, the hardened index offset is added (`2147483648`) and hardened derivation is used.\\n\\nFor example, `m/0/1'/i'` uses 3 levels of derivation, with child indexes in the following order:\\n\\n`derive(derive(derive(node, 0), 2147483648 + 1), 2147483648 + addressIndex + addressOffset)`\\n\\nBecause hardened derivation requires knowledge of the private key, `HdKey` variables with `derivationPath`s that include hardened derivation cannot use HD public derivation (the `hdPublicKeys` property in `CompilationData`). Instead, compilation requires the respective HD private key (`CompilationData.hdKeys.hdPrivateKeys`) or the fully-derived public key (`CompilationData.hdKeys.derivedPublicKeys`).\",\n                    type: 'string',\n                },\n                publicDerivationPath: {\n                    description: \"The derivation path used to derive this `HdKey`'s public key from the owning entity's HD public key. If not set, the public equivalent of `privateDerivationPath` is used. For the `privateDerivationPath` default of `m/i`, this is `M/i`.\\n\\nIf `privateDerivationPath` uses hardened derivation for some levels, but later derivation levels use non-hardened derivation, `publicDerivationPath` can be used to specify a public derivation path beginning from `hdPublicKeyDerivationPath` (i.e. `publicDerivationPath` should always be a non-hardened segment of `privateDerivationPath` that follows `hdPublicKeyDerivationPath`).\\n\\nThe first character must be `M` (public derivation), followed by sets of `/` and a number representing the child index used in the non-hardened derivation at that depth.\\n\\nFor example, if `privateDerivationPath` is `m/0'/i`, it is not possible to derive the equivalent public key with only the HD public key `M`. (The path \\\"`M/0'/i`\\\" is impossible.) However, given the HD public key for `m/0'`, it is possible to derive the public key of `m/0'/i` for any `i`. In this case, `hdPublicKeyDerivationPath` would be `m/0'` and `publicDerivationPath` would be the remaining `M/i`.\",\n                    type: 'string',\n                },\n                type: {\n                    const: 'HdKey',\n                    description: 'The `HdKey` (Hierarchical-Deterministic Key) type automatically manages key generation and mapping in a standard way. For greater control, use `Key`.',\n                    type: 'string',\n                },\n            },\n            required: ['type'],\n            type: 'object',\n        },\n        AuthenticationTemplateKey: {\n            additionalProperties: false,\n            properties: {\n                description: {\n                    description: 'A single-line, human readable description for this key.',\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this key.',\n                    type: 'string',\n                },\n                type: {\n                    const: 'Key',\n                    description: 'The `Key` type provides fine-grained control over key generation and mapping. Most templates should instead use `HdKey`.\\n\\nAny HD (Hierarchical-Deterministic) derivation must be completed outside of the templating system and provided at the time of use.',\n                    type: 'string',\n                },\n            },\n            required: ['type'],\n            type: 'object',\n        },\n        AuthenticationTemplateScenario: {\n            additionalProperties: false,\n            description: 'An object describing the configuration for a particular scenario within an authentication template.',\n            properties: {\n                data: {\n                    $ref: '#/definitions/AuthenticationTemplateScenarioData',\n                    description: \"An object defining the data to use while compiling this scenario. The properties specified here are used to extend the existing scenario data based on this scenario's `extends` property.\\n\\nEach property is extended individually – to unset a previously-set property, the property must be individually overridden in this object.\",\n                },\n                description: {\n                    description: 'An optionally multi-line, free-form, human-readable description for this scenario (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.',\n                    type: 'string',\n                },\n                extends: {\n                    description: \"The identifier of the scenario that this scenario extends. Any `data` or `transaction` properties not defined in this scenario inherit from the extended parent scenario.\\n\\nIf undefined, this scenario is assumed to extend the default scenario:\\n\\n- The default values for `data` are set:   - The identifiers of all `Key` variables and entities in this template are lexicographically sorted, then each is assigned an incrementing positive integer – beginning with `1` – encoded as an unsigned, 256-bit, big-endian integer (i.e. `0x0000...0001` (32 bytes), `0x0000...0002`, `0x0000...0003`, etc.). For `Key`s, this assigned value is used as the private key; For entities, the assigned value is used as the master seed of that entity's `HdPrivateKey`. If `hdKey` is set, the `addressIndex` is set to `0`.   - `currentBlockHeight` is set to `2`. This is the height of the second mined block after the genesis block: `000000006a625f06636b8bb6ac7b960a8d03705d1ace08b1a19da3fdcc99ddbd`. This default value was chosen to be low enough to simplify the debugging of block height offsets while remaining differentiated from `0` and `1`, which are used both as boolean return values and for control flow.   - `currentBlockTime` is set to `1231469665`. This is the Median Time-Past block time (BIP113) of block `2`.\\n\\n- Then `transaction` is set based on use:   - if the scenario is being used for transaction estimation, all transaction properties are taken from the transaction being estimated.   - if the scenario is being used for script testing and validation, the default value for each `transaction` property is used.\\n\\nWhen a scenario is extended, each property of `data` and `transaction` is extended individually: if the extending scenario does not provide a new value for `data.bytecode.value` or `transaction.property`, the parent value is used. To avoid inheriting a parent value, each child value must be individually overridden.\",\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this scenario for use in user interfaces, e.g.: `Delayed Recovery`.',\n                    type: 'string',\n                },\n                sourceOutputs: {\n                    description: 'The list of source outputs (a.k.a. UTXOs) to use when generating the compilation context for this scenario.\\n\\nThe `sourceOutputs` property must have the same length as `transaction.inputs`, and each source output must be ordered to match the index of the input that spends it.\\n\\nTo be valid the `sourceOutputs` property must have exactly one source output with `lockingBytecode` set to `[\"slot\"]` – the output at the same index as the `[\"slot\"]` input in `transaction.inputs`.\\n\\nIf undefined, defaults to `[{ \"lockingBytecode\": [\"slot\"] }]`.',\n                    items: {\n                        $ref: '#/definitions/AuthenticationTemplateScenarioSourceOutput',\n                    },\n                    type: 'array',\n                },\n                transaction: {\n                    additionalProperties: false,\n                    description: 'The transaction within which this scenario should be evaluated. This is used for script testing and validation.\\n\\nIf undefined, inherits the default value for each property: ```json {   \"inputs\": [{ \"unlockingBytecode\": [\\'slot\\'] }],   \"locktime\": 0,   \"outputs\": [{ \"lockingBytecode\": {} }],   \"version\": 2 } ```\\n\\nAny `transaction` property that is not set will be inherited from the scenario specified by `extends`. when specifying the `inputs` and `outputs` properties, each input and output extends the default values for inputs and outputs, respectively.\\n\\nFor example, an input of `{}` is interpreted as: ```json {   \"outpointIndex\": 0,   \"outpointTransactionHash\":     \"0000000000000000000000000000000000000000000000000000000000000000\",   \"sequenceNumber\": 0,   \"unlockingBytecode\": [\\'slot\\'] } ``` And an output of `{}` is interpreted as: ```json {   \"lockingBytecode\": {     \"script\": [\\'copy\\'],     \"overrides\": { \"hdKeys\": { \"addressIndex\": 1 } }   },   \"valueSatoshis\": 0 } ```',\n                    properties: {\n                        inputs: {\n                            description: 'The list of inputs to use when generating the transaction for this scenario.\\n\\nTo be valid the `inputs` property must have exactly one input with `unlockingBytecode` set to `[\"slot\"]`. This is the input in which the unlocking script under test will be placed.\\n\\nIf undefined, inherits the default scenario `inputs` value: `[{ \"unlockingBytecode\": [\"slot\"] }]`.',\n                            items: {\n                                $ref: '#/definitions/AuthenticationTemplateScenarioInput',\n                            },\n                            type: 'array',\n                        },\n                        locktime: {\n                            description: 'The locktime to use when generating the transaction for this scenario. A positive integer from `0` to a maximum of `4294967295` – if undefined, defaults to `0`.\\n\\nLocktime can be provided as either a timestamp or a block height. Values less than `500000000` are understood to be a block height (the current block number in the chain, beginning from block `0`). Values greater than or equal to `500000000` are understood to be a UNIX timestamp.\\n\\nFor validating timestamp values, the median timestamp of the last 11 blocks (Median Time-Past) is used. The precise behavior is defined in BIP113.\\n\\nIf the `sequenceNumber` of every transaction input is set to `0xffffffff` (`4294967295`), locktime is disabled, and the transaction may be added to a block even if the specified locktime has not yet been reached. When locktime is disabled, if an `OP_CHECKLOCKTIMEVERIFY` operation is encountered during the verification of any input, an error is produced, and the transaction is invalid.',\n                            type: 'number',\n                        },\n                        outputs: {\n                            description: 'The list of outputs to use when generating the transaction for this scenario.\\n\\nIf undefined, defaults to `[{ \"lockingBytecode\": {} }]`.',\n                            items: {\n                                $ref: '#/definitions/AuthenticationTemplateScenarioTransactionOutput',\n                            },\n                            type: 'array',\n                        },\n                        version: {\n                            description: 'The version to use when generating the transaction for this scenario. A positive integer from `0` to a maximum of `4294967295` – if undefined, inherits the default scenario `version` value: `2`.',\n                            type: 'number',\n                        },\n                    },\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        AuthenticationTemplateScenarioBytecode: {\n            anyOf: [\n                { type: 'string' },\n                {\n                    additionalProperties: false,\n                    properties: {\n                        overrides: {\n                            $ref: '#/definitions/AuthenticationTemplateScenarioData',\n                            description: 'Scenario data that extends the scenario\\'s top-level `data` during script compilation.\\n\\nEach property is extended individually – to modify a property set by the top-level scenario `data`, the new value must be listed here.\\n\\nDefaults to `{}` for `sourceOutputs` and `transaction.inputs`; defaults to `{ \"hdKeys\": { \"addressIndex\": 1 } }` for `transaction.outputs`.',\n                        },\n                        script: {\n                            anyOf: [\n                                { type: 'string' },\n                                {\n                                    items: { const: 'copy', type: 'string' },\n                                    maxItems: 1,\n                                    minItems: 1,\n                                    type: 'array',\n                                },\n                            ],\n                            description: 'The identifier of the script to compile when generating this bytecode. May also be set to `[\"copy\"]`, which is automatically replaced with the identifier of the locking or unlocking script under test, respectively.\\n\\nIf undefined, defaults to `[\"copy\"]`.',\n                        },\n                    },\n                    type: 'object',\n                },\n            ],\n            description: 'A type that describes the configuration for a particular locking or unlocking bytecode within an authentication template scenario.\\n\\nBytecode may be specified as either a hexadecimal-encoded string or an object describing the required compilation.\\n\\nFor `sourceOutputs` and `transaction.inputs`, defaults to `{ script: [\"copy\"], overrides: {} }`. For `transaction.outputs`, defaults to `{ script: [\"copy\"], overrides: { \"hdKeys\": { \"addressIndex\": 1 } } }`.',\n        },\n        AuthenticationTemplateScenarioData: {\n            additionalProperties: false,\n            description: 'An object defining the data to use while compiling a scenario.',\n            properties: {\n                bytecode: {\n                    additionalProperties: { type: 'string' },\n                    description: \"A map of full identifiers to CashAssembly scripts that compile to each identifier's value for this scenario. Allowing `bytecode` to be specified as scripts (rather than e.g. hex) offers greater power and flexibility.\\n\\nBytecode scripts have access to each other and all other template scripts and defined variables, however, cyclical references will produce an error at compile time. Also, because the results of these compilations will be used to generate the compilation context for this scenario, these scripts may not use compiler operations that themselves require access to compilation context (e.g. signatures).\\n\\nThe provided `fullIdentifier` should match the complete identifier for each item, e.g. `some_wallet_data`, `variable_id.public_key`, or `variable_id.signature.all_outputs`.\\n\\nAll `AddressData` and `WalletData` variables must be provided via `bytecode` (though the default scenario automatically includes reasonable values), and pre-computed results for operations of other variable types (e.g. `key.public_key`) may also be provided via this property.\\n\\nBecause each bytecode identifier may precisely match the identifier of the variable it defines for this scenario, references between these scripts must refer to the target script with a `_scenario.` prefix. E.g. to reference a sibling script `my_foo` from `my_bar`, the `my_bar` script must use the identifier `_scenario.my_foo`.\",\n                    type: 'object',\n                },\n                currentBlockHeight: {\n                    description: 'The current block height at the \"address creation time\" implied in this scenario.',\n                    type: 'number',\n                },\n                currentBlockTime: {\n                    description: 'The current MTP block time as a UNIX timestamp at the \"address creation time\" implied in this scenario.\\n\\nNote, this is never a current timestamp, but rather the median timestamp of the last 11 blocks. It is therefore approximately one hour in the past.\\n\\nEvery block has a precise MTP block time, much like a block height. See BIP113 for details.',\n                    type: 'number',\n                },\n                hdKeys: {\n                    additionalProperties: false,\n                    description: 'An object describing the settings used for `HdKey` variables in this scenario.',\n                    properties: {\n                        addressIndex: {\n                            description: 'The current address index to be used for this scenario. The `addressIndex` gets added to each `HdKey`s `addressOffset` to calculate the dynamic index (`i`) used in each `privateDerivationPath` or `publicDerivationPath`.\\n\\nThis is required for any compiler operation that requires derivation. Typically, the value is incremented by one for each address in a wallet.\\n\\nDefaults to `0`.',\n                            type: 'number',\n                        },\n                        hdPrivateKeys: {\n                            additionalProperties: { type: 'string' },\n                            description: 'A map of entity IDs to master HD private keys. These master HD private keys are used to derive each `HdKey` variable assigned to that entity according to its `privateDerivationPath`.\\n\\nHD private keys may be encoded for either mainnet or testnet (the network information is ignored).\\n\\nIf both an HD private key (in `hdPrivateKeys`) and HD public key (in `hdPublicKeys`) are provided for the same entity in the same scenario (not recommended), the HD private key is used.',\n                            type: 'object',\n                        },\n                        hdPublicKeys: {\n                            additionalProperties: { type: 'string' },\n                            description: 'A map of entity IDs to HD public keys. These HD public keys are used to derive public keys for each `HdKey` variable assigned to that entity according to its `publicDerivationPath`.\\n\\nHD public keys may be encoded for either mainnet or testnet (the network information is ignored).\\n\\nIf both an HD private key (in `hdPrivateKeys`) and HD public key (in `hdPublicKeys`) are provided for the same entity in the same scenario (not recommended), the HD private key is used.',\n                            type: 'object',\n                        },\n                    },\n                    type: 'object',\n                },\n                keys: {\n                    additionalProperties: false,\n                    description: 'An object describing the settings used for `Key` variables in this scenario.',\n                    properties: {\n                        privateKeys: {\n                            additionalProperties: { type: 'string' },\n                            description: 'A map of `Key` variable IDs to their 32-byte, hexadecimal-encoded private key values.',\n                            type: 'object',\n                        },\n                    },\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        AuthenticationTemplateScenarioInput: {\n            additionalProperties: false,\n            description: 'An example input used to define a scenario for an authentication template.',\n            properties: {\n                outpointIndex: {\n                    description: 'The index of the output in the transaction from which this input is spent.\\n\\nIf undefined, this defaults to the same index as the input itself (so that by default, every outpoint in the produced transaction is different, even if an empty `outpointTransactionHash` is used for each transaction).',\n                    type: 'number',\n                },\n                outpointTransactionHash: {\n                    description: 'A 32-byte, hexadecimal-encoded hash of the transaction from which this input is spent in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000001`\\n\\nA.K.A. Outpoint `Transaction ID`',\n                    type: 'string',\n                },\n                sequenceNumber: {\n                    description: 'The positive, 32-bit unsigned integer used as the \"sequence number\" for this input.\\n\\nIf undefined, this defaults to `0`.',\n                    type: 'number',\n                },\n                unlockingBytecode: {\n                    anyOf: [\n                        { $ref: '#/definitions/AuthenticationTemplateScenarioBytecode' },\n                        {\n                            items: { const: 'slot', type: 'string' },\n                            maxItems: 1,\n                            minItems: 1,\n                            type: 'array',\n                        },\n                    ],\n                    description: 'The `unlockingBytecode` value of this input for this scenario. This must be either `[\"slot\"]`, indicating that this input contains the `unlockingBytecode` under test by the scenario, or an `AuthenticationTemplateScenarioBytecode`.\\n\\nFor a scenario to be valid, `unlockingBytecode` must be `[\"slot\"]` for exactly one input in the scenario.\\n\\nDefaults to `[\"slot\"]`.',\n                },\n            },\n            type: 'object',\n        },\n        'AuthenticationTemplateScenarioOutput<false>': {\n            additionalProperties: false,\n            description: 'An example output used to define a scenario for an authentication template.',\n            properties: {\n                lockingBytecode: {\n                    $ref: '#/definitions/AuthenticationTemplateScenarioBytecode',\n                    description: 'The locking bytecode used to encumber this output.\\n\\n`lockingBytecode` values may be provided as a hexadecimal-encoded string or as an object describing the required compilation. If undefined, defaults to  `{}`, which uses the default values for `script` and `overrides`, respectively.\\n\\nOnly source outputs may specify a `lockingBytecode` of `[\"slot\"]`; this identifies the source output in which the locking script under test will be placed. (To be valid, every scenario\\'s `sourceOutputs` property must have exactly one source output slot and one input slot at the same index.)',\n                },\n                token: {\n                    additionalProperties: false,\n                    description: 'The CashToken contents of this output. This property is only defined if the output contains one or more tokens. For details, see `CHIP-2022-02-CashTokens`.',\n                    properties: {\n                        amount: {\n                            description: 'The number of fungible tokens (of `category`) held in this output.\\n\\nBecause `Number.MAX_SAFE_INTEGER` (`9007199254740991`) is less than the maximum token amount (`9223372036854775807`), this value may also be provided as a string, e.g. `\"9223372036854775807\"`.\\n\\nIf undefined, this defaults to: `0`.',\n                            type: ['number', 'string'],\n                        },\n                        category: {\n                            description: 'The 32-byte, hexadecimal-encoded token category ID to which the token(s) in this output belong in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000002`',\n                            type: 'string',\n                        },\n                        nft: {\n                            additionalProperties: false,\n                            description: 'If present, the non-fungible token (NFT) held by this output. If the output does not include a non-fungible token, `undefined`.',\n                            properties: {\n                                capability: {\n                                    description: 'The capability of this non-fungible token, must be either `minting`, `mutable`, or `none`.\\n\\nIf undefined, this defaults to: `none`.',\n                                    enum: ['minting', 'mutable', 'none'],\n                                    type: 'string',\n                                },\n                                commitment: {\n                                    description: 'The hex-encoded commitment contents included in the non-fungible token held in this output.\\n\\nIf undefined, this defaults to: `\"\"` (a zero-length commitment).',\n                                    type: 'string',\n                                },\n                            },\n                            type: 'object',\n                        },\n                    },\n                    type: 'object',\n                },\n                valueSatoshis: {\n                    description: 'The value of the output in satoshis, the smallest unit of bitcoin.\\n\\nIn a valid transaction, this is a positive integer, from `0` to the maximum number of satoshis available to the transaction.\\n\\nThe maximum number of satoshis in existence is about 1/4 of `Number.MAX_SAFE_INTEGER` (`9007199254740991`), so typically, this value is defined using a `number`. However, this value may also be defined using a 16-character, hexadecimal-encoded `string`, to allow for the full range of the 64-bit unsigned, little-endian integer used to encode `valueSatoshis` in the encoded output format, e.g. `\"ffffffffffffffff\"`. This is useful for representing scenarios where intentionally excessive values are provided (to ensure an otherwise properly-signed transaction can never be included in the blockchain), e.g. transaction size estimations or off-chain Bitauth signatures.\\n\\nIf undefined, this defaults to: `0`.',\n                    type: ['number', 'string'],\n                },\n            },\n            type: 'object',\n        },\n        'AuthenticationTemplateScenarioOutput<true>': {\n            additionalProperties: false,\n            description: 'An example output used to define a scenario for an authentication template.',\n            properties: {\n                lockingBytecode: {\n                    anyOf: [\n                        { $ref: '#/definitions/AuthenticationTemplateScenarioBytecode' },\n                        {\n                            items: { const: 'slot', type: 'string' },\n                            maxItems: 1,\n                            minItems: 1,\n                            type: 'array',\n                        },\n                    ],\n                    description: 'The locking bytecode used to encumber this output.\\n\\n`lockingBytecode` values may be provided as a hexadecimal-encoded string or as an object describing the required compilation. If undefined, defaults to  `{}`, which uses the default values for `script` and `overrides`, respectively.\\n\\nOnly source outputs may specify a `lockingBytecode` of `[\"slot\"]`; this identifies the source output in which the locking script under test will be placed. (To be valid, every scenario\\'s `sourceOutputs` property must have exactly one source output slot and one input slot at the same index.)',\n                },\n                token: {\n                    additionalProperties: false,\n                    description: 'The CashToken contents of this output. This property is only defined if the output contains one or more tokens. For details, see `CHIP-2022-02-CashTokens`.',\n                    properties: {\n                        amount: {\n                            description: 'The number of fungible tokens (of `category`) held in this output.\\n\\nBecause `Number.MAX_SAFE_INTEGER` (`9007199254740991`) is less than the maximum token amount (`9223372036854775807`), this value may also be provided as a string, e.g. `\"9223372036854775807\"`.\\n\\nIf undefined, this defaults to: `0`.',\n                            type: ['number', 'string'],\n                        },\n                        category: {\n                            description: 'The 32-byte, hexadecimal-encoded token category ID to which the token(s) in this output belong in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000002`',\n                            type: 'string',\n                        },\n                        nft: {\n                            additionalProperties: false,\n                            description: 'If present, the non-fungible token (NFT) held by this output. If the output does not include a non-fungible token, `undefined`.',\n                            properties: {\n                                capability: {\n                                    description: 'The capability of this non-fungible token, must be either `minting`, `mutable`, or `none`.\\n\\nIf undefined, this defaults to: `none`.',\n                                    enum: ['minting', 'mutable', 'none'],\n                                    type: 'string',\n                                },\n                                commitment: {\n                                    description: 'The hex-encoded commitment contents included in the non-fungible token held in this output.\\n\\nIf undefined, this defaults to: `\"\"` (a zero-length commitment).',\n                                    type: 'string',\n                                },\n                            },\n                            type: 'object',\n                        },\n                    },\n                    type: 'object',\n                },\n                valueSatoshis: {\n                    description: 'The value of the output in satoshis, the smallest unit of bitcoin.\\n\\nIn a valid transaction, this is a positive integer, from `0` to the maximum number of satoshis available to the transaction.\\n\\nThe maximum number of satoshis in existence is about 1/4 of `Number.MAX_SAFE_INTEGER` (`9007199254740991`), so typically, this value is defined using a `number`. However, this value may also be defined using a 16-character, hexadecimal-encoded `string`, to allow for the full range of the 64-bit unsigned, little-endian integer used to encode `valueSatoshis` in the encoded output format, e.g. `\"ffffffffffffffff\"`. This is useful for representing scenarios where intentionally excessive values are provided (to ensure an otherwise properly-signed transaction can never be included in the blockchain), e.g. transaction size estimations or off-chain Bitauth signatures.\\n\\nIf undefined, this defaults to: `0`.',\n                    type: ['number', 'string'],\n                },\n            },\n            type: 'object',\n        },\n        AuthenticationTemplateScenarioSourceOutput: {\n            $ref: '#/definitions/AuthenticationTemplateScenarioOutput<true>',\n            description: 'A source output used by an authentication template scenario.',\n        },\n        AuthenticationTemplateScenarioTransactionOutput: {\n            $ref: '#/definitions/AuthenticationTemplateScenarioOutput<false>',\n            description: 'A transaction output used to define an authentication template scenario transaction.',\n        },\n        AuthenticationTemplateScript: {\n            additionalProperties: false,\n            description: 'An object describing the configuration for a particular script within an authentication template.',\n            properties: {\n                name: {\n                    description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n                    type: 'string',\n                },\n                script: {\n                    description: 'The script definition in CashAssembly.',\n                    type: 'string',\n                },\n            },\n            required: ['script'],\n            type: 'object',\n        },\n        AuthenticationTemplateScriptLocking: {\n            additionalProperties: false,\n            properties: {\n                lockingType: {\n                    description: 'Indicates if P2SH20 infrastructure should be used when producing bytecode related to this script. For more information on P2SH20, see BIP16.\\n\\nWhen compiling locking scripts of type `p2sh20`, the result will be placed in a P2SH20 \"redeem script\" format: `OP_HASH160 <$(<lockingBytecode> OP_HASH160)> OP_EQUAL`\\n\\nWhen compiling unlocking scripts that unlock locking scripts of type `p2sh20`, the result will be transformed into the P2SH20 unlocking format: `unlockingBytecode <lockingBytecode>` (where `lockingBytecode` is the compiled bytecode of the locking script, without the \"redeem script\" transformation.)\\n\\nThe presence of the `lockingType` property indicates that this script is a locking script. It must be present on any script referenced by the `unlocks` property of another script.',\n                    enum: ['p2sh20', 'p2sh32', 'standard'],\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n                    type: 'string',\n                },\n                script: {\n                    description: 'The script definition in CashAssembly.',\n                    type: 'string',\n                },\n            },\n            required: ['lockingType', 'script'],\n            type: 'object',\n        },\n        AuthenticationTemplateScriptTest: {\n            additionalProperties: false,\n            properties: {\n                check: {\n                    description: 'The script to evaluate after the script being tested. This can be used to check that the tested script leaves the expected results on the stack. For example, if the tested script is expected to leave 3 items of a specific size on the stack, the `check` script could pop each resulting item from the stack and examine it for correctness.\\n\\nIn scenario testing, this script is appended to the script under test, and together they are treated as the locking script. Program evaluation is considered successful if the resulting program state can be verified by the virtual machine (e.g. the resulting stack contains a single `1`, no errors are produced, etc.).',\n                    type: 'string',\n                },\n                fails: {\n                    description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in bytecode that fails program verification. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                invalid: {\n                    description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in a compilation error. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this test (for use in user interfaces).',\n                    type: 'string',\n                },\n                passes: {\n                    description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in bytecode that passes program verification. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                setup: {\n                    description: 'A script to evaluate before the script being tested. This can be used to push values to the stack that are operated on by the tested script.\\n\\nIn scenario testing, this script is treated as the unlocking script.',\n                    type: 'string',\n                },\n            },\n            required: ['check'],\n            type: 'object',\n        },\n        AuthenticationTemplateScriptTested: {\n            additionalProperties: false,\n            properties: {\n                name: {\n                    description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n                    type: 'string',\n                },\n                pushed: {\n                    description: 'If set to `true`, indicates that this script should be wrapped in a push statement for testing.\\n\\nThis is useful for scripts that serve as \"bytecode templates\" – e.g. formatted messages or signature preimages. These scripts are typically not evaluated as bytecode but appear within push statements elsewhere in the template.\\n\\nDefaults to `false`.',\n                    type: 'boolean',\n                },\n                script: {\n                    description: 'The script definition in CashAssembly.',\n                    type: 'string',\n                },\n                tests: {\n                    additionalProperties: {\n                        $ref: '#/definitions/AuthenticationTemplateScriptTest',\n                    },\n                    description: 'One or more tests that can be used during development and during template validation to confirm the correctness of this tested script.',\n                    type: 'object',\n                },\n            },\n            required: ['script', 'tests'],\n            type: 'object',\n        },\n        AuthenticationTemplateScriptUnlocking: {\n            additionalProperties: false,\n            properties: {\n                ageLock: {\n                    description: 'TODO: not yet implemented\\n\\nThe minimum input age required for this unlocking script to become valid.\\n\\nThis value is provided as a CashAssembly script that must compile to the least significant 3 bytes of the minimum sequence number required for this unlocking script to be valid (the \"type bit\" and the 2-byte \"value\" – see BIP68 for details). This script has access to all other template scripts and variables, but cyclical references will produce an error at compile time.\\n\\nIn supporting wallets, this value can be computed at address creation time, and the remaining time for which any UTXO remains \"age-locked\" can be displayed in user interfaces (by parsing the \"type bit\" and \"value\" as described in BIP68).\\n\\nNote, because the precise value used by `OP_CHECKSEQUENCEVERIFY` can be provided in the unlocking script, it is trivial to create an unlocking script for which a proper value for `ageLock` is not possible to determine until the spending transaction is prepared. These cases are intentionally out-of-scope for this property. Instead, `ageLock` should only be used for unlocking scripts where the expected value can be compiled at address creation time.',\n                    type: 'string',\n                },\n                estimate: {\n                    description: 'The identifier of the scenario to use for this unlocking script when compiling an estimated transaction.\\n\\nUsing estimate scenarios, it\\'s possible for wallet software to compute an \"estimated transaction\", an invalid transaction that is guaranteed to be the same byte length as the final transaction. This length can be used to calculate the required transaction fee and assign values to the transaction\\'s change output(s). Because estimate scenarios provide \"estimated\" values for all variables, this estimation can be done by a single entity without input from other entities.\\n\\nIf not provided, the default scenario will be used for estimation. The default scenario only provides values for each `Key` and `HdKey` variable, so compilations requiring other variables will produce errors. See `AuthenticationTemplateScenario.extends` for details.',\n                    type: 'string',\n                },\n                fails: {\n                    description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in bytecode that fails program verification.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                invalid: {\n                    description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in a compilation error.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                name: {\n                    description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n                    type: 'string',\n                },\n                passes: {\n                    description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in bytecode that passes program verification.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                script: {\n                    description: 'The script definition in CashAssembly.',\n                    type: 'string',\n                },\n                timeLockType: {\n                    description: \"The expected type of time locks in this script.\\n\\nBecause `OP_CHECKLOCKTIMEVERIFY` reads from a transaction's `locktime` property, every input to a given transaction must share the same time lock type. This differs from `OP_CHECKSEQUENCEVERIFY` in that each input has its own `sequenceNumber`, so compatibility is not required.\\n\\nIf a transaction includes multiple inputs using scripts with `timeLockType` defined, and the types are not compatible, generation should fail.\\n\\nThe `timestamp` type indicates that the transaction's locktime is provided as a UNIX timestamp (the `locktime` value is greater than or equal to `500000000`).\\n\\nThe `height` type indicates that the transaction's locktime is provided as a block height (the `locktime` value is less than `500000000`).\\n\\nIf `timeLockType` is undefined, the script is assumed to have no reliance on absolute time locks.\",\n                    enum: ['height', 'timestamp'],\n                    type: 'string',\n                },\n                unlocks: {\n                    description: 'The identifier of the script that can be unlocked by this script.\\n\\nThe presence of the `unlocks` property indicates that this script is an unlocking script, and the script it unlocks must be a locking script.',\n                    type: 'string',\n                },\n            },\n            required: ['script', 'unlocks'],\n            type: 'object',\n        },\n        AuthenticationTemplateVariable: {\n            anyOf: [\n                { $ref: '#/definitions/AuthenticationTemplateAddressData' },\n                { $ref: '#/definitions/AuthenticationTemplateHdKey' },\n                { $ref: '#/definitions/AuthenticationTemplateKey' },\n                { $ref: '#/definitions/AuthenticationTemplateWalletData' },\n            ],\n        },\n        AuthenticationTemplateWalletData: {\n            additionalProperties: false,\n            properties: {\n                description: {\n                    description: 'A single-line, human readable description for this wallet data.',\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this wallet data.',\n                    type: 'string',\n                },\n                type: {\n                    const: 'WalletData',\n                    description: 'The `WalletData` type provides a static piece of data that should be collected once and stored at the time of wallet creation. `WalletData` should be persistent for the life of the wallet, rather than changing from locking script to locking script.\\n\\nFor address-specific data, use `AddressData`.',\n                    type: 'string',\n                },\n            },\n            required: ['type'],\n            type: 'object',\n        },\n        AuthenticationVirtualMachineIdentifier: {\n            description: \"Allowable identifiers for authentication virtual machine versions. The `BCH` prefix identifies the Bitcoin Cash network, the `XEC` prefix identifies the eCash network, the `BSV` prefix identifies the Bitcoin SV network, and the `BTC` prefix identifies the Bitcoin Core network. VM versions are named according to the date they were deployed on the indicated network.\\n\\nFor each network prefix, a `_SPEC` VM version is reserved to indicate that the template requires a custom, not-yet-deployed VM version (e.g. one or more CHIPs). By convention, templates marked for `_SPEC` VMs should indicate their requirements in the template description. After deployment of the `_SPEC` VM, when template compatibility is verified, the template's `supported` array should be updated to indicate compatibility with the live VM version.\",\n            enum: [\n                'BCH_2020_05',\n                'BCH_2021_05',\n                'BCH_2022_05',\n                'BCH_2023_05',\n                'BCH_SPEC',\n                'BSV_2020_02',\n                'BSV_SPEC',\n                'BTC_2017_08',\n                'BTC_SPEC',\n                'XEC_2020_05',\n                'XEC_SPEC',\n            ],\n            type: 'string',\n        },\n    },\n};\nconst schema23 = {\n    additionalProperties: false,\n    description: 'An `AuthenticationTemplate` (A.K.A. `CashAssembly Template`) specifies a set of locking scripts, unlocking scripts, and other information required to use a certain authentication scheme. Templates fully describe wallets and protocols in a way that can be shared between software clients.',\n    properties: {\n        $schema: {\n            description: 'The URI that identifies the JSON Schema used by this template. Try: `https://libauth.org/schemas/authentication-template-v0.schema.json` to enable documentation, autocompletion, and validation in JSON documents.',\n            type: 'string',\n        },\n        description: {\n            description: 'An optionally multi-line, free-form, human-readable description for this authentication template (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.',\n            type: 'string',\n        },\n        entities: {\n            additionalProperties: {\n                $ref: '#/definitions/AuthenticationTemplateEntity',\n            },\n            description: 'A map of entities defined in this authentication template.\\n\\nObject keys are used as entity identifiers, and by convention, should use `snake_case`.',\n            type: 'object',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this authentication template (for use in user interfaces).',\n            type: 'string',\n        },\n        scenarios: {\n            additionalProperties: {\n                $ref: '#/definitions/AuthenticationTemplateScenario',\n            },\n            description: 'A scenario describes a context in which one or more scripts might be used. Scenarios are used for transaction estimation and as an integrated testing system for authentication templates.\\n\\nObject keys are used as scenario identifiers, and by convention, should use `snake_case`.',\n            type: 'object',\n        },\n        scripts: {\n            additionalProperties: {\n                anyOf: [\n                    { $ref: '#/definitions/AuthenticationTemplateScript' },\n                    { $ref: '#/definitions/AuthenticationTemplateScriptLocking' },\n                    { $ref: '#/definitions/AuthenticationTemplateScriptTested' },\n                    { $ref: '#/definitions/AuthenticationTemplateScriptUnlocking' },\n                ],\n            },\n            description: 'A map of scripts used in this authentication template.\\n\\nObject keys are used as script identifiers, and by convention, should use `snake_case`.',\n            type: 'object',\n        },\n        supported: {\n            description: 'A list of authentication virtual machine versions supported by this template.\\n\\nVirtual machine identifiers use the format `CODE_YYYY_MM`, where `CODE` is the currency code used to identify the network, and `YYYY_MM` is the year and month in which the specified VM version became active on the indicated network.\\n\\nIdentifiers with the `_SPEC` suffix indicate that this template is intended for compatibility with a future virtual machine version, but at the time the template was created, that virtual machine had not yet become active on the specified chain.',\n            items: { $ref: '#/definitions/AuthenticationVirtualMachineIdentifier' },\n            type: 'array',\n        },\n        version: {\n            const: 0,\n            description: 'A number identifying the format of this AuthenticationTemplate. Currently, this implementation requires `version` be set to `0`.',\n            type: 'number',\n        },\n    },\n    required: ['entities', 'scripts', 'supported', 'version'],\n    type: 'object',\n};\nconst schema37 = {\n    additionalProperties: false,\n    description: 'An object describing the configuration for a particular script within an authentication template.',\n    properties: {\n        name: {\n            description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n            type: 'string',\n        },\n        script: {\n            description: 'The script definition in CashAssembly.',\n            type: 'string',\n        },\n    },\n    required: ['script'],\n    type: 'object',\n};\nconst schema38 = {\n    additionalProperties: false,\n    properties: {\n        lockingType: {\n            description: 'Indicates if P2SH20 infrastructure should be used when producing bytecode related to this script. For more information on P2SH20, see BIP16.\\n\\nWhen compiling locking scripts of type `p2sh20`, the result will be placed in a P2SH20 \"redeem script\" format: `OP_HASH160 <$(<lockingBytecode> OP_HASH160)> OP_EQUAL`\\n\\nWhen compiling unlocking scripts that unlock locking scripts of type `p2sh20`, the result will be transformed into the P2SH20 unlocking format: `unlockingBytecode <lockingBytecode>` (where `lockingBytecode` is the compiled bytecode of the locking script, without the \"redeem script\" transformation.)\\n\\nThe presence of the `lockingType` property indicates that this script is a locking script. It must be present on any script referenced by the `unlocks` property of another script.',\n            enum: ['p2sh20', 'p2sh32', 'standard'],\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n            type: 'string',\n        },\n        script: {\n            description: 'The script definition in CashAssembly.',\n            type: 'string',\n        },\n    },\n    required: ['lockingType', 'script'],\n    type: 'object',\n};\nconst schema41 = {\n    additionalProperties: false,\n    properties: {\n        ageLock: {\n            description: 'TODO: not yet implemented\\n\\nThe minimum input age required for this unlocking script to become valid.\\n\\nThis value is provided as a CashAssembly script that must compile to the least significant 3 bytes of the minimum sequence number required for this unlocking script to be valid (the \"type bit\" and the 2-byte \"value\" – see BIP68 for details). This script has access to all other template scripts and variables, but cyclical references will produce an error at compile time.\\n\\nIn supporting wallets, this value can be computed at address creation time, and the remaining time for which any UTXO remains \"age-locked\" can be displayed in user interfaces (by parsing the \"type bit\" and \"value\" as described in BIP68).\\n\\nNote, because the precise value used by `OP_CHECKSEQUENCEVERIFY` can be provided in the unlocking script, it is trivial to create an unlocking script for which a proper value for `ageLock` is not possible to determine until the spending transaction is prepared. These cases are intentionally out-of-scope for this property. Instead, `ageLock` should only be used for unlocking scripts where the expected value can be compiled at address creation time.',\n            type: 'string',\n        },\n        estimate: {\n            description: 'The identifier of the scenario to use for this unlocking script when compiling an estimated transaction.\\n\\nUsing estimate scenarios, it\\'s possible for wallet software to compute an \"estimated transaction\", an invalid transaction that is guaranteed to be the same byte length as the final transaction. This length can be used to calculate the required transaction fee and assign values to the transaction\\'s change output(s). Because estimate scenarios provide \"estimated\" values for all variables, this estimation can be done by a single entity without input from other entities.\\n\\nIf not provided, the default scenario will be used for estimation. The default scenario only provides values for each `Key` and `HdKey` variable, so compilations requiring other variables will produce errors. See `AuthenticationTemplateScenario.extends` for details.',\n            type: 'string',\n        },\n        fails: {\n            description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in bytecode that fails program verification.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        invalid: {\n            description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in a compilation error.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        name: {\n            description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n            type: 'string',\n        },\n        passes: {\n            description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in bytecode that passes program verification.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        script: {\n            description: 'The script definition in CashAssembly.',\n            type: 'string',\n        },\n        timeLockType: {\n            description: \"The expected type of time locks in this script.\\n\\nBecause `OP_CHECKLOCKTIMEVERIFY` reads from a transaction's `locktime` property, every input to a given transaction must share the same time lock type. This differs from `OP_CHECKSEQUENCEVERIFY` in that each input has its own `sequenceNumber`, so compatibility is not required.\\n\\nIf a transaction includes multiple inputs using scripts with `timeLockType` defined, and the types are not compatible, generation should fail.\\n\\nThe `timestamp` type indicates that the transaction's locktime is provided as a UNIX timestamp (the `locktime` value is greater than or equal to `500000000`).\\n\\nThe `height` type indicates that the transaction's locktime is provided as a block height (the `locktime` value is less than `500000000`).\\n\\nIf `timeLockType` is undefined, the script is assumed to have no reliance on absolute time locks.\",\n            enum: ['height', 'timestamp'],\n            type: 'string',\n        },\n        unlocks: {\n            description: 'The identifier of the script that can be unlocked by this script.\\n\\nThe presence of the `unlocks` property indicates that this script is an unlocking script, and the script it unlocks must be a locking script.',\n            type: 'string',\n        },\n    },\n    required: ['script', 'unlocks'],\n    type: 'object',\n};\nconst schema42 = {\n    description: \"Allowable identifiers for authentication virtual machine versions. The `BCH` prefix identifies the Bitcoin Cash network, the `XEC` prefix identifies the eCash network, the `BSV` prefix identifies the Bitcoin SV network, and the `BTC` prefix identifies the Bitcoin Core network. VM versions are named according to the date they were deployed on the indicated network.\\n\\nFor each network prefix, a `_SPEC` VM version is reserved to indicate that the template requires a custom, not-yet-deployed VM version (e.g. one or more CHIPs). By convention, templates marked for `_SPEC` VMs should indicate their requirements in the template description. After deployment of the `_SPEC` VM, when template compatibility is verified, the template's `supported` array should be updated to indicate compatibility with the live VM version.\",\n    enum: [\n        'BCH_2020_05',\n        'BCH_2021_05',\n        'BCH_2022_05',\n        'BCH_2023_05',\n        'BCH_SPEC',\n        'BSV_2020_02',\n        'BSV_SPEC',\n        'BTC_2017_08',\n        'BTC_SPEC',\n        'XEC_2020_05',\n        'XEC_SPEC',\n    ],\n    type: 'string',\n};\nconst schema24 = {\n    additionalProperties: false,\n    description: 'An object describing the configuration for a particular entity within an authentication template.',\n    properties: {\n        description: {\n            description: 'An optionally multi-line, free-form, human-readable description for this entity (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.',\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this entity for use in user interfaces and error messages, e.g.: `Trusted Third-Party`.',\n            type: 'string',\n        },\n        scripts: {\n            description: 'An array of the identifiers of each script the entity must be capable of generating, e.g. each of the unlocking scripts this entity might use.\\n\\nProvided the necessary variables, any entity can construct any script, but this option allows us to hint to more advanced wallets which scripts to recommend to users. (Especially when many scripts require inter-entity communication initiated by a user.)\\n\\nIf not provided, this property is assumed to include all scripts in the template.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        variables: {\n            additionalProperties: {\n                $ref: '#/definitions/AuthenticationTemplateVariable',\n            },\n            description: \"A map of variables that must be provided by this entity for use in the template's scripts. Some variables are required before locking script generation, while some variables can or must be resolved only before unlocking script generation.\\n\\nObject keys are used as variable identifiers, and by convention, should use `snake_case`.\",\n            type: 'object',\n        },\n    },\n    type: 'object',\n};\nconst schema25 = {\n    anyOf: [\n        { $ref: '#/definitions/AuthenticationTemplateAddressData' },\n        { $ref: '#/definitions/AuthenticationTemplateHdKey' },\n        { $ref: '#/definitions/AuthenticationTemplateKey' },\n        { $ref: '#/definitions/AuthenticationTemplateWalletData' },\n    ],\n};\nconst schema26 = {\n    additionalProperties: false,\n    properties: {\n        description: {\n            description: 'A single-line, human readable description for this address data.',\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this address data.',\n            type: 'string',\n        },\n        type: {\n            const: 'AddressData',\n            description: '`AddressData` is the most low-level variable type. It must be collected and stored each time a script is generated (usually, a locking script). `AddressData` can include any type of data, and can be used in any way.\\n\\nFor more persistent data, use `WalletData`.',\n            type: 'string',\n        },\n    },\n    required: ['type'],\n    type: 'object',\n};\nconst schema27 = {\n    additionalProperties: false,\n    properties: {\n        addressOffset: {\n            description: 'The offset by which to increment the `addressIndex` provided in the compilation data when deriving this `HdKey`. (Default: 0)\\n\\nThis is useful for deriving the \"next\" (`1`) or \"previous\" (`-1`) address to be used in the current compiler configuration.',\n            type: 'number',\n        },\n        description: {\n            description: 'A single-line, human readable description for this HD key.',\n            type: 'string',\n        },\n        hdPublicKeyDerivationPath: {\n            description: \"The path to derive the entity's HD public key from the entity's master HD private key. By default, `m` (i.e. the entity's HD public key represents the same node in the HD tree as its HD private key).\\n\\nThis can be used to specify another derivation path from which the `publicDerivationPath` begins, e.g. `m/0'/1'/2'`. See `publicDerivationPath` for details.\\n\\nThis path must begin with an `m` (private derivation) and be fixed – it cannot contain an `i` character to represent the address index, as a dynamic hardened path would require a new HD public key for each address.\",\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this HD key.',\n            type: 'string',\n        },\n        privateDerivationPath: {\n            description: \"The derivation path used to derive this `HdKey` from the owning entity's HD private key. By default, `m/i`.\\n\\nThis path uses the notation specified in BIP32 and the `i` character to represent the location of the `addressIndex`:\\n\\nThe first character must be `m` (private derivation), followed by sets of `/` and a number representing the child index used in the derivation at that depth. Hardened derivation is represented by a trailing `'`, and hardened child indexes are represented with the hardened index offset (`2147483648`) subtracted. The `i` character is replaced with the value of `addressIndex` plus this `HdKey`'s `addressOffset`. If the `i` character is followed by `'`, the hardened index offset is added (`2147483648`) and hardened derivation is used.\\n\\nFor example, `m/0/1'/i'` uses 3 levels of derivation, with child indexes in the following order:\\n\\n`derive(derive(derive(node, 0), 2147483648 + 1), 2147483648 + addressIndex + addressOffset)`\\n\\nBecause hardened derivation requires knowledge of the private key, `HdKey` variables with `derivationPath`s that include hardened derivation cannot use HD public derivation (the `hdPublicKeys` property in `CompilationData`). Instead, compilation requires the respective HD private key (`CompilationData.hdKeys.hdPrivateKeys`) or the fully-derived public key (`CompilationData.hdKeys.derivedPublicKeys`).\",\n            type: 'string',\n        },\n        publicDerivationPath: {\n            description: \"The derivation path used to derive this `HdKey`'s public key from the owning entity's HD public key. If not set, the public equivalent of `privateDerivationPath` is used. For the `privateDerivationPath` default of `m/i`, this is `M/i`.\\n\\nIf `privateDerivationPath` uses hardened derivation for some levels, but later derivation levels use non-hardened derivation, `publicDerivationPath` can be used to specify a public derivation path beginning from `hdPublicKeyDerivationPath` (i.e. `publicDerivationPath` should always be a non-hardened segment of `privateDerivationPath` that follows `hdPublicKeyDerivationPath`).\\n\\nThe first character must be `M` (public derivation), followed by sets of `/` and a number representing the child index used in the non-hardened derivation at that depth.\\n\\nFor example, if `privateDerivationPath` is `m/0'/i`, it is not possible to derive the equivalent public key with only the HD public key `M`. (The path \\\"`M/0'/i`\\\" is impossible.) However, given the HD public key for `m/0'`, it is possible to derive the public key of `m/0'/i` for any `i`. In this case, `hdPublicKeyDerivationPath` would be `m/0'` and `publicDerivationPath` would be the remaining `M/i`.\",\n            type: 'string',\n        },\n        type: {\n            const: 'HdKey',\n            description: 'The `HdKey` (Hierarchical-Deterministic Key) type automatically manages key generation and mapping in a standard way. For greater control, use `Key`.',\n            type: 'string',\n        },\n    },\n    required: ['type'],\n    type: 'object',\n};\nconst schema28 = {\n    additionalProperties: false,\n    properties: {\n        description: {\n            description: 'A single-line, human readable description for this key.',\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this key.',\n            type: 'string',\n        },\n        type: {\n            const: 'Key',\n            description: 'The `Key` type provides fine-grained control over key generation and mapping. Most templates should instead use `HdKey`.\\n\\nAny HD (Hierarchical-Deterministic) derivation must be completed outside of the templating system and provided at the time of use.',\n            type: 'string',\n        },\n    },\n    required: ['type'],\n    type: 'object',\n};\nconst schema29 = {\n    additionalProperties: false,\n    properties: {\n        description: {\n            description: 'A single-line, human readable description for this wallet data.',\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this wallet data.',\n            type: 'string',\n        },\n        type: {\n            const: 'WalletData',\n            description: 'The `WalletData` type provides a static piece of data that should be collected once and stored at the time of wallet creation. `WalletData` should be persistent for the life of the wallet, rather than changing from locking script to locking script.\\n\\nFor address-specific data, use `AddressData`.',\n            type: 'string',\n        },\n    },\n    required: ['type'],\n    type: 'object',\n};\nfunction validate23(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    const _errs0 = errors;\n    let valid0 = false;\n    const _errs1 = errors;\n    const _errs2 = errors;\n    if (errors === _errs2) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            let missing0;\n            if (data.type === undefined && (missing0 = 'type')) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: '#/definitions/AuthenticationTemplateAddressData/required',\n                    keyword: 'required',\n                    params: { missingProperty: missing0 },\n                    message: \"must have required property '\" + missing0 + \"'\",\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n            else {\n                const _errs4 = errors;\n                for (const key0 in data) {\n                    if (!(key0 === 'description' || key0 === 'name' || key0 === 'type')) {\n                        const err1 = {\n                            instancePath,\n                            schemaPath: '#/definitions/AuthenticationTemplateAddressData/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err1];\n                        }\n                        else {\n                            vErrors.push(err1);\n                        }\n                        errors++;\n                        break;\n                    }\n                }\n                if (_errs4 === errors) {\n                    if (data.description !== undefined) {\n                        const _errs5 = errors;\n                        if (typeof data.description !== 'string') {\n                            const err2 = {\n                                instancePath: instancePath + '/description',\n                                schemaPath: '#/definitions/AuthenticationTemplateAddressData/properties/description/type',\n                                keyword: 'type',\n                                params: { type: 'string' },\n                                message: 'must be string',\n                            };\n                            if (vErrors === null) {\n                                vErrors = [err2];\n                            }\n                            else {\n                                vErrors.push(err2);\n                            }\n                            errors++;\n                        }\n                        var valid2 = _errs5 === errors;\n                    }\n                    else {\n                        var valid2 = true;\n                    }\n                    if (valid2) {\n                        if (data.name !== undefined) {\n                            const _errs7 = errors;\n                            if (typeof data.name !== 'string') {\n                                const err3 = {\n                                    instancePath: instancePath + '/name',\n                                    schemaPath: '#/definitions/AuthenticationTemplateAddressData/properties/name/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err3];\n                                }\n                                else {\n                                    vErrors.push(err3);\n                                }\n                                errors++;\n                            }\n                            var valid2 = _errs7 === errors;\n                        }\n                        else {\n                            var valid2 = true;\n                        }\n                        if (valid2) {\n                            if (data.type !== undefined) {\n                                let data2 = data.type;\n                                const _errs9 = errors;\n                                if (typeof data2 !== 'string') {\n                                    const err4 = {\n                                        instancePath: instancePath + '/type',\n                                        schemaPath: '#/definitions/AuthenticationTemplateAddressData/properties/type/type',\n                                        keyword: 'type',\n                                        params: { type: 'string' },\n                                        message: 'must be string',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err4];\n                                    }\n                                    else {\n                                        vErrors.push(err4);\n                                    }\n                                    errors++;\n                                }\n                                if ('AddressData' !== data2) {\n                                    const err5 = {\n                                        instancePath: instancePath + '/type',\n                                        schemaPath: '#/definitions/AuthenticationTemplateAddressData/properties/type/const',\n                                        keyword: 'const',\n                                        params: { allowedValue: 'AddressData' },\n                                        message: 'must be equal to constant',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err5];\n                                    }\n                                    else {\n                                        vErrors.push(err5);\n                                    }\n                                    errors++;\n                                }\n                                var valid2 = _errs9 === errors;\n                            }\n                            else {\n                                var valid2 = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            const err6 = {\n                instancePath,\n                schemaPath: '#/definitions/AuthenticationTemplateAddressData/type',\n                keyword: 'type',\n                params: { type: 'object' },\n                message: 'must be object',\n            };\n            if (vErrors === null) {\n                vErrors = [err6];\n            }\n            else {\n                vErrors.push(err6);\n            }\n            errors++;\n        }\n    }\n    var _valid0 = _errs1 === errors;\n    valid0 = valid0 || _valid0;\n    if (!valid0) {\n        const _errs11 = errors;\n        const _errs12 = errors;\n        if (errors === _errs12) {\n            if (data && typeof data == 'object' && !Array.isArray(data)) {\n                let missing1;\n                if (data.type === undefined && (missing1 = 'type')) {\n                    const err7 = {\n                        instancePath,\n                        schemaPath: '#/definitions/AuthenticationTemplateHdKey/required',\n                        keyword: 'required',\n                        params: { missingProperty: missing1 },\n                        message: \"must have required property '\" + missing1 + \"'\",\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err7];\n                    }\n                    else {\n                        vErrors.push(err7);\n                    }\n                    errors++;\n                }\n                else {\n                    const _errs14 = errors;\n                    for (const key1 in data) {\n                        if (!(key1 === 'addressOffset' ||\n                            key1 === 'description' ||\n                            key1 === 'hdPublicKeyDerivationPath' ||\n                            key1 === 'name' ||\n                            key1 === 'privateDerivationPath' ||\n                            key1 === 'publicDerivationPath' ||\n                            key1 === 'type')) {\n                            const err8 = {\n                                instancePath,\n                                schemaPath: '#/definitions/AuthenticationTemplateHdKey/additionalProperties',\n                                keyword: 'additionalProperties',\n                                params: { additionalProperty: key1 },\n                                message: 'must NOT have additional properties',\n                            };\n                            if (vErrors === null) {\n                                vErrors = [err8];\n                            }\n                            else {\n                                vErrors.push(err8);\n                            }\n                            errors++;\n                            break;\n                        }\n                    }\n                    if (_errs14 === errors) {\n                        if (data.addressOffset !== undefined) {\n                            let data3 = data.addressOffset;\n                            const _errs15 = errors;\n                            if (!(typeof data3 == 'number' && isFinite(data3))) {\n                                const err9 = {\n                                    instancePath: instancePath + '/addressOffset',\n                                    schemaPath: '#/definitions/AuthenticationTemplateHdKey/properties/addressOffset/type',\n                                    keyword: 'type',\n                                    params: { type: 'number' },\n                                    message: 'must be number',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err9];\n                                }\n                                else {\n                                    vErrors.push(err9);\n                                }\n                                errors++;\n                            }\n                            var valid4 = _errs15 === errors;\n                        }\n                        else {\n                            var valid4 = true;\n                        }\n                        if (valid4) {\n                            if (data.description !== undefined) {\n                                const _errs17 = errors;\n                                if (typeof data.description !== 'string') {\n                                    const err10 = {\n                                        instancePath: instancePath + '/description',\n                                        schemaPath: '#/definitions/AuthenticationTemplateHdKey/properties/description/type',\n                                        keyword: 'type',\n                                        params: { type: 'string' },\n                                        message: 'must be string',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err10];\n                                    }\n                                    else {\n                                        vErrors.push(err10);\n                                    }\n                                    errors++;\n                                }\n                                var valid4 = _errs17 === errors;\n                            }\n                            else {\n                                var valid4 = true;\n                            }\n                            if (valid4) {\n                                if (data.hdPublicKeyDerivationPath !== undefined) {\n                                    const _errs19 = errors;\n                                    if (typeof data.hdPublicKeyDerivationPath !== 'string') {\n                                        const err11 = {\n                                            instancePath: instancePath + '/hdPublicKeyDerivationPath',\n                                            schemaPath: '#/definitions/AuthenticationTemplateHdKey/properties/hdPublicKeyDerivationPath/type',\n                                            keyword: 'type',\n                                            params: { type: 'string' },\n                                            message: 'must be string',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err11];\n                                        }\n                                        else {\n                                            vErrors.push(err11);\n                                        }\n                                        errors++;\n                                    }\n                                    var valid4 = _errs19 === errors;\n                                }\n                                else {\n                                    var valid4 = true;\n                                }\n                                if (valid4) {\n                                    if (data.name !== undefined) {\n                                        const _errs21 = errors;\n                                        if (typeof data.name !== 'string') {\n                                            const err12 = {\n                                                instancePath: instancePath + '/name',\n                                                schemaPath: '#/definitions/AuthenticationTemplateHdKey/properties/name/type',\n                                                keyword: 'type',\n                                                params: { type: 'string' },\n                                                message: 'must be string',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err12];\n                                            }\n                                            else {\n                                                vErrors.push(err12);\n                                            }\n                                            errors++;\n                                        }\n                                        var valid4 = _errs21 === errors;\n                                    }\n                                    else {\n                                        var valid4 = true;\n                                    }\n                                    if (valid4) {\n                                        if (data.privateDerivationPath !== undefined) {\n                                            const _errs23 = errors;\n                                            if (typeof data.privateDerivationPath !== 'string') {\n                                                const err13 = {\n                                                    instancePath: instancePath + '/privateDerivationPath',\n                                                    schemaPath: '#/definitions/AuthenticationTemplateHdKey/properties/privateDerivationPath/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'string' },\n                                                    message: 'must be string',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err13];\n                                                }\n                                                else {\n                                                    vErrors.push(err13);\n                                                }\n                                                errors++;\n                                            }\n                                            var valid4 = _errs23 === errors;\n                                        }\n                                        else {\n                                            var valid4 = true;\n                                        }\n                                        if (valid4) {\n                                            if (data.publicDerivationPath !== undefined) {\n                                                const _errs25 = errors;\n                                                if (typeof data.publicDerivationPath !== 'string') {\n                                                    const err14 = {\n                                                        instancePath: instancePath + '/publicDerivationPath',\n                                                        schemaPath: '#/definitions/AuthenticationTemplateHdKey/properties/publicDerivationPath/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'string' },\n                                                        message: 'must be string',\n                                                    };\n                                                    if (vErrors === null) {\n                                                        vErrors = [err14];\n                                                    }\n                                                    else {\n                                                        vErrors.push(err14);\n                                                    }\n                                                    errors++;\n                                                }\n                                                var valid4 = _errs25 === errors;\n                                            }\n                                            else {\n                                                var valid4 = true;\n                                            }\n                                            if (valid4) {\n                                                if (data.type !== undefined) {\n                                                    let data9 = data.type;\n                                                    const _errs27 = errors;\n                                                    if (typeof data9 !== 'string') {\n                                                        const err15 = {\n                                                            instancePath: instancePath + '/type',\n                                                            schemaPath: '#/definitions/AuthenticationTemplateHdKey/properties/type/type',\n                                                            keyword: 'type',\n                                                            params: { type: 'string' },\n                                                            message: 'must be string',\n                                                        };\n                                                        if (vErrors === null) {\n                                                            vErrors = [err15];\n                                                        }\n                                                        else {\n                                                            vErrors.push(err15);\n                                                        }\n                                                        errors++;\n                                                    }\n                                                    if ('HdKey' !== data9) {\n                                                        const err16 = {\n                                                            instancePath: instancePath + '/type',\n                                                            schemaPath: '#/definitions/AuthenticationTemplateHdKey/properties/type/const',\n                                                            keyword: 'const',\n                                                            params: { allowedValue: 'HdKey' },\n                                                            message: 'must be equal to constant',\n                                                        };\n                                                        if (vErrors === null) {\n                                                            vErrors = [err16];\n                                                        }\n                                                        else {\n                                                            vErrors.push(err16);\n                                                        }\n                                                        errors++;\n                                                    }\n                                                    var valid4 = _errs27 === errors;\n                                                }\n                                                else {\n                                                    var valid4 = true;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                const err17 = {\n                    instancePath,\n                    schemaPath: '#/definitions/AuthenticationTemplateHdKey/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                };\n                if (vErrors === null) {\n                    vErrors = [err17];\n                }\n                else {\n                    vErrors.push(err17);\n                }\n                errors++;\n            }\n        }\n        var _valid0 = _errs11 === errors;\n        valid0 = valid0 || _valid0;\n        if (!valid0) {\n            const _errs29 = errors;\n            const _errs30 = errors;\n            if (errors === _errs30) {\n                if (data && typeof data == 'object' && !Array.isArray(data)) {\n                    let missing2;\n                    if (data.type === undefined && (missing2 = 'type')) {\n                        const err18 = {\n                            instancePath,\n                            schemaPath: '#/definitions/AuthenticationTemplateKey/required',\n                            keyword: 'required',\n                            params: { missingProperty: missing2 },\n                            message: \"must have required property '\" + missing2 + \"'\",\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err18];\n                        }\n                        else {\n                            vErrors.push(err18);\n                        }\n                        errors++;\n                    }\n                    else {\n                        const _errs32 = errors;\n                        for (const key2 in data) {\n                            if (!(key2 === 'description' || key2 === 'name' || key2 === 'type')) {\n                                const err19 = {\n                                    instancePath,\n                                    schemaPath: '#/definitions/AuthenticationTemplateKey/additionalProperties',\n                                    keyword: 'additionalProperties',\n                                    params: { additionalProperty: key2 },\n                                    message: 'must NOT have additional properties',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err19];\n                                }\n                                else {\n                                    vErrors.push(err19);\n                                }\n                                errors++;\n                                break;\n                            }\n                        }\n                        if (_errs32 === errors) {\n                            if (data.description !== undefined) {\n                                const _errs33 = errors;\n                                if (typeof data.description !== 'string') {\n                                    const err20 = {\n                                        instancePath: instancePath + '/description',\n                                        schemaPath: '#/definitions/AuthenticationTemplateKey/properties/description/type',\n                                        keyword: 'type',\n                                        params: { type: 'string' },\n                                        message: 'must be string',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err20];\n                                    }\n                                    else {\n                                        vErrors.push(err20);\n                                    }\n                                    errors++;\n                                }\n                                var valid6 = _errs33 === errors;\n                            }\n                            else {\n                                var valid6 = true;\n                            }\n                            if (valid6) {\n                                if (data.name !== undefined) {\n                                    const _errs35 = errors;\n                                    if (typeof data.name !== 'string') {\n                                        const err21 = {\n                                            instancePath: instancePath + '/name',\n                                            schemaPath: '#/definitions/AuthenticationTemplateKey/properties/name/type',\n                                            keyword: 'type',\n                                            params: { type: 'string' },\n                                            message: 'must be string',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err21];\n                                        }\n                                        else {\n                                            vErrors.push(err21);\n                                        }\n                                        errors++;\n                                    }\n                                    var valid6 = _errs35 === errors;\n                                }\n                                else {\n                                    var valid6 = true;\n                                }\n                                if (valid6) {\n                                    if (data.type !== undefined) {\n                                        let data12 = data.type;\n                                        const _errs37 = errors;\n                                        if (typeof data12 !== 'string') {\n                                            const err22 = {\n                                                instancePath: instancePath + '/type',\n                                                schemaPath: '#/definitions/AuthenticationTemplateKey/properties/type/type',\n                                                keyword: 'type',\n                                                params: { type: 'string' },\n                                                message: 'must be string',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err22];\n                                            }\n                                            else {\n                                                vErrors.push(err22);\n                                            }\n                                            errors++;\n                                        }\n                                        if ('Key' !== data12) {\n                                            const err23 = {\n                                                instancePath: instancePath + '/type',\n                                                schemaPath: '#/definitions/AuthenticationTemplateKey/properties/type/const',\n                                                keyword: 'const',\n                                                params: { allowedValue: 'Key' },\n                                                message: 'must be equal to constant',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err23];\n                                            }\n                                            else {\n                                                vErrors.push(err23);\n                                            }\n                                            errors++;\n                                        }\n                                        var valid6 = _errs37 === errors;\n                                    }\n                                    else {\n                                        var valid6 = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    const err24 = {\n                        instancePath,\n                        schemaPath: '#/definitions/AuthenticationTemplateKey/type',\n                        keyword: 'type',\n                        params: { type: 'object' },\n                        message: 'must be object',\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err24];\n                    }\n                    else {\n                        vErrors.push(err24);\n                    }\n                    errors++;\n                }\n            }\n            var _valid0 = _errs29 === errors;\n            valid0 = valid0 || _valid0;\n            if (!valid0) {\n                const _errs39 = errors;\n                const _errs40 = errors;\n                if (errors === _errs40) {\n                    if (data && typeof data == 'object' && !Array.isArray(data)) {\n                        let missing3;\n                        if (data.type === undefined && (missing3 = 'type')) {\n                            const err25 = {\n                                instancePath,\n                                schemaPath: '#/definitions/AuthenticationTemplateWalletData/required',\n                                keyword: 'required',\n                                params: { missingProperty: missing3 },\n                                message: \"must have required property '\" + missing3 + \"'\",\n                            };\n                            if (vErrors === null) {\n                                vErrors = [err25];\n                            }\n                            else {\n                                vErrors.push(err25);\n                            }\n                            errors++;\n                        }\n                        else {\n                            const _errs42 = errors;\n                            for (const key3 in data) {\n                                if (!(key3 === 'description' ||\n                                    key3 === 'name' ||\n                                    key3 === 'type')) {\n                                    const err26 = {\n                                        instancePath,\n                                        schemaPath: '#/definitions/AuthenticationTemplateWalletData/additionalProperties',\n                                        keyword: 'additionalProperties',\n                                        params: { additionalProperty: key3 },\n                                        message: 'must NOT have additional properties',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err26];\n                                    }\n                                    else {\n                                        vErrors.push(err26);\n                                    }\n                                    errors++;\n                                    break;\n                                }\n                            }\n                            if (_errs42 === errors) {\n                                if (data.description !== undefined) {\n                                    const _errs43 = errors;\n                                    if (typeof data.description !== 'string') {\n                                        const err27 = {\n                                            instancePath: instancePath + '/description',\n                                            schemaPath: '#/definitions/AuthenticationTemplateWalletData/properties/description/type',\n                                            keyword: 'type',\n                                            params: { type: 'string' },\n                                            message: 'must be string',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err27];\n                                        }\n                                        else {\n                                            vErrors.push(err27);\n                                        }\n                                        errors++;\n                                    }\n                                    var valid8 = _errs43 === errors;\n                                }\n                                else {\n                                    var valid8 = true;\n                                }\n                                if (valid8) {\n                                    if (data.name !== undefined) {\n                                        const _errs45 = errors;\n                                        if (typeof data.name !== 'string') {\n                                            const err28 = {\n                                                instancePath: instancePath + '/name',\n                                                schemaPath: '#/definitions/AuthenticationTemplateWalletData/properties/name/type',\n                                                keyword: 'type',\n                                                params: { type: 'string' },\n                                                message: 'must be string',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err28];\n                                            }\n                                            else {\n                                                vErrors.push(err28);\n                                            }\n                                            errors++;\n                                        }\n                                        var valid8 = _errs45 === errors;\n                                    }\n                                    else {\n                                        var valid8 = true;\n                                    }\n                                    if (valid8) {\n                                        if (data.type !== undefined) {\n                                            let data15 = data.type;\n                                            const _errs47 = errors;\n                                            if (typeof data15 !== 'string') {\n                                                const err29 = {\n                                                    instancePath: instancePath + '/type',\n                                                    schemaPath: '#/definitions/AuthenticationTemplateWalletData/properties/type/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'string' },\n                                                    message: 'must be string',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err29];\n                                                }\n                                                else {\n                                                    vErrors.push(err29);\n                                                }\n                                                errors++;\n                                            }\n                                            if ('WalletData' !== data15) {\n                                                const err30 = {\n                                                    instancePath: instancePath + '/type',\n                                                    schemaPath: '#/definitions/AuthenticationTemplateWalletData/properties/type/const',\n                                                    keyword: 'const',\n                                                    params: { allowedValue: 'WalletData' },\n                                                    message: 'must be equal to constant',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err30];\n                                                }\n                                                else {\n                                                    vErrors.push(err30);\n                                                }\n                                                errors++;\n                                            }\n                                            var valid8 = _errs47 === errors;\n                                        }\n                                        else {\n                                            var valid8 = true;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        const err31 = {\n                            instancePath,\n                            schemaPath: '#/definitions/AuthenticationTemplateWalletData/type',\n                            keyword: 'type',\n                            params: { type: 'object' },\n                            message: 'must be object',\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err31];\n                        }\n                        else {\n                            vErrors.push(err31);\n                        }\n                        errors++;\n                    }\n                }\n                var _valid0 = _errs39 === errors;\n                valid0 = valid0 || _valid0;\n            }\n        }\n    }\n    if (!valid0) {\n        const err32 = {\n            instancePath,\n            schemaPath: '#/anyOf',\n            keyword: 'anyOf',\n            params: {},\n            message: 'must match a schema in anyOf',\n        };\n        if (vErrors === null) {\n            vErrors = [err32];\n        }\n        else {\n            vErrors.push(err32);\n        }\n        errors++;\n        validate23.errors = vErrors;\n        return false;\n    }\n    else {\n        errors = _errs0;\n        if (vErrors !== null) {\n            if (_errs0) {\n                vErrors.length = _errs0;\n            }\n            else {\n                vErrors = null;\n            }\n        }\n    }\n    validate23.errors = vErrors;\n    return errors === 0;\n}\nfunction validate22(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            const _errs1 = errors;\n            for (const key0 in data) {\n                if (!(key0 === 'description' ||\n                    key0 === 'name' ||\n                    key0 === 'scripts' ||\n                    key0 === 'variables')) {\n                    validate22.errors = [\n                        {\n                            instancePath,\n                            schemaPath: '#/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        },\n                    ];\n                    return false;\n                    break;\n                }\n            }\n            if (_errs1 === errors) {\n                if (data.description !== undefined) {\n                    const _errs2 = errors;\n                    if (typeof data.description !== 'string') {\n                        validate22.errors = [\n                            {\n                                instancePath: instancePath + '/description',\n                                schemaPath: '#/properties/description/type',\n                                keyword: 'type',\n                                params: { type: 'string' },\n                                message: 'must be string',\n                            },\n                        ];\n                        return false;\n                    }\n                    var valid0 = _errs2 === errors;\n                }\n                else {\n                    var valid0 = true;\n                }\n                if (valid0) {\n                    if (data.name !== undefined) {\n                        const _errs4 = errors;\n                        if (typeof data.name !== 'string') {\n                            validate22.errors = [\n                                {\n                                    instancePath: instancePath + '/name',\n                                    schemaPath: '#/properties/name/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                },\n                            ];\n                            return false;\n                        }\n                        var valid0 = _errs4 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.scripts !== undefined) {\n                            let data2 = data.scripts;\n                            const _errs6 = errors;\n                            if (errors === _errs6) {\n                                if (Array.isArray(data2)) {\n                                    var valid1 = true;\n                                    const len0 = data2.length;\n                                    for (let i0 = 0; i0 < len0; i0++) {\n                                        const _errs8 = errors;\n                                        if (typeof data2[i0] !== 'string') {\n                                            validate22.errors = [\n                                                {\n                                                    instancePath: instancePath + '/scripts/' + i0,\n                                                    schemaPath: '#/properties/scripts/items/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'string' },\n                                                    message: 'must be string',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                        var valid1 = _errs8 === errors;\n                                        if (!valid1) {\n                                            break;\n                                        }\n                                    }\n                                }\n                                else {\n                                    validate22.errors = [\n                                        {\n                                            instancePath: instancePath + '/scripts',\n                                            schemaPath: '#/properties/scripts/type',\n                                            keyword: 'type',\n                                            params: { type: 'array' },\n                                            message: 'must be array',\n                                        },\n                                    ];\n                                    return false;\n                                }\n                            }\n                            var valid0 = _errs6 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                        if (valid0) {\n                            if (data.variables !== undefined) {\n                                let data4 = data.variables;\n                                const _errs10 = errors;\n                                if (errors === _errs10) {\n                                    if (data4 &&\n                                        typeof data4 == 'object' &&\n                                        !Array.isArray(data4)) {\n                                        for (const key1 in data4) {\n                                            const _errs13 = errors;\n                                            if (!validate23(data4[key1], {\n                                                instancePath: instancePath +\n                                                    '/variables/' +\n                                                    key1.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                parentData: data4,\n                                                parentDataProperty: key1,\n                                                rootData,\n                                            })) {\n                                                vErrors =\n                                                    vErrors === null\n                                                        ? validate23.errors\n                                                        : vErrors.concat(validate23.errors);\n                                                errors = vErrors.length;\n                                            }\n                                            var valid2 = _errs13 === errors;\n                                            if (!valid2) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        validate22.errors = [\n                                            {\n                                                instancePath: instancePath + '/variables',\n                                                schemaPath: '#/properties/variables/type',\n                                                keyword: 'type',\n                                                params: { type: 'object' },\n                                                message: 'must be object',\n                                            },\n                                        ];\n                                        return false;\n                                    }\n                                }\n                                var valid0 = _errs10 === errors;\n                            }\n                            else {\n                                var valid0 = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate22.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate22.errors = vErrors;\n    return errors === 0;\n}\nconst schema30 = {\n    additionalProperties: false,\n    description: 'An object describing the configuration for a particular scenario within an authentication template.',\n    properties: {\n        data: {\n            $ref: '#/definitions/AuthenticationTemplateScenarioData',\n            description: \"An object defining the data to use while compiling this scenario. The properties specified here are used to extend the existing scenario data based on this scenario's `extends` property.\\n\\nEach property is extended individually – to unset a previously-set property, the property must be individually overridden in this object.\",\n        },\n        description: {\n            description: 'An optionally multi-line, free-form, human-readable description for this scenario (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.',\n            type: 'string',\n        },\n        extends: {\n            description: \"The identifier of the scenario that this scenario extends. Any `data` or `transaction` properties not defined in this scenario inherit from the extended parent scenario.\\n\\nIf undefined, this scenario is assumed to extend the default scenario:\\n\\n- The default values for `data` are set:   - The identifiers of all `Key` variables and entities in this template are lexicographically sorted, then each is assigned an incrementing positive integer – beginning with `1` – encoded as an unsigned, 256-bit, big-endian integer (i.e. `0x0000...0001` (32 bytes), `0x0000...0002`, `0x0000...0003`, etc.). For `Key`s, this assigned value is used as the private key; For entities, the assigned value is used as the master seed of that entity's `HdPrivateKey`. If `hdKey` is set, the `addressIndex` is set to `0`.   - `currentBlockHeight` is set to `2`. This is the height of the second mined block after the genesis block: `000000006a625f06636b8bb6ac7b960a8d03705d1ace08b1a19da3fdcc99ddbd`. This default value was chosen to be low enough to simplify the debugging of block height offsets while remaining differentiated from `0` and `1`, which are used both as boolean return values and for control flow.   - `currentBlockTime` is set to `1231469665`. This is the Median Time-Past block time (BIP113) of block `2`.\\n\\n- Then `transaction` is set based on use:   - if the scenario is being used for transaction estimation, all transaction properties are taken from the transaction being estimated.   - if the scenario is being used for script testing and validation, the default value for each `transaction` property is used.\\n\\nWhen a scenario is extended, each property of `data` and `transaction` is extended individually: if the extending scenario does not provide a new value for `data.bytecode.value` or `transaction.property`, the parent value is used. To avoid inheriting a parent value, each child value must be individually overridden.\",\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this scenario for use in user interfaces, e.g.: `Delayed Recovery`.',\n            type: 'string',\n        },\n        sourceOutputs: {\n            description: 'The list of source outputs (a.k.a. UTXOs) to use when generating the compilation context for this scenario.\\n\\nThe `sourceOutputs` property must have the same length as `transaction.inputs`, and each source output must be ordered to match the index of the input that spends it.\\n\\nTo be valid the `sourceOutputs` property must have exactly one source output with `lockingBytecode` set to `[\"slot\"]` – the output at the same index as the `[\"slot\"]` input in `transaction.inputs`.\\n\\nIf undefined, defaults to `[{ \"lockingBytecode\": [\"slot\"] }]`.',\n            items: {\n                $ref: '#/definitions/AuthenticationTemplateScenarioSourceOutput',\n            },\n            type: 'array',\n        },\n        transaction: {\n            additionalProperties: false,\n            description: 'The transaction within which this scenario should be evaluated. This is used for script testing and validation.\\n\\nIf undefined, inherits the default value for each property: ```json {   \"inputs\": [{ \"unlockingBytecode\": [\\'slot\\'] }],   \"locktime\": 0,   \"outputs\": [{ \"lockingBytecode\": {} }],   \"version\": 2 } ```\\n\\nAny `transaction` property that is not set will be inherited from the scenario specified by `extends`. when specifying the `inputs` and `outputs` properties, each input and output extends the default values for inputs and outputs, respectively.\\n\\nFor example, an input of `{}` is interpreted as: ```json {   \"outpointIndex\": 0,   \"outpointTransactionHash\":     \"0000000000000000000000000000000000000000000000000000000000000000\",   \"sequenceNumber\": 0,   \"unlockingBytecode\": [\\'slot\\'] } ``` And an output of `{}` is interpreted as: ```json {   \"lockingBytecode\": {     \"script\": [\\'copy\\'],     \"overrides\": { \"hdKeys\": { \"addressIndex\": 1 } }   },   \"valueSatoshis\": 0 } ```',\n            properties: {\n                inputs: {\n                    description: 'The list of inputs to use when generating the transaction for this scenario.\\n\\nTo be valid the `inputs` property must have exactly one input with `unlockingBytecode` set to `[\"slot\"]`. This is the input in which the unlocking script under test will be placed.\\n\\nIf undefined, inherits the default scenario `inputs` value: `[{ \"unlockingBytecode\": [\"slot\"] }]`.',\n                    items: { $ref: '#/definitions/AuthenticationTemplateScenarioInput' },\n                    type: 'array',\n                },\n                locktime: {\n                    description: 'The locktime to use when generating the transaction for this scenario. A positive integer from `0` to a maximum of `4294967295` – if undefined, defaults to `0`.\\n\\nLocktime can be provided as either a timestamp or a block height. Values less than `500000000` are understood to be a block height (the current block number in the chain, beginning from block `0`). Values greater than or equal to `500000000` are understood to be a UNIX timestamp.\\n\\nFor validating timestamp values, the median timestamp of the last 11 blocks (Median Time-Past) is used. The precise behavior is defined in BIP113.\\n\\nIf the `sequenceNumber` of every transaction input is set to `0xffffffff` (`4294967295`), locktime is disabled, and the transaction may be added to a block even if the specified locktime has not yet been reached. When locktime is disabled, if an `OP_CHECKLOCKTIMEVERIFY` operation is encountered during the verification of any input, an error is produced, and the transaction is invalid.',\n                    type: 'number',\n                },\n                outputs: {\n                    description: 'The list of outputs to use when generating the transaction for this scenario.\\n\\nIf undefined, defaults to `[{ \"lockingBytecode\": {} }]`.',\n                    items: {\n                        $ref: '#/definitions/AuthenticationTemplateScenarioTransactionOutput',\n                    },\n                    type: 'array',\n                },\n                version: {\n                    description: 'The version to use when generating the transaction for this scenario. A positive integer from `0` to a maximum of `4294967295` – if undefined, inherits the default scenario `version` value: `2`.',\n                    type: 'number',\n                },\n            },\n            type: 'object',\n        },\n    },\n    type: 'object',\n};\nconst schema31 = {\n    additionalProperties: false,\n    description: 'An object defining the data to use while compiling a scenario.',\n    properties: {\n        bytecode: {\n            additionalProperties: { type: 'string' },\n            description: \"A map of full identifiers to CashAssembly scripts that compile to each identifier's value for this scenario. Allowing `bytecode` to be specified as scripts (rather than e.g. hex) offers greater power and flexibility.\\n\\nBytecode scripts have access to each other and all other template scripts and defined variables, however, cyclical references will produce an error at compile time. Also, because the results of these compilations will be used to generate the compilation context for this scenario, these scripts may not use compiler operations that themselves require access to compilation context (e.g. signatures).\\n\\nThe provided `fullIdentifier` should match the complete identifier for each item, e.g. `some_wallet_data`, `variable_id.public_key`, or `variable_id.signature.all_outputs`.\\n\\nAll `AddressData` and `WalletData` variables must be provided via `bytecode` (though the default scenario automatically includes reasonable values), and pre-computed results for operations of other variable types (e.g. `key.public_key`) may also be provided via this property.\\n\\nBecause each bytecode identifier may precisely match the identifier of the variable it defines for this scenario, references between these scripts must refer to the target script with a `_scenario.` prefix. E.g. to reference a sibling script `my_foo` from `my_bar`, the `my_bar` script must use the identifier `_scenario.my_foo`.\",\n            type: 'object',\n        },\n        currentBlockHeight: {\n            description: 'The current block height at the \"address creation time\" implied in this scenario.',\n            type: 'number',\n        },\n        currentBlockTime: {\n            description: 'The current MTP block time as a UNIX timestamp at the \"address creation time\" implied in this scenario.\\n\\nNote, this is never a current timestamp, but rather the median timestamp of the last 11 blocks. It is therefore approximately one hour in the past.\\n\\nEvery block has a precise MTP block time, much like a block height. See BIP113 for details.',\n            type: 'number',\n        },\n        hdKeys: {\n            additionalProperties: false,\n            description: 'An object describing the settings used for `HdKey` variables in this scenario.',\n            properties: {\n                addressIndex: {\n                    description: 'The current address index to be used for this scenario. The `addressIndex` gets added to each `HdKey`s `addressOffset` to calculate the dynamic index (`i`) used in each `privateDerivationPath` or `publicDerivationPath`.\\n\\nThis is required for any compiler operation that requires derivation. Typically, the value is incremented by one for each address in a wallet.\\n\\nDefaults to `0`.',\n                    type: 'number',\n                },\n                hdPrivateKeys: {\n                    additionalProperties: { type: 'string' },\n                    description: 'A map of entity IDs to master HD private keys. These master HD private keys are used to derive each `HdKey` variable assigned to that entity according to its `privateDerivationPath`.\\n\\nHD private keys may be encoded for either mainnet or testnet (the network information is ignored).\\n\\nIf both an HD private key (in `hdPrivateKeys`) and HD public key (in `hdPublicKeys`) are provided for the same entity in the same scenario (not recommended), the HD private key is used.',\n                    type: 'object',\n                },\n                hdPublicKeys: {\n                    additionalProperties: { type: 'string' },\n                    description: 'A map of entity IDs to HD public keys. These HD public keys are used to derive public keys for each `HdKey` variable assigned to that entity according to its `publicDerivationPath`.\\n\\nHD public keys may be encoded for either mainnet or testnet (the network information is ignored).\\n\\nIf both an HD private key (in `hdPrivateKeys`) and HD public key (in `hdPublicKeys`) are provided for the same entity in the same scenario (not recommended), the HD private key is used.',\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        keys: {\n            additionalProperties: false,\n            description: 'An object describing the settings used for `Key` variables in this scenario.',\n            properties: {\n                privateKeys: {\n                    additionalProperties: { type: 'string' },\n                    description: 'A map of `Key` variable IDs to their 32-byte, hexadecimal-encoded private key values.',\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n    },\n    type: 'object',\n};\nconst schema32 = {\n    additionalProperties: false,\n    description: 'An example output used to define a scenario for an authentication template.',\n    properties: {\n        lockingBytecode: {\n            anyOf: [\n                { $ref: '#/definitions/AuthenticationTemplateScenarioBytecode' },\n                {\n                    items: { const: 'slot', type: 'string' },\n                    maxItems: 1,\n                    minItems: 1,\n                    type: 'array',\n                },\n            ],\n            description: 'The locking bytecode used to encumber this output.\\n\\n`lockingBytecode` values may be provided as a hexadecimal-encoded string or as an object describing the required compilation. If undefined, defaults to  `{}`, which uses the default values for `script` and `overrides`, respectively.\\n\\nOnly source outputs may specify a `lockingBytecode` of `[\"slot\"]`; this identifies the source output in which the locking script under test will be placed. (To be valid, every scenario\\'s `sourceOutputs` property must have exactly one source output slot and one input slot at the same index.)',\n        },\n        token: {\n            additionalProperties: false,\n            description: 'The CashToken contents of this output. This property is only defined if the output contains one or more tokens. For details, see `CHIP-2022-02-CashTokens`.',\n            properties: {\n                amount: {\n                    description: 'The number of fungible tokens (of `category`) held in this output.\\n\\nBecause `Number.MAX_SAFE_INTEGER` (`9007199254740991`) is less than the maximum token amount (`9223372036854775807`), this value may also be provided as a string, e.g. `\"9223372036854775807\"`.\\n\\nIf undefined, this defaults to: `0`.',\n                    type: ['number', 'string'],\n                },\n                category: {\n                    description: 'The 32-byte, hexadecimal-encoded token category ID to which the token(s) in this output belong in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000002`',\n                    type: 'string',\n                },\n                nft: {\n                    additionalProperties: false,\n                    description: 'If present, the non-fungible token (NFT) held by this output. If the output does not include a non-fungible token, `undefined`.',\n                    properties: {\n                        capability: {\n                            description: 'The capability of this non-fungible token, must be either `minting`, `mutable`, or `none`.\\n\\nIf undefined, this defaults to: `none`.',\n                            enum: ['minting', 'mutable', 'none'],\n                            type: 'string',\n                        },\n                        commitment: {\n                            description: 'The hex-encoded commitment contents included in the non-fungible token held in this output.\\n\\nIf undefined, this defaults to: `\"\"` (a zero-length commitment).',\n                            type: 'string',\n                        },\n                    },\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        valueSatoshis: {\n            description: 'The value of the output in satoshis, the smallest unit of bitcoin.\\n\\nIn a valid transaction, this is a positive integer, from `0` to the maximum number of satoshis available to the transaction.\\n\\nThe maximum number of satoshis in existence is about 1/4 of `Number.MAX_SAFE_INTEGER` (`9007199254740991`), so typically, this value is defined using a `number`. However, this value may also be defined using a 16-character, hexadecimal-encoded `string`, to allow for the full range of the 64-bit unsigned, little-endian integer used to encode `valueSatoshis` in the encoded output format, e.g. `\"ffffffffffffffff\"`. This is useful for representing scenarios where intentionally excessive values are provided (to ensure an otherwise properly-signed transaction can never be included in the blockchain), e.g. transaction size estimations or off-chain Bitauth signatures.\\n\\nIf undefined, this defaults to: `0`.',\n            type: ['number', 'string'],\n        },\n    },\n    type: 'object',\n};\nconst schema33 = {\n    anyOf: [\n        { type: 'string' },\n        {\n            additionalProperties: false,\n            properties: {\n                overrides: {\n                    $ref: '#/definitions/AuthenticationTemplateScenarioData',\n                    description: 'Scenario data that extends the scenario\\'s top-level `data` during script compilation.\\n\\nEach property is extended individually – to modify a property set by the top-level scenario `data`, the new value must be listed here.\\n\\nDefaults to `{}` for `sourceOutputs` and `transaction.inputs`; defaults to `{ \"hdKeys\": { \"addressIndex\": 1 } }` for `transaction.outputs`.',\n                },\n                script: {\n                    anyOf: [\n                        { type: 'string' },\n                        {\n                            items: { const: 'copy', type: 'string' },\n                            maxItems: 1,\n                            minItems: 1,\n                            type: 'array',\n                        },\n                    ],\n                    description: 'The identifier of the script to compile when generating this bytecode. May also be set to `[\"copy\"]`, which is automatically replaced with the identifier of the locking or unlocking script under test, respectively.\\n\\nIf undefined, defaults to `[\"copy\"]`.',\n                },\n            },\n            type: 'object',\n        },\n    ],\n    description: 'A type that describes the configuration for a particular locking or unlocking bytecode within an authentication template scenario.\\n\\nBytecode may be specified as either a hexadecimal-encoded string or an object describing the required compilation.\\n\\nFor `sourceOutputs` and `transaction.inputs`, defaults to `{ script: [\"copy\"], overrides: {} }`. For `transaction.outputs`, defaults to `{ script: [\"copy\"], overrides: { \"hdKeys\": { \"addressIndex\": 1 } } }`.',\n};\nfunction validate28(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    const _errs0 = errors;\n    let valid0 = false;\n    const _errs1 = errors;\n    if (typeof data !== 'string') {\n        const err0 = {\n            instancePath,\n            schemaPath: '#/anyOf/0/type',\n            keyword: 'type',\n            params: { type: 'string' },\n            message: 'must be string',\n        };\n        if (vErrors === null) {\n            vErrors = [err0];\n        }\n        else {\n            vErrors.push(err0);\n        }\n        errors++;\n    }\n    var _valid0 = _errs1 === errors;\n    valid0 = valid0 || _valid0;\n    if (!valid0) {\n        const _errs3 = errors;\n        if (errors === _errs3) {\n            if (data && typeof data == 'object' && !Array.isArray(data)) {\n                const _errs5 = errors;\n                for (const key0 in data) {\n                    if (!(key0 === 'overrides' || key0 === 'script')) {\n                        const err1 = {\n                            instancePath,\n                            schemaPath: '#/anyOf/1/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err1];\n                        }\n                        else {\n                            vErrors.push(err1);\n                        }\n                        errors++;\n                        break;\n                    }\n                }\n                if (_errs5 === errors) {\n                    if (data.overrides !== undefined) {\n                        let data0 = data.overrides;\n                        const _errs6 = errors;\n                        const _errs7 = errors;\n                        if (errors === _errs7) {\n                            if (data0 && typeof data0 == 'object' && !Array.isArray(data0)) {\n                                const _errs9 = errors;\n                                for (const key1 in data0) {\n                                    if (!(key1 === 'bytecode' ||\n                                        key1 === 'currentBlockHeight' ||\n                                        key1 === 'currentBlockTime' ||\n                                        key1 === 'hdKeys' ||\n                                        key1 === 'keys')) {\n                                        const err2 = {\n                                            instancePath: instancePath + '/overrides',\n                                            schemaPath: '#/definitions/AuthenticationTemplateScenarioData/additionalProperties',\n                                            keyword: 'additionalProperties',\n                                            params: { additionalProperty: key1 },\n                                            message: 'must NOT have additional properties',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err2];\n                                        }\n                                        else {\n                                            vErrors.push(err2);\n                                        }\n                                        errors++;\n                                        break;\n                                    }\n                                }\n                                if (_errs9 === errors) {\n                                    if (data0.bytecode !== undefined) {\n                                        let data1 = data0.bytecode;\n                                        const _errs10 = errors;\n                                        if (errors === _errs10) {\n                                            if (data1 &&\n                                                typeof data1 == 'object' &&\n                                                !Array.isArray(data1)) {\n                                                for (const key2 in data1) {\n                                                    const _errs13 = errors;\n                                                    if (typeof data1[key2] !== 'string') {\n                                                        const err3 = {\n                                                            instancePath: instancePath +\n                                                                '/overrides/bytecode/' +\n                                                                key2.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                            schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/bytecode/additionalProperties/type',\n                                                            keyword: 'type',\n                                                            params: { type: 'string' },\n                                                            message: 'must be string',\n                                                        };\n                                                        if (vErrors === null) {\n                                                            vErrors = [err3];\n                                                        }\n                                                        else {\n                                                            vErrors.push(err3);\n                                                        }\n                                                        errors++;\n                                                    }\n                                                    var valid4 = _errs13 === errors;\n                                                    if (!valid4) {\n                                                        break;\n                                                    }\n                                                }\n                                            }\n                                            else {\n                                                const err4 = {\n                                                    instancePath: instancePath + '/overrides/bytecode',\n                                                    schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/bytecode/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'object' },\n                                                    message: 'must be object',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err4];\n                                                }\n                                                else {\n                                                    vErrors.push(err4);\n                                                }\n                                                errors++;\n                                            }\n                                        }\n                                        var valid3 = _errs10 === errors;\n                                    }\n                                    else {\n                                        var valid3 = true;\n                                    }\n                                    if (valid3) {\n                                        if (data0.currentBlockHeight !== undefined) {\n                                            let data3 = data0.currentBlockHeight;\n                                            const _errs15 = errors;\n                                            if (!(typeof data3 == 'number' && isFinite(data3))) {\n                                                const err5 = {\n                                                    instancePath: instancePath + '/overrides/currentBlockHeight',\n                                                    schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/currentBlockHeight/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'number' },\n                                                    message: 'must be number',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err5];\n                                                }\n                                                else {\n                                                    vErrors.push(err5);\n                                                }\n                                                errors++;\n                                            }\n                                            var valid3 = _errs15 === errors;\n                                        }\n                                        else {\n                                            var valid3 = true;\n                                        }\n                                        if (valid3) {\n                                            if (data0.currentBlockTime !== undefined) {\n                                                let data4 = data0.currentBlockTime;\n                                                const _errs17 = errors;\n                                                if (!(typeof data4 == 'number' && isFinite(data4))) {\n                                                    const err6 = {\n                                                        instancePath: instancePath + '/overrides/currentBlockTime',\n                                                        schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/currentBlockTime/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'number' },\n                                                        message: 'must be number',\n                                                    };\n                                                    if (vErrors === null) {\n                                                        vErrors = [err6];\n                                                    }\n                                                    else {\n                                                        vErrors.push(err6);\n                                                    }\n                                                    errors++;\n                                                }\n                                                var valid3 = _errs17 === errors;\n                                            }\n                                            else {\n                                                var valid3 = true;\n                                            }\n                                            if (valid3) {\n                                                if (data0.hdKeys !== undefined) {\n                                                    let data5 = data0.hdKeys;\n                                                    const _errs19 = errors;\n                                                    if (errors === _errs19) {\n                                                        if (data5 &&\n                                                            typeof data5 == 'object' &&\n                                                            !Array.isArray(data5)) {\n                                                            const _errs21 = errors;\n                                                            for (const key3 in data5) {\n                                                                if (!(key3 === 'addressIndex' ||\n                                                                    key3 === 'hdPrivateKeys' ||\n                                                                    key3 === 'hdPublicKeys')) {\n                                                                    const err7 = {\n                                                                        instancePath: instancePath + '/overrides/hdKeys',\n                                                                        schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/additionalProperties',\n                                                                        keyword: 'additionalProperties',\n                                                                        params: { additionalProperty: key3 },\n                                                                        message: 'must NOT have additional properties',\n                                                                    };\n                                                                    if (vErrors === null) {\n                                                                        vErrors = [err7];\n                                                                    }\n                                                                    else {\n                                                                        vErrors.push(err7);\n                                                                    }\n                                                                    errors++;\n                                                                    break;\n                                                                }\n                                                            }\n                                                            if (_errs21 === errors) {\n                                                                if (data5.addressIndex !== undefined) {\n                                                                    let data6 = data5.addressIndex;\n                                                                    const _errs22 = errors;\n                                                                    if (!(typeof data6 == 'number' &&\n                                                                        isFinite(data6))) {\n                                                                        const err8 = {\n                                                                            instancePath: instancePath +\n                                                                                '/overrides/hdKeys/addressIndex',\n                                                                            schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/addressIndex/type',\n                                                                            keyword: 'type',\n                                                                            params: { type: 'number' },\n                                                                            message: 'must be number',\n                                                                        };\n                                                                        if (vErrors === null) {\n                                                                            vErrors = [err8];\n                                                                        }\n                                                                        else {\n                                                                            vErrors.push(err8);\n                                                                        }\n                                                                        errors++;\n                                                                    }\n                                                                    var valid5 = _errs22 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid5 = true;\n                                                                }\n                                                                if (valid5) {\n                                                                    if (data5.hdPrivateKeys !== undefined) {\n                                                                        let data7 = data5.hdPrivateKeys;\n                                                                        const _errs24 = errors;\n                                                                        if (errors === _errs24) {\n                                                                            if (data7 &&\n                                                                                typeof data7 == 'object' &&\n                                                                                !Array.isArray(data7)) {\n                                                                                for (const key4 in data7) {\n                                                                                    const _errs27 = errors;\n                                                                                    if (typeof data7[key4] !== 'string') {\n                                                                                        const err9 = {\n                                                                                            instancePath: instancePath +\n                                                                                                '/overrides/hdKeys/hdPrivateKeys/' +\n                                                                                                key4\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1'),\n                                                                                            schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/additionalProperties/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        };\n                                                                                        if (vErrors === null) {\n                                                                                            vErrors = [err9];\n                                                                                        }\n                                                                                        else {\n                                                                                            vErrors.push(err9);\n                                                                                        }\n                                                                                        errors++;\n                                                                                    }\n                                                                                    var valid6 = _errs27 === errors;\n                                                                                    if (!valid6) {\n                                                                                        break;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            else {\n                                                                                const err10 = {\n                                                                                    instancePath: instancePath +\n                                                                                        '/overrides/hdKeys/hdPrivateKeys',\n                                                                                    schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/type',\n                                                                                    keyword: 'type',\n                                                                                    params: { type: 'object' },\n                                                                                    message: 'must be object',\n                                                                                };\n                                                                                if (vErrors === null) {\n                                                                                    vErrors = [err10];\n                                                                                }\n                                                                                else {\n                                                                                    vErrors.push(err10);\n                                                                                }\n                                                                                errors++;\n                                                                            }\n                                                                        }\n                                                                        var valid5 = _errs24 === errors;\n                                                                    }\n                                                                    else {\n                                                                        var valid5 = true;\n                                                                    }\n                                                                    if (valid5) {\n                                                                        if (data5.hdPublicKeys !== undefined) {\n                                                                            let data9 = data5.hdPublicKeys;\n                                                                            const _errs29 = errors;\n                                                                            if (errors === _errs29) {\n                                                                                if (data9 &&\n                                                                                    typeof data9 == 'object' &&\n                                                                                    !Array.isArray(data9)) {\n                                                                                    for (const key5 in data9) {\n                                                                                        const _errs32 = errors;\n                                                                                        if (typeof data9[key5] !== 'string') {\n                                                                                            const err11 = {\n                                                                                                instancePath: instancePath +\n                                                                                                    '/overrides/hdKeys/hdPublicKeys/' +\n                                                                                                    key5\n                                                                                                        .replace(/~/g, '~0')\n                                                                                                        .replace(/\\//g, '~1'),\n                                                                                                schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/additionalProperties/type',\n                                                                                                keyword: 'type',\n                                                                                                params: { type: 'string' },\n                                                                                                message: 'must be string',\n                                                                                            };\n                                                                                            if (vErrors === null) {\n                                                                                                vErrors = [err11];\n                                                                                            }\n                                                                                            else {\n                                                                                                vErrors.push(err11);\n                                                                                            }\n                                                                                            errors++;\n                                                                                        }\n                                                                                        var valid7 = _errs32 === errors;\n                                                                                        if (!valid7) {\n                                                                                            break;\n                                                                                        }\n                                                                                    }\n                                                                                }\n                                                                                else {\n                                                                                    const err12 = {\n                                                                                        instancePath: instancePath +\n                                                                                            '/overrides/hdKeys/hdPublicKeys',\n                                                                                        schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/type',\n                                                                                        keyword: 'type',\n                                                                                        params: { type: 'object' },\n                                                                                        message: 'must be object',\n                                                                                    };\n                                                                                    if (vErrors === null) {\n                                                                                        vErrors = [err12];\n                                                                                    }\n                                                                                    else {\n                                                                                        vErrors.push(err12);\n                                                                                    }\n                                                                                    errors++;\n                                                                                }\n                                                                            }\n                                                                            var valid5 = _errs29 === errors;\n                                                                        }\n                                                                        else {\n                                                                            var valid5 = true;\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                        else {\n                                                            const err13 = {\n                                                                instancePath: instancePath + '/overrides/hdKeys',\n                                                                schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'object' },\n                                                                message: 'must be object',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err13];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err13);\n                                                            }\n                                                            errors++;\n                                                        }\n                                                    }\n                                                    var valid3 = _errs19 === errors;\n                                                }\n                                                else {\n                                                    var valid3 = true;\n                                                }\n                                                if (valid3) {\n                                                    if (data0.keys !== undefined) {\n                                                        let data11 = data0.keys;\n                                                        const _errs34 = errors;\n                                                        if (errors === _errs34) {\n                                                            if (data11 &&\n                                                                typeof data11 == 'object' &&\n                                                                !Array.isArray(data11)) {\n                                                                const _errs36 = errors;\n                                                                for (const key6 in data11) {\n                                                                    if (!(key6 === 'privateKeys')) {\n                                                                        const err14 = {\n                                                                            instancePath: instancePath + '/overrides/keys',\n                                                                            schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/keys/additionalProperties',\n                                                                            keyword: 'additionalProperties',\n                                                                            params: { additionalProperty: key6 },\n                                                                            message: 'must NOT have additional properties',\n                                                                        };\n                                                                        if (vErrors === null) {\n                                                                            vErrors = [err14];\n                                                                        }\n                                                                        else {\n                                                                            vErrors.push(err14);\n                                                                        }\n                                                                        errors++;\n                                                                        break;\n                                                                    }\n                                                                }\n                                                                if (_errs36 === errors) {\n                                                                    if (data11.privateKeys !== undefined) {\n                                                                        let data12 = data11.privateKeys;\n                                                                        const _errs37 = errors;\n                                                                        if (errors === _errs37) {\n                                                                            if (data12 &&\n                                                                                typeof data12 == 'object' &&\n                                                                                !Array.isArray(data12)) {\n                                                                                for (const key7 in data12) {\n                                                                                    const _errs40 = errors;\n                                                                                    if (typeof data12[key7] !== 'string') {\n                                                                                        const err15 = {\n                                                                                            instancePath: instancePath +\n                                                                                                '/overrides/keys/privateKeys/' +\n                                                                                                key7\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1'),\n                                                                                            schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/keys/properties/privateKeys/additionalProperties/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        };\n                                                                                        if (vErrors === null) {\n                                                                                            vErrors = [err15];\n                                                                                        }\n                                                                                        else {\n                                                                                            vErrors.push(err15);\n                                                                                        }\n                                                                                        errors++;\n                                                                                    }\n                                                                                    var valid9 = _errs40 === errors;\n                                                                                    if (!valid9) {\n                                                                                        break;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            else {\n                                                                                const err16 = {\n                                                                                    instancePath: instancePath +\n                                                                                        '/overrides/keys/privateKeys',\n                                                                                    schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/keys/properties/privateKeys/type',\n                                                                                    keyword: 'type',\n                                                                                    params: { type: 'object' },\n                                                                                    message: 'must be object',\n                                                                                };\n                                                                                if (vErrors === null) {\n                                                                                    vErrors = [err16];\n                                                                                }\n                                                                                else {\n                                                                                    vErrors.push(err16);\n                                                                                }\n                                                                                errors++;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                            else {\n                                                                const err17 = {\n                                                                    instancePath: instancePath + '/overrides/keys',\n                                                                    schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/keys/type',\n                                                                    keyword: 'type',\n                                                                    params: { type: 'object' },\n                                                                    message: 'must be object',\n                                                                };\n                                                                if (vErrors === null) {\n                                                                    vErrors = [err17];\n                                                                }\n                                                                else {\n                                                                    vErrors.push(err17);\n                                                                }\n                                                                errors++;\n                                                            }\n                                                        }\n                                                        var valid3 = _errs34 === errors;\n                                                    }\n                                                    else {\n                                                        var valid3 = true;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                const err18 = {\n                                    instancePath: instancePath + '/overrides',\n                                    schemaPath: '#/definitions/AuthenticationTemplateScenarioData/type',\n                                    keyword: 'type',\n                                    params: { type: 'object' },\n                                    message: 'must be object',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err18];\n                                }\n                                else {\n                                    vErrors.push(err18);\n                                }\n                                errors++;\n                            }\n                        }\n                        var valid1 = _errs6 === errors;\n                    }\n                    else {\n                        var valid1 = true;\n                    }\n                    if (valid1) {\n                        if (data.script !== undefined) {\n                            let data14 = data.script;\n                            const _errs42 = errors;\n                            const _errs43 = errors;\n                            let valid10 = false;\n                            const _errs44 = errors;\n                            if (typeof data14 !== 'string') {\n                                const err19 = {\n                                    instancePath: instancePath + '/script',\n                                    schemaPath: '#/anyOf/1/properties/script/anyOf/0/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err19];\n                                }\n                                else {\n                                    vErrors.push(err19);\n                                }\n                                errors++;\n                            }\n                            var _valid1 = _errs44 === errors;\n                            valid10 = valid10 || _valid1;\n                            if (!valid10) {\n                                const _errs46 = errors;\n                                if (errors === _errs46) {\n                                    if (Array.isArray(data14)) {\n                                        if (data14.length > 1) {\n                                            const err20 = {\n                                                instancePath: instancePath + '/script',\n                                                schemaPath: '#/anyOf/1/properties/script/anyOf/1/maxItems',\n                                                keyword: 'maxItems',\n                                                params: { limit: 1 },\n                                                message: 'must NOT have more than 1 items',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err20];\n                                            }\n                                            else {\n                                                vErrors.push(err20);\n                                            }\n                                            errors++;\n                                        }\n                                        else {\n                                            if (data14.length < 1) {\n                                                const err21 = {\n                                                    instancePath: instancePath + '/script',\n                                                    schemaPath: '#/anyOf/1/properties/script/anyOf/1/minItems',\n                                                    keyword: 'minItems',\n                                                    params: { limit: 1 },\n                                                    message: 'must NOT have fewer than 1 items',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err21];\n                                                }\n                                                else {\n                                                    vErrors.push(err21);\n                                                }\n                                                errors++;\n                                            }\n                                            else {\n                                                var valid11 = true;\n                                                const len0 = data14.length;\n                                                for (let i0 = 0; i0 < len0; i0++) {\n                                                    let data15 = data14[i0];\n                                                    const _errs48 = errors;\n                                                    if (typeof data15 !== 'string') {\n                                                        const err22 = {\n                                                            instancePath: instancePath + '/script/' + i0,\n                                                            schemaPath: '#/anyOf/1/properties/script/anyOf/1/items/type',\n                                                            keyword: 'type',\n                                                            params: { type: 'string' },\n                                                            message: 'must be string',\n                                                        };\n                                                        if (vErrors === null) {\n                                                            vErrors = [err22];\n                                                        }\n                                                        else {\n                                                            vErrors.push(err22);\n                                                        }\n                                                        errors++;\n                                                    }\n                                                    if ('copy' !== data15) {\n                                                        const err23 = {\n                                                            instancePath: instancePath + '/script/' + i0,\n                                                            schemaPath: '#/anyOf/1/properties/script/anyOf/1/items/const',\n                                                            keyword: 'const',\n                                                            params: { allowedValue: 'copy' },\n                                                            message: 'must be equal to constant',\n                                                        };\n                                                        if (vErrors === null) {\n                                                            vErrors = [err23];\n                                                        }\n                                                        else {\n                                                            vErrors.push(err23);\n                                                        }\n                                                        errors++;\n                                                    }\n                                                    var valid11 = _errs48 === errors;\n                                                    if (!valid11) {\n                                                        break;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        const err24 = {\n                                            instancePath: instancePath + '/script',\n                                            schemaPath: '#/anyOf/1/properties/script/anyOf/1/type',\n                                            keyword: 'type',\n                                            params: { type: 'array' },\n                                            message: 'must be array',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err24];\n                                        }\n                                        else {\n                                            vErrors.push(err24);\n                                        }\n                                        errors++;\n                                    }\n                                }\n                                var _valid1 = _errs46 === errors;\n                                valid10 = valid10 || _valid1;\n                            }\n                            if (!valid10) {\n                                const err25 = {\n                                    instancePath: instancePath + '/script',\n                                    schemaPath: '#/anyOf/1/properties/script/anyOf',\n                                    keyword: 'anyOf',\n                                    params: {},\n                                    message: 'must match a schema in anyOf',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err25];\n                                }\n                                else {\n                                    vErrors.push(err25);\n                                }\n                                errors++;\n                            }\n                            else {\n                                errors = _errs43;\n                                if (vErrors !== null) {\n                                    if (_errs43) {\n                                        vErrors.length = _errs43;\n                                    }\n                                    else {\n                                        vErrors = null;\n                                    }\n                                }\n                            }\n                            var valid1 = _errs42 === errors;\n                        }\n                        else {\n                            var valid1 = true;\n                        }\n                    }\n                }\n            }\n            else {\n                const err26 = {\n                    instancePath,\n                    schemaPath: '#/anyOf/1/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                };\n                if (vErrors === null) {\n                    vErrors = [err26];\n                }\n                else {\n                    vErrors.push(err26);\n                }\n                errors++;\n            }\n        }\n        var _valid0 = _errs3 === errors;\n        valid0 = valid0 || _valid0;\n    }\n    if (!valid0) {\n        const err27 = {\n            instancePath,\n            schemaPath: '#/anyOf',\n            keyword: 'anyOf',\n            params: {},\n            message: 'must match a schema in anyOf',\n        };\n        if (vErrors === null) {\n            vErrors = [err27];\n        }\n        else {\n            vErrors.push(err27);\n        }\n        errors++;\n        validate28.errors = vErrors;\n        return false;\n    }\n    else {\n        errors = _errs0;\n        if (vErrors !== null) {\n            if (_errs0) {\n                vErrors.length = _errs0;\n            }\n            else {\n                vErrors = null;\n            }\n        }\n    }\n    validate28.errors = vErrors;\n    return errors === 0;\n}\nfunction validate27(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            const _errs1 = errors;\n            for (const key0 in data) {\n                if (!(key0 === 'lockingBytecode' ||\n                    key0 === 'token' ||\n                    key0 === 'valueSatoshis')) {\n                    validate27.errors = [\n                        {\n                            instancePath,\n                            schemaPath: '#/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        },\n                    ];\n                    return false;\n                    break;\n                }\n            }\n            if (_errs1 === errors) {\n                if (data.lockingBytecode !== undefined) {\n                    let data0 = data.lockingBytecode;\n                    const _errs2 = errors;\n                    const _errs3 = errors;\n                    let valid1 = false;\n                    const _errs4 = errors;\n                    if (!validate28(data0, {\n                        instancePath: instancePath + '/lockingBytecode',\n                        parentData: data,\n                        parentDataProperty: 'lockingBytecode',\n                        rootData,\n                    })) {\n                        vErrors =\n                            vErrors === null\n                                ? validate28.errors\n                                : vErrors.concat(validate28.errors);\n                        errors = vErrors.length;\n                    }\n                    var _valid0 = _errs4 === errors;\n                    valid1 = valid1 || _valid0;\n                    if (!valid1) {\n                        const _errs5 = errors;\n                        if (errors === _errs5) {\n                            if (Array.isArray(data0)) {\n                                if (data0.length > 1) {\n                                    const err0 = {\n                                        instancePath: instancePath + '/lockingBytecode',\n                                        schemaPath: '#/properties/lockingBytecode/anyOf/1/maxItems',\n                                        keyword: 'maxItems',\n                                        params: { limit: 1 },\n                                        message: 'must NOT have more than 1 items',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err0];\n                                    }\n                                    else {\n                                        vErrors.push(err0);\n                                    }\n                                    errors++;\n                                }\n                                else {\n                                    if (data0.length < 1) {\n                                        const err1 = {\n                                            instancePath: instancePath + '/lockingBytecode',\n                                            schemaPath: '#/properties/lockingBytecode/anyOf/1/minItems',\n                                            keyword: 'minItems',\n                                            params: { limit: 1 },\n                                            message: 'must NOT have fewer than 1 items',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err1];\n                                        }\n                                        else {\n                                            vErrors.push(err1);\n                                        }\n                                        errors++;\n                                    }\n                                    else {\n                                        var valid2 = true;\n                                        const len0 = data0.length;\n                                        for (let i0 = 0; i0 < len0; i0++) {\n                                            let data1 = data0[i0];\n                                            const _errs7 = errors;\n                                            if (typeof data1 !== 'string') {\n                                                const err2 = {\n                                                    instancePath: instancePath + '/lockingBytecode/' + i0,\n                                                    schemaPath: '#/properties/lockingBytecode/anyOf/1/items/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'string' },\n                                                    message: 'must be string',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err2];\n                                                }\n                                                else {\n                                                    vErrors.push(err2);\n                                                }\n                                                errors++;\n                                            }\n                                            if ('slot' !== data1) {\n                                                const err3 = {\n                                                    instancePath: instancePath + '/lockingBytecode/' + i0,\n                                                    schemaPath: '#/properties/lockingBytecode/anyOf/1/items/const',\n                                                    keyword: 'const',\n                                                    params: { allowedValue: 'slot' },\n                                                    message: 'must be equal to constant',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err3];\n                                                }\n                                                else {\n                                                    vErrors.push(err3);\n                                                }\n                                                errors++;\n                                            }\n                                            var valid2 = _errs7 === errors;\n                                            if (!valid2) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                const err4 = {\n                                    instancePath: instancePath + '/lockingBytecode',\n                                    schemaPath: '#/properties/lockingBytecode/anyOf/1/type',\n                                    keyword: 'type',\n                                    params: { type: 'array' },\n                                    message: 'must be array',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err4];\n                                }\n                                else {\n                                    vErrors.push(err4);\n                                }\n                                errors++;\n                            }\n                        }\n                        var _valid0 = _errs5 === errors;\n                        valid1 = valid1 || _valid0;\n                    }\n                    if (!valid1) {\n                        const err5 = {\n                            instancePath: instancePath + '/lockingBytecode',\n                            schemaPath: '#/properties/lockingBytecode/anyOf',\n                            keyword: 'anyOf',\n                            params: {},\n                            message: 'must match a schema in anyOf',\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err5];\n                        }\n                        else {\n                            vErrors.push(err5);\n                        }\n                        errors++;\n                        validate27.errors = vErrors;\n                        return false;\n                    }\n                    else {\n                        errors = _errs3;\n                        if (vErrors !== null) {\n                            if (_errs3) {\n                                vErrors.length = _errs3;\n                            }\n                            else {\n                                vErrors = null;\n                            }\n                        }\n                    }\n                    var valid0 = _errs2 === errors;\n                }\n                else {\n                    var valid0 = true;\n                }\n                if (valid0) {\n                    if (data.token !== undefined) {\n                        let data2 = data.token;\n                        const _errs9 = errors;\n                        if (errors === _errs9) {\n                            if (data2 && typeof data2 == 'object' && !Array.isArray(data2)) {\n                                const _errs11 = errors;\n                                for (const key1 in data2) {\n                                    if (!(key1 === 'amount' ||\n                                        key1 === 'category' ||\n                                        key1 === 'nft')) {\n                                        validate27.errors = [\n                                            {\n                                                instancePath: instancePath + '/token',\n                                                schemaPath: '#/properties/token/additionalProperties',\n                                                keyword: 'additionalProperties',\n                                                params: { additionalProperty: key1 },\n                                                message: 'must NOT have additional properties',\n                                            },\n                                        ];\n                                        return false;\n                                        break;\n                                    }\n                                }\n                                if (_errs11 === errors) {\n                                    if (data2.amount !== undefined) {\n                                        let data3 = data2.amount;\n                                        const _errs12 = errors;\n                                        if (!(typeof data3 == 'number' && isFinite(data3)) &&\n                                            typeof data3 !== 'string') {\n                                            validate27.errors = [\n                                                {\n                                                    instancePath: instancePath + '/token/amount',\n                                                    schemaPath: '#/properties/token/properties/amount/type',\n                                                    keyword: 'type',\n                                                    params: {\n                                                        type: schema32.properties.token.properties.amount\n                                                            .type,\n                                                    },\n                                                    message: 'must be number,string',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                        var valid3 = _errs12 === errors;\n                                    }\n                                    else {\n                                        var valid3 = true;\n                                    }\n                                    if (valid3) {\n                                        if (data2.category !== undefined) {\n                                            const _errs14 = errors;\n                                            if (typeof data2.category !== 'string') {\n                                                validate27.errors = [\n                                                    {\n                                                        instancePath: instancePath + '/token/category',\n                                                        schemaPath: '#/properties/token/properties/category/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'string' },\n                                                        message: 'must be string',\n                                                    },\n                                                ];\n                                                return false;\n                                            }\n                                            var valid3 = _errs14 === errors;\n                                        }\n                                        else {\n                                            var valid3 = true;\n                                        }\n                                        if (valid3) {\n                                            if (data2.nft !== undefined) {\n                                                let data5 = data2.nft;\n                                                const _errs16 = errors;\n                                                if (errors === _errs16) {\n                                                    if (data5 &&\n                                                        typeof data5 == 'object' &&\n                                                        !Array.isArray(data5)) {\n                                                        const _errs18 = errors;\n                                                        for (const key2 in data5) {\n                                                            if (!(key2 === 'capability' || key2 === 'commitment')) {\n                                                                validate27.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/token/nft',\n                                                                        schemaPath: '#/properties/token/properties/nft/additionalProperties',\n                                                                        keyword: 'additionalProperties',\n                                                                        params: { additionalProperty: key2 },\n                                                                        message: 'must NOT have additional properties',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                                break;\n                                                            }\n                                                        }\n                                                        if (_errs18 === errors) {\n                                                            if (data5.capability !== undefined) {\n                                                                let data6 = data5.capability;\n                                                                const _errs19 = errors;\n                                                                if (typeof data6 !== 'string') {\n                                                                    validate27.errors = [\n                                                                        {\n                                                                            instancePath: instancePath + '/token/nft/capability',\n                                                                            schemaPath: '#/properties/token/properties/nft/properties/capability/type',\n                                                                            keyword: 'type',\n                                                                            params: { type: 'string' },\n                                                                            message: 'must be string',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                }\n                                                                if (!(data6 === 'minting' ||\n                                                                    data6 === 'mutable' ||\n                                                                    data6 === 'none')) {\n                                                                    validate27.errors = [\n                                                                        {\n                                                                            instancePath: instancePath + '/token/nft/capability',\n                                                                            schemaPath: '#/properties/token/properties/nft/properties/capability/enum',\n                                                                            keyword: 'enum',\n                                                                            params: {\n                                                                                allowedValues: schema32.properties.token.properties\n                                                                                    .nft.properties.capability.enum,\n                                                                            },\n                                                                            message: 'must be equal to one of the allowed values',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                }\n                                                                var valid4 = _errs19 === errors;\n                                                            }\n                                                            else {\n                                                                var valid4 = true;\n                                                            }\n                                                            if (valid4) {\n                                                                if (data5.commitment !== undefined) {\n                                                                    const _errs21 = errors;\n                                                                    if (typeof data5.commitment !== 'string') {\n                                                                        validate27.errors = [\n                                                                            {\n                                                                                instancePath: instancePath +\n                                                                                    '/token/nft/commitment',\n                                                                                schemaPath: '#/properties/token/properties/nft/properties/commitment/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'string' },\n                                                                                message: 'must be string',\n                                                                            },\n                                                                        ];\n                                                                        return false;\n                                                                    }\n                                                                    var valid4 = _errs21 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid4 = true;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        validate27.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/token/nft',\n                                                                schemaPath: '#/properties/token/properties/nft/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'object' },\n                                                                message: 'must be object',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                }\n                                                var valid3 = _errs16 === errors;\n                                            }\n                                            else {\n                                                var valid3 = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                validate27.errors = [\n                                    {\n                                        instancePath: instancePath + '/token',\n                                        schemaPath: '#/properties/token/type',\n                                        keyword: 'type',\n                                        params: { type: 'object' },\n                                        message: 'must be object',\n                                    },\n                                ];\n                                return false;\n                            }\n                        }\n                        var valid0 = _errs9 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.valueSatoshis !== undefined) {\n                            let data8 = data.valueSatoshis;\n                            const _errs23 = errors;\n                            if (!(typeof data8 == 'number' && isFinite(data8)) &&\n                                typeof data8 !== 'string') {\n                                validate27.errors = [\n                                    {\n                                        instancePath: instancePath + '/valueSatoshis',\n                                        schemaPath: '#/properties/valueSatoshis/type',\n                                        keyword: 'type',\n                                        params: { type: schema32.properties.valueSatoshis.type },\n                                        message: 'must be number,string',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs23 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate27.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate27.errors = vErrors;\n    return errors === 0;\n}\nconst schema35 = {\n    additionalProperties: false,\n    description: 'An example input used to define a scenario for an authentication template.',\n    properties: {\n        outpointIndex: {\n            description: 'The index of the output in the transaction from which this input is spent.\\n\\nIf undefined, this defaults to the same index as the input itself (so that by default, every outpoint in the produced transaction is different, even if an empty `outpointTransactionHash` is used for each transaction).',\n            type: 'number',\n        },\n        outpointTransactionHash: {\n            description: 'A 32-byte, hexadecimal-encoded hash of the transaction from which this input is spent in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000001`\\n\\nA.K.A. Outpoint `Transaction ID`',\n            type: 'string',\n        },\n        sequenceNumber: {\n            description: 'The positive, 32-bit unsigned integer used as the \"sequence number\" for this input.\\n\\nIf undefined, this defaults to `0`.',\n            type: 'number',\n        },\n        unlockingBytecode: {\n            anyOf: [\n                { $ref: '#/definitions/AuthenticationTemplateScenarioBytecode' },\n                {\n                    items: { const: 'slot', type: 'string' },\n                    maxItems: 1,\n                    minItems: 1,\n                    type: 'array',\n                },\n            ],\n            description: 'The `unlockingBytecode` value of this input for this scenario. This must be either `[\"slot\"]`, indicating that this input contains the `unlockingBytecode` under test by the scenario, or an `AuthenticationTemplateScenarioBytecode`.\\n\\nFor a scenario to be valid, `unlockingBytecode` must be `[\"slot\"]` for exactly one input in the scenario.\\n\\nDefaults to `[\"slot\"]`.',\n        },\n    },\n    type: 'object',\n};\nfunction validate31(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            const _errs1 = errors;\n            for (const key0 in data) {\n                if (!(key0 === 'outpointIndex' ||\n                    key0 === 'outpointTransactionHash' ||\n                    key0 === 'sequenceNumber' ||\n                    key0 === 'unlockingBytecode')) {\n                    validate31.errors = [\n                        {\n                            instancePath,\n                            schemaPath: '#/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        },\n                    ];\n                    return false;\n                    break;\n                }\n            }\n            if (_errs1 === errors) {\n                if (data.outpointIndex !== undefined) {\n                    let data0 = data.outpointIndex;\n                    const _errs2 = errors;\n                    if (!(typeof data0 == 'number' && isFinite(data0))) {\n                        validate31.errors = [\n                            {\n                                instancePath: instancePath + '/outpointIndex',\n                                schemaPath: '#/properties/outpointIndex/type',\n                                keyword: 'type',\n                                params: { type: 'number' },\n                                message: 'must be number',\n                            },\n                        ];\n                        return false;\n                    }\n                    var valid0 = _errs2 === errors;\n                }\n                else {\n                    var valid0 = true;\n                }\n                if (valid0) {\n                    if (data.outpointTransactionHash !== undefined) {\n                        const _errs4 = errors;\n                        if (typeof data.outpointTransactionHash !== 'string') {\n                            validate31.errors = [\n                                {\n                                    instancePath: instancePath + '/outpointTransactionHash',\n                                    schemaPath: '#/properties/outpointTransactionHash/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                },\n                            ];\n                            return false;\n                        }\n                        var valid0 = _errs4 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.sequenceNumber !== undefined) {\n                            let data2 = data.sequenceNumber;\n                            const _errs6 = errors;\n                            if (!(typeof data2 == 'number' && isFinite(data2))) {\n                                validate31.errors = [\n                                    {\n                                        instancePath: instancePath + '/sequenceNumber',\n                                        schemaPath: '#/properties/sequenceNumber/type',\n                                        keyword: 'type',\n                                        params: { type: 'number' },\n                                        message: 'must be number',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs6 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                        if (valid0) {\n                            if (data.unlockingBytecode !== undefined) {\n                                let data3 = data.unlockingBytecode;\n                                const _errs8 = errors;\n                                const _errs9 = errors;\n                                let valid1 = false;\n                                const _errs10 = errors;\n                                if (!validate28(data3, {\n                                    instancePath: instancePath + '/unlockingBytecode',\n                                    parentData: data,\n                                    parentDataProperty: 'unlockingBytecode',\n                                    rootData,\n                                })) {\n                                    vErrors =\n                                        vErrors === null\n                                            ? validate28.errors\n                                            : vErrors.concat(validate28.errors);\n                                    errors = vErrors.length;\n                                }\n                                var _valid0 = _errs10 === errors;\n                                valid1 = valid1 || _valid0;\n                                if (!valid1) {\n                                    const _errs11 = errors;\n                                    if (errors === _errs11) {\n                                        if (Array.isArray(data3)) {\n                                            if (data3.length > 1) {\n                                                const err0 = {\n                                                    instancePath: instancePath + '/unlockingBytecode',\n                                                    schemaPath: '#/properties/unlockingBytecode/anyOf/1/maxItems',\n                                                    keyword: 'maxItems',\n                                                    params: { limit: 1 },\n                                                    message: 'must NOT have more than 1 items',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err0];\n                                                }\n                                                else {\n                                                    vErrors.push(err0);\n                                                }\n                                                errors++;\n                                            }\n                                            else {\n                                                if (data3.length < 1) {\n                                                    const err1 = {\n                                                        instancePath: instancePath + '/unlockingBytecode',\n                                                        schemaPath: '#/properties/unlockingBytecode/anyOf/1/minItems',\n                                                        keyword: 'minItems',\n                                                        params: { limit: 1 },\n                                                        message: 'must NOT have fewer than 1 items',\n                                                    };\n                                                    if (vErrors === null) {\n                                                        vErrors = [err1];\n                                                    }\n                                                    else {\n                                                        vErrors.push(err1);\n                                                    }\n                                                    errors++;\n                                                }\n                                                else {\n                                                    var valid2 = true;\n                                                    const len0 = data3.length;\n                                                    for (let i0 = 0; i0 < len0; i0++) {\n                                                        let data4 = data3[i0];\n                                                        const _errs13 = errors;\n                                                        if (typeof data4 !== 'string') {\n                                                            const err2 = {\n                                                                instancePath: instancePath + '/unlockingBytecode/' + i0,\n                                                                schemaPath: '#/properties/unlockingBytecode/anyOf/1/items/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'string' },\n                                                                message: 'must be string',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err2];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err2);\n                                                            }\n                                                            errors++;\n                                                        }\n                                                        if ('slot' !== data4) {\n                                                            const err3 = {\n                                                                instancePath: instancePath + '/unlockingBytecode/' + i0,\n                                                                schemaPath: '#/properties/unlockingBytecode/anyOf/1/items/const',\n                                                                keyword: 'const',\n                                                                params: { allowedValue: 'slot' },\n                                                                message: 'must be equal to constant',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err3];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err3);\n                                                            }\n                                                            errors++;\n                                                        }\n                                                        var valid2 = _errs13 === errors;\n                                                        if (!valid2) {\n                                                            break;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            const err4 = {\n                                                instancePath: instancePath + '/unlockingBytecode',\n                                                schemaPath: '#/properties/unlockingBytecode/anyOf/1/type',\n                                                keyword: 'type',\n                                                params: { type: 'array' },\n                                                message: 'must be array',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err4];\n                                            }\n                                            else {\n                                                vErrors.push(err4);\n                                            }\n                                            errors++;\n                                        }\n                                    }\n                                    var _valid0 = _errs11 === errors;\n                                    valid1 = valid1 || _valid0;\n                                }\n                                if (!valid1) {\n                                    const err5 = {\n                                        instancePath: instancePath + '/unlockingBytecode',\n                                        schemaPath: '#/properties/unlockingBytecode/anyOf',\n                                        keyword: 'anyOf',\n                                        params: {},\n                                        message: 'must match a schema in anyOf',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err5];\n                                    }\n                                    else {\n                                        vErrors.push(err5);\n                                    }\n                                    errors++;\n                                    validate31.errors = vErrors;\n                                    return false;\n                                }\n                                else {\n                                    errors = _errs9;\n                                    if (vErrors !== null) {\n                                        if (_errs9) {\n                                            vErrors.length = _errs9;\n                                        }\n                                        else {\n                                            vErrors = null;\n                                        }\n                                    }\n                                }\n                                var valid0 = _errs8 === errors;\n                            }\n                            else {\n                                var valid0 = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate31.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate31.errors = vErrors;\n    return errors === 0;\n}\nconst schema36 = {\n    additionalProperties: false,\n    description: 'An example output used to define a scenario for an authentication template.',\n    properties: {\n        lockingBytecode: {\n            $ref: '#/definitions/AuthenticationTemplateScenarioBytecode',\n            description: 'The locking bytecode used to encumber this output.\\n\\n`lockingBytecode` values may be provided as a hexadecimal-encoded string or as an object describing the required compilation. If undefined, defaults to  `{}`, which uses the default values for `script` and `overrides`, respectively.\\n\\nOnly source outputs may specify a `lockingBytecode` of `[\"slot\"]`; this identifies the source output in which the locking script under test will be placed. (To be valid, every scenario\\'s `sourceOutputs` property must have exactly one source output slot and one input slot at the same index.)',\n        },\n        token: {\n            additionalProperties: false,\n            description: 'The CashToken contents of this output. This property is only defined if the output contains one or more tokens. For details, see `CHIP-2022-02-CashTokens`.',\n            properties: {\n                amount: {\n                    description: 'The number of fungible tokens (of `category`) held in this output.\\n\\nBecause `Number.MAX_SAFE_INTEGER` (`9007199254740991`) is less than the maximum token amount (`9223372036854775807`), this value may also be provided as a string, e.g. `\"9223372036854775807\"`.\\n\\nIf undefined, this defaults to: `0`.',\n                    type: ['number', 'string'],\n                },\n                category: {\n                    description: 'The 32-byte, hexadecimal-encoded token category ID to which the token(s) in this output belong in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000002`',\n                    type: 'string',\n                },\n                nft: {\n                    additionalProperties: false,\n                    description: 'If present, the non-fungible token (NFT) held by this output. If the output does not include a non-fungible token, `undefined`.',\n                    properties: {\n                        capability: {\n                            description: 'The capability of this non-fungible token, must be either `minting`, `mutable`, or `none`.\\n\\nIf undefined, this defaults to: `none`.',\n                            enum: ['minting', 'mutable', 'none'],\n                            type: 'string',\n                        },\n                        commitment: {\n                            description: 'The hex-encoded commitment contents included in the non-fungible token held in this output.\\n\\nIf undefined, this defaults to: `\"\"` (a zero-length commitment).',\n                            type: 'string',\n                        },\n                    },\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        valueSatoshis: {\n            description: 'The value of the output in satoshis, the smallest unit of bitcoin.\\n\\nIn a valid transaction, this is a positive integer, from `0` to the maximum number of satoshis available to the transaction.\\n\\nThe maximum number of satoshis in existence is about 1/4 of `Number.MAX_SAFE_INTEGER` (`9007199254740991`), so typically, this value is defined using a `number`. However, this value may also be defined using a 16-character, hexadecimal-encoded `string`, to allow for the full range of the 64-bit unsigned, little-endian integer used to encode `valueSatoshis` in the encoded output format, e.g. `\"ffffffffffffffff\"`. This is useful for representing scenarios where intentionally excessive values are provided (to ensure an otherwise properly-signed transaction can never be included in the blockchain), e.g. transaction size estimations or off-chain Bitauth signatures.\\n\\nIf undefined, this defaults to: `0`.',\n            type: ['number', 'string'],\n        },\n    },\n    type: 'object',\n};\nfunction validate34(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            const _errs1 = errors;\n            for (const key0 in data) {\n                if (!(key0 === 'lockingBytecode' ||\n                    key0 === 'token' ||\n                    key0 === 'valueSatoshis')) {\n                    validate34.errors = [\n                        {\n                            instancePath,\n                            schemaPath: '#/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        },\n                    ];\n                    return false;\n                    break;\n                }\n            }\n            if (_errs1 === errors) {\n                if (data.lockingBytecode !== undefined) {\n                    const _errs2 = errors;\n                    if (!validate28(data.lockingBytecode, {\n                        instancePath: instancePath + '/lockingBytecode',\n                        parentData: data,\n                        parentDataProperty: 'lockingBytecode',\n                        rootData,\n                    })) {\n                        vErrors =\n                            vErrors === null\n                                ? validate28.errors\n                                : vErrors.concat(validate28.errors);\n                        errors = vErrors.length;\n                    }\n                    var valid0 = _errs2 === errors;\n                }\n                else {\n                    var valid0 = true;\n                }\n                if (valid0) {\n                    if (data.token !== undefined) {\n                        let data1 = data.token;\n                        const _errs3 = errors;\n                        if (errors === _errs3) {\n                            if (data1 && typeof data1 == 'object' && !Array.isArray(data1)) {\n                                const _errs5 = errors;\n                                for (const key1 in data1) {\n                                    if (!(key1 === 'amount' ||\n                                        key1 === 'category' ||\n                                        key1 === 'nft')) {\n                                        validate34.errors = [\n                                            {\n                                                instancePath: instancePath + '/token',\n                                                schemaPath: '#/properties/token/additionalProperties',\n                                                keyword: 'additionalProperties',\n                                                params: { additionalProperty: key1 },\n                                                message: 'must NOT have additional properties',\n                                            },\n                                        ];\n                                        return false;\n                                        break;\n                                    }\n                                }\n                                if (_errs5 === errors) {\n                                    if (data1.amount !== undefined) {\n                                        let data2 = data1.amount;\n                                        const _errs6 = errors;\n                                        if (!(typeof data2 == 'number' && isFinite(data2)) &&\n                                            typeof data2 !== 'string') {\n                                            validate34.errors = [\n                                                {\n                                                    instancePath: instancePath + '/token/amount',\n                                                    schemaPath: '#/properties/token/properties/amount/type',\n                                                    keyword: 'type',\n                                                    params: {\n                                                        type: schema36.properties.token.properties.amount\n                                                            .type,\n                                                    },\n                                                    message: 'must be number,string',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                        var valid1 = _errs6 === errors;\n                                    }\n                                    else {\n                                        var valid1 = true;\n                                    }\n                                    if (valid1) {\n                                        if (data1.category !== undefined) {\n                                            const _errs8 = errors;\n                                            if (typeof data1.category !== 'string') {\n                                                validate34.errors = [\n                                                    {\n                                                        instancePath: instancePath + '/token/category',\n                                                        schemaPath: '#/properties/token/properties/category/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'string' },\n                                                        message: 'must be string',\n                                                    },\n                                                ];\n                                                return false;\n                                            }\n                                            var valid1 = _errs8 === errors;\n                                        }\n                                        else {\n                                            var valid1 = true;\n                                        }\n                                        if (valid1) {\n                                            if (data1.nft !== undefined) {\n                                                let data4 = data1.nft;\n                                                const _errs10 = errors;\n                                                if (errors === _errs10) {\n                                                    if (data4 &&\n                                                        typeof data4 == 'object' &&\n                                                        !Array.isArray(data4)) {\n                                                        const _errs12 = errors;\n                                                        for (const key2 in data4) {\n                                                            if (!(key2 === 'capability' || key2 === 'commitment')) {\n                                                                validate34.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/token/nft',\n                                                                        schemaPath: '#/properties/token/properties/nft/additionalProperties',\n                                                                        keyword: 'additionalProperties',\n                                                                        params: { additionalProperty: key2 },\n                                                                        message: 'must NOT have additional properties',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                                break;\n                                                            }\n                                                        }\n                                                        if (_errs12 === errors) {\n                                                            if (data4.capability !== undefined) {\n                                                                let data5 = data4.capability;\n                                                                const _errs13 = errors;\n                                                                if (typeof data5 !== 'string') {\n                                                                    validate34.errors = [\n                                                                        {\n                                                                            instancePath: instancePath + '/token/nft/capability',\n                                                                            schemaPath: '#/properties/token/properties/nft/properties/capability/type',\n                                                                            keyword: 'type',\n                                                                            params: { type: 'string' },\n                                                                            message: 'must be string',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                }\n                                                                if (!(data5 === 'minting' ||\n                                                                    data5 === 'mutable' ||\n                                                                    data5 === 'none')) {\n                                                                    validate34.errors = [\n                                                                        {\n                                                                            instancePath: instancePath + '/token/nft/capability',\n                                                                            schemaPath: '#/properties/token/properties/nft/properties/capability/enum',\n                                                                            keyword: 'enum',\n                                                                            params: {\n                                                                                allowedValues: schema36.properties.token.properties\n                                                                                    .nft.properties.capability.enum,\n                                                                            },\n                                                                            message: 'must be equal to one of the allowed values',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                }\n                                                                var valid2 = _errs13 === errors;\n                                                            }\n                                                            else {\n                                                                var valid2 = true;\n                                                            }\n                                                            if (valid2) {\n                                                                if (data4.commitment !== undefined) {\n                                                                    const _errs15 = errors;\n                                                                    if (typeof data4.commitment !== 'string') {\n                                                                        validate34.errors = [\n                                                                            {\n                                                                                instancePath: instancePath +\n                                                                                    '/token/nft/commitment',\n                                                                                schemaPath: '#/properties/token/properties/nft/properties/commitment/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'string' },\n                                                                                message: 'must be string',\n                                                                            },\n                                                                        ];\n                                                                        return false;\n                                                                    }\n                                                                    var valid2 = _errs15 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid2 = true;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        validate34.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/token/nft',\n                                                                schemaPath: '#/properties/token/properties/nft/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'object' },\n                                                                message: 'must be object',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                }\n                                                var valid1 = _errs10 === errors;\n                                            }\n                                            else {\n                                                var valid1 = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                validate34.errors = [\n                                    {\n                                        instancePath: instancePath + '/token',\n                                        schemaPath: '#/properties/token/type',\n                                        keyword: 'type',\n                                        params: { type: 'object' },\n                                        message: 'must be object',\n                                    },\n                                ];\n                                return false;\n                            }\n                        }\n                        var valid0 = _errs3 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.valueSatoshis !== undefined) {\n                            let data7 = data.valueSatoshis;\n                            const _errs17 = errors;\n                            if (!(typeof data7 == 'number' && isFinite(data7)) &&\n                                typeof data7 !== 'string') {\n                                validate34.errors = [\n                                    {\n                                        instancePath: instancePath + '/valueSatoshis',\n                                        schemaPath: '#/properties/valueSatoshis/type',\n                                        keyword: 'type',\n                                        params: { type: schema36.properties.valueSatoshis.type },\n                                        message: 'must be number,string',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs17 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate34.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate34.errors = vErrors;\n    return errors === 0;\n}\nfunction validate26(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            const _errs1 = errors;\n            for (const key0 in data) {\n                if (!(key0 === 'data' ||\n                    key0 === 'description' ||\n                    key0 === 'extends' ||\n                    key0 === 'name' ||\n                    key0 === 'sourceOutputs' ||\n                    key0 === 'transaction')) {\n                    validate26.errors = [\n                        {\n                            instancePath,\n                            schemaPath: '#/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        },\n                    ];\n                    return false;\n                    break;\n                }\n            }\n            if (_errs1 === errors) {\n                if (data.data !== undefined) {\n                    let data0 = data.data;\n                    const _errs2 = errors;\n                    const _errs3 = errors;\n                    if (errors === _errs3) {\n                        if (data0 && typeof data0 == 'object' && !Array.isArray(data0)) {\n                            const _errs5 = errors;\n                            for (const key1 in data0) {\n                                if (!(key1 === 'bytecode' ||\n                                    key1 === 'currentBlockHeight' ||\n                                    key1 === 'currentBlockTime' ||\n                                    key1 === 'hdKeys' ||\n                                    key1 === 'keys')) {\n                                    validate26.errors = [\n                                        {\n                                            instancePath: instancePath + '/data',\n                                            schemaPath: '#/definitions/AuthenticationTemplateScenarioData/additionalProperties',\n                                            keyword: 'additionalProperties',\n                                            params: { additionalProperty: key1 },\n                                            message: 'must NOT have additional properties',\n                                        },\n                                    ];\n                                    return false;\n                                    break;\n                                }\n                            }\n                            if (_errs5 === errors) {\n                                if (data0.bytecode !== undefined) {\n                                    let data1 = data0.bytecode;\n                                    const _errs6 = errors;\n                                    if (errors === _errs6) {\n                                        if (data1 &&\n                                            typeof data1 == 'object' &&\n                                            !Array.isArray(data1)) {\n                                            for (const key2 in data1) {\n                                                const _errs9 = errors;\n                                                if (typeof data1[key2] !== 'string') {\n                                                    validate26.errors = [\n                                                        {\n                                                            instancePath: instancePath +\n                                                                '/data/bytecode/' +\n                                                                key2.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                            schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/bytecode/additionalProperties/type',\n                                                            keyword: 'type',\n                                                            params: { type: 'string' },\n                                                            message: 'must be string',\n                                                        },\n                                                    ];\n                                                    return false;\n                                                }\n                                                var valid3 = _errs9 === errors;\n                                                if (!valid3) {\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            validate26.errors = [\n                                                {\n                                                    instancePath: instancePath + '/data/bytecode',\n                                                    schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/bytecode/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'object' },\n                                                    message: 'must be object',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                    }\n                                    var valid2 = _errs6 === errors;\n                                }\n                                else {\n                                    var valid2 = true;\n                                }\n                                if (valid2) {\n                                    if (data0.currentBlockHeight !== undefined) {\n                                        let data3 = data0.currentBlockHeight;\n                                        const _errs11 = errors;\n                                        if (!(typeof data3 == 'number' && isFinite(data3))) {\n                                            validate26.errors = [\n                                                {\n                                                    instancePath: instancePath + '/data/currentBlockHeight',\n                                                    schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/currentBlockHeight/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'number' },\n                                                    message: 'must be number',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                        var valid2 = _errs11 === errors;\n                                    }\n                                    else {\n                                        var valid2 = true;\n                                    }\n                                    if (valid2) {\n                                        if (data0.currentBlockTime !== undefined) {\n                                            let data4 = data0.currentBlockTime;\n                                            const _errs13 = errors;\n                                            if (!(typeof data4 == 'number' && isFinite(data4))) {\n                                                validate26.errors = [\n                                                    {\n                                                        instancePath: instancePath + '/data/currentBlockTime',\n                                                        schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/currentBlockTime/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'number' },\n                                                        message: 'must be number',\n                                                    },\n                                                ];\n                                                return false;\n                                            }\n                                            var valid2 = _errs13 === errors;\n                                        }\n                                        else {\n                                            var valid2 = true;\n                                        }\n                                        if (valid2) {\n                                            if (data0.hdKeys !== undefined) {\n                                                let data5 = data0.hdKeys;\n                                                const _errs15 = errors;\n                                                if (errors === _errs15) {\n                                                    if (data5 &&\n                                                        typeof data5 == 'object' &&\n                                                        !Array.isArray(data5)) {\n                                                        const _errs17 = errors;\n                                                        for (const key3 in data5) {\n                                                            if (!(key3 === 'addressIndex' ||\n                                                                key3 === 'hdPrivateKeys' ||\n                                                                key3 === 'hdPublicKeys')) {\n                                                                validate26.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/data/hdKeys',\n                                                                        schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/additionalProperties',\n                                                                        keyword: 'additionalProperties',\n                                                                        params: { additionalProperty: key3 },\n                                                                        message: 'must NOT have additional properties',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                                break;\n                                                            }\n                                                        }\n                                                        if (_errs17 === errors) {\n                                                            if (data5.addressIndex !== undefined) {\n                                                                let data6 = data5.addressIndex;\n                                                                const _errs18 = errors;\n                                                                if (!(typeof data6 == 'number' && isFinite(data6))) {\n                                                                    validate26.errors = [\n                                                                        {\n                                                                            instancePath: instancePath +\n                                                                                '/data/hdKeys/addressIndex',\n                                                                            schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/addressIndex/type',\n                                                                            keyword: 'type',\n                                                                            params: { type: 'number' },\n                                                                            message: 'must be number',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                }\n                                                                var valid4 = _errs18 === errors;\n                                                            }\n                                                            else {\n                                                                var valid4 = true;\n                                                            }\n                                                            if (valid4) {\n                                                                if (data5.hdPrivateKeys !== undefined) {\n                                                                    let data7 = data5.hdPrivateKeys;\n                                                                    const _errs20 = errors;\n                                                                    if (errors === _errs20) {\n                                                                        if (data7 &&\n                                                                            typeof data7 == 'object' &&\n                                                                            !Array.isArray(data7)) {\n                                                                            for (const key4 in data7) {\n                                                                                const _errs23 = errors;\n                                                                                if (typeof data7[key4] !== 'string') {\n                                                                                    validate26.errors = [\n                                                                                        {\n                                                                                            instancePath: instancePath +\n                                                                                                '/data/hdKeys/hdPrivateKeys/' +\n                                                                                                key4\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1'),\n                                                                                            schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/additionalProperties/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        },\n                                                                                    ];\n                                                                                    return false;\n                                                                                }\n                                                                                var valid5 = _errs23 === errors;\n                                                                                if (!valid5) {\n                                                                                    break;\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else {\n                                                                            validate26.errors = [\n                                                                                {\n                                                                                    instancePath: instancePath +\n                                                                                        '/data/hdKeys/hdPrivateKeys',\n                                                                                    schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/type',\n                                                                                    keyword: 'type',\n                                                                                    params: { type: 'object' },\n                                                                                    message: 'must be object',\n                                                                                },\n                                                                            ];\n                                                                            return false;\n                                                                        }\n                                                                    }\n                                                                    var valid4 = _errs20 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid4 = true;\n                                                                }\n                                                                if (valid4) {\n                                                                    if (data5.hdPublicKeys !== undefined) {\n                                                                        let data9 = data5.hdPublicKeys;\n                                                                        const _errs25 = errors;\n                                                                        if (errors === _errs25) {\n                                                                            if (data9 &&\n                                                                                typeof data9 == 'object' &&\n                                                                                !Array.isArray(data9)) {\n                                                                                for (const key5 in data9) {\n                                                                                    const _errs28 = errors;\n                                                                                    if (typeof data9[key5] !== 'string') {\n                                                                                        validate26.errors = [\n                                                                                            {\n                                                                                                instancePath: instancePath +\n                                                                                                    '/data/hdKeys/hdPublicKeys/' +\n                                                                                                    key5\n                                                                                                        .replace(/~/g, '~0')\n                                                                                                        .replace(/\\//g, '~1'),\n                                                                                                schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/additionalProperties/type',\n                                                                                                keyword: 'type',\n                                                                                                params: { type: 'string' },\n                                                                                                message: 'must be string',\n                                                                                            },\n                                                                                        ];\n                                                                                        return false;\n                                                                                    }\n                                                                                    var valid6 = _errs28 === errors;\n                                                                                    if (!valid6) {\n                                                                                        break;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            else {\n                                                                                validate26.errors = [\n                                                                                    {\n                                                                                        instancePath: instancePath +\n                                                                                            '/data/hdKeys/hdPublicKeys',\n                                                                                        schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/type',\n                                                                                        keyword: 'type',\n                                                                                        params: { type: 'object' },\n                                                                                        message: 'must be object',\n                                                                                    },\n                                                                                ];\n                                                                                return false;\n                                                                            }\n                                                                        }\n                                                                        var valid4 = _errs25 === errors;\n                                                                    }\n                                                                    else {\n                                                                        var valid4 = true;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        validate26.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/data/hdKeys',\n                                                                schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'object' },\n                                                                message: 'must be object',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                }\n                                                var valid2 = _errs15 === errors;\n                                            }\n                                            else {\n                                                var valid2 = true;\n                                            }\n                                            if (valid2) {\n                                                if (data0.keys !== undefined) {\n                                                    let data11 = data0.keys;\n                                                    const _errs30 = errors;\n                                                    if (errors === _errs30) {\n                                                        if (data11 &&\n                                                            typeof data11 == 'object' &&\n                                                            !Array.isArray(data11)) {\n                                                            const _errs32 = errors;\n                                                            for (const key6 in data11) {\n                                                                if (!(key6 === 'privateKeys')) {\n                                                                    validate26.errors = [\n                                                                        {\n                                                                            instancePath: instancePath + '/data/keys',\n                                                                            schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/keys/additionalProperties',\n                                                                            keyword: 'additionalProperties',\n                                                                            params: { additionalProperty: key6 },\n                                                                            message: 'must NOT have additional properties',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                    break;\n                                                                }\n                                                            }\n                                                            if (_errs32 === errors) {\n                                                                if (data11.privateKeys !== undefined) {\n                                                                    let data12 = data11.privateKeys;\n                                                                    const _errs33 = errors;\n                                                                    if (errors === _errs33) {\n                                                                        if (data12 &&\n                                                                            typeof data12 == 'object' &&\n                                                                            !Array.isArray(data12)) {\n                                                                            for (const key7 in data12) {\n                                                                                const _errs36 = errors;\n                                                                                if (typeof data12[key7] !== 'string') {\n                                                                                    validate26.errors = [\n                                                                                        {\n                                                                                            instancePath: instancePath +\n                                                                                                '/data/keys/privateKeys/' +\n                                                                                                key7\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1'),\n                                                                                            schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/keys/properties/privateKeys/additionalProperties/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        },\n                                                                                    ];\n                                                                                    return false;\n                                                                                }\n                                                                                var valid8 = _errs36 === errors;\n                                                                                if (!valid8) {\n                                                                                    break;\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else {\n                                                                            validate26.errors = [\n                                                                                {\n                                                                                    instancePath: instancePath +\n                                                                                        '/data/keys/privateKeys',\n                                                                                    schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/keys/properties/privateKeys/type',\n                                                                                    keyword: 'type',\n                                                                                    params: { type: 'object' },\n                                                                                    message: 'must be object',\n                                                                                },\n                                                                            ];\n                                                                            return false;\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                        else {\n                                                            validate26.errors = [\n                                                                {\n                                                                    instancePath: instancePath + '/data/keys',\n                                                                    schemaPath: '#/definitions/AuthenticationTemplateScenarioData/properties/keys/type',\n                                                                    keyword: 'type',\n                                                                    params: { type: 'object' },\n                                                                    message: 'must be object',\n                                                                },\n                                                            ];\n                                                            return false;\n                                                        }\n                                                    }\n                                                    var valid2 = _errs30 === errors;\n                                                }\n                                                else {\n                                                    var valid2 = true;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            validate26.errors = [\n                                {\n                                    instancePath: instancePath + '/data',\n                                    schemaPath: '#/definitions/AuthenticationTemplateScenarioData/type',\n                                    keyword: 'type',\n                                    params: { type: 'object' },\n                                    message: 'must be object',\n                                },\n                            ];\n                            return false;\n                        }\n                    }\n                    var valid0 = _errs2 === errors;\n                }\n                else {\n                    var valid0 = true;\n                }\n                if (valid0) {\n                    if (data.description !== undefined) {\n                        const _errs38 = errors;\n                        if (typeof data.description !== 'string') {\n                            validate26.errors = [\n                                {\n                                    instancePath: instancePath + '/description',\n                                    schemaPath: '#/properties/description/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                },\n                            ];\n                            return false;\n                        }\n                        var valid0 = _errs38 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.extends !== undefined) {\n                            const _errs40 = errors;\n                            if (typeof data.extends !== 'string') {\n                                validate26.errors = [\n                                    {\n                                        instancePath: instancePath + '/extends',\n                                        schemaPath: '#/properties/extends/type',\n                                        keyword: 'type',\n                                        params: { type: 'string' },\n                                        message: 'must be string',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs40 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                        if (valid0) {\n                            if (data.name !== undefined) {\n                                const _errs42 = errors;\n                                if (typeof data.name !== 'string') {\n                                    validate26.errors = [\n                                        {\n                                            instancePath: instancePath + '/name',\n                                            schemaPath: '#/properties/name/type',\n                                            keyword: 'type',\n                                            params: { type: 'string' },\n                                            message: 'must be string',\n                                        },\n                                    ];\n                                    return false;\n                                }\n                                var valid0 = _errs42 === errors;\n                            }\n                            else {\n                                var valid0 = true;\n                            }\n                            if (valid0) {\n                                if (data.sourceOutputs !== undefined) {\n                                    let data17 = data.sourceOutputs;\n                                    const _errs44 = errors;\n                                    if (errors === _errs44) {\n                                        if (Array.isArray(data17)) {\n                                            var valid9 = true;\n                                            const len0 = data17.length;\n                                            for (let i0 = 0; i0 < len0; i0++) {\n                                                const _errs46 = errors;\n                                                if (!validate27(data17[i0], {\n                                                    instancePath: instancePath + '/sourceOutputs/' + i0,\n                                                    parentData: data17,\n                                                    parentDataProperty: i0,\n                                                    rootData,\n                                                })) {\n                                                    vErrors =\n                                                        vErrors === null\n                                                            ? validate27.errors\n                                                            : vErrors.concat(validate27.errors);\n                                                    errors = vErrors.length;\n                                                }\n                                                var valid9 = _errs46 === errors;\n                                                if (!valid9) {\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            validate26.errors = [\n                                                {\n                                                    instancePath: instancePath + '/sourceOutputs',\n                                                    schemaPath: '#/properties/sourceOutputs/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'array' },\n                                                    message: 'must be array',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                    }\n                                    var valid0 = _errs44 === errors;\n                                }\n                                else {\n                                    var valid0 = true;\n                                }\n                                if (valid0) {\n                                    if (data.transaction !== undefined) {\n                                        let data19 = data.transaction;\n                                        const _errs47 = errors;\n                                        if (errors === _errs47) {\n                                            if (data19 &&\n                                                typeof data19 == 'object' &&\n                                                !Array.isArray(data19)) {\n                                                const _errs49 = errors;\n                                                for (const key8 in data19) {\n                                                    if (!(key8 === 'inputs' ||\n                                                        key8 === 'locktime' ||\n                                                        key8 === 'outputs' ||\n                                                        key8 === 'version')) {\n                                                        validate26.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/transaction',\n                                                                schemaPath: '#/properties/transaction/additionalProperties',\n                                                                keyword: 'additionalProperties',\n                                                                params: { additionalProperty: key8 },\n                                                                message: 'must NOT have additional properties',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                        break;\n                                                    }\n                                                }\n                                                if (_errs49 === errors) {\n                                                    if (data19.inputs !== undefined) {\n                                                        let data20 = data19.inputs;\n                                                        const _errs50 = errors;\n                                                        if (errors === _errs50) {\n                                                            if (Array.isArray(data20)) {\n                                                                var valid11 = true;\n                                                                const len1 = data20.length;\n                                                                for (let i1 = 0; i1 < len1; i1++) {\n                                                                    const _errs52 = errors;\n                                                                    if (!validate31(data20[i1], {\n                                                                        instancePath: instancePath +\n                                                                            '/transaction/inputs/' +\n                                                                            i1,\n                                                                        parentData: data20,\n                                                                        parentDataProperty: i1,\n                                                                        rootData,\n                                                                    })) {\n                                                                        vErrors =\n                                                                            vErrors === null\n                                                                                ? validate31.errors\n                                                                                : vErrors.concat(validate31.errors);\n                                                                        errors = vErrors.length;\n                                                                    }\n                                                                    var valid11 = _errs52 === errors;\n                                                                    if (!valid11) {\n                                                                        break;\n                                                                    }\n                                                                }\n                                                            }\n                                                            else {\n                                                                validate26.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/transaction/inputs',\n                                                                        schemaPath: '#/properties/transaction/properties/inputs/type',\n                                                                        keyword: 'type',\n                                                                        params: { type: 'array' },\n                                                                        message: 'must be array',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                            }\n                                                        }\n                                                        var valid10 = _errs50 === errors;\n                                                    }\n                                                    else {\n                                                        var valid10 = true;\n                                                    }\n                                                    if (valid10) {\n                                                        if (data19.locktime !== undefined) {\n                                                            let data22 = data19.locktime;\n                                                            const _errs53 = errors;\n                                                            if (!(typeof data22 == 'number' && isFinite(data22))) {\n                                                                validate26.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/transaction/locktime',\n                                                                        schemaPath: '#/properties/transaction/properties/locktime/type',\n                                                                        keyword: 'type',\n                                                                        params: { type: 'number' },\n                                                                        message: 'must be number',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                            }\n                                                            var valid10 = _errs53 === errors;\n                                                        }\n                                                        else {\n                                                            var valid10 = true;\n                                                        }\n                                                        if (valid10) {\n                                                            if (data19.outputs !== undefined) {\n                                                                let data23 = data19.outputs;\n                                                                const _errs55 = errors;\n                                                                if (errors === _errs55) {\n                                                                    if (Array.isArray(data23)) {\n                                                                        var valid12 = true;\n                                                                        const len2 = data23.length;\n                                                                        for (let i2 = 0; i2 < len2; i2++) {\n                                                                            const _errs57 = errors;\n                                                                            if (!validate34(data23[i2], {\n                                                                                instancePath: instancePath +\n                                                                                    '/transaction/outputs/' +\n                                                                                    i2,\n                                                                                parentData: data23,\n                                                                                parentDataProperty: i2,\n                                                                                rootData,\n                                                                            })) {\n                                                                                vErrors =\n                                                                                    vErrors === null\n                                                                                        ? validate34.errors\n                                                                                        : vErrors.concat(validate34.errors);\n                                                                                errors = vErrors.length;\n                                                                            }\n                                                                            var valid12 = _errs57 === errors;\n                                                                            if (!valid12) {\n                                                                                break;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    else {\n                                                                        validate26.errors = [\n                                                                            {\n                                                                                instancePath: instancePath + '/transaction/outputs',\n                                                                                schemaPath: '#/properties/transaction/properties/outputs/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'array' },\n                                                                                message: 'must be array',\n                                                                            },\n                                                                        ];\n                                                                        return false;\n                                                                    }\n                                                                }\n                                                                var valid10 = _errs55 === errors;\n                                                            }\n                                                            else {\n                                                                var valid10 = true;\n                                                            }\n                                                            if (valid10) {\n                                                                if (data19.version !== undefined) {\n                                                                    let data25 = data19.version;\n                                                                    const _errs58 = errors;\n                                                                    if (!(typeof data25 == 'number' &&\n                                                                        isFinite(data25))) {\n                                                                        validate26.errors = [\n                                                                            {\n                                                                                instancePath: instancePath + '/transaction/version',\n                                                                                schemaPath: '#/properties/transaction/properties/version/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'number' },\n                                                                                message: 'must be number',\n                                                                            },\n                                                                        ];\n                                                                        return false;\n                                                                    }\n                                                                    var valid10 = _errs58 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid10 = true;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                            else {\n                                                validate26.errors = [\n                                                    {\n                                                        instancePath: instancePath + '/transaction',\n                                                        schemaPath: '#/properties/transaction/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'object' },\n                                                        message: 'must be object',\n                                                    },\n                                                ];\n                                                return false;\n                                            }\n                                        }\n                                        var valid0 = _errs47 === errors;\n                                    }\n                                    else {\n                                        var valid0 = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate26.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate26.errors = vErrors;\n    return errors === 0;\n}\nconst schema39 = {\n    additionalProperties: false,\n    properties: {\n        name: {\n            description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n            type: 'string',\n        },\n        pushed: {\n            description: 'If set to `true`, indicates that this script should be wrapped in a push statement for testing.\\n\\nThis is useful for scripts that serve as \"bytecode templates\" – e.g. formatted messages or signature preimages. These scripts are typically not evaluated as bytecode but appear within push statements elsewhere in the template.\\n\\nDefaults to `false`.',\n            type: 'boolean',\n        },\n        script: {\n            description: 'The script definition in CashAssembly.',\n            type: 'string',\n        },\n        tests: {\n            additionalProperties: {\n                $ref: '#/definitions/AuthenticationTemplateScriptTest',\n            },\n            description: 'One or more tests that can be used during development and during template validation to confirm the correctness of this tested script.',\n            type: 'object',\n        },\n    },\n    required: ['script', 'tests'],\n    type: 'object',\n};\nconst schema40 = {\n    additionalProperties: false,\n    properties: {\n        check: {\n            description: 'The script to evaluate after the script being tested. This can be used to check that the tested script leaves the expected results on the stack. For example, if the tested script is expected to leave 3 items of a specific size on the stack, the `check` script could pop each resulting item from the stack and examine it for correctness.\\n\\nIn scenario testing, this script is appended to the script under test, and together they are treated as the locking script. Program evaluation is considered successful if the resulting program state can be verified by the virtual machine (e.g. the resulting stack contains a single `1`, no errors are produced, etc.).',\n            type: 'string',\n        },\n        fails: {\n            description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in bytecode that fails program verification. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        invalid: {\n            description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in a compilation error. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this test (for use in user interfaces).',\n            type: 'string',\n        },\n        passes: {\n            description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in bytecode that passes program verification. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        setup: {\n            description: 'A script to evaluate before the script being tested. This can be used to push values to the stack that are operated on by the tested script.\\n\\nIn scenario testing, this script is treated as the unlocking script.',\n            type: 'string',\n        },\n    },\n    required: ['check'],\n    type: 'object',\n};\nfunction validate38(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            let missing0;\n            if ((data.script === undefined && (missing0 = 'script')) ||\n                (data.tests === undefined && (missing0 = 'tests'))) {\n                validate38.errors = [\n                    {\n                        instancePath,\n                        schemaPath: '#/required',\n                        keyword: 'required',\n                        params: { missingProperty: missing0 },\n                        message: \"must have required property '\" + missing0 + \"'\",\n                    },\n                ];\n                return false;\n            }\n            else {\n                const _errs1 = errors;\n                for (const key0 in data) {\n                    if (!(key0 === 'name' ||\n                        key0 === 'pushed' ||\n                        key0 === 'script' ||\n                        key0 === 'tests')) {\n                        validate38.errors = [\n                            {\n                                instancePath,\n                                schemaPath: '#/additionalProperties',\n                                keyword: 'additionalProperties',\n                                params: { additionalProperty: key0 },\n                                message: 'must NOT have additional properties',\n                            },\n                        ];\n                        return false;\n                        break;\n                    }\n                }\n                if (_errs1 === errors) {\n                    if (data.name !== undefined) {\n                        const _errs2 = errors;\n                        if (typeof data.name !== 'string') {\n                            validate38.errors = [\n                                {\n                                    instancePath: instancePath + '/name',\n                                    schemaPath: '#/properties/name/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                },\n                            ];\n                            return false;\n                        }\n                        var valid0 = _errs2 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.pushed !== undefined) {\n                            const _errs4 = errors;\n                            if (typeof data.pushed !== 'boolean') {\n                                validate38.errors = [\n                                    {\n                                        instancePath: instancePath + '/pushed',\n                                        schemaPath: '#/properties/pushed/type',\n                                        keyword: 'type',\n                                        params: { type: 'boolean' },\n                                        message: 'must be boolean',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs4 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                        if (valid0) {\n                            if (data.script !== undefined) {\n                                const _errs6 = errors;\n                                if (typeof data.script !== 'string') {\n                                    validate38.errors = [\n                                        {\n                                            instancePath: instancePath + '/script',\n                                            schemaPath: '#/properties/script/type',\n                                            keyword: 'type',\n                                            params: { type: 'string' },\n                                            message: 'must be string',\n                                        },\n                                    ];\n                                    return false;\n                                }\n                                var valid0 = _errs6 === errors;\n                            }\n                            else {\n                                var valid0 = true;\n                            }\n                            if (valid0) {\n                                if (data.tests !== undefined) {\n                                    let data3 = data.tests;\n                                    const _errs8 = errors;\n                                    if (errors === _errs8) {\n                                        if (data3 &&\n                                            typeof data3 == 'object' &&\n                                            !Array.isArray(data3)) {\n                                            for (const key1 in data3) {\n                                                let data4 = data3[key1];\n                                                const _errs11 = errors;\n                                                const _errs12 = errors;\n                                                if (errors === _errs12) {\n                                                    if (data4 &&\n                                                        typeof data4 == 'object' &&\n                                                        !Array.isArray(data4)) {\n                                                        let missing1;\n                                                        if (data4.check === undefined &&\n                                                            (missing1 = 'check')) {\n                                                            validate38.errors = [\n                                                                {\n                                                                    instancePath: instancePath +\n                                                                        '/tests/' +\n                                                                        key1\n                                                                            .replace(/~/g, '~0')\n                                                                            .replace(/\\//g, '~1'),\n                                                                    schemaPath: '#/definitions/AuthenticationTemplateScriptTest/required',\n                                                                    keyword: 'required',\n                                                                    params: { missingProperty: missing1 },\n                                                                    message: \"must have required property '\" +\n                                                                        missing1 +\n                                                                        \"'\",\n                                                                },\n                                                            ];\n                                                            return false;\n                                                        }\n                                                        else {\n                                                            const _errs14 = errors;\n                                                            for (const key2 in data4) {\n                                                                if (!(key2 === 'check' ||\n                                                                    key2 === 'fails' ||\n                                                                    key2 === 'invalid' ||\n                                                                    key2 === 'name' ||\n                                                                    key2 === 'passes' ||\n                                                                    key2 === 'setup')) {\n                                                                    validate38.errors = [\n                                                                        {\n                                                                            instancePath: instancePath +\n                                                                                '/tests/' +\n                                                                                key1\n                                                                                    .replace(/~/g, '~0')\n                                                                                    .replace(/\\//g, '~1'),\n                                                                            schemaPath: '#/definitions/AuthenticationTemplateScriptTest/additionalProperties',\n                                                                            keyword: 'additionalProperties',\n                                                                            params: { additionalProperty: key2 },\n                                                                            message: 'must NOT have additional properties',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                    break;\n                                                                }\n                                                            }\n                                                            if (_errs14 === errors) {\n                                                                if (data4.check !== undefined) {\n                                                                    const _errs15 = errors;\n                                                                    if (typeof data4.check !== 'string') {\n                                                                        validate38.errors = [\n                                                                            {\n                                                                                instancePath: instancePath +\n                                                                                    '/tests/' +\n                                                                                    key1\n                                                                                        .replace(/~/g, '~0')\n                                                                                        .replace(/\\//g, '~1') +\n                                                                                    '/check',\n                                                                                schemaPath: '#/definitions/AuthenticationTemplateScriptTest/properties/check/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'string' },\n                                                                                message: 'must be string',\n                                                                            },\n                                                                        ];\n                                                                        return false;\n                                                                    }\n                                                                    var valid3 = _errs15 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid3 = true;\n                                                                }\n                                                                if (valid3) {\n                                                                    if (data4.fails !== undefined) {\n                                                                        let data6 = data4.fails;\n                                                                        const _errs17 = errors;\n                                                                        if (errors === _errs17) {\n                                                                            if (Array.isArray(data6)) {\n                                                                                var valid4 = true;\n                                                                                const len0 = data6.length;\n                                                                                for (let i0 = 0; i0 < len0; i0++) {\n                                                                                    const _errs19 = errors;\n                                                                                    if (typeof data6[i0] !== 'string') {\n                                                                                        validate38.errors = [\n                                                                                            {\n                                                                                                instancePath: instancePath +\n                                                                                                    '/tests/' +\n                                                                                                    key1\n                                                                                                        .replace(/~/g, '~0')\n                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                    '/fails/' +\n                                                                                                    i0,\n                                                                                                schemaPath: '#/definitions/AuthenticationTemplateScriptTest/properties/fails/items/type',\n                                                                                                keyword: 'type',\n                                                                                                params: { type: 'string' },\n                                                                                                message: 'must be string',\n                                                                                            },\n                                                                                        ];\n                                                                                        return false;\n                                                                                    }\n                                                                                    var valid4 = _errs19 === errors;\n                                                                                    if (!valid4) {\n                                                                                        break;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            else {\n                                                                                validate38.errors = [\n                                                                                    {\n                                                                                        instancePath: instancePath +\n                                                                                            '/tests/' +\n                                                                                            key1\n                                                                                                .replace(/~/g, '~0')\n                                                                                                .replace(/\\//g, '~1') +\n                                                                                            '/fails',\n                                                                                        schemaPath: '#/definitions/AuthenticationTemplateScriptTest/properties/fails/type',\n                                                                                        keyword: 'type',\n                                                                                        params: { type: 'array' },\n                                                                                        message: 'must be array',\n                                                                                    },\n                                                                                ];\n                                                                                return false;\n                                                                            }\n                                                                        }\n                                                                        var valid3 = _errs17 === errors;\n                                                                    }\n                                                                    else {\n                                                                        var valid3 = true;\n                                                                    }\n                                                                    if (valid3) {\n                                                                        if (data4.invalid !== undefined) {\n                                                                            let data8 = data4.invalid;\n                                                                            const _errs21 = errors;\n                                                                            if (errors === _errs21) {\n                                                                                if (Array.isArray(data8)) {\n                                                                                    var valid5 = true;\n                                                                                    const len1 = data8.length;\n                                                                                    for (let i1 = 0; i1 < len1; i1++) {\n                                                                                        const _errs23 = errors;\n                                                                                        if (typeof data8[i1] !== 'string') {\n                                                                                            validate38.errors = [\n                                                                                                {\n                                                                                                    instancePath: instancePath +\n                                                                                                        '/tests/' +\n                                                                                                        key1\n                                                                                                            .replace(/~/g, '~0')\n                                                                                                            .replace(/\\//g, '~1') +\n                                                                                                        '/invalid/' +\n                                                                                                        i1,\n                                                                                                    schemaPath: '#/definitions/AuthenticationTemplateScriptTest/properties/invalid/items/type',\n                                                                                                    keyword: 'type',\n                                                                                                    params: { type: 'string' },\n                                                                                                    message: 'must be string',\n                                                                                                },\n                                                                                            ];\n                                                                                            return false;\n                                                                                        }\n                                                                                        var valid5 = _errs23 === errors;\n                                                                                        if (!valid5) {\n                                                                                            break;\n                                                                                        }\n                                                                                    }\n                                                                                }\n                                                                                else {\n                                                                                    validate38.errors = [\n                                                                                        {\n                                                                                            instancePath: instancePath +\n                                                                                                '/tests/' +\n                                                                                                key1\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                '/invalid',\n                                                                                            schemaPath: '#/definitions/AuthenticationTemplateScriptTest/properties/invalid/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'array' },\n                                                                                            message: 'must be array',\n                                                                                        },\n                                                                                    ];\n                                                                                    return false;\n                                                                                }\n                                                                            }\n                                                                            var valid3 = _errs21 === errors;\n                                                                        }\n                                                                        else {\n                                                                            var valid3 = true;\n                                                                        }\n                                                                        if (valid3) {\n                                                                            if (data4.name !== undefined) {\n                                                                                const _errs25 = errors;\n                                                                                if (typeof data4.name !== 'string') {\n                                                                                    validate38.errors = [\n                                                                                        {\n                                                                                            instancePath: instancePath +\n                                                                                                '/tests/' +\n                                                                                                key1\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                '/name',\n                                                                                            schemaPath: '#/definitions/AuthenticationTemplateScriptTest/properties/name/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        },\n                                                                                    ];\n                                                                                    return false;\n                                                                                }\n                                                                                var valid3 = _errs25 === errors;\n                                                                            }\n                                                                            else {\n                                                                                var valid3 = true;\n                                                                            }\n                                                                            if (valid3) {\n                                                                                if (data4.passes !== undefined) {\n                                                                                    let data11 = data4.passes;\n                                                                                    const _errs27 = errors;\n                                                                                    if (errors === _errs27) {\n                                                                                        if (Array.isArray(data11)) {\n                                                                                            var valid6 = true;\n                                                                                            const len2 = data11.length;\n                                                                                            for (let i2 = 0; i2 < len2; i2++) {\n                                                                                                const _errs29 = errors;\n                                                                                                if (typeof data11[i2] !== 'string') {\n                                                                                                    validate38.errors = [\n                                                                                                        {\n                                                                                                            instancePath: instancePath +\n                                                                                                                '/tests/' +\n                                                                                                                key1\n                                                                                                                    .replace(/~/g, '~0')\n                                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                                '/passes/' +\n                                                                                                                i2,\n                                                                                                            schemaPath: '#/definitions/AuthenticationTemplateScriptTest/properties/passes/items/type',\n                                                                                                            keyword: 'type',\n                                                                                                            params: {\n                                                                                                                type: 'string',\n                                                                                                            },\n                                                                                                            message: 'must be string',\n                                                                                                        },\n                                                                                                    ];\n                                                                                                    return false;\n                                                                                                }\n                                                                                                var valid6 = _errs29 === errors;\n                                                                                                if (!valid6) {\n                                                                                                    break;\n                                                                                                }\n                                                                                            }\n                                                                                        }\n                                                                                        else {\n                                                                                            validate38.errors = [\n                                                                                                {\n                                                                                                    instancePath: instancePath +\n                                                                                                        '/tests/' +\n                                                                                                        key1\n                                                                                                            .replace(/~/g, '~0')\n                                                                                                            .replace(/\\//g, '~1') +\n                                                                                                        '/passes',\n                                                                                                    schemaPath: '#/definitions/AuthenticationTemplateScriptTest/properties/passes/type',\n                                                                                                    keyword: 'type',\n                                                                                                    params: { type: 'array' },\n                                                                                                    message: 'must be array',\n                                                                                                },\n                                                                                            ];\n                                                                                            return false;\n                                                                                        }\n                                                                                    }\n                                                                                    var valid3 = _errs27 === errors;\n                                                                                }\n                                                                                else {\n                                                                                    var valid3 = true;\n                                                                                }\n                                                                                if (valid3) {\n                                                                                    if (data4.setup !== undefined) {\n                                                                                        const _errs31 = errors;\n                                                                                        if (typeof data4.setup !== 'string') {\n                                                                                            validate38.errors = [\n                                                                                                {\n                                                                                                    instancePath: instancePath +\n                                                                                                        '/tests/' +\n                                                                                                        key1\n                                                                                                            .replace(/~/g, '~0')\n                                                                                                            .replace(/\\//g, '~1') +\n                                                                                                        '/setup',\n                                                                                                    schemaPath: '#/definitions/AuthenticationTemplateScriptTest/properties/setup/type',\n                                                                                                    keyword: 'type',\n                                                                                                    params: { type: 'string' },\n                                                                                                    message: 'must be string',\n                                                                                                },\n                                                                                            ];\n                                                                                            return false;\n                                                                                        }\n                                                                                        var valid3 = _errs31 === errors;\n                                                                                    }\n                                                                                    else {\n                                                                                        var valid3 = true;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        validate38.errors = [\n                                                            {\n                                                                instancePath: instancePath +\n                                                                    '/tests/' +\n                                                                    key1.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                                schemaPath: '#/definitions/AuthenticationTemplateScriptTest/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'object' },\n                                                                message: 'must be object',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                }\n                                                var valid1 = _errs11 === errors;\n                                                if (!valid1) {\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            validate38.errors = [\n                                                {\n                                                    instancePath: instancePath + '/tests',\n                                                    schemaPath: '#/properties/tests/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'object' },\n                                                    message: 'must be object',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                    }\n                                    var valid0 = _errs8 === errors;\n                                }\n                                else {\n                                    var valid0 = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate38.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate38.errors = vErrors;\n    return errors === 0;\n}\nconst func4 = Object.prototype.hasOwnProperty;\nfunction validate21(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            let missing0;\n            if ((data.entities === undefined && (missing0 = 'entities')) ||\n                (data.scripts === undefined && (missing0 = 'scripts')) ||\n                (data.supported === undefined && (missing0 = 'supported')) ||\n                (data.version === undefined && (missing0 = 'version'))) {\n                validate21.errors = [\n                    {\n                        instancePath,\n                        schemaPath: '#/required',\n                        keyword: 'required',\n                        params: { missingProperty: missing0 },\n                        message: \"must have required property '\" + missing0 + \"'\",\n                    },\n                ];\n                return false;\n            }\n            else {\n                const _errs1 = errors;\n                for (const key0 in data) {\n                    if (!(key0 === '$schema' ||\n                        key0 === 'description' ||\n                        key0 === 'entities' ||\n                        key0 === 'name' ||\n                        key0 === 'scenarios' ||\n                        key0 === 'scripts' ||\n                        key0 === 'supported' ||\n                        key0 === 'version')) {\n                        validate21.errors = [\n                            {\n                                instancePath,\n                                schemaPath: '#/additionalProperties',\n                                keyword: 'additionalProperties',\n                                params: { additionalProperty: key0 },\n                                message: 'must NOT have additional properties',\n                            },\n                        ];\n                        return false;\n                        break;\n                    }\n                }\n                if (_errs1 === errors) {\n                    if (data.$schema !== undefined) {\n                        const _errs2 = errors;\n                        if (typeof data.$schema !== 'string') {\n                            validate21.errors = [\n                                {\n                                    instancePath: instancePath + '/$schema',\n                                    schemaPath: '#/properties/%24schema/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                },\n                            ];\n                            return false;\n                        }\n                        var valid0 = _errs2 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.description !== undefined) {\n                            const _errs4 = errors;\n                            if (typeof data.description !== 'string') {\n                                validate21.errors = [\n                                    {\n                                        instancePath: instancePath + '/description',\n                                        schemaPath: '#/properties/description/type',\n                                        keyword: 'type',\n                                        params: { type: 'string' },\n                                        message: 'must be string',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs4 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                        if (valid0) {\n                            if (data.entities !== undefined) {\n                                let data2 = data.entities;\n                                const _errs6 = errors;\n                                if (errors === _errs6) {\n                                    if (data2 &&\n                                        typeof data2 == 'object' &&\n                                        !Array.isArray(data2)) {\n                                        for (const key1 in data2) {\n                                            const _errs9 = errors;\n                                            if (!validate22(data2[key1], {\n                                                instancePath: instancePath +\n                                                    '/entities/' +\n                                                    key1.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                parentData: data2,\n                                                parentDataProperty: key1,\n                                                rootData,\n                                            })) {\n                                                vErrors =\n                                                    vErrors === null\n                                                        ? validate22.errors\n                                                        : vErrors.concat(validate22.errors);\n                                                errors = vErrors.length;\n                                            }\n                                            var valid1 = _errs9 === errors;\n                                            if (!valid1) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        validate21.errors = [\n                                            {\n                                                instancePath: instancePath + '/entities',\n                                                schemaPath: '#/properties/entities/type',\n                                                keyword: 'type',\n                                                params: { type: 'object' },\n                                                message: 'must be object',\n                                            },\n                                        ];\n                                        return false;\n                                    }\n                                }\n                                var valid0 = _errs6 === errors;\n                            }\n                            else {\n                                var valid0 = true;\n                            }\n                            if (valid0) {\n                                if (data.name !== undefined) {\n                                    const _errs10 = errors;\n                                    if (typeof data.name !== 'string') {\n                                        validate21.errors = [\n                                            {\n                                                instancePath: instancePath + '/name',\n                                                schemaPath: '#/properties/name/type',\n                                                keyword: 'type',\n                                                params: { type: 'string' },\n                                                message: 'must be string',\n                                            },\n                                        ];\n                                        return false;\n                                    }\n                                    var valid0 = _errs10 === errors;\n                                }\n                                else {\n                                    var valid0 = true;\n                                }\n                                if (valid0) {\n                                    if (data.scenarios !== undefined) {\n                                        let data5 = data.scenarios;\n                                        const _errs12 = errors;\n                                        if (errors === _errs12) {\n                                            if (data5 &&\n                                                typeof data5 == 'object' &&\n                                                !Array.isArray(data5)) {\n                                                for (const key2 in data5) {\n                                                    const _errs15 = errors;\n                                                    if (!validate26(data5[key2], {\n                                                        instancePath: instancePath +\n                                                            '/scenarios/' +\n                                                            key2.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                        parentData: data5,\n                                                        parentDataProperty: key2,\n                                                        rootData,\n                                                    })) {\n                                                        vErrors =\n                                                            vErrors === null\n                                                                ? validate26.errors\n                                                                : vErrors.concat(validate26.errors);\n                                                        errors = vErrors.length;\n                                                    }\n                                                    var valid2 = _errs15 === errors;\n                                                    if (!valid2) {\n                                                        break;\n                                                    }\n                                                }\n                                            }\n                                            else {\n                                                validate21.errors = [\n                                                    {\n                                                        instancePath: instancePath + '/scenarios',\n                                                        schemaPath: '#/properties/scenarios/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'object' },\n                                                        message: 'must be object',\n                                                    },\n                                                ];\n                                                return false;\n                                            }\n                                        }\n                                        var valid0 = _errs12 === errors;\n                                    }\n                                    else {\n                                        var valid0 = true;\n                                    }\n                                    if (valid0) {\n                                        if (data.scripts !== undefined) {\n                                            let data7 = data.scripts;\n                                            const _errs16 = errors;\n                                            if (errors === _errs16) {\n                                                if (data7 &&\n                                                    typeof data7 == 'object' &&\n                                                    !Array.isArray(data7)) {\n                                                    for (const key3 in data7) {\n                                                        let data8 = data7[key3];\n                                                        const _errs19 = errors;\n                                                        const _errs20 = errors;\n                                                        let valid4 = false;\n                                                        const _errs21 = errors;\n                                                        const _errs22 = errors;\n                                                        if (errors === _errs22) {\n                                                            if (data8 &&\n                                                                typeof data8 == 'object' &&\n                                                                !Array.isArray(data8)) {\n                                                                let missing1;\n                                                                if (data8.script === undefined &&\n                                                                    (missing1 = 'script')) {\n                                                                    const err0 = {\n                                                                        instancePath: instancePath +\n                                                                            '/scripts/' +\n                                                                            key3\n                                                                                .replace(/~/g, '~0')\n                                                                                .replace(/\\//g, '~1'),\n                                                                        schemaPath: '#/definitions/AuthenticationTemplateScript/required',\n                                                                        keyword: 'required',\n                                                                        params: { missingProperty: missing1 },\n                                                                        message: \"must have required property '\" +\n                                                                            missing1 +\n                                                                            \"'\",\n                                                                    };\n                                                                    if (vErrors === null) {\n                                                                        vErrors = [err0];\n                                                                    }\n                                                                    else {\n                                                                        vErrors.push(err0);\n                                                                    }\n                                                                    errors++;\n                                                                }\n                                                                else {\n                                                                    const _errs24 = errors;\n                                                                    for (const key4 in data8) {\n                                                                        if (!(key4 === 'name' || key4 === 'script')) {\n                                                                            const err1 = {\n                                                                                instancePath: instancePath +\n                                                                                    '/scripts/' +\n                                                                                    key3\n                                                                                        .replace(/~/g, '~0')\n                                                                                        .replace(/\\//g, '~1'),\n                                                                                schemaPath: '#/definitions/AuthenticationTemplateScript/additionalProperties',\n                                                                                keyword: 'additionalProperties',\n                                                                                params: { additionalProperty: key4 },\n                                                                                message: 'must NOT have additional properties',\n                                                                            };\n                                                                            if (vErrors === null) {\n                                                                                vErrors = [err1];\n                                                                            }\n                                                                            else {\n                                                                                vErrors.push(err1);\n                                                                            }\n                                                                            errors++;\n                                                                            break;\n                                                                        }\n                                                                    }\n                                                                    if (_errs24 === errors) {\n                                                                        if (data8.name !== undefined) {\n                                                                            const _errs25 = errors;\n                                                                            if (typeof data8.name !== 'string') {\n                                                                                const err2 = {\n                                                                                    instancePath: instancePath +\n                                                                                        '/scripts/' +\n                                                                                        key3\n                                                                                            .replace(/~/g, '~0')\n                                                                                            .replace(/\\//g, '~1') +\n                                                                                        '/name',\n                                                                                    schemaPath: '#/definitions/AuthenticationTemplateScript/properties/name/type',\n                                                                                    keyword: 'type',\n                                                                                    params: { type: 'string' },\n                                                                                    message: 'must be string',\n                                                                                };\n                                                                                if (vErrors === null) {\n                                                                                    vErrors = [err2];\n                                                                                }\n                                                                                else {\n                                                                                    vErrors.push(err2);\n                                                                                }\n                                                                                errors++;\n                                                                            }\n                                                                            var valid6 = _errs25 === errors;\n                                                                        }\n                                                                        else {\n                                                                            var valid6 = true;\n                                                                        }\n                                                                        if (valid6) {\n                                                                            if (data8.script !== undefined) {\n                                                                                const _errs27 = errors;\n                                                                                if (typeof data8.script !== 'string') {\n                                                                                    const err3 = {\n                                                                                        instancePath: instancePath +\n                                                                                            '/scripts/' +\n                                                                                            key3\n                                                                                                .replace(/~/g, '~0')\n                                                                                                .replace(/\\//g, '~1') +\n                                                                                            '/script',\n                                                                                        schemaPath: '#/definitions/AuthenticationTemplateScript/properties/script/type',\n                                                                                        keyword: 'type',\n                                                                                        params: { type: 'string' },\n                                                                                        message: 'must be string',\n                                                                                    };\n                                                                                    if (vErrors === null) {\n                                                                                        vErrors = [err3];\n                                                                                    }\n                                                                                    else {\n                                                                                        vErrors.push(err3);\n                                                                                    }\n                                                                                    errors++;\n                                                                                }\n                                                                                var valid6 = _errs27 === errors;\n                                                                            }\n                                                                            else {\n                                                                                var valid6 = true;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                            else {\n                                                                const err4 = {\n                                                                    instancePath: instancePath +\n                                                                        '/scripts/' +\n                                                                        key3\n                                                                            .replace(/~/g, '~0')\n                                                                            .replace(/\\//g, '~1'),\n                                                                    schemaPath: '#/definitions/AuthenticationTemplateScript/type',\n                                                                    keyword: 'type',\n                                                                    params: { type: 'object' },\n                                                                    message: 'must be object',\n                                                                };\n                                                                if (vErrors === null) {\n                                                                    vErrors = [err4];\n                                                                }\n                                                                else {\n                                                                    vErrors.push(err4);\n                                                                }\n                                                                errors++;\n                                                            }\n                                                        }\n                                                        var _valid0 = _errs21 === errors;\n                                                        valid4 = valid4 || _valid0;\n                                                        if (!valid4) {\n                                                            const _errs29 = errors;\n                                                            const _errs30 = errors;\n                                                            if (errors === _errs30) {\n                                                                if (data8 &&\n                                                                    typeof data8 == 'object' &&\n                                                                    !Array.isArray(data8)) {\n                                                                    let missing2;\n                                                                    if ((data8.lockingType === undefined &&\n                                                                        (missing2 = 'lockingType')) ||\n                                                                        (data8.script === undefined &&\n                                                                            (missing2 = 'script'))) {\n                                                                        const err5 = {\n                                                                            instancePath: instancePath +\n                                                                                '/scripts/' +\n                                                                                key3\n                                                                                    .replace(/~/g, '~0')\n                                                                                    .replace(/\\//g, '~1'),\n                                                                            schemaPath: '#/definitions/AuthenticationTemplateScriptLocking/required',\n                                                                            keyword: 'required',\n                                                                            params: { missingProperty: missing2 },\n                                                                            message: \"must have required property '\" +\n                                                                                missing2 +\n                                                                                \"'\",\n                                                                        };\n                                                                        if (vErrors === null) {\n                                                                            vErrors = [err5];\n                                                                        }\n                                                                        else {\n                                                                            vErrors.push(err5);\n                                                                        }\n                                                                        errors++;\n                                                                    }\n                                                                    else {\n                                                                        const _errs32 = errors;\n                                                                        for (const key5 in data8) {\n                                                                            if (!(key5 === 'lockingType' ||\n                                                                                key5 === 'name' ||\n                                                                                key5 === 'script')) {\n                                                                                const err6 = {\n                                                                                    instancePath: instancePath +\n                                                                                        '/scripts/' +\n                                                                                        key3\n                                                                                            .replace(/~/g, '~0')\n                                                                                            .replace(/\\//g, '~1'),\n                                                                                    schemaPath: '#/definitions/AuthenticationTemplateScriptLocking/additionalProperties',\n                                                                                    keyword: 'additionalProperties',\n                                                                                    params: { additionalProperty: key5 },\n                                                                                    message: 'must NOT have additional properties',\n                                                                                };\n                                                                                if (vErrors === null) {\n                                                                                    vErrors = [err6];\n                                                                                }\n                                                                                else {\n                                                                                    vErrors.push(err6);\n                                                                                }\n                                                                                errors++;\n                                                                                break;\n                                                                            }\n                                                                        }\n                                                                        if (_errs32 === errors) {\n                                                                            if (data8.lockingType !== undefined) {\n                                                                                let data11 = data8.lockingType;\n                                                                                const _errs33 = errors;\n                                                                                if (typeof data11 !== 'string') {\n                                                                                    const err7 = {\n                                                                                        instancePath: instancePath +\n                                                                                            '/scripts/' +\n                                                                                            key3\n                                                                                                .replace(/~/g, '~0')\n                                                                                                .replace(/\\//g, '~1') +\n                                                                                            '/lockingType',\n                                                                                        schemaPath: '#/definitions/AuthenticationTemplateScriptLocking/properties/lockingType/type',\n                                                                                        keyword: 'type',\n                                                                                        params: { type: 'string' },\n                                                                                        message: 'must be string',\n                                                                                    };\n                                                                                    if (vErrors === null) {\n                                                                                        vErrors = [err7];\n                                                                                    }\n                                                                                    else {\n                                                                                        vErrors.push(err7);\n                                                                                    }\n                                                                                    errors++;\n                                                                                }\n                                                                                if (!(data11 === 'p2sh20' ||\n                                                                                    data11 === 'p2sh32' ||\n                                                                                    data11 === 'standard')) {\n                                                                                    const err8 = {\n                                                                                        instancePath: instancePath +\n                                                                                            '/scripts/' +\n                                                                                            key3\n                                                                                                .replace(/~/g, '~0')\n                                                                                                .replace(/\\//g, '~1') +\n                                                                                            '/lockingType',\n                                                                                        schemaPath: '#/definitions/AuthenticationTemplateScriptLocking/properties/lockingType/enum',\n                                                                                        keyword: 'enum',\n                                                                                        params: {\n                                                                                            allowedValues: schema38.properties.lockingType\n                                                                                                .enum,\n                                                                                        },\n                                                                                        message: 'must be equal to one of the allowed values',\n                                                                                    };\n                                                                                    if (vErrors === null) {\n                                                                                        vErrors = [err8];\n                                                                                    }\n                                                                                    else {\n                                                                                        vErrors.push(err8);\n                                                                                    }\n                                                                                    errors++;\n                                                                                }\n                                                                                var valid8 = _errs33 === errors;\n                                                                            }\n                                                                            else {\n                                                                                var valid8 = true;\n                                                                            }\n                                                                            if (valid8) {\n                                                                                if (data8.name !== undefined) {\n                                                                                    const _errs35 = errors;\n                                                                                    if (typeof data8.name !== 'string') {\n                                                                                        const err9 = {\n                                                                                            instancePath: instancePath +\n                                                                                                '/scripts/' +\n                                                                                                key3\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                '/name',\n                                                                                            schemaPath: '#/definitions/AuthenticationTemplateScriptLocking/properties/name/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        };\n                                                                                        if (vErrors === null) {\n                                                                                            vErrors = [err9];\n                                                                                        }\n                                                                                        else {\n                                                                                            vErrors.push(err9);\n                                                                                        }\n                                                                                        errors++;\n                                                                                    }\n                                                                                    var valid8 = _errs35 === errors;\n                                                                                }\n                                                                                else {\n                                                                                    var valid8 = true;\n                                                                                }\n                                                                                if (valid8) {\n                                                                                    if (data8.script !== undefined) {\n                                                                                        const _errs37 = errors;\n                                                                                        if (typeof data8.script !== 'string') {\n                                                                                            const err10 = {\n                                                                                                instancePath: instancePath +\n                                                                                                    '/scripts/' +\n                                                                                                    key3\n                                                                                                        .replace(/~/g, '~0')\n                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                    '/script',\n                                                                                                schemaPath: '#/definitions/AuthenticationTemplateScriptLocking/properties/script/type',\n                                                                                                keyword: 'type',\n                                                                                                params: { type: 'string' },\n                                                                                                message: 'must be string',\n                                                                                            };\n                                                                                            if (vErrors === null) {\n                                                                                                vErrors = [err10];\n                                                                                            }\n                                                                                            else {\n                                                                                                vErrors.push(err10);\n                                                                                            }\n                                                                                            errors++;\n                                                                                        }\n                                                                                        var valid8 = _errs37 === errors;\n                                                                                    }\n                                                                                    else {\n                                                                                        var valid8 = true;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                                else {\n                                                                    const err11 = {\n                                                                        instancePath: instancePath +\n                                                                            '/scripts/' +\n                                                                            key3\n                                                                                .replace(/~/g, '~0')\n                                                                                .replace(/\\//g, '~1'),\n                                                                        schemaPath: '#/definitions/AuthenticationTemplateScriptLocking/type',\n                                                                        keyword: 'type',\n                                                                        params: { type: 'object' },\n                                                                        message: 'must be object',\n                                                                    };\n                                                                    if (vErrors === null) {\n                                                                        vErrors = [err11];\n                                                                    }\n                                                                    else {\n                                                                        vErrors.push(err11);\n                                                                    }\n                                                                    errors++;\n                                                                }\n                                                            }\n                                                            var _valid0 = _errs29 === errors;\n                                                            valid4 = valid4 || _valid0;\n                                                            if (!valid4) {\n                                                                const _errs39 = errors;\n                                                                if (!validate38(data8, {\n                                                                    instancePath: instancePath +\n                                                                        '/scripts/' +\n                                                                        key3\n                                                                            .replace(/~/g, '~0')\n                                                                            .replace(/\\//g, '~1'),\n                                                                    parentData: data7,\n                                                                    parentDataProperty: key3,\n                                                                    rootData,\n                                                                })) {\n                                                                    vErrors =\n                                                                        vErrors === null\n                                                                            ? validate38.errors\n                                                                            : vErrors.concat(validate38.errors);\n                                                                    errors = vErrors.length;\n                                                                }\n                                                                var _valid0 = _errs39 === errors;\n                                                                valid4 = valid4 || _valid0;\n                                                                if (!valid4) {\n                                                                    const _errs40 = errors;\n                                                                    const _errs41 = errors;\n                                                                    if (errors === _errs41) {\n                                                                        if (data8 &&\n                                                                            typeof data8 == 'object' &&\n                                                                            !Array.isArray(data8)) {\n                                                                            let missing3;\n                                                                            if ((data8.script === undefined &&\n                                                                                (missing3 = 'script')) ||\n                                                                                (data8.unlocks === undefined &&\n                                                                                    (missing3 = 'unlocks'))) {\n                                                                                const err12 = {\n                                                                                    instancePath: instancePath +\n                                                                                        '/scripts/' +\n                                                                                        key3\n                                                                                            .replace(/~/g, '~0')\n                                                                                            .replace(/\\//g, '~1'),\n                                                                                    schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/required',\n                                                                                    keyword: 'required',\n                                                                                    params: { missingProperty: missing3 },\n                                                                                    message: \"must have required property '\" +\n                                                                                        missing3 +\n                                                                                        \"'\",\n                                                                                };\n                                                                                if (vErrors === null) {\n                                                                                    vErrors = [err12];\n                                                                                }\n                                                                                else {\n                                                                                    vErrors.push(err12);\n                                                                                }\n                                                                                errors++;\n                                                                            }\n                                                                            else {\n                                                                                const _errs43 = errors;\n                                                                                for (const key6 in data8) {\n                                                                                    if (!func4.call(schema41.properties, key6)) {\n                                                                                        const err13 = {\n                                                                                            instancePath: instancePath +\n                                                                                                '/scripts/' +\n                                                                                                key3\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1'),\n                                                                                            schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/additionalProperties',\n                                                                                            keyword: 'additionalProperties',\n                                                                                            params: {\n                                                                                                additionalProperty: key6,\n                                                                                            },\n                                                                                            message: 'must NOT have additional properties',\n                                                                                        };\n                                                                                        if (vErrors === null) {\n                                                                                            vErrors = [err13];\n                                                                                        }\n                                                                                        else {\n                                                                                            vErrors.push(err13);\n                                                                                        }\n                                                                                        errors++;\n                                                                                        break;\n                                                                                    }\n                                                                                }\n                                                                                if (_errs43 === errors) {\n                                                                                    if (data8.ageLock !== undefined) {\n                                                                                        const _errs44 = errors;\n                                                                                        if (typeof data8.ageLock !== 'string') {\n                                                                                            const err14 = {\n                                                                                                instancePath: instancePath +\n                                                                                                    '/scripts/' +\n                                                                                                    key3\n                                                                                                        .replace(/~/g, '~0')\n                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                    '/ageLock',\n                                                                                                schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/properties/ageLock/type',\n                                                                                                keyword: 'type',\n                                                                                                params: { type: 'string' },\n                                                                                                message: 'must be string',\n                                                                                            };\n                                                                                            if (vErrors === null) {\n                                                                                                vErrors = [err14];\n                                                                                            }\n                                                                                            else {\n                                                                                                vErrors.push(err14);\n                                                                                            }\n                                                                                            errors++;\n                                                                                        }\n                                                                                        var valid10 = _errs44 === errors;\n                                                                                    }\n                                                                                    else {\n                                                                                        var valid10 = true;\n                                                                                    }\n                                                                                    if (valid10) {\n                                                                                        if (data8.estimate !== undefined) {\n                                                                                            const _errs46 = errors;\n                                                                                            if (typeof data8.estimate !==\n                                                                                                'string') {\n                                                                                                const err15 = {\n                                                                                                    instancePath: instancePath +\n                                                                                                        '/scripts/' +\n                                                                                                        key3\n                                                                                                            .replace(/~/g, '~0')\n                                                                                                            .replace(/\\//g, '~1') +\n                                                                                                        '/estimate',\n                                                                                                    schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/properties/estimate/type',\n                                                                                                    keyword: 'type',\n                                                                                                    params: { type: 'string' },\n                                                                                                    message: 'must be string',\n                                                                                                };\n                                                                                                if (vErrors === null) {\n                                                                                                    vErrors = [err15];\n                                                                                                }\n                                                                                                else {\n                                                                                                    vErrors.push(err15);\n                                                                                                }\n                                                                                                errors++;\n                                                                                            }\n                                                                                            var valid10 = _errs46 === errors;\n                                                                                        }\n                                                                                        else {\n                                                                                            var valid10 = true;\n                                                                                        }\n                                                                                        if (valid10) {\n                                                                                            if (data8.fails !== undefined) {\n                                                                                                let data16 = data8.fails;\n                                                                                                const _errs48 = errors;\n                                                                                                if (errors === _errs48) {\n                                                                                                    if (Array.isArray(data16)) {\n                                                                                                        var valid11 = true;\n                                                                                                        const len0 = data16.length;\n                                                                                                        for (let i0 = 0; i0 < len0; i0++) {\n                                                                                                            const _errs50 = errors;\n                                                                                                            if (typeof data16[i0] !==\n                                                                                                                'string') {\n                                                                                                                const err16 = {\n                                                                                                                    instancePath: instancePath +\n                                                                                                                        '/scripts/' +\n                                                                                                                        key3\n                                                                                                                            .replace(/~/g, '~0')\n                                                                                                                            .replace(/\\//g, '~1') +\n                                                                                                                        '/fails/' +\n                                                                                                                        i0,\n                                                                                                                    schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/properties/fails/items/type',\n                                                                                                                    keyword: 'type',\n                                                                                                                    params: {\n                                                                                                                        type: 'string',\n                                                                                                                    },\n                                                                                                                    message: 'must be string',\n                                                                                                                };\n                                                                                                                if (vErrors === null) {\n                                                                                                                    vErrors = [err16];\n                                                                                                                }\n                                                                                                                else {\n                                                                                                                    vErrors.push(err16);\n                                                                                                                }\n                                                                                                                errors++;\n                                                                                                            }\n                                                                                                            var valid11 = _errs50 === errors;\n                                                                                                            if (!valid11) {\n                                                                                                                break;\n                                                                                                            }\n                                                                                                        }\n                                                                                                    }\n                                                                                                    else {\n                                                                                                        const err17 = {\n                                                                                                            instancePath: instancePath +\n                                                                                                                '/scripts/' +\n                                                                                                                key3\n                                                                                                                    .replace(/~/g, '~0')\n                                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                                '/fails',\n                                                                                                            schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/properties/fails/type',\n                                                                                                            keyword: 'type',\n                                                                                                            params: { type: 'array' },\n                                                                                                            message: 'must be array',\n                                                                                                        };\n                                                                                                        if (vErrors === null) {\n                                                                                                            vErrors = [err17];\n                                                                                                        }\n                                                                                                        else {\n                                                                                                            vErrors.push(err17);\n                                                                                                        }\n                                                                                                        errors++;\n                                                                                                    }\n                                                                                                }\n                                                                                                var valid10 = _errs48 === errors;\n                                                                                            }\n                                                                                            else {\n                                                                                                var valid10 = true;\n                                                                                            }\n                                                                                            if (valid10) {\n                                                                                                if (data8.invalid !== undefined) {\n                                                                                                    let data18 = data8.invalid;\n                                                                                                    const _errs52 = errors;\n                                                                                                    if (errors === _errs52) {\n                                                                                                        if (Array.isArray(data18)) {\n                                                                                                            var valid12 = true;\n                                                                                                            const len1 = data18.length;\n                                                                                                            for (let i1 = 0; i1 < len1; i1++) {\n                                                                                                                const _errs54 = errors;\n                                                                                                                if (typeof data18[i1] !==\n                                                                                                                    'string') {\n                                                                                                                    const err18 = {\n                                                                                                                        instancePath: instancePath +\n                                                                                                                            '/scripts/' +\n                                                                                                                            key3\n                                                                                                                                .replace(/~/g, '~0')\n                                                                                                                                .replace(/\\//g, '~1') +\n                                                                                                                            '/invalid/' +\n                                                                                                                            i1,\n                                                                                                                        schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/properties/invalid/items/type',\n                                                                                                                        keyword: 'type',\n                                                                                                                        params: {\n                                                                                                                            type: 'string',\n                                                                                                                        },\n                                                                                                                        message: 'must be string',\n                                                                                                                    };\n                                                                                                                    if (vErrors === null) {\n                                                                                                                        vErrors = [err18];\n                                                                                                                    }\n                                                                                                                    else {\n                                                                                                                        vErrors.push(err18);\n                                                                                                                    }\n                                                                                                                    errors++;\n                                                                                                                }\n                                                                                                                var valid12 = _errs54 === errors;\n                                                                                                                if (!valid12) {\n                                                                                                                    break;\n                                                                                                                }\n                                                                                                            }\n                                                                                                        }\n                                                                                                        else {\n                                                                                                            const err19 = {\n                                                                                                                instancePath: instancePath +\n                                                                                                                    '/scripts/' +\n                                                                                                                    key3\n                                                                                                                        .replace(/~/g, '~0')\n                                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                                    '/invalid',\n                                                                                                                schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/properties/invalid/type',\n                                                                                                                keyword: 'type',\n                                                                                                                params: {\n                                                                                                                    type: 'array',\n                                                                                                                },\n                                                                                                                message: 'must be array',\n                                                                                                            };\n                                                                                                            if (vErrors === null) {\n                                                                                                                vErrors = [err19];\n                                                                                                            }\n                                                                                                            else {\n                                                                                                                vErrors.push(err19);\n                                                                                                            }\n                                                                                                            errors++;\n                                                                                                        }\n                                                                                                    }\n                                                                                                    var valid10 = _errs52 === errors;\n                                                                                                }\n                                                                                                else {\n                                                                                                    var valid10 = true;\n                                                                                                }\n                                                                                                if (valid10) {\n                                                                                                    if (data8.name !== undefined) {\n                                                                                                        const _errs56 = errors;\n                                                                                                        if (typeof data8.name !==\n                                                                                                            'string') {\n                                                                                                            const err20 = {\n                                                                                                                instancePath: instancePath +\n                                                                                                                    '/scripts/' +\n                                                                                                                    key3\n                                                                                                                        .replace(/~/g, '~0')\n                                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                                    '/name',\n                                                                                                                schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/properties/name/type',\n                                                                                                                keyword: 'type',\n                                                                                                                params: {\n                                                                                                                    type: 'string',\n                                                                                                                },\n                                                                                                                message: 'must be string',\n                                                                                                            };\n                                                                                                            if (vErrors === null) {\n                                                                                                                vErrors = [err20];\n                                                                                                            }\n                                                                                                            else {\n                                                                                                                vErrors.push(err20);\n                                                                                                            }\n                                                                                                            errors++;\n                                                                                                        }\n                                                                                                        var valid10 = _errs56 === errors;\n                                                                                                    }\n                                                                                                    else {\n                                                                                                        var valid10 = true;\n                                                                                                    }\n                                                                                                    if (valid10) {\n                                                                                                        if (data8.passes !== undefined) {\n                                                                                                            let data21 = data8.passes;\n                                                                                                            const _errs58 = errors;\n                                                                                                            if (errors === _errs58) {\n                                                                                                                if (Array.isArray(data21)) {\n                                                                                                                    var valid13 = true;\n                                                                                                                    const len2 = data21.length;\n                                                                                                                    for (let i2 = 0; i2 < len2; i2++) {\n                                                                                                                        const _errs60 = errors;\n                                                                                                                        if (typeof data21[i2] !== 'string') {\n                                                                                                                            const err21 = {\n                                                                                                                                instancePath: instancePath +\n                                                                                                                                    '/scripts/' +\n                                                                                                                                    key3\n                                                                                                                                        .replace(/~/g, '~0')\n                                                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                                                    '/passes/' +\n                                                                                                                                    i2,\n                                                                                                                                schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/properties/passes/items/type',\n                                                                                                                                keyword: 'type',\n                                                                                                                                params: {\n                                                                                                                                    type: 'string',\n                                                                                                                                },\n                                                                                                                                message: 'must be string',\n                                                                                                                            };\n                                                                                                                            if (vErrors === null) {\n                                                                                                                                vErrors = [\n                                                                                                                                    err21,\n                                                                                                                                ];\n                                                                                                                            }\n                                                                                                                            else {\n                                                                                                                                vErrors.push(err21);\n                                                                                                                            }\n                                                                                                                            errors++;\n                                                                                                                        }\n                                                                                                                        var valid13 = _errs60 ===\n                                                                                                                            errors;\n                                                                                                                        if (!valid13) {\n                                                                                                                            break;\n                                                                                                                        }\n                                                                                                                    }\n                                                                                                                }\n                                                                                                                else {\n                                                                                                                    const err22 = {\n                                                                                                                        instancePath: instancePath +\n                                                                                                                            '/scripts/' +\n                                                                                                                            key3\n                                                                                                                                .replace(/~/g, '~0')\n                                                                                                                                .replace(/\\//g, '~1') +\n                                                                                                                            '/passes',\n                                                                                                                        schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/properties/passes/type',\n                                                                                                                        keyword: 'type',\n                                                                                                                        params: {\n                                                                                                                            type: 'array',\n                                                                                                                        },\n                                                                                                                        message: 'must be array',\n                                                                                                                    };\n                                                                                                                    if (vErrors === null) {\n                                                                                                                        vErrors = [err22];\n                                                                                                                    }\n                                                                                                                    else {\n                                                                                                                        vErrors.push(err22);\n                                                                                                                    }\n                                                                                                                    errors++;\n                                                                                                                }\n                                                                                                            }\n                                                                                                            var valid10 = _errs58 === errors;\n                                                                                                        }\n                                                                                                        else {\n                                                                                                            var valid10 = true;\n                                                                                                        }\n                                                                                                        if (valid10) {\n                                                                                                            if (data8.script !==\n                                                                                                                undefined) {\n                                                                                                                const _errs62 = errors;\n                                                                                                                if (typeof data8.script !==\n                                                                                                                    'string') {\n                                                                                                                    const err23 = {\n                                                                                                                        instancePath: instancePath +\n                                                                                                                            '/scripts/' +\n                                                                                                                            key3\n                                                                                                                                .replace(/~/g, '~0')\n                                                                                                                                .replace(/\\//g, '~1') +\n                                                                                                                            '/script',\n                                                                                                                        schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/properties/script/type',\n                                                                                                                        keyword: 'type',\n                                                                                                                        params: {\n                                                                                                                            type: 'string',\n                                                                                                                        },\n                                                                                                                        message: 'must be string',\n                                                                                                                    };\n                                                                                                                    if (vErrors === null) {\n                                                                                                                        vErrors = [err23];\n                                                                                                                    }\n                                                                                                                    else {\n                                                                                                                        vErrors.push(err23);\n                                                                                                                    }\n                                                                                                                    errors++;\n                                                                                                                }\n                                                                                                                var valid10 = _errs62 === errors;\n                                                                                                            }\n                                                                                                            else {\n                                                                                                                var valid10 = true;\n                                                                                                            }\n                                                                                                            if (valid10) {\n                                                                                                                if (data8.timeLockType !==\n                                                                                                                    undefined) {\n                                                                                                                    let data24 = data8.timeLockType;\n                                                                                                                    const _errs64 = errors;\n                                                                                                                    if (typeof data24 !==\n                                                                                                                        'string') {\n                                                                                                                        const err24 = {\n                                                                                                                            instancePath: instancePath +\n                                                                                                                                '/scripts/' +\n                                                                                                                                key3\n                                                                                                                                    .replace(/~/g, '~0')\n                                                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                                                '/timeLockType',\n                                                                                                                            schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/properties/timeLockType/type',\n                                                                                                                            keyword: 'type',\n                                                                                                                            params: {\n                                                                                                                                type: 'string',\n                                                                                                                            },\n                                                                                                                            message: 'must be string',\n                                                                                                                        };\n                                                                                                                        if (vErrors === null) {\n                                                                                                                            vErrors = [err24];\n                                                                                                                        }\n                                                                                                                        else {\n                                                                                                                            vErrors.push(err24);\n                                                                                                                        }\n                                                                                                                        errors++;\n                                                                                                                    }\n                                                                                                                    if (!(data24 ===\n                                                                                                                        'height' ||\n                                                                                                                        data24 ===\n                                                                                                                            'timestamp')) {\n                                                                                                                        const err25 = {\n                                                                                                                            instancePath: instancePath +\n                                                                                                                                '/scripts/' +\n                                                                                                                                key3\n                                                                                                                                    .replace(/~/g, '~0')\n                                                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                                                '/timeLockType',\n                                                                                                                            schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/properties/timeLockType/enum',\n                                                                                                                            keyword: 'enum',\n                                                                                                                            params: {\n                                                                                                                                allowedValues: schema41\n                                                                                                                                    .properties\n                                                                                                                                    .timeLockType\n                                                                                                                                    .enum,\n                                                                                                                            },\n                                                                                                                            message: 'must be equal to one of the allowed values',\n                                                                                                                        };\n                                                                                                                        if (vErrors === null) {\n                                                                                                                            vErrors = [err25];\n                                                                                                                        }\n                                                                                                                        else {\n                                                                                                                            vErrors.push(err25);\n                                                                                                                        }\n                                                                                                                        errors++;\n                                                                                                                    }\n                                                                                                                    var valid10 = _errs64 === errors;\n                                                                                                                }\n                                                                                                                else {\n                                                                                                                    var valid10 = true;\n                                                                                                                }\n                                                                                                                if (valid10) {\n                                                                                                                    if (data8.unlocks !==\n                                                                                                                        undefined) {\n                                                                                                                        const _errs66 = errors;\n                                                                                                                        if (typeof data8.unlocks !==\n                                                                                                                            'string') {\n                                                                                                                            const err26 = {\n                                                                                                                                instancePath: instancePath +\n                                                                                                                                    '/scripts/' +\n                                                                                                                                    key3\n                                                                                                                                        .replace(/~/g, '~0')\n                                                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                                                    '/unlocks',\n                                                                                                                                schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/properties/unlocks/type',\n                                                                                                                                keyword: 'type',\n                                                                                                                                params: {\n                                                                                                                                    type: 'string',\n                                                                                                                                },\n                                                                                                                                message: 'must be string',\n                                                                                                                            };\n                                                                                                                            if (vErrors === null) {\n                                                                                                                                vErrors = [\n                                                                                                                                    err26,\n                                                                                                                                ];\n                                                                                                                            }\n                                                                                                                            else {\n                                                                                                                                vErrors.push(err26);\n                                                                                                                            }\n                                                                                                                            errors++;\n                                                                                                                        }\n                                                                                                                        var valid10 = _errs66 ===\n                                                                                                                            errors;\n                                                                                                                    }\n                                                                                                                    else {\n                                                                                                                        var valid10 = true;\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            }\n                                                                                                        }\n                                                                                                    }\n                                                                                                }\n                                                                                            }\n                                                                                        }\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else {\n                                                                            const err27 = {\n                                                                                instancePath: instancePath +\n                                                                                    '/scripts/' +\n                                                                                    key3\n                                                                                        .replace(/~/g, '~0')\n                                                                                        .replace(/\\//g, '~1'),\n                                                                                schemaPath: '#/definitions/AuthenticationTemplateScriptUnlocking/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'object' },\n                                                                                message: 'must be object',\n                                                                            };\n                                                                            if (vErrors === null) {\n                                                                                vErrors = [err27];\n                                                                            }\n                                                                            else {\n                                                                                vErrors.push(err27);\n                                                                            }\n                                                                            errors++;\n                                                                        }\n                                                                    }\n                                                                    var _valid0 = _errs40 === errors;\n                                                                    valid4 = valid4 || _valid0;\n                                                                }\n                                                            }\n                                                        }\n                                                        if (!valid4) {\n                                                            const err28 = {\n                                                                instancePath: instancePath +\n                                                                    '/scripts/' +\n                                                                    key3.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                                schemaPath: '#/properties/scripts/additionalProperties/anyOf',\n                                                                keyword: 'anyOf',\n                                                                params: {},\n                                                                message: 'must match a schema in anyOf',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err28];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err28);\n                                                            }\n                                                            errors++;\n                                                            validate21.errors = vErrors;\n                                                            return false;\n                                                        }\n                                                        else {\n                                                            errors = _errs20;\n                                                            if (vErrors !== null) {\n                                                                if (_errs20) {\n                                                                    vErrors.length = _errs20;\n                                                                }\n                                                                else {\n                                                                    vErrors = null;\n                                                                }\n                                                            }\n                                                        }\n                                                        var valid3 = _errs19 === errors;\n                                                        if (!valid3) {\n                                                            break;\n                                                        }\n                                                    }\n                                                }\n                                                else {\n                                                    validate21.errors = [\n                                                        {\n                                                            instancePath: instancePath + '/scripts',\n                                                            schemaPath: '#/properties/scripts/type',\n                                                            keyword: 'type',\n                                                            params: { type: 'object' },\n                                                            message: 'must be object',\n                                                        },\n                                                    ];\n                                                    return false;\n                                                }\n                                            }\n                                            var valid0 = _errs16 === errors;\n                                        }\n                                        else {\n                                            var valid0 = true;\n                                        }\n                                        if (valid0) {\n                                            if (data.supported !== undefined) {\n                                                let data26 = data.supported;\n                                                const _errs68 = errors;\n                                                if (errors === _errs68) {\n                                                    if (Array.isArray(data26)) {\n                                                        var valid14 = true;\n                                                        const len3 = data26.length;\n                                                        for (let i3 = 0; i3 < len3; i3++) {\n                                                            let data27 = data26[i3];\n                                                            const _errs70 = errors;\n                                                            if (typeof data27 !== 'string') {\n                                                                validate21.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/supported/' + i3,\n                                                                        schemaPath: '#/definitions/AuthenticationVirtualMachineIdentifier/type',\n                                                                        keyword: 'type',\n                                                                        params: { type: 'string' },\n                                                                        message: 'must be string',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                            }\n                                                            if (!(data27 === 'BCH_2020_05' ||\n                                                                data27 === 'BCH_2021_05' ||\n                                                                data27 === 'BCH_2022_05' ||\n                                                                data27 === 'BCH_2023_05' ||\n                                                                data27 === 'BCH_SPEC' ||\n                                                                data27 === 'BSV_2020_02' ||\n                                                                data27 === 'BSV_SPEC' ||\n                                                                data27 === 'BTC_2017_08' ||\n                                                                data27 === 'BTC_SPEC' ||\n                                                                data27 === 'XEC_2020_05' ||\n                                                                data27 === 'XEC_SPEC')) {\n                                                                validate21.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/supported/' + i3,\n                                                                        schemaPath: '#/definitions/AuthenticationVirtualMachineIdentifier/enum',\n                                                                        keyword: 'enum',\n                                                                        params: { allowedValues: schema42.enum },\n                                                                        message: 'must be equal to one of the allowed values',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                            }\n                                                            var valid14 = _errs70 === errors;\n                                                            if (!valid14) {\n                                                                break;\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        validate21.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/supported',\n                                                                schemaPath: '#/properties/supported/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'array' },\n                                                                message: 'must be array',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                }\n                                                var valid0 = _errs68 === errors;\n                                            }\n                                            else {\n                                                var valid0 = true;\n                                            }\n                                            if (valid0) {\n                                                if (data.version !== undefined) {\n                                                    let data28 = data.version;\n                                                    const _errs73 = errors;\n                                                    if (!(typeof data28 == 'number' && isFinite(data28))) {\n                                                        validate21.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/version',\n                                                                schemaPath: '#/properties/version/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'number' },\n                                                                message: 'must be number',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                    if (0 !== data28) {\n                                                        validate21.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/version',\n                                                                schemaPath: '#/properties/version/const',\n                                                                keyword: 'const',\n                                                                params: { allowedValue: 0 },\n                                                                message: 'must be equal to constant',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                    var valid0 = _errs73 === errors;\n                                                }\n                                                else {\n                                                    var valid0 = true;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate21.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate21.errors = vErrors;\n    return errors === 0;\n}\nfunction validate20(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (!validate21(data, {\n        instancePath,\n        parentData,\n        parentDataProperty,\n        rootData,\n    })) {\n        vErrors =\n            vErrors === null ? validate21.errors : vErrors.concat(validate21.errors);\n        errors = vErrors.length;\n    }\n    validate20.errors = vErrors;\n    return errors === 0;\n}\n//# sourceMappingURL=validate-authentication-template.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/schema/ajv/validate-authentication-template.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/schema/authentication-template.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/schema/authentication-template.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"importAuthenticationTemplate\": () => (/* binding */ importAuthenticationTemplate)\n/* harmony export */ });\n/* harmony import */ var _ajv_ajv_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajv/ajv-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/schema/ajv/ajv-utils.js\");\n/* harmony import */ var _ajv_validate_authentication_template_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ajv/validate-authentication-template.js */ \"../../node_modules/@bitauth/libauth/build/lib/schema/ajv/validate-authentication-template.js\");\n\n// eslint-disable-next-line import/no-internal-modules\n\n/**\n * Safely parse and validate an authentication template, returning either an\n * error message as a string or a valid {@link AuthenticationTemplate}. The\n * template may be provided either as an untrusted JSON string or as a\n * pre-parsed object.\n *\n * This method validates both the structure and the contents of a template:\n * - All properties and sub-properties are verified to be of the expected type.\n * - The template contains no unknown properties.\n * - The ID of each entity, script, and scenario is confirmed to be unique.\n * - Script IDs referenced by entities and other scripts (via `unlocks`) are\n * confirmed to exist.\n * - The derivation paths of each HdKey are validated against each other.\n *\n * This method does not validate the CashAssembly contents of scripts (by\n * attempting compilation, evaluating {@link AuthenticationTemplateScriptTest}s,\n * or testing scenario generation).\n *\n * @param untrustedJsonOrObject - the JSON string or object to validate as an\n * authentication template\n */\nconst importAuthenticationTemplate = (untrustedJsonOrObject) => {\n    const errorPrefix = `Authentication template import failed:`;\n    const template = (0,_ajv_ajv_utils_js__WEBPACK_IMPORTED_MODULE_0__.ajvStandaloneJsonParse)(untrustedJsonOrObject, _ajv_validate_authentication_template_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    if (typeof template === 'string') {\n        return `${errorPrefix}${template}`;\n    }\n    // TODO: add back other validation\n    return template;\n};\n//# sourceMappingURL=authentication-template.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/schema/authentication-template.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/transaction/generate-transaction.js":
/*!*****************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/transaction/generate-transaction.js ***!
  \*****************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateTransaction\": () => (/* binding */ generateTransaction)\n/* harmony export */ });\n/* unused harmony exports compileOutputTemplate, compileInputTemplate, extractResolvedVariables, extractMissingVariables, safelyExtendCompilationData */\n/* harmony import */ var _language_language_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/language.js */ \"../../node_modules/@bitauth/libauth/build/lib/language/language-utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_language_language_js__WEBPACK_IMPORTED_MODULE_0__]);\n_language_language_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst returnFailedCompilationDirective = ({ index, result, type, }) => ({\n    errors: result.errors.map((error) => ({\n        ...error,\n        error: `Failed compilation of ${type} directive at index \"${index}\": ${error.error}`,\n    })),\n    index,\n    ...(result.errorType === 'parse' ? {} : { resolved: result.resolve }),\n    type,\n});\n// eslint-disable-next-line complexity\nconst compileOutputTemplate = ({ outputTemplate, index, }) => {\n    if ('script' in outputTemplate.lockingBytecode) {\n        const directive = outputTemplate.lockingBytecode;\n        const data = directive.data === undefined ? {} : directive.data;\n        const result = directive.compiler.generateBytecode({\n            data,\n            debug: true,\n            scriptId: directive.script,\n        });\n        return result.success\n            ? {\n                lockingBytecode: result.bytecode,\n                ...(outputTemplate.token === undefined\n                    ? {}\n                    : { token: outputTemplate.token }),\n                valueSatoshis: outputTemplate.valueSatoshis,\n            }\n            : returnFailedCompilationDirective({ index, result, type: 'locking' });\n    }\n    return {\n        lockingBytecode: outputTemplate.lockingBytecode.slice(),\n        ...(outputTemplate.token === undefined\n            ? {}\n            : { token: outputTemplate.token }),\n        valueSatoshis: outputTemplate.valueSatoshis,\n    };\n};\nconst compileInputTemplate = ({ inputTemplate, index, template, outputs, }) => {\n    if ('script' in inputTemplate.unlockingBytecode) {\n        const directive = inputTemplate.unlockingBytecode;\n        // TODO: workaround, replace by migrating to PST format\n        const sourceOutputs = [];\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n        sourceOutputs[index] = {\n            lockingBytecode: Uint8Array.of(),\n            ...(inputTemplate.unlockingBytecode.token === undefined\n                ? {}\n                : { token: inputTemplate.unlockingBytecode.token }),\n            valueSatoshis: inputTemplate.unlockingBytecode.valueSatoshis,\n        };\n        const result = directive.compiler.generateBytecode({\n            data: {\n                ...directive.data,\n                compilationContext: {\n                    inputIndex: index,\n                    sourceOutputs,\n                    transaction: {\n                        inputs: template.inputs,\n                        locktime: template.locktime,\n                        outputs,\n                        version: template.version,\n                    },\n                },\n            },\n            debug: true,\n            scriptId: directive.script,\n        });\n        return result.success\n            ? {\n                outpointIndex: inputTemplate.outpointIndex,\n                outpointTransactionHash: inputTemplate.outpointTransactionHash.slice(),\n                sequenceNumber: inputTemplate.sequenceNumber,\n                unlockingBytecode: result.bytecode,\n            }\n            : returnFailedCompilationDirective({ index, result, type: 'unlocking' });\n    }\n    return {\n        outpointIndex: inputTemplate.outpointIndex,\n        outpointTransactionHash: inputTemplate.outpointTransactionHash.slice(),\n        sequenceNumber: inputTemplate.sequenceNumber,\n        unlockingBytecode: inputTemplate.unlockingBytecode.slice(),\n    };\n};\n/**\n * Generate a `Transaction` given a `TransactionTemplate` and any applicable\n * compilers and compilation data.\n *\n * Returns either a `Transaction` or an array of compilation errors.\n *\n * For each `CompilationDirective`, the `compilationContext` property will be\n * automatically provided to the compiler. All other necessary `CompilationData`\n * properties must be specified in the `TransactionTemplate`.\n *\n * @param template - the `TransactionTemplate` from which to create the\n * `Transaction`\n */\nconst generateTransaction = (template) => {\n    const outputResults = template.outputs.map((outputTemplate, index) => compileOutputTemplate({\n        index,\n        outputTemplate,\n    }));\n    const outputCompilationErrors = outputResults.filter((result) => 'errors' in result);\n    if (outputCompilationErrors.length > 0) {\n        const outputCompletions = outputResults\n            .map((result, index) => 'lockingBytecode' in result\n            ? { index, output: result, type: 'output' }\n            : result)\n            .filter((result) => 'output' in result);\n        return {\n            completions: outputCompletions,\n            errors: outputCompilationErrors,\n            stage: 'outputs',\n            success: false,\n        };\n    }\n    const outputs = outputResults;\n    const inputResults = template.inputs.map((inputTemplate, index) => compileInputTemplate({\n        index,\n        inputTemplate,\n        outputs,\n        template,\n    }));\n    const inputCompilationErrors = inputResults.filter((result) => 'errors' in result);\n    if (inputCompilationErrors.length > 0) {\n        const inputCompletions = inputResults\n            .map((result, index) => 'unlockingBytecode' in result\n            ? { index, input: result, type: 'input' }\n            : result)\n            .filter((result) => 'input' in result);\n        return {\n            completions: inputCompletions,\n            errors: inputCompilationErrors,\n            stage: 'inputs',\n            success: false,\n        };\n    }\n    const inputs = inputResults;\n    return {\n        success: true,\n        transaction: {\n            inputs,\n            locktime: template.locktime,\n            outputs,\n            version: template.version,\n        },\n    };\n};\n/**\n * TODO: fundamentally unsound, migrate to PST format\n *\n * Extract a map of successfully resolved variables to their resolved bytecode.\n *\n * @param transactionGenerationError - a transaction generation attempt where\n * `success` is `false`\n */\nconst extractResolvedVariables = (transactionGenerationError) => transactionGenerationError.errors.reduce((all, error) => error.resolved === undefined\n    ? all\n    : { ...all, ...(0,_language_language_js__WEBPACK_IMPORTED_MODULE_0__.extractResolvedVariableBytecodeMap)(error.resolved) }, {});\n/**\n * TODO: fundamentally unsound, migrate to PST format\n *\n * Given an unsuccessful transaction generation result, extract a map of the\n * identifiers missing from the compilation mapped to the entity that owns each\n * variable.\n *\n * Returns `false` if any errors are fatal (the error either cannot be resolved\n * by providing a variable, or the entity ownership of the required variable was\n * not provided in the compilation data).\n *\n * @param transactionGenerationError - a transaction generation result where\n * `success` is `false`\n */\nconst extractMissingVariables = (transactionGenerationError) => {\n    const allErrors = transactionGenerationError.errors.reduce((all, error) => [...all, ...error.errors], []);\n    if (!(0,_language_language_js__WEBPACK_IMPORTED_MODULE_0__.allErrorsAreRecoverable)(allErrors)) {\n        return false;\n    }\n    return allErrors.reduce((all, error) => ({\n        ...all,\n        [error.missingIdentifier]: error.owningEntity,\n    }), {});\n};\n/**\n * TODO: fundamentally unsound, migrate to PST format\n *\n * Safely extend a compilation data with resolutions provided by other entities\n * (via `extractResolvedVariables`).\n *\n * It is security-critical that compilation data only be extended with expected\n * identifiers from the proper owning entity of each variable. See\n * `CompilationData.bytecode` for details.\n *\n * Returns `false` if any errors are fatal (the error either cannot be resolved\n * by providing a variable, or the entity ownership of the required variable was\n * not provided in the compilation data).\n *\n * @remarks\n * To determine which identifiers are required by a given compilation, the\n * compilation is first attempted with only trusted variables: variables owned\n * or previously verified (like `WalletData`) by the compiling entity. If this\n * compilation produces a `TransactionGenerationError`, the error can be\n * provided to `safelyExtendCompilationData`, along with the trusted compilation\n * data and a mapping of untrusted resolutions (where the result of\n * `extractResolvedVariables` is assigned to the entity ID of the entity from\n * which they were received).\n *\n * The first compilation must use only trusted compilation data\n */\nconst safelyExtendCompilationData = (transactionGenerationError, trustedCompilationData, untrustedResolutions) => {\n    const missing = extractMissingVariables(transactionGenerationError);\n    if (missing === false)\n        return false;\n    const selectedResolutions = Object.entries(missing).reduce((all, [identifier, entityId]) => {\n        const entityResolution = untrustedResolutions[entityId];\n        if (entityResolution === undefined) {\n            return all;\n        }\n        const resolution = entityResolution[identifier];\n        if (resolution === undefined) {\n            return all;\n        }\n        return { ...all, [identifier]: resolution };\n    }, {});\n    return {\n        ...trustedCompilationData,\n        bytecode: {\n            ...selectedResolutions,\n            ...trustedCompilationData.bytecode,\n        },\n    };\n};\n//# sourceMappingURL=generate-transaction.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/transaction/generate-transaction.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-consensus.js":
/*!********************************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-consensus.js ***!
  \********************************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ConsensusBCH2023\": () => (/* binding */ ConsensusBCH2023),\n/* harmony export */   \"SigningSerializationTypesBCH2023\": () => (/* binding */ SigningSerializationTypesBCH2023)\n/* harmony export */ });\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/consensus.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/signing-serialization.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_common_js__WEBPACK_IMPORTED_MODULE_0__, _common_common_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_common_common_js__WEBPACK_IMPORTED_MODULE_0__, _common_common_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n/**\n * Consensus settings for the `BCH_2023_05` instruction set.\n */\nvar ConsensusBCH2023;\n(function (ConsensusBCH2023) {\n    /**\n     * A.K.A. `MAX_SCRIPT_SIZE`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumBytecodeLength\"] = 10000] = \"maximumBytecodeLength\";\n    /**\n     * A.K.A. `MAX_OP_RETURN_RELAY`, `nMaxDatacarrierBytes`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumDataCarrierBytes\"] = 223] = \"maximumDataCarrierBytes\";\n    /**\n     * A.K.A. `MAX_OPS_PER_SCRIPT`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumOperationCount\"] = 201] = \"maximumOperationCount\";\n    /**\n     * A.K.A. `MAX_STACK_SIZE`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumStackDepth\"] = 1000] = \"maximumStackDepth\";\n    /**\n     * A.K.A. `MAX_SCRIPT_ELEMENT_SIZE`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumStackItemLength\"] = 520] = \"maximumStackItemLength\";\n    /**\n     * A.K.A. `MAX_STANDARD_VERSION`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumStandardVersion\"] = 2] = \"maximumStandardVersion\";\n    /**\n     * A.K.A. `MAX_TX_IN_SCRIPT_SIG_SIZE`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumStandardUnlockingBytecodeLength\"] = 1650] = \"maximumStandardUnlockingBytecodeLength\";\n    /**\n     * Transactions smaller than 65 bytes are forbidden to prevent exploits of the\n     * transaction Merkle tree design.\n     *\n     * A.K.A. `MIN_TX_SIZE`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"minimumTransactionSize\"] = 65] = \"minimumTransactionSize\";\n    /**\n     * A.K.A. `MAX_STANDARD_TX_SIZE`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumStandardTransactionSize\"] = 100000] = \"maximumStandardTransactionSize\";\n    /**\n     * A.K.A. `MAX_TX_SIZE`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumTransactionSize\"] = 1000000] = \"maximumTransactionSize\";\n    /**\n     * A.K.A. `MAXIMUM_ELEMENT_SIZE_64_BIT`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumVmNumberLength\"] = 8] = \"maximumVmNumberLength\";\n    ConsensusBCH2023[\"minVmNumber\"] = \"-9223372036854775807\";\n    ConsensusBCH2023[\"maxVmNumber\"] = \"9223372036854775807\";\n    ConsensusBCH2023[ConsensusBCH2023[\"schnorrSignatureLength\"] = 64] = \"schnorrSignatureLength\";\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumCommitmentLength\"] = 40] = \"maximumCommitmentLength\";\n})(ConsensusBCH2023 || (ConsensusBCH2023 = {}));\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst SigningSerializationTypesBCH2023 = [\n    ..._common_common_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypesBCH,\n    _common_common_js__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationTypeBCH.allOutputsAllUtxos,\n    _common_common_js__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationTypeBCH.correspondingOutputAllUtxos,\n    _common_common_js__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationTypeBCH.noOutputsAllUtxos,\n];\n//# sourceMappingURL=bch-2023-consensus.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-consensus.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-crypto.js":
/*!*****************************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-crypto.js ***!
  \*****************************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"opCheckMultiSigBCH2023\": () => (/* binding */ opCheckMultiSigBCH2023),\n/* harmony export */   \"opCheckMultiSigVerifyBCH2023\": () => (/* binding */ opCheckMultiSigVerifyBCH2023),\n/* harmony export */   \"opCheckSigBCH2023\": () => (/* binding */ opCheckSigBCH2023),\n/* harmony export */   \"opCheckSigVerifyBCH2023\": () => (/* binding */ opCheckSigVerifyBCH2023)\n/* harmony export */ });\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/combinations.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/encoding.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/signing-serialization.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/consensus.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/flow-control.js\");\n/* harmony import */ var _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bch-2023-consensus.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-consensus.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__, _common_common_js__WEBPACK_IMPORTED_MODULE_1__, _common_common_js__WEBPACK_IMPORTED_MODULE_2__, _common_common_js__WEBPACK_IMPORTED_MODULE_4__, _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_5__, _common_common_js__WEBPACK_IMPORTED_MODULE_7__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_8__, _common_common_js__WEBPACK_IMPORTED_MODULE_9__, _common_common_js__WEBPACK_IMPORTED_MODULE_10__]);\n([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__, _common_common_js__WEBPACK_IMPORTED_MODULE_1__, _common_common_js__WEBPACK_IMPORTED_MODULE_2__, _common_common_js__WEBPACK_IMPORTED_MODULE_4__, _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_5__, _common_common_js__WEBPACK_IMPORTED_MODULE_7__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_8__, _common_common_js__WEBPACK_IMPORTED_MODULE_9__, _common_common_js__WEBPACK_IMPORTED_MODULE_10__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nconst opCheckSigBCH2023 = ({ secp256k1, sha256, } = { secp256k1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1, sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => (s) => \n// eslint-disable-next-line complexity\n(0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.useTwoStackItems)(s, (state, [bitcoinEncodedSignature, publicKey]) => {\n    if (!(0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.isValidPublicKeyEncoding)(publicKey)) {\n        return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(state, _common_common_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.invalidPublicKeyEncoding);\n    }\n    if (!(0,_common_common_js__WEBPACK_IMPORTED_MODULE_4__.isValidSignatureEncodingBCHTransaction)(bitcoinEncodedSignature, _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_5__.SigningSerializationTypesBCH2023)) {\n        return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(state, _common_common_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.invalidSignatureEncoding, `Transaction signature (including signing serialization): ${(0,_format_format_js__WEBPACK_IMPORTED_MODULE_6__.binToHex)(bitcoinEncodedSignature)}`);\n    }\n    const coveredBytecode = (0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.encodeAuthenticationInstructions)(state.instructions).subarray(state.lastCodeSeparator + 1);\n    const { signingSerializationType, signature } = (0,_common_common_js__WEBPACK_IMPORTED_MODULE_4__.decodeBitcoinSignature)(bitcoinEncodedSignature);\n    const serialization = (0,_common_common_js__WEBPACK_IMPORTED_MODULE_7__.generateSigningSerializationBCH)(state.program, { coveredBytecode, signingSerializationType }, sha256);\n    const digest = (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_8__.hash256)(serialization, sha256);\n    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n    state.signedMessages.push({ digest, serialization });\n    const useSchnorr = signature.length === _common_common_js__WEBPACK_IMPORTED_MODULE_9__.ConsensusCommon.schnorrSignatureLength;\n    const success = useSchnorr\n        ? secp256k1.verifySignatureSchnorr(signature, publicKey, digest)\n        : secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n    return !success && signature.length !== 0\n        ? (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(state, _common_common_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.nonNullSignatureFailure)\n        : (0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(state, (0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.booleanToVmNumber)(success));\n});\n// TODO: implement schnorr multisig https://gitlab.com/bitcoin-cash-node/bchn-sw/bitcoincash-upgrade-specifications/-/blob/master/spec/2019-11-15-schnorrmultisig.md\nconst opCheckMultiSigBCH2023 = ({ secp256k1, sha256, } = { secp256k1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1, sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => (s) => (0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.useOneVmNumber)(s, (state, publicKeysValue) => {\n    const potentialPublicKeys = Number(publicKeysValue);\n    if (potentialPublicKeys < 0) {\n        return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(state, _common_common_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.invalidNaturalNumber);\n    }\n    if (potentialPublicKeys > 20 /* Multisig.maximumPublicKeys */) {\n        return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(state, _common_common_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.exceedsMaximumMultisigPublicKeyCount);\n    }\n    const publicKeys = \n    // eslint-disable-next-line functional/immutable-data\n    potentialPublicKeys > 0 ? state.stack.splice(-potentialPublicKeys) : [];\n    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n    state.operationCount += potentialPublicKeys;\n    return state.operationCount > _common_common_js__WEBPACK_IMPORTED_MODULE_9__.ConsensusCommon.maximumOperationCount\n        ? (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(state, _common_common_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.exceededMaximumOperationCount)\n        : (0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.useOneVmNumber)(state, (nextState, approvingKeys) => {\n            const requiredApprovingPublicKeys = Number(approvingKeys);\n            if (requiredApprovingPublicKeys < 0) {\n                return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(nextState, _common_common_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.invalidNaturalNumber);\n            }\n            if (requiredApprovingPublicKeys > potentialPublicKeys) {\n                return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(nextState, _common_common_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.insufficientPublicKeys);\n            }\n            const signatures = requiredApprovingPublicKeys > 0\n                ? // eslint-disable-next-line functional/immutable-data\n                    nextState.stack.splice(-requiredApprovingPublicKeys)\n                : [];\n            return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.useOneStackItem)(nextState, \n            // eslint-disable-next-line complexity\n            (finalState, [protocolBugValue]) => {\n                if (protocolBugValue.length !== 0) {\n                    return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(finalState, _common_common_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.invalidProtocolBugValue);\n                }\n                const coveredBytecode = (0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.encodeAuthenticationInstructions)(finalState.instructions).subarray(finalState.lastCodeSeparator + 1);\n                let approvingPublicKeys = 0; // eslint-disable-line functional/no-let\n                let remainingSignatures = signatures.length; // eslint-disable-line functional/no-let\n                let remainingPublicKeys = publicKeys.length; // eslint-disable-line functional/no-let\n                // eslint-disable-next-line functional/no-loop-statement\n                while (remainingSignatures > 0 &&\n                    remainingPublicKeys > 0 &&\n                    approvingPublicKeys + remainingPublicKeys >=\n                        remainingSignatures &&\n                    approvingPublicKeys !== requiredApprovingPublicKeys) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    const publicKey = publicKeys[remainingPublicKeys - 1];\n                    const bitcoinEncodedSignature = \n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    signatures[remainingSignatures - 1];\n                    if (!(0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.isValidPublicKeyEncoding)(publicKey)) {\n                        return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(finalState, _common_common_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.invalidPublicKeyEncoding);\n                    }\n                    if (!(0,_common_common_js__WEBPACK_IMPORTED_MODULE_4__.isValidSignatureEncodingBCHTransaction)(bitcoinEncodedSignature, _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_5__.SigningSerializationTypesBCH2023)) {\n                        return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(finalState, _common_common_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.invalidSignatureEncoding, `Transaction signature (including signing serialization type): ${(0,_format_format_js__WEBPACK_IMPORTED_MODULE_6__.binToHex)(bitcoinEncodedSignature)}`);\n                    }\n                    const { signingSerializationType, signature } = (0,_common_common_js__WEBPACK_IMPORTED_MODULE_4__.decodeBitcoinSignature)(bitcoinEncodedSignature);\n                    const serialization = (0,_common_common_js__WEBPACK_IMPORTED_MODULE_7__.generateSigningSerializationBCH)(state.program, { coveredBytecode, signingSerializationType }, sha256);\n                    const digest = (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_8__.hash256)(serialization, sha256);\n                    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n                    finalState.signedMessages.push({ digest, serialization });\n                    if (signature.length ===\n                        _common_common_js__WEBPACK_IMPORTED_MODULE_9__.ConsensusCommon.schnorrSignatureLength) {\n                        return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(finalState, _common_common_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.schnorrSizedSignatureInCheckMultiSig);\n                    }\n                    const signed = secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n                    // eslint-disable-next-line functional/no-conditional-statement\n                    if (signed) {\n                        approvingPublicKeys += 1; // eslint-disable-line functional/no-expression-statement\n                        remainingSignatures -= 1; // eslint-disable-line functional/no-expression-statement\n                    }\n                    remainingPublicKeys -= 1; // eslint-disable-line functional/no-expression-statement\n                }\n                const success = approvingPublicKeys === requiredApprovingPublicKeys;\n                if (!success &&\n                    !signatures.every((signature) => signature.length === 0)) {\n                    return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(finalState, _common_common_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.nonNullSignatureFailure);\n                }\n                return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(finalState, (0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.booleanToVmNumber)(success));\n            });\n        });\n});\nconst opCheckSigVerifyBCH2023 = ({ secp256k1, sha256, } = { secp256k1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1, sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => (0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.combineOperations)(opCheckSigBCH2023({ secp256k1, sha256 }), _common_common_js__WEBPACK_IMPORTED_MODULE_10__.opVerify);\nconst opCheckMultiSigVerifyBCH2023 = ({ secp256k1, sha256, }) => (0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.combineOperations)(opCheckMultiSigBCH2023({ secp256k1, sha256 }), _common_common_js__WEBPACK_IMPORTED_MODULE_10__.opVerify);\n//# sourceMappingURL=bch-2023-crypto.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-crypto.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-instruction-set.js":
/*!**************************************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-instruction-set.js ***!
  \**************************************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createInstructionSetBCH2023\": () => (/* binding */ createInstructionSetBCH2023)\n/* harmony export */ });\n/* unused harmony export createInstructionSetBCH */\n/* harmony import */ var _address_address_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../address/address.js */ \"../../node_modules/@bitauth/libauth/build/lib/address/locking-bytecode.js\");\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _message_message_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../message/message.js */ \"../../node_modules/@bitauth/libauth/build/lib/message/transaction-encoding.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/push.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/common-types.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/flow-control.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/nop.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/stack.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/format.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/bitwise.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/arithmetic.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/crypto.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/time.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/inspection.js\");\n/* harmony import */ var _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bch-2023-consensus.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-consensus.js\");\n/* harmony import */ var _bch_2023_crypto_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./bch-2023-crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-crypto.js\");\n/* harmony import */ var _bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bch-2023-opcodes.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-opcodes.js\");\n/* harmony import */ var _bch_2023_tokens_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./bch-2023-tokens.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-tokens.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__, _common_common_js__WEBPACK_IMPORTED_MODULE_1__, _common_common_js__WEBPACK_IMPORTED_MODULE_2__, _common_common_js__WEBPACK_IMPORTED_MODULE_3__, _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__, _address_address_js__WEBPACK_IMPORTED_MODULE_6__, _common_common_js__WEBPACK_IMPORTED_MODULE_8__, _common_common_js__WEBPACK_IMPORTED_MODULE_9__, _common_common_js__WEBPACK_IMPORTED_MODULE_11__, _common_common_js__WEBPACK_IMPORTED_MODULE_12__, _common_common_js__WEBPACK_IMPORTED_MODULE_13__, _common_common_js__WEBPACK_IMPORTED_MODULE_14__, _common_common_js__WEBPACK_IMPORTED_MODULE_15__, _bch_2023_crypto_js__WEBPACK_IMPORTED_MODULE_16__, _common_common_js__WEBPACK_IMPORTED_MODULE_17__, _common_common_js__WEBPACK_IMPORTED_MODULE_18__, _bch_2023_tokens_js__WEBPACK_IMPORTED_MODULE_19__, _message_message_js__WEBPACK_IMPORTED_MODULE_20__]);\n([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__, _common_common_js__WEBPACK_IMPORTED_MODULE_1__, _common_common_js__WEBPACK_IMPORTED_MODULE_2__, _common_common_js__WEBPACK_IMPORTED_MODULE_3__, _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__, _address_address_js__WEBPACK_IMPORTED_MODULE_6__, _common_common_js__WEBPACK_IMPORTED_MODULE_8__, _common_common_js__WEBPACK_IMPORTED_MODULE_9__, _common_common_js__WEBPACK_IMPORTED_MODULE_11__, _common_common_js__WEBPACK_IMPORTED_MODULE_12__, _common_common_js__WEBPACK_IMPORTED_MODULE_13__, _common_common_js__WEBPACK_IMPORTED_MODULE_14__, _common_common_js__WEBPACK_IMPORTED_MODULE_15__, _bch_2023_crypto_js__WEBPACK_IMPORTED_MODULE_16__, _common_common_js__WEBPACK_IMPORTED_MODULE_17__, _common_common_js__WEBPACK_IMPORTED_MODULE_18__, _bch_2023_tokens_js__WEBPACK_IMPORTED_MODULE_19__, _message_message_js__WEBPACK_IMPORTED_MODULE_20__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n/**\n * create an instance of the BCH 2023 virtual machine instruction set.\n *\n * @param standard - If `true`, the additional `isStandard` validations will be\n * enabled. Transactions that fail these rules are often called \"non-standard\"\n * and can technically be included by miners in valid blocks, but most network\n * nodes will refuse to relay them. (Default: `true`)\n */\nconst createInstructionSetBCH2023 = (standard = true, { ripemd160, secp256k1, sha1, sha256, } = {\n    ripemd160: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.ripemd160,\n    secp256k1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1,\n    sha1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha1,\n    sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256,\n}) => {\n    const conditionallyPush = (0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushOperation)();\n    return {\n        clone: _common_common_js__WEBPACK_IMPORTED_MODULE_2__.cloneAuthenticationProgramStateBCH,\n        continue: (state) => state.error === undefined && state.ip < state.instructions.length,\n        // eslint-disable-next-line complexity\n        evaluate: (program, stateEvaluate) => {\n            const { unlockingBytecode } = \n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            program.transaction.inputs[program.inputIndex];\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const { lockingBytecode } = program.sourceOutputs[program.inputIndex];\n            const unlockingInstructions = (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeAuthenticationInstructions)(unlockingBytecode);\n            const lockingInstructions = (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeAuthenticationInstructions)(lockingBytecode);\n            const initialState = (0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.createAuthenticationProgramStateCommon)({\n                instructions: unlockingInstructions,\n                program,\n                stack: [],\n            });\n            if (unlockingBytecode.length > _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.maximumBytecodeLength) {\n                return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_5__.applyError)(initialState, `The provided unlocking bytecode (${unlockingBytecode.length} bytes) exceeds the maximum bytecode length (${_bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.maximumBytecodeLength} bytes).`);\n            }\n            if ((0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.authenticationInstructionsAreMalformed)(unlockingInstructions)) {\n                return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_5__.applyError)(initialState, _common_common_js__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.malformedUnlockingBytecode);\n            }\n            if (!(0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.isPushOnly)(unlockingBytecode)) {\n                return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_5__.applyError)(initialState, _common_common_js__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.requiresPushOnly);\n            }\n            if (lockingBytecode.length > _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.maximumBytecodeLength) {\n                return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_5__.applyError)(initialState, _common_common_js__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.exceededMaximumBytecodeLengthLocking);\n            }\n            if ((0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.authenticationInstructionsAreMalformed)(lockingInstructions)) {\n                return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_5__.applyError)(initialState, _common_common_js__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.malformedLockingBytecode);\n            }\n            const unlockingResult = stateEvaluate(initialState);\n            if (unlockingResult.error !== undefined) {\n                return unlockingResult;\n            }\n            if (unlockingResult.controlStack.length !== 0) {\n                return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_5__.applyError)(initialState, _common_common_js__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.nonEmptyControlStack);\n            }\n            const lockingResult = stateEvaluate((0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.createAuthenticationProgramStateCommon)({\n                instructions: lockingInstructions,\n                program,\n                stack: unlockingResult.stack,\n            }));\n            const p2sh20 = (0,_address_address_js__WEBPACK_IMPORTED_MODULE_6__.isPayToScriptHash20)(lockingBytecode);\n            const p2sh32 = (0,_address_address_js__WEBPACK_IMPORTED_MODULE_6__.isPayToScriptHash32)(lockingBytecode);\n            if (!p2sh20 && !p2sh32) {\n                return lockingResult;\n            }\n            const p2shStack = (0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.cloneStack)(unlockingResult.stack);\n            // eslint-disable-next-line functional/immutable-data\n            const p2shScript = p2shStack.pop() ?? Uint8Array.of();\n            if (p2sh20 && p2shStack.length === 0 && (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.isWitnessProgram)(p2shScript)) {\n                return lockingResult;\n            }\n            const p2shInstructions = (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeAuthenticationInstructions)(p2shScript);\n            return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.authenticationInstructionsAreMalformed)(p2shInstructions)\n                ? {\n                    ...lockingResult,\n                    error: _common_common_js__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.malformedP2shBytecode,\n                }\n                : stateEvaluate((0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.createAuthenticationProgramStateCommon)({\n                    instructions: p2shInstructions,\n                    program,\n                    stack: p2shStack,\n                }));\n        },\n        every: (state) => \n        // TODO: implement sigchecks https://gitlab.com/bitcoin-cash-node/bchn-sw/bitcoincash-upgrade-specifications/-/blob/master/spec/2020-05-15-sigchecks.md\n        state.stack.length + state.alternateStack.length >\n            _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.maximumStackDepth\n            ? (0,_common_common_js__WEBPACK_IMPORTED_MODULE_5__.applyError)(state, _common_common_js__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.exceededMaximumStackDepth)\n            : state.operationCount > _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.maximumOperationCount\n                ? (0,_common_common_js__WEBPACK_IMPORTED_MODULE_5__.applyError)(state, _common_common_js__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.exceededMaximumOperationCount)\n                : state,\n        operations: {\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_0]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_1]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_2]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_3]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_4]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_5]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_6]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_7]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_8]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_9]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_10]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_11]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_12]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_13]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_14]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_15]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_16]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_17]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_18]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_19]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_20]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_21]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_22]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_23]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_24]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_25]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_26]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_27]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_28]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_29]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_30]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_31]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_32]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_33]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_34]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_35]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_36]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_37]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_38]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_39]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_40]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_41]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_42]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_43]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_44]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_45]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_46]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_47]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_48]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_49]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_50]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_51]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_52]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_53]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_54]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_55]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_56]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_57]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_58]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_59]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_60]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_61]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_62]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_63]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_64]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_65]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_66]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_67]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_68]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_69]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_70]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_71]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_72]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_73]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_74]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHBYTES_75]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHDATA_1]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHDATA_2]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PUSHDATA_4]: conditionallyPush,\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_1NEGATE]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(-1)),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_RESERVED]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_9__.reservedOperation),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_1]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(1)),\n            /* eslint-disable @typescript-eslint/no-magic-numbers */\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_2]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(2)),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_3]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(3)),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_4]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(4)),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_5]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(5)),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_6]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(6)),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_7]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(7)),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_8]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(8)),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_9]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(9)),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_10]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(10)),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_11]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(11)),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_12]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(12)),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_13]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(13)),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_14]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(14)),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_15]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(15)),\n            [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_16]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_1__.pushNumberOperation)(16)),\n            /* eslint-enable @typescript-eslint/no-magic-numbers */\n            ...(0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.mapOverOperations)([_common_common_js__WEBPACK_IMPORTED_MODULE_8__.incrementOperationCount], {\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNop),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_VER]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_9__.reservedOperation),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_IF]: _common_common_js__WEBPACK_IMPORTED_MODULE_9__.opIf,\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOTIF]: _common_common_js__WEBPACK_IMPORTED_MODULE_9__.opNotIf,\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_VERIF]: _common_common_js__WEBPACK_IMPORTED_MODULE_9__.reservedOperation,\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_VERNOTIF]: _common_common_js__WEBPACK_IMPORTED_MODULE_9__.reservedOperation,\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_ELSE]: _common_common_js__WEBPACK_IMPORTED_MODULE_9__.opElse,\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_ENDIF]: _common_common_js__WEBPACK_IMPORTED_MODULE_9__.opEndIf,\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_VERIFY]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_9__.opVerify),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_RETURN]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_9__.opReturn),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_TOALTSTACK]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.opToAltStack),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_FROMALTSTACK]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.opFromAltStack),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_2DROP]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.op2Drop),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_2DUP]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.op2Dup),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_3DUP]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.op3Dup),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_2OVER]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.op2Over),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_2ROT]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.op2Rot),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_2SWAP]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.op2Swap),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_IFDUP]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.opIfDup),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_DEPTH]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.opDepth),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_DROP]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.opDrop),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_DUP]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.opDup),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NIP]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.opNip),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_OVER]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.opOver),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_PICK]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.opPick),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_ROLL]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.opRoll),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_ROT]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.opRot),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_SWAP]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.opSwap),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_TUCK]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.opTuck),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_CAT]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_12__.opCat),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_SPLIT]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_12__.opSplit),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NUM2BIN]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_12__.opNum2Bin),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_BIN2NUM]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_12__.opBin2Num),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_SIZE]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_11__.opSize),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_INVERT]: _common_common_js__WEBPACK_IMPORTED_MODULE_10__.disabledOperation,\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_AND]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_13__.opAnd),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_OR]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_13__.opOr),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_XOR]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_13__.opXor),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_EQUAL]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_13__.opEqual),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_EQUALVERIFY]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_13__.opEqualVerify),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_RESERVED1]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_9__.reservedOperation),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_RESERVED2]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_9__.reservedOperation),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_1ADD]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.op1Add),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_1SUB]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.op1Sub),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_2MUL]: _common_common_js__WEBPACK_IMPORTED_MODULE_10__.disabledOperation,\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_2DIV]: _common_common_js__WEBPACK_IMPORTED_MODULE_10__.disabledOperation,\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NEGATE]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opNegate),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_ABS]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opAbs),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOT]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opNot),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_0NOTEQUAL]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.op0NotEqual),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_ADD]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opAdd),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_SUB]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opSub),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_MUL]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opMul),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_DIV]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opDiv),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_MOD]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opMod),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_LSHIFT]: _common_common_js__WEBPACK_IMPORTED_MODULE_10__.disabledOperation,\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_RSHIFT]: _common_common_js__WEBPACK_IMPORTED_MODULE_10__.disabledOperation,\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_BOOLAND]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opBoolAnd),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_BOOLOR]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opBoolOr),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NUMEQUAL]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opNumEqual),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NUMEQUALVERIFY]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opNumEqualVerify),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NUMNOTEQUAL]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opNumNotEqual),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_LESSTHAN]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opLessThan),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_GREATERTHAN]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opGreaterThan),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_LESSTHANOREQUAL]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opLessThanOrEqual),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_GREATERTHANOREQUAL]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opGreaterThanOrEqual),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_MIN]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opMin),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_MAX]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opMax),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_WITHIN]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_14__.opWithin),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_RIPEMD160]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_15__.opRipemd160)({ ripemd160 })),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_SHA1]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_15__.opSha1)({ sha1 })),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_SHA256]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_15__.opSha256)({ sha256 })),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_HASH160]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_15__.opHash160)({ ripemd160, sha256 })),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_HASH256]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_15__.opHash256)({ sha256 })),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_CODESEPARATOR]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_15__.opCodeSeparator),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_CHECKSIG]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_bch_2023_crypto_js__WEBPACK_IMPORTED_MODULE_16__.opCheckSigBCH2023)({ secp256k1, sha256 })),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_CHECKSIGVERIFY]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_bch_2023_crypto_js__WEBPACK_IMPORTED_MODULE_16__.opCheckSigVerifyBCH2023)({ secp256k1, sha256 })),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_CHECKMULTISIG]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_bch_2023_crypto_js__WEBPACK_IMPORTED_MODULE_16__.opCheckMultiSigBCH2023)({ secp256k1, sha256 })),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_CHECKMULTISIGVERIFY]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_bch_2023_crypto_js__WEBPACK_IMPORTED_MODULE_16__.opCheckMultiSigVerifyBCH2023)({ secp256k1, sha256 })),\n                ...(standard\n                    ? {\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP1]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNopDisallowed),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_CHECKLOCKTIMEVERIFY]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_17__.opCheckLockTimeVerify),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_CHECKSEQUENCEVERIFY]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_17__.opCheckSequenceVerify),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP4]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNopDisallowed),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP5]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNopDisallowed),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP6]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNopDisallowed),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP7]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNopDisallowed),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP8]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNopDisallowed),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP9]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNopDisallowed),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP10]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNopDisallowed),\n                    }\n                    : {\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP1]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNop),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_CHECKLOCKTIMEVERIFY]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_17__.opCheckLockTimeVerify),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_CHECKSEQUENCEVERIFY]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_17__.opCheckSequenceVerify),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP4]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNop),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP5]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNop),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP6]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNop),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP7]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNop),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP8]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNop),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP9]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNop),\n                        [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_NOP10]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_10__.opNop),\n                    }),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_CHECKDATASIG]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_15__.opCheckDataSig)({ secp256k1, sha256 })),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_CHECKDATASIGVERIFY]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)((0,_common_common_js__WEBPACK_IMPORTED_MODULE_15__.opCheckDataSigVerify)({ secp256k1, sha256 })),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_REVERSEBYTES]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_15__.opReverseBytes),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_INPUTINDEX]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_18__.opInputIndex),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_ACTIVEBYTECODE]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_18__.opActiveBytecode),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_TXVERSION]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_18__.opTxVersion),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_TXINPUTCOUNT]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_18__.opTxInputCount),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_TXOUTPUTCOUNT]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_18__.opTxOutputCount),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_TXLOCKTIME]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_18__.opTxLocktime),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_UTXOVALUE]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_18__.opUtxoValue),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_UTXOBYTECODE]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_18__.opUtxoBytecode),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_OUTPOINTTXHASH]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_18__.opOutpointTxHash),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_OUTPOINTINDEX]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_18__.opOutpointIndex),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_INPUTBYTECODE]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_18__.opInputBytecode),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_INPUTSEQUENCENUMBER]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_18__.opInputSequenceNumber),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_OUTPUTVALUE]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_18__.opOutputValue),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_OUTPUTBYTECODE]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_common_common_js__WEBPACK_IMPORTED_MODULE_18__.opOutputBytecode),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_UTXOTOKENCATEGORY]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_bch_2023_tokens_js__WEBPACK_IMPORTED_MODULE_19__.opUtxoTokenCategory),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_UTXOTOKENCOMMITMENT]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_bch_2023_tokens_js__WEBPACK_IMPORTED_MODULE_19__.opUtxoTokenCommitment),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_UTXOTOKENAMOUNT]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_bch_2023_tokens_js__WEBPACK_IMPORTED_MODULE_19__.opUtxoTokenAmount),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_OUTPUTTOKENCATEGORY]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_bch_2023_tokens_js__WEBPACK_IMPORTED_MODULE_19__.opOutputTokenCategory),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_OUTPUTTOKENCOMMITMENT]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_bch_2023_tokens_js__WEBPACK_IMPORTED_MODULE_19__.opOutputTokenCommitment),\n                [_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_7__.OpcodesBCH2023.OP_OUTPUTTOKENAMOUNT]: (0,_common_common_js__WEBPACK_IMPORTED_MODULE_8__.conditionallyEvaluate)(_bch_2023_tokens_js__WEBPACK_IMPORTED_MODULE_19__.opOutputTokenAmount),\n            }),\n        },\n        success: (state) => {\n            if (state.error !== undefined) {\n                return state.error;\n            }\n            if (state.controlStack.length !== 0) {\n                return _common_common_js__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.nonEmptyControlStack;\n            }\n            if (state.stack.length !== 1) {\n                return _common_common_js__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.requiresCleanStack;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            if (!(0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.stackItemIsTruthy)(state.stack[0])) {\n                return _common_common_js__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.unsuccessfulEvaluation;\n            }\n            return true;\n        },\n        undefined: _common_common_js__WEBPACK_IMPORTED_MODULE_2__.undefinedOperation,\n        // eslint-disable-next-line complexity\n        verify: ({ sourceOutputs, transaction }, evaluate, stateSuccess) => {\n            if (transaction.inputs.length === 0) {\n                return 'Transactions must have at least one input.';\n            }\n            if (transaction.outputs.length === 0) {\n                return 'Transactions must have at least one output.';\n            }\n            if (transaction.inputs.length !== sourceOutputs.length) {\n                return 'Unable to verify transaction: a single spent output must be provided for each transaction input.';\n            }\n            const transactionSize = (0,_message_message_js__WEBPACK_IMPORTED_MODULE_20__.encodeTransactionBCH)(transaction).length;\n            if (transactionSize < _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.minimumTransactionSize) {\n                return `Invalid transaction size: the transaction is ${transactionSize} bytes, but transactions must be no smaller than ${_bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.minimumTransactionSize} bytes to prevent an exploit of the transaction Merkle tree design.`;\n            }\n            if (transactionSize > _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.maximumTransactionSize) {\n                return `Transaction exceeds maximum size: the transaction is ${transactionSize} bytes, but the maximum transaction size is ${_bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.maximumTransactionSize} bytes.`;\n            }\n            const inputValue = sourceOutputs.reduce((sum, utxo) => sum + utxo.valueSatoshis, 0n);\n            const outputValue = transaction.outputs.reduce((sum, output) => sum + output.valueSatoshis, 0n);\n            if (outputValue > inputValue) {\n                return `Unable to verify transaction: the sum of transaction outputs exceeds the sum of transaction inputs. Input value: ${inputValue}, output value: ${outputValue}`;\n            }\n            const outpointList = transaction.inputs.map((input) => `outpointTransactionHash: ${(0,_format_format_js__WEBPACK_IMPORTED_MODULE_21__.binToHex)(input.outpointTransactionHash)}, outpointIndex: ${input.outpointIndex}`);\n            const firstDuplicate = outpointList.find((outpoint, index) => outpointList.lastIndexOf(outpoint) !== index);\n            /**\n             * This check isn't strictly necessary to perform in the VM (assuming the\n             * provider of `sourceOutputs` is checking for double spends), but it's\n             * included here for debugging purposes.\n             */\n            if (firstDuplicate !== undefined) {\n                return `Unable to verify transaction: the transaction attempts to spend the same outpoint in multiple inputs. ${firstDuplicate}`;\n            }\n            if (standard) {\n                if (transaction.version < 1 ||\n                    transaction.version > _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.maximumStandardVersion) {\n                    return `Standard transactions must have a version no less than 1 and no greater than ${_bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.maximumStandardVersion}.`;\n                }\n                if (transactionSize > _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.maximumStandardTransactionSize) {\n                    return `Transaction exceeds maximum standard size: this transaction is ${transactionSize} bytes, but the maximum standard transaction size is ${_bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.maximumStandardTransactionSize} bytes.`;\n                }\n                // eslint-disable-next-line functional/no-loop-statement\n                for (const [index, output] of sourceOutputs.entries()) {\n                    if (!(0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.isStandardOutputBytecode2023)(output.lockingBytecode)) {\n                        return `Standard transactions may only spend standard output types, but source output ${index} is non-standard.`;\n                    }\n                }\n                // eslint-disable-next-line functional/no-let\n                let totalArbitraryDataBytes = 0;\n                // eslint-disable-next-line functional/no-loop-statement\n                for (const [index, output] of transaction.outputs.entries()) {\n                    if (!(0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.isStandardOutputBytecode2023)(output.lockingBytecode)) {\n                        return `Standard transactions may only create standard output types, but transaction output ${index} is non-standard.`;\n                    }\n                    // eslint-disable-next-line functional/no-conditional-statement\n                    if ((0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.isArbitraryDataOutput)(output.lockingBytecode)) {\n                        // eslint-disable-next-line functional/no-expression-statement\n                        totalArbitraryDataBytes += output.lockingBytecode.length + 1;\n                    }\n                    if ((0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.isDustOutput)(output)) {\n                        return `Standard transactions may not have dust outputs, but transaction output ${index} is a dust output. Output ${index} must have a value of at least ${(0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.getDustThreshold)(output)} satoshis. Current value: ${output.valueSatoshis}`;\n                    }\n                }\n                if (totalArbitraryDataBytes > _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.maximumDataCarrierBytes) {\n                    return `Standard transactions may carry no more than ${_bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.maximumDataCarrierBytes} bytes in arbitrary data outputs; this transaction includes ${totalArbitraryDataBytes} bytes of arbitrary data.`;\n                }\n                // eslint-disable-next-line functional/no-loop-statement\n                for (const [index, input] of transaction.inputs.entries()) {\n                    if (input.unlockingBytecode.length >\n                        _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.maximumStandardUnlockingBytecodeLength) {\n                        return `Input index ${index} is non-standard: the unlocking bytecode (${input.unlockingBytecode.length} bytes) exceeds the maximum standard unlocking bytecode length (${_bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusBCH2023.maximumStandardUnlockingBytecodeLength} bytes).`;\n                    }\n                    if (!(0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.isPushOnly)(input.unlockingBytecode)) {\n                        return `Input index ${index} is non-standard: unlocking bytecode may contain only push operations.`;\n                    }\n                }\n            }\n            const tokenValidationResult = (0,_bch_2023_tokens_js__WEBPACK_IMPORTED_MODULE_19__.verifyTransactionTokens)(transaction, sourceOutputs);\n            if (tokenValidationResult !== true) {\n                return tokenValidationResult;\n            }\n            // eslint-disable-next-line functional/no-loop-statement\n            for (const index of transaction.inputs.keys()) {\n                const state = evaluate({\n                    inputIndex: index,\n                    sourceOutputs,\n                    transaction,\n                });\n                const result = stateSuccess(state);\n                if (typeof result === 'string') {\n                    return `Error in evaluating input index ${index}: ${result}`;\n                }\n            }\n            return true;\n        },\n    };\n};\nconst createInstructionSetBCH = createInstructionSetBCH2023;\n//# sourceMappingURL=bch-2023-instruction-set.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-instruction-set.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-opcodes.js":
/*!******************************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-opcodes.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Opcodes\": () => (/* binding */ Opcodes),\n/* harmony export */   \"OpcodesBCH\": () => (/* binding */ OpcodesBCH),\n/* harmony export */   \"OpcodesBCH2023\": () => (/* binding */ OpcodesBCH2023)\n/* harmony export */ });\n/**\n * The `BCH_2023_05` instruction set.\n */\nvar OpcodesBCH2023;\n(function (OpcodesBCH2023) {\n    /**\n     * A.K.A. `OP_FALSE` or `OP_PUSHBYTES_0`\n     */\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_0\"] = 0] = \"OP_0\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_1\"] = 1] = \"OP_PUSHBYTES_1\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_2\"] = 2] = \"OP_PUSHBYTES_2\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_3\"] = 3] = \"OP_PUSHBYTES_3\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_4\"] = 4] = \"OP_PUSHBYTES_4\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_5\"] = 5] = \"OP_PUSHBYTES_5\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_6\"] = 6] = \"OP_PUSHBYTES_6\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_7\"] = 7] = \"OP_PUSHBYTES_7\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_8\"] = 8] = \"OP_PUSHBYTES_8\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_9\"] = 9] = \"OP_PUSHBYTES_9\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_10\"] = 10] = \"OP_PUSHBYTES_10\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_11\"] = 11] = \"OP_PUSHBYTES_11\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_12\"] = 12] = \"OP_PUSHBYTES_12\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_13\"] = 13] = \"OP_PUSHBYTES_13\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_14\"] = 14] = \"OP_PUSHBYTES_14\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_15\"] = 15] = \"OP_PUSHBYTES_15\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_16\"] = 16] = \"OP_PUSHBYTES_16\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_17\"] = 17] = \"OP_PUSHBYTES_17\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_18\"] = 18] = \"OP_PUSHBYTES_18\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_19\"] = 19] = \"OP_PUSHBYTES_19\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_20\"] = 20] = \"OP_PUSHBYTES_20\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_21\"] = 21] = \"OP_PUSHBYTES_21\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_22\"] = 22] = \"OP_PUSHBYTES_22\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_23\"] = 23] = \"OP_PUSHBYTES_23\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_24\"] = 24] = \"OP_PUSHBYTES_24\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_25\"] = 25] = \"OP_PUSHBYTES_25\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_26\"] = 26] = \"OP_PUSHBYTES_26\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_27\"] = 27] = \"OP_PUSHBYTES_27\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_28\"] = 28] = \"OP_PUSHBYTES_28\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_29\"] = 29] = \"OP_PUSHBYTES_29\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_30\"] = 30] = \"OP_PUSHBYTES_30\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_31\"] = 31] = \"OP_PUSHBYTES_31\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_32\"] = 32] = \"OP_PUSHBYTES_32\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_33\"] = 33] = \"OP_PUSHBYTES_33\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_34\"] = 34] = \"OP_PUSHBYTES_34\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_35\"] = 35] = \"OP_PUSHBYTES_35\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_36\"] = 36] = \"OP_PUSHBYTES_36\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_37\"] = 37] = \"OP_PUSHBYTES_37\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_38\"] = 38] = \"OP_PUSHBYTES_38\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_39\"] = 39] = \"OP_PUSHBYTES_39\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_40\"] = 40] = \"OP_PUSHBYTES_40\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_41\"] = 41] = \"OP_PUSHBYTES_41\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_42\"] = 42] = \"OP_PUSHBYTES_42\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_43\"] = 43] = \"OP_PUSHBYTES_43\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_44\"] = 44] = \"OP_PUSHBYTES_44\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_45\"] = 45] = \"OP_PUSHBYTES_45\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_46\"] = 46] = \"OP_PUSHBYTES_46\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_47\"] = 47] = \"OP_PUSHBYTES_47\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_48\"] = 48] = \"OP_PUSHBYTES_48\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_49\"] = 49] = \"OP_PUSHBYTES_49\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_50\"] = 50] = \"OP_PUSHBYTES_50\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_51\"] = 51] = \"OP_PUSHBYTES_51\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_52\"] = 52] = \"OP_PUSHBYTES_52\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_53\"] = 53] = \"OP_PUSHBYTES_53\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_54\"] = 54] = \"OP_PUSHBYTES_54\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_55\"] = 55] = \"OP_PUSHBYTES_55\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_56\"] = 56] = \"OP_PUSHBYTES_56\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_57\"] = 57] = \"OP_PUSHBYTES_57\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_58\"] = 58] = \"OP_PUSHBYTES_58\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_59\"] = 59] = \"OP_PUSHBYTES_59\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_60\"] = 60] = \"OP_PUSHBYTES_60\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_61\"] = 61] = \"OP_PUSHBYTES_61\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_62\"] = 62] = \"OP_PUSHBYTES_62\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_63\"] = 63] = \"OP_PUSHBYTES_63\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_64\"] = 64] = \"OP_PUSHBYTES_64\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_65\"] = 65] = \"OP_PUSHBYTES_65\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_66\"] = 66] = \"OP_PUSHBYTES_66\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_67\"] = 67] = \"OP_PUSHBYTES_67\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_68\"] = 68] = \"OP_PUSHBYTES_68\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_69\"] = 69] = \"OP_PUSHBYTES_69\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_70\"] = 70] = \"OP_PUSHBYTES_70\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_71\"] = 71] = \"OP_PUSHBYTES_71\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_72\"] = 72] = \"OP_PUSHBYTES_72\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_73\"] = 73] = \"OP_PUSHBYTES_73\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_74\"] = 74] = \"OP_PUSHBYTES_74\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_75\"] = 75] = \"OP_PUSHBYTES_75\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHDATA_1\"] = 76] = \"OP_PUSHDATA_1\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHDATA_2\"] = 77] = \"OP_PUSHDATA_2\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHDATA_4\"] = 78] = \"OP_PUSHDATA_4\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_1NEGATE\"] = 79] = \"OP_1NEGATE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_RESERVED\"] = 80] = \"OP_RESERVED\";\n    /**\n     * A.K.A. `OP_TRUE`\n     */\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_1\"] = 81] = \"OP_1\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2\"] = 82] = \"OP_2\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_3\"] = 83] = \"OP_3\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_4\"] = 84] = \"OP_4\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_5\"] = 85] = \"OP_5\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_6\"] = 86] = \"OP_6\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_7\"] = 87] = \"OP_7\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_8\"] = 88] = \"OP_8\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_9\"] = 89] = \"OP_9\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_10\"] = 90] = \"OP_10\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_11\"] = 91] = \"OP_11\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_12\"] = 92] = \"OP_12\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_13\"] = 93] = \"OP_13\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_14\"] = 94] = \"OP_14\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_15\"] = 95] = \"OP_15\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_16\"] = 96] = \"OP_16\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP\"] = 97] = \"OP_NOP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_VER\"] = 98] = \"OP_VER\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_IF\"] = 99] = \"OP_IF\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOTIF\"] = 100] = \"OP_NOTIF\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_VERIF\"] = 101] = \"OP_VERIF\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_VERNOTIF\"] = 102] = \"OP_VERNOTIF\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_ELSE\"] = 103] = \"OP_ELSE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_ENDIF\"] = 104] = \"OP_ENDIF\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_VERIFY\"] = 105] = \"OP_VERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_RETURN\"] = 106] = \"OP_RETURN\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_TOALTSTACK\"] = 107] = \"OP_TOALTSTACK\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_FROMALTSTACK\"] = 108] = \"OP_FROMALTSTACK\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2DROP\"] = 109] = \"OP_2DROP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2DUP\"] = 110] = \"OP_2DUP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_3DUP\"] = 111] = \"OP_3DUP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2OVER\"] = 112] = \"OP_2OVER\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2ROT\"] = 113] = \"OP_2ROT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2SWAP\"] = 114] = \"OP_2SWAP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_IFDUP\"] = 115] = \"OP_IFDUP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_DEPTH\"] = 116] = \"OP_DEPTH\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_DROP\"] = 117] = \"OP_DROP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_DUP\"] = 118] = \"OP_DUP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NIP\"] = 119] = \"OP_NIP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OVER\"] = 120] = \"OP_OVER\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PICK\"] = 121] = \"OP_PICK\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_ROLL\"] = 122] = \"OP_ROLL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_ROT\"] = 123] = \"OP_ROT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_SWAP\"] = 124] = \"OP_SWAP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_TUCK\"] = 125] = \"OP_TUCK\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CAT\"] = 126] = \"OP_CAT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_SPLIT\"] = 127] = \"OP_SPLIT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NUM2BIN\"] = 128] = \"OP_NUM2BIN\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_BIN2NUM\"] = 129] = \"OP_BIN2NUM\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_SIZE\"] = 130] = \"OP_SIZE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_INVERT\"] = 131] = \"OP_INVERT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_AND\"] = 132] = \"OP_AND\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OR\"] = 133] = \"OP_OR\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_XOR\"] = 134] = \"OP_XOR\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_EQUAL\"] = 135] = \"OP_EQUAL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_EQUALVERIFY\"] = 136] = \"OP_EQUALVERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_RESERVED1\"] = 137] = \"OP_RESERVED1\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_RESERVED2\"] = 138] = \"OP_RESERVED2\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_1ADD\"] = 139] = \"OP_1ADD\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_1SUB\"] = 140] = \"OP_1SUB\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2MUL\"] = 141] = \"OP_2MUL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2DIV\"] = 142] = \"OP_2DIV\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NEGATE\"] = 143] = \"OP_NEGATE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_ABS\"] = 144] = \"OP_ABS\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOT\"] = 145] = \"OP_NOT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_0NOTEQUAL\"] = 146] = \"OP_0NOTEQUAL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_ADD\"] = 147] = \"OP_ADD\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_SUB\"] = 148] = \"OP_SUB\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_MUL\"] = 149] = \"OP_MUL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_DIV\"] = 150] = \"OP_DIV\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_MOD\"] = 151] = \"OP_MOD\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_LSHIFT\"] = 152] = \"OP_LSHIFT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_RSHIFT\"] = 153] = \"OP_RSHIFT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_BOOLAND\"] = 154] = \"OP_BOOLAND\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_BOOLOR\"] = 155] = \"OP_BOOLOR\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NUMEQUAL\"] = 156] = \"OP_NUMEQUAL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NUMEQUALVERIFY\"] = 157] = \"OP_NUMEQUALVERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NUMNOTEQUAL\"] = 158] = \"OP_NUMNOTEQUAL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_LESSTHAN\"] = 159] = \"OP_LESSTHAN\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_GREATERTHAN\"] = 160] = \"OP_GREATERTHAN\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_LESSTHANOREQUAL\"] = 161] = \"OP_LESSTHANOREQUAL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_GREATERTHANOREQUAL\"] = 162] = \"OP_GREATERTHANOREQUAL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_MIN\"] = 163] = \"OP_MIN\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_MAX\"] = 164] = \"OP_MAX\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_WITHIN\"] = 165] = \"OP_WITHIN\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_RIPEMD160\"] = 166] = \"OP_RIPEMD160\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_SHA1\"] = 167] = \"OP_SHA1\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_SHA256\"] = 168] = \"OP_SHA256\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_HASH160\"] = 169] = \"OP_HASH160\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_HASH256\"] = 170] = \"OP_HASH256\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CODESEPARATOR\"] = 171] = \"OP_CODESEPARATOR\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKSIG\"] = 172] = \"OP_CHECKSIG\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKSIGVERIFY\"] = 173] = \"OP_CHECKSIGVERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKMULTISIG\"] = 174] = \"OP_CHECKMULTISIG\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKMULTISIGVERIFY\"] = 175] = \"OP_CHECKMULTISIGVERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP1\"] = 176] = \"OP_NOP1\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKLOCKTIMEVERIFY\"] = 177] = \"OP_CHECKLOCKTIMEVERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKSEQUENCEVERIFY\"] = 178] = \"OP_CHECKSEQUENCEVERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP4\"] = 179] = \"OP_NOP4\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP5\"] = 180] = \"OP_NOP5\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP6\"] = 181] = \"OP_NOP6\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP7\"] = 182] = \"OP_NOP7\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP8\"] = 183] = \"OP_NOP8\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP9\"] = 184] = \"OP_NOP9\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP10\"] = 185] = \"OP_NOP10\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKDATASIG\"] = 186] = \"OP_CHECKDATASIG\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKDATASIGVERIFY\"] = 187] = \"OP_CHECKDATASIGVERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_REVERSEBYTES\"] = 188] = \"OP_REVERSEBYTES\";\n    /**\n     * First codepoint left undefined before nullary introspection operations.\n     */\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN189\"] = 189] = \"OP_UNKNOWN189\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN190\"] = 190] = \"OP_UNKNOWN190\";\n    /**\n     * Last codepoint left undefined before nullary introspection operations.\n     */\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN191\"] = 191] = \"OP_UNKNOWN191\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_INPUTINDEX\"] = 192] = \"OP_INPUTINDEX\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_ACTIVEBYTECODE\"] = 193] = \"OP_ACTIVEBYTECODE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_TXVERSION\"] = 194] = \"OP_TXVERSION\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_TXINPUTCOUNT\"] = 195] = \"OP_TXINPUTCOUNT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_TXOUTPUTCOUNT\"] = 196] = \"OP_TXOUTPUTCOUNT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_TXLOCKTIME\"] = 197] = \"OP_TXLOCKTIME\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UTXOVALUE\"] = 198] = \"OP_UTXOVALUE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UTXOBYTECODE\"] = 199] = \"OP_UTXOBYTECODE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OUTPOINTTXHASH\"] = 200] = \"OP_OUTPOINTTXHASH\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OUTPOINTINDEX\"] = 201] = \"OP_OUTPOINTINDEX\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_INPUTBYTECODE\"] = 202] = \"OP_INPUTBYTECODE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_INPUTSEQUENCENUMBER\"] = 203] = \"OP_INPUTSEQUENCENUMBER\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OUTPUTVALUE\"] = 204] = \"OP_OUTPUTVALUE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OUTPUTBYTECODE\"] = 205] = \"OP_OUTPUTBYTECODE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UTXOTOKENCATEGORY\"] = 206] = \"OP_UTXOTOKENCATEGORY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UTXOTOKENCOMMITMENT\"] = 207] = \"OP_UTXOTOKENCOMMITMENT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UTXOTOKENAMOUNT\"] = 208] = \"OP_UTXOTOKENAMOUNT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OUTPUTTOKENCATEGORY\"] = 209] = \"OP_OUTPUTTOKENCATEGORY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OUTPUTTOKENCOMMITMENT\"] = 210] = \"OP_OUTPUTTOKENCOMMITMENT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OUTPUTTOKENAMOUNT\"] = 211] = \"OP_OUTPUTTOKENAMOUNT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN212\"] = 212] = \"OP_UNKNOWN212\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN213\"] = 213] = \"OP_UNKNOWN213\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN214\"] = 214] = \"OP_UNKNOWN214\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN215\"] = 215] = \"OP_UNKNOWN215\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN216\"] = 216] = \"OP_UNKNOWN216\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN217\"] = 217] = \"OP_UNKNOWN217\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN218\"] = 218] = \"OP_UNKNOWN218\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN219\"] = 219] = \"OP_UNKNOWN219\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN220\"] = 220] = \"OP_UNKNOWN220\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN221\"] = 221] = \"OP_UNKNOWN221\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN222\"] = 222] = \"OP_UNKNOWN222\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN223\"] = 223] = \"OP_UNKNOWN223\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN224\"] = 224] = \"OP_UNKNOWN224\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN225\"] = 225] = \"OP_UNKNOWN225\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN226\"] = 226] = \"OP_UNKNOWN226\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN227\"] = 227] = \"OP_UNKNOWN227\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN228\"] = 228] = \"OP_UNKNOWN228\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN229\"] = 229] = \"OP_UNKNOWN229\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN230\"] = 230] = \"OP_UNKNOWN230\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN231\"] = 231] = \"OP_UNKNOWN231\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN232\"] = 232] = \"OP_UNKNOWN232\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN233\"] = 233] = \"OP_UNKNOWN233\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN234\"] = 234] = \"OP_UNKNOWN234\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN235\"] = 235] = \"OP_UNKNOWN235\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN236\"] = 236] = \"OP_UNKNOWN236\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN237\"] = 237] = \"OP_UNKNOWN237\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN238\"] = 238] = \"OP_UNKNOWN238\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN239\"] = 239] = \"OP_UNKNOWN239\";\n    /**\n     * A.K.A. `OP_PREFIX_BEGIN`\n     */\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN240\"] = 240] = \"OP_UNKNOWN240\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN241\"] = 241] = \"OP_UNKNOWN241\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN242\"] = 242] = \"OP_UNKNOWN242\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN243\"] = 243] = \"OP_UNKNOWN243\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN244\"] = 244] = \"OP_UNKNOWN244\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN245\"] = 245] = \"OP_UNKNOWN245\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN246\"] = 246] = \"OP_UNKNOWN246\";\n    /**\n     * A.K.A. `OP_PREFIX_END`\n     */\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN247\"] = 247] = \"OP_UNKNOWN247\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN248\"] = 248] = \"OP_UNKNOWN248\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN249\"] = 249] = \"OP_UNKNOWN249\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN250\"] = 250] = \"OP_UNKNOWN250\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN251\"] = 251] = \"OP_UNKNOWN251\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN252\"] = 252] = \"OP_UNKNOWN252\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN253\"] = 253] = \"OP_UNKNOWN253\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN254\"] = 254] = \"OP_UNKNOWN254\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN255\"] = 255] = \"OP_UNKNOWN255\";\n})(OpcodesBCH2023 || (OpcodesBCH2023 = {}));\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst OpcodesBCH = OpcodesBCH2023;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst Opcodes = OpcodesBCH;\n//# sourceMappingURL=bch-2023-opcodes.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-opcodes.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-tokens.js":
/*!*****************************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-tokens.js ***!
  \*****************************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"opOutputTokenAmount\": () => (/* binding */ opOutputTokenAmount),\n/* harmony export */   \"opOutputTokenCategory\": () => (/* binding */ opOutputTokenCategory),\n/* harmony export */   \"opOutputTokenCommitment\": () => (/* binding */ opOutputTokenCommitment),\n/* harmony export */   \"opUtxoTokenAmount\": () => (/* binding */ opUtxoTokenAmount),\n/* harmony export */   \"opUtxoTokenCategory\": () => (/* binding */ opUtxoTokenCategory),\n/* harmony export */   \"opUtxoTokenCommitment\": () => (/* binding */ opUtxoTokenCommitment),\n/* harmony export */   \"verifyTransactionTokens\": () => (/* binding */ verifyTransactionTokens)\n/* harmony export */ });\n/* unused harmony exports extractGenesisCategories, extractSourceOutputTokenData, extractTransactionOutputTokenData, pushTokenExtendedCategory, pushTokenCommitment, pushTokenAmount */\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/common.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/inspection.js\");\n/* harmony import */ var _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bch-2023-consensus.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-consensus.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_1__, _common_common_js__WEBPACK_IMPORTED_MODULE_2__, _common_common_js__WEBPACK_IMPORTED_MODULE_3__]);\n([_bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_1__, _common_common_js__WEBPACK_IMPORTED_MODULE_2__, _common_common_js__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n/**\n * Given a list of transaction inputs, extract a hex-encoded list of all\n * {@link Input.outpointTransactionHash}es from inputs that spend output `0` of\n * that transaction (i.e. where {@link Input.outpointIndex} is `0`).\n * @param inputs - a list of transaction inputs\n * @returns a hex-encoded list of {@link Input.outpointTransactionHash}es\n */\nconst extractGenesisCategories = (inputs) => inputs.reduce((agg, input) => input.outpointIndex === 0\n    ? [...agg, (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.binToHex)(input.outpointTransactionHash)]\n    : agg, []);\n/**\n * Given the resolved list of a transaction's source outputs – the Unspent\n * Transaction Outputs (UTXOs) spent by the transaction, extract all token data\n * for token-aware validation. See CHIP-2022-02-CashTokens for details.\n * @param sourceOutputs - a list of resolved source outputs (UTXOs)\n * @returns an object containing `availableImmutableTokens`,\n * `availableMutableTokensByCategory`, `availableSumsByCategory`, and\n * `inputMintingCategories`. See CHIP-2022-02-CashTokens for details.\n */\nconst extractSourceOutputTokenData = (sourceOutputs) => sourceOutputs.reduce(\n// eslint-disable-next-line complexity\n(agg, sourceOutput) => {\n    if (sourceOutput.token === undefined)\n        return agg;\n    const categoryHex = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.binToHex)(sourceOutput.token.category);\n    return {\n        availableImmutableTokens: [\n            ...agg.availableImmutableTokens,\n            ...(sourceOutput.token.nft?.capability === 'none'\n                ? [\n                    {\n                        categoryHex: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.binToHex)(sourceOutput.token.category),\n                        commitmentHex: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.binToHex)(sourceOutput.token.nft.commitment),\n                    },\n                ]\n                : []),\n        ],\n        availableMutableTokensByCategory: sourceOutput.token.nft?.capability === 'mutable'\n            ? {\n                ...agg.availableMutableTokensByCategory,\n                [categoryHex]: (agg.availableMutableTokensByCategory[categoryHex] ?? 0) + 1,\n            }\n            : agg.availableMutableTokensByCategory,\n        availableSumsByCategory: {\n            ...agg.availableSumsByCategory,\n            [categoryHex]: (agg.availableSumsByCategory[categoryHex] ?? 0n) +\n                sourceOutput.token.amount,\n        },\n        inputMintingCategories: [\n            ...agg.inputMintingCategories,\n            ...(sourceOutput.token.nft?.capability === 'minting'\n                ? [(0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.binToHex)(sourceOutput.token.category)]\n                : []),\n        ],\n    };\n}, {\n    availableImmutableTokens: [],\n    availableMutableTokensByCategory: {},\n    availableSumsByCategory: {},\n    inputMintingCategories: [],\n});\n/**\n * Given a transaction's outputs, extract all token data for token-aware\n * validation. See CHIP-2022-02-CashTokens for details.\n * @param outputs - a list of transaction outputs\n * @returns an object containing `outputImmutableTokens`,\n * `outputMintingCategories`, `outputMutableTokensByCategory`, and\n * `outputSumsByCategory`. See CHIP-2022-02-CashTokens for details.\n */\nconst extractTransactionOutputTokenData = (outputs) => outputs.reduce(\n// eslint-disable-next-line complexity\n(agg, output) => {\n    if (output.token === undefined)\n        return agg;\n    const categoryHex = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.binToHex)(output.token.category);\n    return {\n        outputImmutableTokens: [\n            ...agg.outputImmutableTokens,\n            ...(output.token.nft?.capability === 'none'\n                ? [\n                    {\n                        categoryHex: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.binToHex)(output.token.category),\n                        commitmentHex: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.binToHex)(output.token.nft.commitment),\n                    },\n                ]\n                : []),\n        ],\n        outputMintingCategories: [\n            ...agg.outputMintingCategories,\n            ...(output.token.nft?.capability === 'minting'\n                ? [(0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.binToHex)(output.token.category)]\n                : []),\n        ],\n        outputMutableTokensByCategory: output.token.nft?.capability === 'mutable'\n            ? {\n                ...agg.outputMutableTokensByCategory,\n                [categoryHex]: (agg.outputMutableTokensByCategory[categoryHex] ?? 0) + 1,\n            }\n            : agg.outputMutableTokensByCategory,\n        outputSumsByCategory: {\n            ...agg.outputSumsByCategory,\n            [categoryHex]: (agg.outputSumsByCategory[categoryHex] ?? 0n) + output.token.amount,\n        },\n    };\n}, {\n    outputImmutableTokens: [],\n    outputMintingCategories: [],\n    outputMutableTokensByCategory: {},\n    outputSumsByCategory: {},\n});\n/**\n * Given a transaction and its resolved source outputs – the Unspent Transaction\n * Outputs (UTXOs) it spends – verify that the transaction passes token-aware\n * validation.\n * @param transaction - the transaction to verify\n * @param sourceOutputs - the resolved list of the transaction's source outputs\n * @returns `true` on success, or an error message (string) on failure.\n */\n// eslint-disable-next-line complexity\nconst verifyTransactionTokens = (transaction, sourceOutputs) => {\n    const excessiveCommitment = [...sourceOutputs, ...transaction.outputs].find((output) => output.token?.nft?.commitment !== undefined &&\n        output.token.nft.commitment.length >\n            _bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_1__.ConsensusBCH2023.maximumCommitmentLength);\n    if (excessiveCommitment !== undefined) {\n        return `Transaction violates token validation: a token commitment exceeds the consensus limit of ${_bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_1__.ConsensusBCH2023.maximumCommitmentLength} bytes. Excessive token commitment length: ${\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        excessiveCommitment.token.nft.commitment.length}`;\n    }\n    const genesisCategories = extractGenesisCategories(transaction.inputs);\n    const { availableSumsByCategory, availableMutableTokensByCategory, inputMintingCategories, availableImmutableTokens, } = extractSourceOutputTokenData(sourceOutputs);\n    const { outputSumsByCategory, outputMutableTokensByCategory, outputMintingCategories, outputImmutableTokens, } = extractTransactionOutputTokenData(transaction.outputs);\n    const availableMintingCategories = [\n        ...genesisCategories,\n        ...inputMintingCategories,\n    ];\n    const missingMintingCategory = outputMintingCategories.find((category) => !availableMintingCategories.includes(category));\n    if (missingMintingCategory !== undefined) {\n        return `Transaction violates token validation: the transaction outputs include a minting token that is not substantiated by the transaction's inputs. Invalid output minting token category: ${missingMintingCategory}`;\n    }\n    // eslint-disable-next-line functional/no-loop-statement\n    for (const [categoryHex, sum] of Object.entries(outputSumsByCategory)) {\n        if (sum > BigInt(_bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_1__.ConsensusBCH2023.maxVmNumber)) {\n            return `Transaction violates token validation: the transaction outputs include a sum of fungible tokens for a category exceeding the maximum supply (${_bch_2023_consensus_js__WEBPACK_IMPORTED_MODULE_1__.ConsensusBCH2023.maxVmNumber}). Category: ${categoryHex}, total amount: ${sum.toString()}.`;\n        }\n        const availableSum = availableSumsByCategory[categoryHex];\n        if (availableSum === undefined &&\n            sum > 0 &&\n            !genesisCategories.includes(categoryHex)) {\n            return `Transaction violates token validation: the transaction creates new fungible tokens for a category without a matching genesis input. Category: ${categoryHex}, tokens created: ${sum}`;\n        }\n        if (availableSum !== undefined && sum > availableSum) {\n            return `Transaction violates token validation: the sum of fungible tokens in the transaction's outputs exceed that of the transactions inputs for a category. Category: ${categoryHex}, input amount: ${availableSum}, output amount: ${sum}`;\n        }\n    }\n    const remainingMutableTokens = Object.entries(outputMutableTokensByCategory).reduce((agg, [categoryHex, sum]) => {\n        if (availableMintingCategories.includes(categoryHex)) {\n            return agg;\n        }\n        return { ...agg, [categoryHex]: (agg[categoryHex] ?? 0) - sum };\n    }, availableMutableTokensByCategory);\n    // eslint-disable-next-line functional/no-loop-statement\n    for (const [categoryHex, sum] of Object.entries(remainingMutableTokens)) {\n        if (sum < 0) {\n            return `Transaction violates token validation: the transaction creates more mutable tokens than are available for a category without a matching minting token. Category: ${categoryHex}, excess mutable tokens: ${0 - sum}`;\n        }\n    }\n    const { unmatchedImmutableTokens } = outputImmutableTokens.reduce((agg, token) => {\n        const { categoryHex, commitmentHex } = token;\n        if (availableMintingCategories.includes(categoryHex)) {\n            return agg;\n        }\n        const firstMatch = availableImmutableTokens.findIndex((available) => available.categoryHex === categoryHex &&\n            available.commitmentHex === commitmentHex);\n        if (firstMatch === -1) {\n            return {\n                availableImmutableTokens: agg.availableImmutableTokens,\n                unmatchedImmutableTokens: [...agg.unmatchedImmutableTokens, token],\n            };\n        }\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n        agg.availableImmutableTokens.splice(firstMatch, 1);\n        return agg;\n    }, {\n        availableImmutableTokens,\n        unmatchedImmutableTokens: [],\n    });\n    const requiredMutableTokens = unmatchedImmutableTokens.reduce((agg, token) => ({\n        ...agg,\n        [token.categoryHex]: (agg[token.categoryHex] ?? 0) + 1,\n    }), {});\n    // eslint-disable-next-line functional/no-loop-statement\n    for (const [categoryHex, required] of Object.entries(requiredMutableTokens)) {\n        const available = remainingMutableTokens[categoryHex] ?? 0;\n        if (available < required) {\n            return `Transaction violates token validation: the transaction creates an immutable token for a category without a matching minting token or sufficient mutable tokens. Category ${categoryHex}, available mutable tokens: ${available}, new immutable tokens: ${required}`;\n        }\n    }\n    return true;\n};\nconst pushTokenExtendedCategory = (state, utxo) => {\n    const { token } = utxo;\n    if (token === undefined) {\n        return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.pushToStackVmNumber)(state, 0n);\n    }\n    const capabilityByte = token.nft?.capability === 'minting'\n        ? [2 /* Constants.mintingCapabilityByte */]\n        : token.nft?.capability === 'mutable'\n            ? [1 /* Constants.mutableCapabilityByte */]\n            : [];\n    const extendedCategory = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([\n        token.category.slice().reverse(),\n        Uint8Array.from(capabilityByte),\n    ]);\n    return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.pushToStackChecked)(state, extendedCategory);\n};\nconst pushTokenCommitment = (state, utxo) => {\n    const { token } = utxo;\n    if (token === undefined || token.nft === undefined) {\n        return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.pushToStackVmNumber)(state, 0n);\n    }\n    return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.pushToStackChecked)(state, token.nft.commitment);\n};\nconst pushTokenAmount = (state, utxo) => {\n    const { token } = utxo;\n    if (token === undefined) {\n        return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.pushToStackVmNumber)(state, 0n);\n    }\n    return (0,_common_common_js__WEBPACK_IMPORTED_MODULE_2__.pushToStackVmNumberChecked)(state, token.amount);\n};\nconst opUtxoTokenCategory = (state) => (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.useTransactionUtxo)(state, (nextState, [utxo]) => pushTokenExtendedCategory(nextState, utxo));\nconst opUtxoTokenCommitment = (state) => (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.useTransactionUtxo)(state, (nextState, [utxo]) => pushTokenCommitment(nextState, utxo));\nconst opUtxoTokenAmount = (state) => (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.useTransactionUtxo)(state, (nextState, [utxo]) => pushTokenAmount(nextState, utxo));\nconst opOutputTokenCategory = (state) => (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.useTransactionOutput)(state, (nextState, [output]) => pushTokenExtendedCategory(nextState, output));\nconst opOutputTokenCommitment = (state) => (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.useTransactionOutput)(state, (nextState, [output]) => pushTokenCommitment(nextState, output));\nconst opOutputTokenAmount = (state) => (0,_common_common_js__WEBPACK_IMPORTED_MODULE_3__.useTransactionOutput)(state, (nextState, [output]) => pushTokenAmount(nextState, output));\n//# sourceMappingURL=bch-2023-tokens.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-tokens.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-vm.js":
/*!*************************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-vm.js ***!
  \*************************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createVirtualMachineBCH\": () => (/* binding */ createVirtualMachineBCH)\n/* harmony export */ });\n/* unused harmony export createVirtualMachineBCH2023 */\n/* harmony import */ var _virtual_machine_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../virtual-machine.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/virtual-machine.js\");\n/* harmony import */ var _bch_2023_instruction_set_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bch-2023-instruction-set.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-instruction-set.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_bch_2023_instruction_set_js__WEBPACK_IMPORTED_MODULE_1__]);\n_bch_2023_instruction_set_js__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n/**\n * Initialize a virtual machine using the `BCH_2023_05` instruction set.\n *\n * @param standard - If `true`, the additional `isStandard` validations will be\n * enabled. Transactions that fail these rules are often called \"non-standard\"\n * and can technically be included by miners in valid blocks, but most network\n * nodes will refuse to relay them. (Default: `true`)\n */\nconst createVirtualMachineBCH2023 = (standard = true) => (0,_virtual_machine_js__WEBPACK_IMPORTED_MODULE_0__.createAuthenticationVirtualMachine)((0,_bch_2023_instruction_set_js__WEBPACK_IMPORTED_MODULE_1__.createInstructionSetBCH2023)(standard));\nconst createVirtualMachineBCH = createVirtualMachineBCH2023;\n//# sourceMappingURL=bch-2023-vm.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-vm.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/chips/bch-chips-opcodes.js":
/*!********************************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/chips/bch-chips-opcodes.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"OpcodesBCHCHIPs\": () => (/* binding */ OpcodesBCHCHIPs)\n/* harmony export */ });\n/**\n * The `BCH_CHIPs` instruction set.\n *\n * Note: to maximize script compilation compatibility, this instruction set also\n * includes the previous names for new opcodes (e.g. `OP_VERIF` for `OP_BEGIN`).\n */\nvar OpcodesBCHCHIPs;\n(function (OpcodesBCHCHIPs) {\n    /**\n     * A.K.A. `OP_FALSE` or `OP_PUSHBYTES_0`\n     */\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_0\"] = 0] = \"OP_0\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_1\"] = 1] = \"OP_PUSHBYTES_1\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_2\"] = 2] = \"OP_PUSHBYTES_2\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_3\"] = 3] = \"OP_PUSHBYTES_3\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_4\"] = 4] = \"OP_PUSHBYTES_4\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_5\"] = 5] = \"OP_PUSHBYTES_5\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_6\"] = 6] = \"OP_PUSHBYTES_6\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_7\"] = 7] = \"OP_PUSHBYTES_7\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_8\"] = 8] = \"OP_PUSHBYTES_8\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_9\"] = 9] = \"OP_PUSHBYTES_9\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_10\"] = 10] = \"OP_PUSHBYTES_10\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_11\"] = 11] = \"OP_PUSHBYTES_11\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_12\"] = 12] = \"OP_PUSHBYTES_12\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_13\"] = 13] = \"OP_PUSHBYTES_13\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_14\"] = 14] = \"OP_PUSHBYTES_14\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_15\"] = 15] = \"OP_PUSHBYTES_15\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_16\"] = 16] = \"OP_PUSHBYTES_16\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_17\"] = 17] = \"OP_PUSHBYTES_17\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_18\"] = 18] = \"OP_PUSHBYTES_18\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_19\"] = 19] = \"OP_PUSHBYTES_19\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_20\"] = 20] = \"OP_PUSHBYTES_20\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_21\"] = 21] = \"OP_PUSHBYTES_21\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_22\"] = 22] = \"OP_PUSHBYTES_22\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_23\"] = 23] = \"OP_PUSHBYTES_23\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_24\"] = 24] = \"OP_PUSHBYTES_24\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_25\"] = 25] = \"OP_PUSHBYTES_25\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_26\"] = 26] = \"OP_PUSHBYTES_26\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_27\"] = 27] = \"OP_PUSHBYTES_27\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_28\"] = 28] = \"OP_PUSHBYTES_28\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_29\"] = 29] = \"OP_PUSHBYTES_29\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_30\"] = 30] = \"OP_PUSHBYTES_30\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_31\"] = 31] = \"OP_PUSHBYTES_31\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_32\"] = 32] = \"OP_PUSHBYTES_32\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_33\"] = 33] = \"OP_PUSHBYTES_33\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_34\"] = 34] = \"OP_PUSHBYTES_34\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_35\"] = 35] = \"OP_PUSHBYTES_35\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_36\"] = 36] = \"OP_PUSHBYTES_36\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_37\"] = 37] = \"OP_PUSHBYTES_37\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_38\"] = 38] = \"OP_PUSHBYTES_38\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_39\"] = 39] = \"OP_PUSHBYTES_39\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_40\"] = 40] = \"OP_PUSHBYTES_40\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_41\"] = 41] = \"OP_PUSHBYTES_41\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_42\"] = 42] = \"OP_PUSHBYTES_42\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_43\"] = 43] = \"OP_PUSHBYTES_43\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_44\"] = 44] = \"OP_PUSHBYTES_44\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_45\"] = 45] = \"OP_PUSHBYTES_45\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_46\"] = 46] = \"OP_PUSHBYTES_46\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_47\"] = 47] = \"OP_PUSHBYTES_47\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_48\"] = 48] = \"OP_PUSHBYTES_48\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_49\"] = 49] = \"OP_PUSHBYTES_49\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_50\"] = 50] = \"OP_PUSHBYTES_50\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_51\"] = 51] = \"OP_PUSHBYTES_51\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_52\"] = 52] = \"OP_PUSHBYTES_52\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_53\"] = 53] = \"OP_PUSHBYTES_53\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_54\"] = 54] = \"OP_PUSHBYTES_54\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_55\"] = 55] = \"OP_PUSHBYTES_55\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_56\"] = 56] = \"OP_PUSHBYTES_56\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_57\"] = 57] = \"OP_PUSHBYTES_57\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_58\"] = 58] = \"OP_PUSHBYTES_58\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_59\"] = 59] = \"OP_PUSHBYTES_59\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_60\"] = 60] = \"OP_PUSHBYTES_60\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_61\"] = 61] = \"OP_PUSHBYTES_61\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_62\"] = 62] = \"OP_PUSHBYTES_62\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_63\"] = 63] = \"OP_PUSHBYTES_63\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_64\"] = 64] = \"OP_PUSHBYTES_64\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_65\"] = 65] = \"OP_PUSHBYTES_65\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_66\"] = 66] = \"OP_PUSHBYTES_66\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_67\"] = 67] = \"OP_PUSHBYTES_67\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_68\"] = 68] = \"OP_PUSHBYTES_68\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_69\"] = 69] = \"OP_PUSHBYTES_69\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_70\"] = 70] = \"OP_PUSHBYTES_70\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_71\"] = 71] = \"OP_PUSHBYTES_71\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_72\"] = 72] = \"OP_PUSHBYTES_72\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_73\"] = 73] = \"OP_PUSHBYTES_73\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_74\"] = 74] = \"OP_PUSHBYTES_74\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_75\"] = 75] = \"OP_PUSHBYTES_75\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHDATA_1\"] = 76] = \"OP_PUSHDATA_1\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHDATA_2\"] = 77] = \"OP_PUSHDATA_2\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHDATA_4\"] = 78] = \"OP_PUSHDATA_4\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_1NEGATE\"] = 79] = \"OP_1NEGATE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_RESERVED\"] = 80] = \"OP_RESERVED\";\n    /**\n     * A.K.A. `OP_TRUE`\n     */\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_1\"] = 81] = \"OP_1\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2\"] = 82] = \"OP_2\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_3\"] = 83] = \"OP_3\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_4\"] = 84] = \"OP_4\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_5\"] = 85] = \"OP_5\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_6\"] = 86] = \"OP_6\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_7\"] = 87] = \"OP_7\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_8\"] = 88] = \"OP_8\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_9\"] = 89] = \"OP_9\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_10\"] = 90] = \"OP_10\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_11\"] = 91] = \"OP_11\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_12\"] = 92] = \"OP_12\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_13\"] = 93] = \"OP_13\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_14\"] = 94] = \"OP_14\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_15\"] = 95] = \"OP_15\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_16\"] = 96] = \"OP_16\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP\"] = 97] = \"OP_NOP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_VER\"] = 98] = \"OP_VER\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_IF\"] = 99] = \"OP_IF\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOTIF\"] = 100] = \"OP_NOTIF\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_VERIF\"] = 101] = \"OP_VERIF\";\n    // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_BEGIN\"] = 101] = \"OP_BEGIN\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_VERNOTIF\"] = 102] = \"OP_VERNOTIF\";\n    // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNTIL\"] = 102] = \"OP_UNTIL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_ELSE\"] = 103] = \"OP_ELSE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_ENDIF\"] = 104] = \"OP_ENDIF\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_VERIFY\"] = 105] = \"OP_VERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_RETURN\"] = 106] = \"OP_RETURN\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_TOALTSTACK\"] = 107] = \"OP_TOALTSTACK\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_FROMALTSTACK\"] = 108] = \"OP_FROMALTSTACK\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2DROP\"] = 109] = \"OP_2DROP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2DUP\"] = 110] = \"OP_2DUP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_3DUP\"] = 111] = \"OP_3DUP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2OVER\"] = 112] = \"OP_2OVER\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2ROT\"] = 113] = \"OP_2ROT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2SWAP\"] = 114] = \"OP_2SWAP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_IFDUP\"] = 115] = \"OP_IFDUP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_DEPTH\"] = 116] = \"OP_DEPTH\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_DROP\"] = 117] = \"OP_DROP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_DUP\"] = 118] = \"OP_DUP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NIP\"] = 119] = \"OP_NIP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OVER\"] = 120] = \"OP_OVER\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PICK\"] = 121] = \"OP_PICK\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_ROLL\"] = 122] = \"OP_ROLL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_ROT\"] = 123] = \"OP_ROT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_SWAP\"] = 124] = \"OP_SWAP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_TUCK\"] = 125] = \"OP_TUCK\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CAT\"] = 126] = \"OP_CAT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_SPLIT\"] = 127] = \"OP_SPLIT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NUM2BIN\"] = 128] = \"OP_NUM2BIN\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_BIN2NUM\"] = 129] = \"OP_BIN2NUM\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_SIZE\"] = 130] = \"OP_SIZE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_INVERT\"] = 131] = \"OP_INVERT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_AND\"] = 132] = \"OP_AND\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OR\"] = 133] = \"OP_OR\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_XOR\"] = 134] = \"OP_XOR\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_EQUAL\"] = 135] = \"OP_EQUAL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_EQUALVERIFY\"] = 136] = \"OP_EQUALVERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_RESERVED1\"] = 137] = \"OP_RESERVED1\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_RESERVED2\"] = 138] = \"OP_RESERVED2\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_1ADD\"] = 139] = \"OP_1ADD\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_1SUB\"] = 140] = \"OP_1SUB\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2MUL\"] = 141] = \"OP_2MUL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2DIV\"] = 142] = \"OP_2DIV\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NEGATE\"] = 143] = \"OP_NEGATE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_ABS\"] = 144] = \"OP_ABS\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOT\"] = 145] = \"OP_NOT\";\n    // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_0EQUAL\"] = 145] = \"OP_0EQUAL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_0NOTEQUAL\"] = 146] = \"OP_0NOTEQUAL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_ADD\"] = 147] = \"OP_ADD\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_SUB\"] = 148] = \"OP_SUB\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_MUL\"] = 149] = \"OP_MUL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_DIV\"] = 150] = \"OP_DIV\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_MOD\"] = 151] = \"OP_MOD\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_LSHIFT\"] = 152] = \"OP_LSHIFT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_RSHIFT\"] = 153] = \"OP_RSHIFT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_BOOLAND\"] = 154] = \"OP_BOOLAND\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_BOOLOR\"] = 155] = \"OP_BOOLOR\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NUMEQUAL\"] = 156] = \"OP_NUMEQUAL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NUMEQUALVERIFY\"] = 157] = \"OP_NUMEQUALVERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NUMNOTEQUAL\"] = 158] = \"OP_NUMNOTEQUAL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_LESSTHAN\"] = 159] = \"OP_LESSTHAN\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_GREATERTHAN\"] = 160] = \"OP_GREATERTHAN\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_LESSTHANOREQUAL\"] = 161] = \"OP_LESSTHANOREQUAL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_GREATERTHANOREQUAL\"] = 162] = \"OP_GREATERTHANOREQUAL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_MIN\"] = 163] = \"OP_MIN\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_MAX\"] = 164] = \"OP_MAX\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_WITHIN\"] = 165] = \"OP_WITHIN\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_RIPEMD160\"] = 166] = \"OP_RIPEMD160\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_SHA1\"] = 167] = \"OP_SHA1\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_SHA256\"] = 168] = \"OP_SHA256\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_HASH160\"] = 169] = \"OP_HASH160\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_HASH256\"] = 170] = \"OP_HASH256\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CODESEPARATOR\"] = 171] = \"OP_CODESEPARATOR\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKSIG\"] = 172] = \"OP_CHECKSIG\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKSIGVERIFY\"] = 173] = \"OP_CHECKSIGVERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKMULTISIG\"] = 174] = \"OP_CHECKMULTISIG\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKMULTISIGVERIFY\"] = 175] = \"OP_CHECKMULTISIGVERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP1\"] = 176] = \"OP_NOP1\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKLOCKTIMEVERIFY\"] = 177] = \"OP_CHECKLOCKTIMEVERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKSEQUENCEVERIFY\"] = 178] = \"OP_CHECKSEQUENCEVERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP4\"] = 179] = \"OP_NOP4\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP5\"] = 180] = \"OP_NOP5\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP6\"] = 181] = \"OP_NOP6\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP7\"] = 182] = \"OP_NOP7\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP8\"] = 183] = \"OP_NOP8\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP9\"] = 184] = \"OP_NOP9\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP10\"] = 185] = \"OP_NOP10\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKDATASIG\"] = 186] = \"OP_CHECKDATASIG\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKDATASIGVERIFY\"] = 187] = \"OP_CHECKDATASIGVERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_REVERSEBYTES\"] = 188] = \"OP_REVERSEBYTES\";\n    /**\n     * First codepoint left undefined before nullary introspection operations.\n     */\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN189\"] = 189] = \"OP_UNKNOWN189\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN190\"] = 190] = \"OP_UNKNOWN190\";\n    /**\n     * Last codepoint left undefined before nullary introspection operations.\n     */\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN191\"] = 191] = \"OP_UNKNOWN191\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_INPUTINDEX\"] = 192] = \"OP_INPUTINDEX\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_ACTIVEBYTECODE\"] = 193] = \"OP_ACTIVEBYTECODE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_TXVERSION\"] = 194] = \"OP_TXVERSION\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_TXINPUTCOUNT\"] = 195] = \"OP_TXINPUTCOUNT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_TXOUTPUTCOUNT\"] = 196] = \"OP_TXOUTPUTCOUNT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_TXLOCKTIME\"] = 197] = \"OP_TXLOCKTIME\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UTXOVALUE\"] = 198] = \"OP_UTXOVALUE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UTXOBYTECODE\"] = 199] = \"OP_UTXOBYTECODE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OUTPOINTTXHASH\"] = 200] = \"OP_OUTPOINTTXHASH\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OUTPOINTINDEX\"] = 201] = \"OP_OUTPOINTINDEX\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_INPUTBYTECODE\"] = 202] = \"OP_INPUTBYTECODE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_INPUTSEQUENCENUMBER\"] = 203] = \"OP_INPUTSEQUENCENUMBER\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OUTPUTVALUE\"] = 204] = \"OP_OUTPUTVALUE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OUTPUTBYTECODE\"] = 205] = \"OP_OUTPUTBYTECODE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UTXOTOKENCATEGORY\"] = 206] = \"OP_UTXOTOKENCATEGORY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UTXOTOKENCOMMITMENT\"] = 207] = \"OP_UTXOTOKENCOMMITMENT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UTXOTOKENAMOUNT\"] = 208] = \"OP_UTXOTOKENAMOUNT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OUTPUTTOKENCATEGORY\"] = 209] = \"OP_OUTPUTTOKENCATEGORY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OUTPUTTOKENCOMMITMENT\"] = 210] = \"OP_OUTPUTTOKENCOMMITMENT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OUTPUTTOKENAMOUNT\"] = 211] = \"OP_OUTPUTTOKENAMOUNT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN212\"] = 212] = \"OP_UNKNOWN212\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN213\"] = 213] = \"OP_UNKNOWN213\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN214\"] = 214] = \"OP_UNKNOWN214\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN215\"] = 215] = \"OP_UNKNOWN215\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN216\"] = 216] = \"OP_UNKNOWN216\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN217\"] = 217] = \"OP_UNKNOWN217\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN218\"] = 218] = \"OP_UNKNOWN218\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN219\"] = 219] = \"OP_UNKNOWN219\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN220\"] = 220] = \"OP_UNKNOWN220\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN221\"] = 221] = \"OP_UNKNOWN221\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN222\"] = 222] = \"OP_UNKNOWN222\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN223\"] = 223] = \"OP_UNKNOWN223\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN224\"] = 224] = \"OP_UNKNOWN224\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN225\"] = 225] = \"OP_UNKNOWN225\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN226\"] = 226] = \"OP_UNKNOWN226\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN227\"] = 227] = \"OP_UNKNOWN227\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN228\"] = 228] = \"OP_UNKNOWN228\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN229\"] = 229] = \"OP_UNKNOWN229\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN230\"] = 230] = \"OP_UNKNOWN230\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN231\"] = 231] = \"OP_UNKNOWN231\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN232\"] = 232] = \"OP_UNKNOWN232\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN233\"] = 233] = \"OP_UNKNOWN233\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN234\"] = 234] = \"OP_UNKNOWN234\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN235\"] = 235] = \"OP_UNKNOWN235\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN236\"] = 236] = \"OP_UNKNOWN236\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN237\"] = 237] = \"OP_UNKNOWN237\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN238\"] = 238] = \"OP_UNKNOWN238\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN239\"] = 239] = \"OP_UNKNOWN239\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN240\"] = 240] = \"OP_UNKNOWN240\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN241\"] = 241] = \"OP_UNKNOWN241\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN242\"] = 242] = \"OP_UNKNOWN242\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN243\"] = 243] = \"OP_UNKNOWN243\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN244\"] = 244] = \"OP_UNKNOWN244\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN245\"] = 245] = \"OP_UNKNOWN245\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN246\"] = 246] = \"OP_UNKNOWN246\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN247\"] = 247] = \"OP_UNKNOWN247\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN248\"] = 248] = \"OP_UNKNOWN248\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN249\"] = 249] = \"OP_UNKNOWN249\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN250\"] = 250] = \"OP_UNKNOWN250\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN251\"] = 251] = \"OP_UNKNOWN251\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN252\"] = 252] = \"OP_UNKNOWN252\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN253\"] = 253] = \"OP_UNKNOWN253\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN254\"] = 254] = \"OP_UNKNOWN254\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN255\"] = 255] = \"OP_UNKNOWN255\";\n})(OpcodesBCHCHIPs || (OpcodesBCHCHIPs = {}));\n//# sourceMappingURL=bch-chips-opcodes.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/chips/bch-chips-opcodes.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/btc/btc-opcodes.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/btc/btc-opcodes.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"OpcodesBTC\": () => (/* binding */ OpcodesBTC)\n/* harmony export */ });\n/**\n *  `OpcodesBTC` currently represents the `BTC_2017_08` instruction set.\n */\nvar OpcodesBTC;\n(function (OpcodesBTC) {\n    OpcodesBTC[OpcodesBTC[\"OP_0\"] = 0] = \"OP_0\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_1\"] = 1] = \"OP_PUSHBYTES_1\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_2\"] = 2] = \"OP_PUSHBYTES_2\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_3\"] = 3] = \"OP_PUSHBYTES_3\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_4\"] = 4] = \"OP_PUSHBYTES_4\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_5\"] = 5] = \"OP_PUSHBYTES_5\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_6\"] = 6] = \"OP_PUSHBYTES_6\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_7\"] = 7] = \"OP_PUSHBYTES_7\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_8\"] = 8] = \"OP_PUSHBYTES_8\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_9\"] = 9] = \"OP_PUSHBYTES_9\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_10\"] = 10] = \"OP_PUSHBYTES_10\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_11\"] = 11] = \"OP_PUSHBYTES_11\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_12\"] = 12] = \"OP_PUSHBYTES_12\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_13\"] = 13] = \"OP_PUSHBYTES_13\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_14\"] = 14] = \"OP_PUSHBYTES_14\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_15\"] = 15] = \"OP_PUSHBYTES_15\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_16\"] = 16] = \"OP_PUSHBYTES_16\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_17\"] = 17] = \"OP_PUSHBYTES_17\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_18\"] = 18] = \"OP_PUSHBYTES_18\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_19\"] = 19] = \"OP_PUSHBYTES_19\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_20\"] = 20] = \"OP_PUSHBYTES_20\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_21\"] = 21] = \"OP_PUSHBYTES_21\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_22\"] = 22] = \"OP_PUSHBYTES_22\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_23\"] = 23] = \"OP_PUSHBYTES_23\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_24\"] = 24] = \"OP_PUSHBYTES_24\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_25\"] = 25] = \"OP_PUSHBYTES_25\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_26\"] = 26] = \"OP_PUSHBYTES_26\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_27\"] = 27] = \"OP_PUSHBYTES_27\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_28\"] = 28] = \"OP_PUSHBYTES_28\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_29\"] = 29] = \"OP_PUSHBYTES_29\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_30\"] = 30] = \"OP_PUSHBYTES_30\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_31\"] = 31] = \"OP_PUSHBYTES_31\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_32\"] = 32] = \"OP_PUSHBYTES_32\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_33\"] = 33] = \"OP_PUSHBYTES_33\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_34\"] = 34] = \"OP_PUSHBYTES_34\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_35\"] = 35] = \"OP_PUSHBYTES_35\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_36\"] = 36] = \"OP_PUSHBYTES_36\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_37\"] = 37] = \"OP_PUSHBYTES_37\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_38\"] = 38] = \"OP_PUSHBYTES_38\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_39\"] = 39] = \"OP_PUSHBYTES_39\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_40\"] = 40] = \"OP_PUSHBYTES_40\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_41\"] = 41] = \"OP_PUSHBYTES_41\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_42\"] = 42] = \"OP_PUSHBYTES_42\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_43\"] = 43] = \"OP_PUSHBYTES_43\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_44\"] = 44] = \"OP_PUSHBYTES_44\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_45\"] = 45] = \"OP_PUSHBYTES_45\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_46\"] = 46] = \"OP_PUSHBYTES_46\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_47\"] = 47] = \"OP_PUSHBYTES_47\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_48\"] = 48] = \"OP_PUSHBYTES_48\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_49\"] = 49] = \"OP_PUSHBYTES_49\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_50\"] = 50] = \"OP_PUSHBYTES_50\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_51\"] = 51] = \"OP_PUSHBYTES_51\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_52\"] = 52] = \"OP_PUSHBYTES_52\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_53\"] = 53] = \"OP_PUSHBYTES_53\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_54\"] = 54] = \"OP_PUSHBYTES_54\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_55\"] = 55] = \"OP_PUSHBYTES_55\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_56\"] = 56] = \"OP_PUSHBYTES_56\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_57\"] = 57] = \"OP_PUSHBYTES_57\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_58\"] = 58] = \"OP_PUSHBYTES_58\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_59\"] = 59] = \"OP_PUSHBYTES_59\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_60\"] = 60] = \"OP_PUSHBYTES_60\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_61\"] = 61] = \"OP_PUSHBYTES_61\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_62\"] = 62] = \"OP_PUSHBYTES_62\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_63\"] = 63] = \"OP_PUSHBYTES_63\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_64\"] = 64] = \"OP_PUSHBYTES_64\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_65\"] = 65] = \"OP_PUSHBYTES_65\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_66\"] = 66] = \"OP_PUSHBYTES_66\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_67\"] = 67] = \"OP_PUSHBYTES_67\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_68\"] = 68] = \"OP_PUSHBYTES_68\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_69\"] = 69] = \"OP_PUSHBYTES_69\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_70\"] = 70] = \"OP_PUSHBYTES_70\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_71\"] = 71] = \"OP_PUSHBYTES_71\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_72\"] = 72] = \"OP_PUSHBYTES_72\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_73\"] = 73] = \"OP_PUSHBYTES_73\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_74\"] = 74] = \"OP_PUSHBYTES_74\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_75\"] = 75] = \"OP_PUSHBYTES_75\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHDATA_1\"] = 76] = \"OP_PUSHDATA_1\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHDATA_2\"] = 77] = \"OP_PUSHDATA_2\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHDATA_4\"] = 78] = \"OP_PUSHDATA_4\";\n    OpcodesBTC[OpcodesBTC[\"OP_1NEGATE\"] = 79] = \"OP_1NEGATE\";\n    OpcodesBTC[OpcodesBTC[\"OP_RESERVED\"] = 80] = \"OP_RESERVED\";\n    OpcodesBTC[OpcodesBTC[\"OP_1\"] = 81] = \"OP_1\";\n    OpcodesBTC[OpcodesBTC[\"OP_2\"] = 82] = \"OP_2\";\n    OpcodesBTC[OpcodesBTC[\"OP_3\"] = 83] = \"OP_3\";\n    OpcodesBTC[OpcodesBTC[\"OP_4\"] = 84] = \"OP_4\";\n    OpcodesBTC[OpcodesBTC[\"OP_5\"] = 85] = \"OP_5\";\n    OpcodesBTC[OpcodesBTC[\"OP_6\"] = 86] = \"OP_6\";\n    OpcodesBTC[OpcodesBTC[\"OP_7\"] = 87] = \"OP_7\";\n    OpcodesBTC[OpcodesBTC[\"OP_8\"] = 88] = \"OP_8\";\n    OpcodesBTC[OpcodesBTC[\"OP_9\"] = 89] = \"OP_9\";\n    OpcodesBTC[OpcodesBTC[\"OP_10\"] = 90] = \"OP_10\";\n    OpcodesBTC[OpcodesBTC[\"OP_11\"] = 91] = \"OP_11\";\n    OpcodesBTC[OpcodesBTC[\"OP_12\"] = 92] = \"OP_12\";\n    OpcodesBTC[OpcodesBTC[\"OP_13\"] = 93] = \"OP_13\";\n    OpcodesBTC[OpcodesBTC[\"OP_14\"] = 94] = \"OP_14\";\n    OpcodesBTC[OpcodesBTC[\"OP_15\"] = 95] = \"OP_15\";\n    OpcodesBTC[OpcodesBTC[\"OP_16\"] = 96] = \"OP_16\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP\"] = 97] = \"OP_NOP\";\n    OpcodesBTC[OpcodesBTC[\"OP_VER\"] = 98] = \"OP_VER\";\n    OpcodesBTC[OpcodesBTC[\"OP_IF\"] = 99] = \"OP_IF\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOTIF\"] = 100] = \"OP_NOTIF\";\n    OpcodesBTC[OpcodesBTC[\"OP_VERIF\"] = 101] = \"OP_VERIF\";\n    OpcodesBTC[OpcodesBTC[\"OP_VERNOTIF\"] = 102] = \"OP_VERNOTIF\";\n    OpcodesBTC[OpcodesBTC[\"OP_ELSE\"] = 103] = \"OP_ELSE\";\n    OpcodesBTC[OpcodesBTC[\"OP_ENDIF\"] = 104] = \"OP_ENDIF\";\n    OpcodesBTC[OpcodesBTC[\"OP_VERIFY\"] = 105] = \"OP_VERIFY\";\n    OpcodesBTC[OpcodesBTC[\"OP_RETURN\"] = 106] = \"OP_RETURN\";\n    OpcodesBTC[OpcodesBTC[\"OP_TOALTSTACK\"] = 107] = \"OP_TOALTSTACK\";\n    OpcodesBTC[OpcodesBTC[\"OP_FROMALTSTACK\"] = 108] = \"OP_FROMALTSTACK\";\n    OpcodesBTC[OpcodesBTC[\"OP_2DROP\"] = 109] = \"OP_2DROP\";\n    OpcodesBTC[OpcodesBTC[\"OP_2DUP\"] = 110] = \"OP_2DUP\";\n    OpcodesBTC[OpcodesBTC[\"OP_3DUP\"] = 111] = \"OP_3DUP\";\n    OpcodesBTC[OpcodesBTC[\"OP_2OVER\"] = 112] = \"OP_2OVER\";\n    OpcodesBTC[OpcodesBTC[\"OP_2ROT\"] = 113] = \"OP_2ROT\";\n    OpcodesBTC[OpcodesBTC[\"OP_2SWAP\"] = 114] = \"OP_2SWAP\";\n    OpcodesBTC[OpcodesBTC[\"OP_IFDUP\"] = 115] = \"OP_IFDUP\";\n    OpcodesBTC[OpcodesBTC[\"OP_DEPTH\"] = 116] = \"OP_DEPTH\";\n    OpcodesBTC[OpcodesBTC[\"OP_DROP\"] = 117] = \"OP_DROP\";\n    OpcodesBTC[OpcodesBTC[\"OP_DUP\"] = 118] = \"OP_DUP\";\n    OpcodesBTC[OpcodesBTC[\"OP_NIP\"] = 119] = \"OP_NIP\";\n    OpcodesBTC[OpcodesBTC[\"OP_OVER\"] = 120] = \"OP_OVER\";\n    OpcodesBTC[OpcodesBTC[\"OP_PICK\"] = 121] = \"OP_PICK\";\n    OpcodesBTC[OpcodesBTC[\"OP_ROLL\"] = 122] = \"OP_ROLL\";\n    OpcodesBTC[OpcodesBTC[\"OP_ROT\"] = 123] = \"OP_ROT\";\n    OpcodesBTC[OpcodesBTC[\"OP_SWAP\"] = 124] = \"OP_SWAP\";\n    OpcodesBTC[OpcodesBTC[\"OP_TUCK\"] = 125] = \"OP_TUCK\";\n    OpcodesBTC[OpcodesBTC[\"OP_CAT\"] = 126] = \"OP_CAT\";\n    OpcodesBTC[OpcodesBTC[\"OP_SUBSTR\"] = 127] = \"OP_SUBSTR\";\n    OpcodesBTC[OpcodesBTC[\"OP_LEFT\"] = 128] = \"OP_LEFT\";\n    OpcodesBTC[OpcodesBTC[\"OP_RIGHT\"] = 129] = \"OP_RIGHT\";\n    OpcodesBTC[OpcodesBTC[\"OP_SIZE\"] = 130] = \"OP_SIZE\";\n    OpcodesBTC[OpcodesBTC[\"OP_INVERT\"] = 131] = \"OP_INVERT\";\n    OpcodesBTC[OpcodesBTC[\"OP_AND\"] = 132] = \"OP_AND\";\n    OpcodesBTC[OpcodesBTC[\"OP_OR\"] = 133] = \"OP_OR\";\n    OpcodesBTC[OpcodesBTC[\"OP_XOR\"] = 134] = \"OP_XOR\";\n    OpcodesBTC[OpcodesBTC[\"OP_EQUAL\"] = 135] = \"OP_EQUAL\";\n    OpcodesBTC[OpcodesBTC[\"OP_EQUALVERIFY\"] = 136] = \"OP_EQUALVERIFY\";\n    OpcodesBTC[OpcodesBTC[\"OP_RESERVED1\"] = 137] = \"OP_RESERVED1\";\n    OpcodesBTC[OpcodesBTC[\"OP_RESERVED2\"] = 138] = \"OP_RESERVED2\";\n    OpcodesBTC[OpcodesBTC[\"OP_1ADD\"] = 139] = \"OP_1ADD\";\n    OpcodesBTC[OpcodesBTC[\"OP_1SUB\"] = 140] = \"OP_1SUB\";\n    OpcodesBTC[OpcodesBTC[\"OP_2MUL\"] = 141] = \"OP_2MUL\";\n    OpcodesBTC[OpcodesBTC[\"OP_2DIV\"] = 142] = \"OP_2DIV\";\n    OpcodesBTC[OpcodesBTC[\"OP_NEGATE\"] = 143] = \"OP_NEGATE\";\n    OpcodesBTC[OpcodesBTC[\"OP_ABS\"] = 144] = \"OP_ABS\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOT\"] = 145] = \"OP_NOT\";\n    OpcodesBTC[OpcodesBTC[\"OP_0NOTEQUAL\"] = 146] = \"OP_0NOTEQUAL\";\n    OpcodesBTC[OpcodesBTC[\"OP_ADD\"] = 147] = \"OP_ADD\";\n    OpcodesBTC[OpcodesBTC[\"OP_SUB\"] = 148] = \"OP_SUB\";\n    OpcodesBTC[OpcodesBTC[\"OP_MUL\"] = 149] = \"OP_MUL\";\n    OpcodesBTC[OpcodesBTC[\"OP_DIV\"] = 150] = \"OP_DIV\";\n    OpcodesBTC[OpcodesBTC[\"OP_MOD\"] = 151] = \"OP_MOD\";\n    OpcodesBTC[OpcodesBTC[\"OP_LSHIFT\"] = 152] = \"OP_LSHIFT\";\n    OpcodesBTC[OpcodesBTC[\"OP_RSHIFT\"] = 153] = \"OP_RSHIFT\";\n    OpcodesBTC[OpcodesBTC[\"OP_BOOLAND\"] = 154] = \"OP_BOOLAND\";\n    OpcodesBTC[OpcodesBTC[\"OP_BOOLOR\"] = 155] = \"OP_BOOLOR\";\n    OpcodesBTC[OpcodesBTC[\"OP_NUMEQUAL\"] = 156] = \"OP_NUMEQUAL\";\n    OpcodesBTC[OpcodesBTC[\"OP_NUMEQUALVERIFY\"] = 157] = \"OP_NUMEQUALVERIFY\";\n    OpcodesBTC[OpcodesBTC[\"OP_NUMNOTEQUAL\"] = 158] = \"OP_NUMNOTEQUAL\";\n    OpcodesBTC[OpcodesBTC[\"OP_LESSTHAN\"] = 159] = \"OP_LESSTHAN\";\n    OpcodesBTC[OpcodesBTC[\"OP_GREATERTHAN\"] = 160] = \"OP_GREATERTHAN\";\n    OpcodesBTC[OpcodesBTC[\"OP_LESSTHANOREQUAL\"] = 161] = \"OP_LESSTHANOREQUAL\";\n    OpcodesBTC[OpcodesBTC[\"OP_GREATERTHANOREQUAL\"] = 162] = \"OP_GREATERTHANOREQUAL\";\n    OpcodesBTC[OpcodesBTC[\"OP_MIN\"] = 163] = \"OP_MIN\";\n    OpcodesBTC[OpcodesBTC[\"OP_MAX\"] = 164] = \"OP_MAX\";\n    OpcodesBTC[OpcodesBTC[\"OP_WITHIN\"] = 165] = \"OP_WITHIN\";\n    OpcodesBTC[OpcodesBTC[\"OP_RIPEMD160\"] = 166] = \"OP_RIPEMD160\";\n    OpcodesBTC[OpcodesBTC[\"OP_SHA1\"] = 167] = \"OP_SHA1\";\n    OpcodesBTC[OpcodesBTC[\"OP_SHA256\"] = 168] = \"OP_SHA256\";\n    OpcodesBTC[OpcodesBTC[\"OP_HASH160\"] = 169] = \"OP_HASH160\";\n    OpcodesBTC[OpcodesBTC[\"OP_HASH256\"] = 170] = \"OP_HASH256\";\n    OpcodesBTC[OpcodesBTC[\"OP_CODESEPARATOR\"] = 171] = \"OP_CODESEPARATOR\";\n    OpcodesBTC[OpcodesBTC[\"OP_CHECKSIG\"] = 172] = \"OP_CHECKSIG\";\n    OpcodesBTC[OpcodesBTC[\"OP_CHECKSIGVERIFY\"] = 173] = \"OP_CHECKSIGVERIFY\";\n    OpcodesBTC[OpcodesBTC[\"OP_CHECKMULTISIG\"] = 174] = \"OP_CHECKMULTISIG\";\n    OpcodesBTC[OpcodesBTC[\"OP_CHECKMULTISIGVERIFY\"] = 175] = \"OP_CHECKMULTISIGVERIFY\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP1\"] = 176] = \"OP_NOP1\";\n    OpcodesBTC[OpcodesBTC[\"OP_CHECKLOCKTIMEVERIFY\"] = 177] = \"OP_CHECKLOCKTIMEVERIFY\";\n    OpcodesBTC[OpcodesBTC[\"OP_CHECKSEQUENCEVERIFY\"] = 178] = \"OP_CHECKSEQUENCEVERIFY\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP4\"] = 179] = \"OP_NOP4\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP5\"] = 180] = \"OP_NOP5\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP6\"] = 181] = \"OP_NOP6\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP7\"] = 182] = \"OP_NOP7\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP8\"] = 183] = \"OP_NOP8\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP9\"] = 184] = \"OP_NOP9\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP10\"] = 185] = \"OP_NOP10\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN186\"] = 186] = \"OP_UNKNOWN186\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN187\"] = 187] = \"OP_UNKNOWN187\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN188\"] = 188] = \"OP_UNKNOWN188\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN189\"] = 189] = \"OP_UNKNOWN189\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN190\"] = 190] = \"OP_UNKNOWN190\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN191\"] = 191] = \"OP_UNKNOWN191\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN192\"] = 192] = \"OP_UNKNOWN192\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN193\"] = 193] = \"OP_UNKNOWN193\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN194\"] = 194] = \"OP_UNKNOWN194\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN195\"] = 195] = \"OP_UNKNOWN195\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN196\"] = 196] = \"OP_UNKNOWN196\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN197\"] = 197] = \"OP_UNKNOWN197\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN198\"] = 198] = \"OP_UNKNOWN198\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN199\"] = 199] = \"OP_UNKNOWN199\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN200\"] = 200] = \"OP_UNKNOWN200\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN201\"] = 201] = \"OP_UNKNOWN201\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN202\"] = 202] = \"OP_UNKNOWN202\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN203\"] = 203] = \"OP_UNKNOWN203\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN204\"] = 204] = \"OP_UNKNOWN204\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN205\"] = 205] = \"OP_UNKNOWN205\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN206\"] = 206] = \"OP_UNKNOWN206\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN207\"] = 207] = \"OP_UNKNOWN207\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN208\"] = 208] = \"OP_UNKNOWN208\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN209\"] = 209] = \"OP_UNKNOWN209\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN210\"] = 210] = \"OP_UNKNOWN210\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN211\"] = 211] = \"OP_UNKNOWN211\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN212\"] = 212] = \"OP_UNKNOWN212\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN213\"] = 213] = \"OP_UNKNOWN213\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN214\"] = 214] = \"OP_UNKNOWN214\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN215\"] = 215] = \"OP_UNKNOWN215\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN216\"] = 216] = \"OP_UNKNOWN216\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN217\"] = 217] = \"OP_UNKNOWN217\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN218\"] = 218] = \"OP_UNKNOWN218\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN219\"] = 219] = \"OP_UNKNOWN219\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN220\"] = 220] = \"OP_UNKNOWN220\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN221\"] = 221] = \"OP_UNKNOWN221\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN222\"] = 222] = \"OP_UNKNOWN222\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN223\"] = 223] = \"OP_UNKNOWN223\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN224\"] = 224] = \"OP_UNKNOWN224\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN225\"] = 225] = \"OP_UNKNOWN225\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN226\"] = 226] = \"OP_UNKNOWN226\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN227\"] = 227] = \"OP_UNKNOWN227\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN228\"] = 228] = \"OP_UNKNOWN228\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN229\"] = 229] = \"OP_UNKNOWN229\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN230\"] = 230] = \"OP_UNKNOWN230\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN231\"] = 231] = \"OP_UNKNOWN231\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN232\"] = 232] = \"OP_UNKNOWN232\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN233\"] = 233] = \"OP_UNKNOWN233\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN234\"] = 234] = \"OP_UNKNOWN234\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN235\"] = 235] = \"OP_UNKNOWN235\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN236\"] = 236] = \"OP_UNKNOWN236\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN237\"] = 237] = \"OP_UNKNOWN237\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN238\"] = 238] = \"OP_UNKNOWN238\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN239\"] = 239] = \"OP_UNKNOWN239\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN240\"] = 240] = \"OP_UNKNOWN240\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN241\"] = 241] = \"OP_UNKNOWN241\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN242\"] = 242] = \"OP_UNKNOWN242\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN243\"] = 243] = \"OP_UNKNOWN243\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN244\"] = 244] = \"OP_UNKNOWN244\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN245\"] = 245] = \"OP_UNKNOWN245\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN246\"] = 246] = \"OP_UNKNOWN246\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN247\"] = 247] = \"OP_UNKNOWN247\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN248\"] = 248] = \"OP_UNKNOWN248\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN249\"] = 249] = \"OP_UNKNOWN249\";\n    /**\n     * Used internally in the C++ implementation.\n     */\n    OpcodesBTC[OpcodesBTC[\"OP_SMALLINTEGER\"] = 250] = \"OP_SMALLINTEGER\";\n    /**\n     * Used internally in the C++ implementation.\n     */\n    OpcodesBTC[OpcodesBTC[\"OP_PUBKEYS\"] = 251] = \"OP_PUBKEYS\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN252\"] = 252] = \"OP_UNKNOWN252\";\n    /**\n     * Used internally in the C++ implementation.\n     */\n    OpcodesBTC[OpcodesBTC[\"OP_PUBKEYHASH\"] = 253] = \"OP_PUBKEYHASH\";\n    /**\n     * Used internally in the C++ implementation.\n     */\n    OpcodesBTC[OpcodesBTC[\"OP_PUBKEY\"] = 254] = \"OP_PUBKEY\";\n    /**\n     * Used internally in the C++ implementation.\n     */\n    OpcodesBTC[OpcodesBTC[\"OP_INVALIDOPCODE\"] = 255] = \"OP_INVALIDOPCODE\";\n})(OpcodesBTC || (OpcodesBTC = {}));\n//# sourceMappingURL=btc-opcodes.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/btc/btc-opcodes.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/arithmetic.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/arithmetic.js ***!
  \**********************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"op0NotEqual\": () => (/* binding */ op0NotEqual),\n/* harmony export */   \"op1Add\": () => (/* binding */ op1Add),\n/* harmony export */   \"op1Sub\": () => (/* binding */ op1Sub),\n/* harmony export */   \"opAbs\": () => (/* binding */ opAbs),\n/* harmony export */   \"opAdd\": () => (/* binding */ opAdd),\n/* harmony export */   \"opBoolAnd\": () => (/* binding */ opBoolAnd),\n/* harmony export */   \"opBoolOr\": () => (/* binding */ opBoolOr),\n/* harmony export */   \"opDiv\": () => (/* binding */ opDiv),\n/* harmony export */   \"opGreaterThan\": () => (/* binding */ opGreaterThan),\n/* harmony export */   \"opGreaterThanOrEqual\": () => (/* binding */ opGreaterThanOrEqual),\n/* harmony export */   \"opLessThan\": () => (/* binding */ opLessThan),\n/* harmony export */   \"opLessThanOrEqual\": () => (/* binding */ opLessThanOrEqual),\n/* harmony export */   \"opMax\": () => (/* binding */ opMax),\n/* harmony export */   \"opMin\": () => (/* binding */ opMin),\n/* harmony export */   \"opMod\": () => (/* binding */ opMod),\n/* harmony export */   \"opMul\": () => (/* binding */ opMul),\n/* harmony export */   \"opNegate\": () => (/* binding */ opNegate),\n/* harmony export */   \"opNot\": () => (/* binding */ opNot),\n/* harmony export */   \"opNumEqual\": () => (/* binding */ opNumEqual),\n/* harmony export */   \"opNumEqualVerify\": () => (/* binding */ opNumEqualVerify),\n/* harmony export */   \"opNumNotEqual\": () => (/* binding */ opNumNotEqual),\n/* harmony export */   \"opSub\": () => (/* binding */ opSub),\n/* harmony export */   \"opWithin\": () => (/* binding */ opWithin)\n/* harmony export */ });\n/* harmony import */ var _combinators_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combinators.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js\");\n/* harmony import */ var _flow_control_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./flow-control.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/flow-control.js\");\n/* harmony import */ var _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instruction-sets-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_combinators_js__WEBPACK_IMPORTED_MODULE_0__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__, _flow_control_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_combinators_js__WEBPACK_IMPORTED_MODULE_0__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__, _flow_control_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nconst op1Add = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneVmNumber)(state, (nextState, [value]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackVmNumberChecked)(nextState, value + 1n));\nconst op1Sub = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneVmNumber)(state, (nextState, [value]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToVmNumber)(value - 1n)));\nconst opNegate = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneVmNumber)(state, (nextState, [value]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToVmNumber)(-value)));\nconst opAbs = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneVmNumber)(state, (nextState, [value]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToVmNumber)(value < 0 ? -value : value)));\nconst opNot = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneVmNumber)(state, (nextState, [value]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, value === 0n ? (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToVmNumber)(1n) : (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToVmNumber)(0n)));\nconst op0NotEqual = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneVmNumber)(state, (nextState, [value]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, value === 0n ? (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToVmNumber)(0n) : (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToVmNumber)(1n)));\nconst opAdd = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoVmNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackVmNumberChecked)(nextState, firstValue + secondValue));\nconst opSub = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoVmNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToVmNumber)(firstValue - secondValue)));\nconst opBoolAnd = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoVmNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.booleanToVmNumber)(firstValue !== 0n && secondValue !== 0n)));\nconst opBoolOr = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoVmNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.booleanToVmNumber)(firstValue !== 0n || secondValue !== 0n)));\nconst opNumEqual = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoVmNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.booleanToVmNumber)(firstValue === secondValue)));\nconst opNumEqualVerify = (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.combineOperations)(opNumEqual, _flow_control_js__WEBPACK_IMPORTED_MODULE_2__.opVerify);\nconst opNumNotEqual = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoVmNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.booleanToVmNumber)(firstValue !== secondValue)));\nconst opLessThan = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoVmNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.booleanToVmNumber)(firstValue < secondValue)));\nconst opLessThanOrEqual = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoVmNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.booleanToVmNumber)(firstValue <= secondValue)));\nconst opGreaterThan = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoVmNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.booleanToVmNumber)(firstValue > secondValue)));\nconst opGreaterThanOrEqual = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoVmNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.booleanToVmNumber)(firstValue >= secondValue)));\nconst opMin = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoVmNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToVmNumber)(firstValue < secondValue ? firstValue : secondValue)));\nconst opMax = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoVmNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToVmNumber)(firstValue > secondValue ? firstValue : secondValue)));\nconst opWithin = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useThreeVmNumbers)(state, (nextState, [firstValue, secondValue, thirdValue]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.booleanToVmNumber)(secondValue <= firstValue && firstValue < thirdValue)));\nconst opMul = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoVmNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackVmNumberChecked)(nextState, firstValue * secondValue));\nconst opDiv = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoVmNumbers)(state, (nextState, [firstValue, secondValue]) => secondValue === 0n\n    ? (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.divisionByZero)\n    : (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToVmNumber)(firstValue / secondValue)));\nconst opMod = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoVmNumbers)(state, (nextState, [firstValue, secondValue]) => secondValue === 0n\n    ? (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.divisionByZero)\n    : (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToVmNumber)(firstValue % secondValue)));\n//# sourceMappingURL=arithmetic.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/arithmetic.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/bitwise.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/bitwise.js ***!
  \*******************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"opAnd\": () => (/* binding */ opAnd),\n/* harmony export */   \"opEqual\": () => (/* binding */ opEqual),\n/* harmony export */   \"opEqualVerify\": () => (/* binding */ opEqualVerify),\n/* harmony export */   \"opOr\": () => (/* binding */ opOr),\n/* harmony export */   \"opXor\": () => (/* binding */ opXor)\n/* harmony export */ });\n/* unused harmony export bitwiseOperation */\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _combinators_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combinators.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js\");\n/* harmony import */ var _flow_control_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./flow-control.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/flow-control.js\");\n/* harmony import */ var _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instruction-sets-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_combinators_js__WEBPACK_IMPORTED_MODULE_0__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__, _flow_control_js__WEBPACK_IMPORTED_MODULE_3__]);\n([_combinators_js__WEBPACK_IMPORTED_MODULE_0__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__, _flow_control_js__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nconst opEqual = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [element1, element2]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.booleanToVmNumber)((0,_format_format_js__WEBPACK_IMPORTED_MODULE_2__.binsAreEqual)(element1, element2))));\nconst opEqualVerify = (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.combineOperations)(opEqual, _flow_control_js__WEBPACK_IMPORTED_MODULE_3__.opVerify);\nconst bitwiseOperation = (combine) => (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [a, b]) => a.length === b.length\n    ? (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, combine(a, b))\n    : (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.mismatchedBitwiseOperandLength));\n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\nconst opAnd = bitwiseOperation((a, b) => a.map((v, i) => v & b[i]));\n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\nconst opOr = bitwiseOperation((a, b) => a.map((v, i) => v | b[i]));\n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\nconst opXor = bitwiseOperation((a, b) => a.map((v, i) => v ^ b[i]));\n//# sourceMappingURL=bitwise.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/bitwise.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js":
/*!***********************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js ***!
  \***********************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"combineOperations\": () => (/* binding */ combineOperations),\n/* harmony export */   \"conditionallyEvaluate\": () => (/* binding */ conditionallyEvaluate),\n/* harmony export */   \"incrementOperationCount\": () => (/* binding */ incrementOperationCount),\n/* harmony export */   \"mapOverOperations\": () => (/* binding */ mapOverOperations),\n/* harmony export */   \"pushToStack\": () => (/* binding */ pushToStack),\n/* harmony export */   \"pushToStackChecked\": () => (/* binding */ pushToStackChecked),\n/* harmony export */   \"pushToStackVmNumber\": () => (/* binding */ pushToStackVmNumber),\n/* harmony export */   \"pushToStackVmNumberChecked\": () => (/* binding */ pushToStackVmNumberChecked),\n/* harmony export */   \"useFourStackItems\": () => (/* binding */ useFourStackItems),\n/* harmony export */   \"useOneStackItem\": () => (/* binding */ useOneStackItem),\n/* harmony export */   \"useOneVmNumber\": () => (/* binding */ useOneVmNumber),\n/* harmony export */   \"useSixStackItems\": () => (/* binding */ useSixStackItems),\n/* harmony export */   \"useThreeStackItems\": () => (/* binding */ useThreeStackItems),\n/* harmony export */   \"useThreeVmNumbers\": () => (/* binding */ useThreeVmNumbers),\n/* harmony export */   \"useTwoStackItems\": () => (/* binding */ useTwoStackItems),\n/* harmony export */   \"useTwoVmNumbers\": () => (/* binding */ useTwoVmNumbers)\n/* harmony export */ });\n/* harmony import */ var _consensus_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./consensus.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/consensus.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js\");\n/* harmony import */ var _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instruction-sets-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__, _consensus_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__, _consensus_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst incrementOperationCount = (operation) => (state) => {\n    const nextState = operation(state);\n    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n    nextState.operationCount += 1;\n    return nextState;\n};\nconst conditionallyEvaluate = (operation) => (state) => state.controlStack.every((item) => item) ? operation(state) : state;\n/**\n * Map a function over each operation in an {@link InstructionSet.operations}\n * object, assigning the result to the same `opcode` in the resulting object.\n * @param operationMap - an operations map from an {@link InstructionSet}\n * @param combinators - a list of functions to apply (in order) to\n * each operation\n */\nconst mapOverOperations = (combinators, operationMap) => Object.keys(operationMap).reduce((result, opcode) => ({\n    ...result,\n    [opcode]: combinators.reduce((op, combinator) => combinator(op), \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    operationMap[Number(opcode)]),\n}), {});\n/**\n * Pop one stack item off of `state.stack` and provide that item to `operation`.\n */\nconst useOneStackItem = (state, operation) => {\n    // eslint-disable-next-line functional/immutable-data\n    const item = state.stack.pop();\n    if (item === undefined) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.emptyStack);\n    }\n    return operation(state, [item]);\n};\nconst useTwoStackItems = (state, operation) => useOneStackItem(state, (nextState, [valueTwo]) => useOneStackItem(nextState, (lastState, [valueTop]) => operation(lastState, [valueTop, valueTwo])));\nconst useThreeStackItems = (state, operation) => useOneStackItem(state, (nextState, [valueThree]) => useTwoStackItems(nextState, (lastState, [valueTop, valueTwo]) => operation(lastState, [valueTop, valueTwo, valueThree])));\nconst useFourStackItems = (state, operation) => useTwoStackItems(state, (nextState, [valueThree, valueFour]) => useTwoStackItems(nextState, (lastState, [valueTop, valueTwo]) => operation(lastState, [valueTop, valueTwo, valueThree, valueFour])));\nconst useSixStackItems = (state, operation) => useFourStackItems(state, (nextState, [valueThree, valueFour, valueFive, valueSix]) => useTwoStackItems(nextState, (lastState, [valueTop, valueTwo]) => operation(lastState, [\n    valueTop,\n    valueTwo,\n    valueThree,\n    valueFour,\n    valueFive,\n    valueSix,\n])));\nconst typicalMaximumVmNumberByteLength = 8;\nconst useOneVmNumber = (state, operation, { maximumVmNumberByteLength = typicalMaximumVmNumberByteLength, requireMinimalEncoding = true, } = {\n    maximumVmNumberByteLength: typicalMaximumVmNumberByteLength,\n    requireMinimalEncoding: true,\n}) => useOneStackItem(state, (nextState, [item]) => {\n    const value = (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.vmNumberToBigInt)(item, {\n        maximumVmNumberByteLength,\n        requireMinimalEncoding,\n    });\n    if ((0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.isVmNumberError)(value)) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.invalidVmNumber);\n    }\n    return operation(nextState, [value]);\n});\nconst useTwoVmNumbers = (state, operation, { maximumVmNumberByteLength = typicalMaximumVmNumberByteLength, requireMinimalEncoding = true, } = {\n    maximumVmNumberByteLength: typicalMaximumVmNumberByteLength,\n    requireMinimalEncoding: true,\n}) => useOneVmNumber(state, (nextState, [secondValue]) => useOneVmNumber(nextState, (lastState, [firstValue]) => operation(lastState, [firstValue, secondValue]), {\n    maximumVmNumberByteLength,\n    requireMinimalEncoding,\n}), {\n    maximumVmNumberByteLength,\n    requireMinimalEncoding,\n});\nconst useThreeVmNumbers = (state, operation, { maximumVmNumberByteLength = typicalMaximumVmNumberByteLength, requireMinimalEncoding = true, } = {\n    maximumVmNumberByteLength: typicalMaximumVmNumberByteLength,\n    requireMinimalEncoding: true,\n}) => useTwoVmNumbers(state, (nextState, [secondValue, thirdValue]) => useOneVmNumber(nextState, (lastState, [firstValue]) => operation(lastState, [firstValue, secondValue, thirdValue]), {\n    maximumVmNumberByteLength,\n    requireMinimalEncoding,\n}), {\n    maximumVmNumberByteLength,\n    requireMinimalEncoding,\n});\n/**\n * Return the provided state with the provided value pushed to its stack.\n * @param state - the state to update and return\n * @param data - the value to push to the stack\n */\nconst pushToStack = (state, ...data) => {\n    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n    state.stack.push(...data);\n    return state;\n};\n/**\n * If the provided item exceeds the maximum stack item length, apply an error.\n * Otherwise, return the provided state with the item pushed to its stack.\n * @param state - the state to update and return\n * @param item - the value to push to the stack\n */\nconst pushToStackChecked = (state, item, maximumLength = _consensus_js__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon.maximumStackItemLength) => {\n    if (item.length > maximumLength) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(state, `${_errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.exceededMaximumStackItemLength} Item length: ${item.length} bytes.`);\n    }\n    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n    state.stack.push(item);\n    return state;\n};\n/**\n * Return the provided state with the VM number pushed to its stack.\n * @param state - the state to update and return\n * @param vmNumber - the number to push to the stack\n */\nconst pushToStackVmNumber = (state, vmNumber) => pushToStack(state, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.bigIntToVmNumber)(vmNumber));\n/**\n * If the provided number is outside the VM number range, apply an error.\n * Otherwise, return the provided state with the VM number pushed to its stack.\n * @param state - the state to update and return\n * @param vmNumber - the VM number to push to the stack\n */\nconst pushToStackVmNumberChecked = (state, vmNumber, minVmNumber = BigInt(_consensus_js__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon.minVmNumber), maxVmNumber = BigInt(_consensus_js__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon.maxVmNumber)\n// eslint-disable-next-line max-params\n) => {\n    if (vmNumber > maxVmNumber || vmNumber < minVmNumber) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.overflowsVmNumberRange);\n    }\n    return pushToStackVmNumber(state, vmNumber);\n};\nconst combineOperations = (firstOperation, secondOperation) => (state) => secondOperation(firstOperation(state));\n//# sourceMappingURL=combinators.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/common-types.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/common-types.js ***!
  \************************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cloneAuthenticationProgramStateBCH\": () => (/* binding */ cloneAuthenticationProgramStateBCH),\n/* harmony export */   \"cloneStack\": () => (/* binding */ cloneStack),\n/* harmony export */   \"createAuthenticationProgramStateCommon\": () => (/* binding */ createAuthenticationProgramStateCommon),\n/* harmony export */   \"undefinedOperation\": () => (/* binding */ undefinedOperation)\n/* harmony export */ });\n/* unused harmony exports checkLimitsCommon, cloneAuthenticationProgramCommon, cloneAuthenticationProgramStateCommon, cloneAuthenticationProgramState, createCompilationContextCommonTesting */\n/* harmony import */ var _message_message_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../message/message.js */ \"../../node_modules/@bitauth/libauth/build/lib/message/transaction-encoding.js\");\n/* harmony import */ var _combinators_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combinators.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js\");\n/* harmony import */ var _consensus_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./consensus.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/consensus.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js\");\n/* harmony import */ var _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instruction-sets-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_combinators_js__WEBPACK_IMPORTED_MODULE_0__, _consensus_js__WEBPACK_IMPORTED_MODULE_2__, _message_message_js__WEBPACK_IMPORTED_MODULE_3__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_4__]);\n([_combinators_js__WEBPACK_IMPORTED_MODULE_0__, _consensus_js__WEBPACK_IMPORTED_MODULE_2__, _message_message_js__WEBPACK_IMPORTED_MODULE_3__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nconst undefinedOperation = (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.conditionallyEvaluate)((state) => (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.unknownOpcode));\nconst checkLimitsCommon = (operation) => (state) => {\n    const nextState = operation(state);\n    return nextState.stack.length + nextState.alternateStack.length >\n        _consensus_js__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon.maximumStackDepth\n        ? (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.exceededMaximumStackDepth)\n        : nextState.operationCount > _consensus_js__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon.maximumOperationCount\n            ? (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.exceededMaximumOperationCount)\n            : nextState;\n};\nconst cloneStack = (stack) => stack.map((item) => item.slice());\nconst createAuthenticationProgramStateCommon = ({ program, instructions, stack, }) => ({\n    alternateStack: [],\n    controlStack: [],\n    instructions,\n    ip: 0,\n    lastCodeSeparator: -1,\n    operationCount: 0,\n    program,\n    signatureOperationsCount: 0,\n    signedMessages: [],\n    stack,\n});\nconst cloneAuthenticationProgramCommon = (program) => ({\n    inputIndex: program.inputIndex,\n    sourceOutputs: (0,_message_message_js__WEBPACK_IMPORTED_MODULE_3__.cloneTransactionOutputsCommon)(program.sourceOutputs),\n    transaction: (0,_message_message_js__WEBPACK_IMPORTED_MODULE_3__.cloneTransactionCommon)(program.transaction),\n});\nconst cloneAuthenticationProgramStateCommon = (state) => ({\n    ...(state.error === undefined ? {} : { error: state.error }),\n    alternateStack: cloneStack(state.alternateStack),\n    controlStack: state.controlStack.slice(),\n    instructions: state.instructions.map(_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_4__.cloneAuthenticationInstruction),\n    ip: state.ip,\n    lastCodeSeparator: state.lastCodeSeparator,\n    operationCount: state.operationCount,\n    program: cloneAuthenticationProgramCommon(state.program),\n    signatureOperationsCount: state.signatureOperationsCount,\n    signedMessages: state.signedMessages.map((item) => ({\n        digest: item.digest.slice(),\n        ...('serialization' in item\n            ? { serialization: item.serialization.slice() }\n            : { message: item.message.slice() }),\n    })),\n    stack: cloneStack(state.stack),\n});\nconst cloneAuthenticationProgramStateBCH = cloneAuthenticationProgramStateCommon;\nconst cloneAuthenticationProgramState = cloneAuthenticationProgramStateBCH;\nconst sha256HashLength = 32;\n/**\n * This is a meaningless but complete {@link CompilationContextCommon} that uses\n * a different value for each property. This is useful for testing\n * and debugging.\n */\n// eslint-disable-next-line complexity\nconst createCompilationContextCommonTesting = ({ sourceOutputs, inputs, locktime, version, outputs, } = {}) => ({\n    inputIndex: 0,\n    sourceOutputs: sourceOutputs\n        ? sourceOutputs\n        : [\n            {\n                lockingBytecode: Uint8Array.from([]),\n                valueSatoshis: 0xffffffffffffffffn,\n            },\n        ],\n    transaction: {\n        inputs: inputs\n            ? inputs\n            : [\n                {\n                    outpointIndex: 0,\n                    outpointTransactionHash: new Uint8Array(sha256HashLength).fill(1),\n                    sequenceNumber: 0,\n                    unlockingBytecode: undefined,\n                },\n            ],\n        locktime: locktime === undefined ? 0 : locktime,\n        outputs: outputs === undefined\n            ? [\n                {\n                    lockingBytecode: Uint8Array.from([]),\n                    valueSatoshis: 0xffffffffffffffffn,\n                },\n            ]\n            : outputs,\n        version: version === undefined ? 0 : version,\n    },\n});\n//# sourceMappingURL=common-types.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/common-types.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/consensus.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/consensus.js ***!
  \*********************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ConsensusCommon\": () => (/* binding */ ConsensusCommon),\n/* harmony export */   \"SigningSerializationTypesBCH\": () => (/* binding */ SigningSerializationTypesBCH)\n/* harmony export */ });\n/* unused harmony exports SigningSerializationTypesCommon, ConsensusBCH */\n/* harmony import */ var _signing_serialization_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signing-serialization.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/signing-serialization.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_signing_serialization_js__WEBPACK_IMPORTED_MODULE_0__]);\n_signing_serialization_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n/**\n * Consensus settings for the `BCH_2022_05` instruction set.\n */\nvar ConsensusCommon;\n(function (ConsensusCommon) {\n    /**\n     * A.K.A. `MAX_SCRIPT_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumBytecodeLength\"] = 10000] = \"maximumBytecodeLength\";\n    /**\n     * A.K.A. `MAX_OP_RETURN_RELAY`, `nMaxDatacarrierBytes`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumDataCarrierBytes\"] = 223] = \"maximumDataCarrierBytes\";\n    /**\n     * A.K.A. `MAX_OPS_PER_SCRIPT`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumOperationCount\"] = 201] = \"maximumOperationCount\";\n    /**\n     * A.K.A. `MAX_STACK_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStackDepth\"] = 1000] = \"maximumStackDepth\";\n    /**\n     * A.K.A. `MAX_SCRIPT_ELEMENT_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStackItemLength\"] = 520] = \"maximumStackItemLength\";\n    /**\n     * A.K.A. `MAX_STANDARD_VERSION`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStandardVersion\"] = 2] = \"maximumStandardVersion\";\n    /**\n     * A.K.A. `MAX_TX_IN_SCRIPT_SIG_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStandardUnlockingBytecodeLength\"] = 1650] = \"maximumStandardUnlockingBytecodeLength\";\n    /**\n     * A.K.A. `MIN_TX_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"minimumTransactionSize\"] = 100] = \"minimumTransactionSize\";\n    /**\n     * A.K.A. `MAX_STANDARD_TX_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStandardTransactionSize\"] = 100000] = \"maximumStandardTransactionSize\";\n    /**\n     * A.K.A. `MAX_TX_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumTransactionSize\"] = 1000000] = \"maximumTransactionSize\";\n    /**\n     * A.K.A. `MAXIMUM_ELEMENT_SIZE_64_BIT`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumVmNumberLength\"] = 8] = \"maximumVmNumberLength\";\n    ConsensusCommon[\"minVmNumber\"] = \"-9223372036854775807\";\n    ConsensusCommon[\"maxVmNumber\"] = \"9223372036854775807\";\n    ConsensusCommon[ConsensusCommon[\"schnorrSignatureLength\"] = 64] = \"schnorrSignatureLength\";\n})(ConsensusCommon || (ConsensusCommon = {}));\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst SigningSerializationTypesCommon = [\n    _signing_serialization_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypeBCH.allOutputs,\n    _signing_serialization_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypeBCH.allOutputsSingleInput,\n    _signing_serialization_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypeBCH.correspondingOutput,\n    _signing_serialization_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypeBCH.correspondingOutputSingleInput,\n    _signing_serialization_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypeBCH.noOutputs,\n    _signing_serialization_js__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationTypeBCH.noOutputsSingleInput,\n];\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst SigningSerializationTypesBCH = SigningSerializationTypesCommon;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst ConsensusBCH = ConsensusCommon;\n//# sourceMappingURL=consensus.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/consensus.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/crypto.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/crypto.js ***!
  \******************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"opCheckDataSig\": () => (/* binding */ opCheckDataSig),\n/* harmony export */   \"opCheckDataSigVerify\": () => (/* binding */ opCheckDataSigVerify),\n/* harmony export */   \"opCodeSeparator\": () => (/* binding */ opCodeSeparator),\n/* harmony export */   \"opHash160\": () => (/* binding */ opHash160),\n/* harmony export */   \"opHash256\": () => (/* binding */ opHash256),\n/* harmony export */   \"opReverseBytes\": () => (/* binding */ opReverseBytes),\n/* harmony export */   \"opRipemd160\": () => (/* binding */ opRipemd160),\n/* harmony export */   \"opSha1\": () => (/* binding */ opSha1),\n/* harmony export */   \"opSha256\": () => (/* binding */ opSha256)\n/* harmony export */ });\n/* unused harmony exports opCheckSig, opCheckMultiSig, opCheckSigVerify, opCheckMultiSigVerify, isValidSignatureEncodingBCHRaw */\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/combinations.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _combinators_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./combinators.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js\");\n/* harmony import */ var _consensus_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./consensus.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/consensus.js\");\n/* harmony import */ var _encoding_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./encoding.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/encoding.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js\");\n/* harmony import */ var _flow_control_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./flow-control.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/flow-control.js\");\n/* harmony import */ var _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instruction-sets-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\n/* harmony import */ var _signing_serialization_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./signing-serialization.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/signing-serialization.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__, _combinators_js__WEBPACK_IMPORTED_MODULE_1__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_2__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_3__, _encoding_js__WEBPACK_IMPORTED_MODULE_5__, _consensus_js__WEBPACK_IMPORTED_MODULE_6__, _signing_serialization_js__WEBPACK_IMPORTED_MODULE_8__, _flow_control_js__WEBPACK_IMPORTED_MODULE_9__]);\n([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__, _combinators_js__WEBPACK_IMPORTED_MODULE_1__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_2__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_3__, _encoding_js__WEBPACK_IMPORTED_MODULE_5__, _consensus_js__WEBPACK_IMPORTED_MODULE_6__, _signing_serialization_js__WEBPACK_IMPORTED_MODULE_8__, _flow_control_js__WEBPACK_IMPORTED_MODULE_9__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\nconst opRipemd160 = ({ ripemd160, } = { ripemd160: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.ripemd160 }) => (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.useOneStackItem)(state, (nextState, [value]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, ripemd160.hash(value)));\nconst opSha1 = ({ sha1, } = { sha1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha1 }) => (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.useOneStackItem)(state, (nextState, [value]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, sha1.hash(value)));\nconst opSha256 = ({ sha256, } = { sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.useOneStackItem)(state, (nextState, [value]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, sha256.hash(value)));\nconst opHash160 = ({ ripemd160, sha256, } = { ripemd160: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.ripemd160, sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.useOneStackItem)(state, (nextState, [value]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, ripemd160.hash(sha256.hash(value))));\nconst opHash256 = ({ sha256, } = { sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.useOneStackItem)(state, (nextState, [value]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_2__.hash256)(value, sha256)));\nconst opCodeSeparator = (state) => {\n    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n    state.lastCodeSeparator = state.ip;\n    return state;\n};\nconst opCheckSig = ({ secp256k1, sha256, } = { secp256k1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1, sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => (s) => \n// eslint-disable-next-line complexity\n(0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.useTwoStackItems)(s, (state, [bitcoinEncodedSignature, publicKey]) => {\n    if (!(0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_3__.isValidPublicKeyEncoding)(publicKey)) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.invalidPublicKeyEncoding);\n    }\n    if (!(0,_encoding_js__WEBPACK_IMPORTED_MODULE_5__.isValidSignatureEncodingBCHTransaction)(bitcoinEncodedSignature, _consensus_js__WEBPACK_IMPORTED_MODULE_6__.SigningSerializationTypesBCH)) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.invalidSignatureEncoding, `Transaction signature (including signing serialization): ${(0,_format_format_js__WEBPACK_IMPORTED_MODULE_7__.binToHex)(bitcoinEncodedSignature)}`);\n    }\n    const coveredBytecode = (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_3__.encodeAuthenticationInstructions)(state.instructions).subarray(state.lastCodeSeparator + 1);\n    const { signingSerializationType, signature } = (0,_encoding_js__WEBPACK_IMPORTED_MODULE_5__.decodeBitcoinSignature)(bitcoinEncodedSignature);\n    const serialization = (0,_signing_serialization_js__WEBPACK_IMPORTED_MODULE_8__.generateSigningSerializationBCH)(state.program, { coveredBytecode, signingSerializationType }, sha256);\n    const digest = (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_2__.hash256)(serialization, sha256);\n    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n    state.signedMessages.push({ digest, serialization });\n    const useSchnorr = signature.length === _consensus_js__WEBPACK_IMPORTED_MODULE_6__.ConsensusCommon.schnorrSignatureLength;\n    const success = useSchnorr\n        ? secp256k1.verifySignatureSchnorr(signature, publicKey, digest)\n        : secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n    return !success && signature.length !== 0\n        ? (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.nonNullSignatureFailure)\n        : (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(state, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_3__.booleanToVmNumber)(success));\n});\n// TODO: implement schnorr multisig https://gitlab.com/bitcoin-cash-node/bchn-sw/bitcoincash-upgrade-specifications/-/blob/master/spec/2019-11-15-schnorrmultisig.md\nconst opCheckMultiSig = ({ secp256k1, sha256, } = { secp256k1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1, sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => (s) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.useOneVmNumber)(s, (state, publicKeysValue) => {\n    const potentialPublicKeys = Number(publicKeysValue);\n    if (potentialPublicKeys < 0) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.invalidNaturalNumber);\n    }\n    if (potentialPublicKeys > 20 /* Multisig.maximumPublicKeys */) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.exceedsMaximumMultisigPublicKeyCount);\n    }\n    const publicKeys = \n    // eslint-disable-next-line functional/immutable-data\n    potentialPublicKeys > 0 ? state.stack.splice(-potentialPublicKeys) : [];\n    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n    state.operationCount += potentialPublicKeys;\n    return state.operationCount > _consensus_js__WEBPACK_IMPORTED_MODULE_6__.ConsensusCommon.maximumOperationCount\n        ? (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.exceededMaximumOperationCount)\n        : (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.useOneVmNumber)(state, (nextState, approvingKeys) => {\n            const requiredApprovingPublicKeys = Number(approvingKeys);\n            if (requiredApprovingPublicKeys < 0) {\n                return (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.invalidNaturalNumber);\n            }\n            if (requiredApprovingPublicKeys > potentialPublicKeys) {\n                return (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.insufficientPublicKeys);\n            }\n            const signatures = requiredApprovingPublicKeys > 0\n                ? // eslint-disable-next-line functional/immutable-data\n                    nextState.stack.splice(-requiredApprovingPublicKeys)\n                : [];\n            return (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.useOneStackItem)(nextState, \n            // eslint-disable-next-line complexity\n            (finalState, [protocolBugValue]) => {\n                if (protocolBugValue.length !== 0) {\n                    return (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(finalState, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.invalidProtocolBugValue);\n                }\n                const coveredBytecode = (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_3__.encodeAuthenticationInstructions)(finalState.instructions).subarray(finalState.lastCodeSeparator + 1);\n                let approvingPublicKeys = 0; // eslint-disable-line functional/no-let\n                let remainingSignatures = signatures.length; // eslint-disable-line functional/no-let\n                let remainingPublicKeys = publicKeys.length; // eslint-disable-line functional/no-let\n                // eslint-disable-next-line functional/no-loop-statement\n                while (remainingSignatures > 0 &&\n                    remainingPublicKeys > 0 &&\n                    approvingPublicKeys + remainingPublicKeys >=\n                        remainingSignatures &&\n                    approvingPublicKeys !== requiredApprovingPublicKeys) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    const publicKey = publicKeys[remainingPublicKeys - 1];\n                    const bitcoinEncodedSignature = \n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    signatures[remainingSignatures - 1];\n                    if (!(0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_3__.isValidPublicKeyEncoding)(publicKey)) {\n                        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(finalState, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.invalidPublicKeyEncoding);\n                    }\n                    if (!(0,_encoding_js__WEBPACK_IMPORTED_MODULE_5__.isValidSignatureEncodingBCHTransaction)(bitcoinEncodedSignature, _consensus_js__WEBPACK_IMPORTED_MODULE_6__.SigningSerializationTypesBCH)) {\n                        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(finalState, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.invalidSignatureEncoding, `Transaction signature (including signing serialization type): ${(0,_format_format_js__WEBPACK_IMPORTED_MODULE_7__.binToHex)(bitcoinEncodedSignature)}`);\n                    }\n                    const { signingSerializationType, signature } = (0,_encoding_js__WEBPACK_IMPORTED_MODULE_5__.decodeBitcoinSignature)(bitcoinEncodedSignature);\n                    const serialization = (0,_signing_serialization_js__WEBPACK_IMPORTED_MODULE_8__.generateSigningSerializationBCH)(state.program, { coveredBytecode, signingSerializationType }, sha256);\n                    const digest = (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_2__.hash256)(serialization, sha256);\n                    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n                    finalState.signedMessages.push({ digest, serialization });\n                    if (signature.length ===\n                        _consensus_js__WEBPACK_IMPORTED_MODULE_6__.ConsensusCommon.schnorrSignatureLength) {\n                        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(finalState, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.schnorrSizedSignatureInCheckMultiSig);\n                    }\n                    const signed = secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n                    // eslint-disable-next-line functional/no-conditional-statement\n                    if (signed) {\n                        approvingPublicKeys += 1; // eslint-disable-line functional/no-expression-statement\n                        remainingSignatures -= 1; // eslint-disable-line functional/no-expression-statement\n                    }\n                    remainingPublicKeys -= 1; // eslint-disable-line functional/no-expression-statement\n                }\n                const success = approvingPublicKeys === requiredApprovingPublicKeys;\n                if (!success &&\n                    !signatures.every((signature) => signature.length === 0)) {\n                    return (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(finalState, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.nonNullSignatureFailure);\n                }\n                return (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(finalState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_3__.booleanToVmNumber)(success));\n            });\n        });\n});\nconst opCheckSigVerify = ({ secp256k1, sha256, } = { secp256k1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1, sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.combineOperations)(opCheckSig({ secp256k1, sha256 }), _flow_control_js__WEBPACK_IMPORTED_MODULE_9__.opVerify);\nconst opCheckMultiSigVerify = ({ secp256k1, sha256, }) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.combineOperations)(opCheckMultiSig({ secp256k1, sha256 }), _flow_control_js__WEBPACK_IMPORTED_MODULE_9__.opVerify);\n/**\n * Validate the encoding of a raw signature – a signature without a signing\n * serialization type byte (A.K.A. \"sighash\" byte).\n *\n * @param signature - the raw signature\n */\nconst isValidSignatureEncodingBCHRaw = (signature) => signature.length === 0 ||\n    signature.length === _consensus_js__WEBPACK_IMPORTED_MODULE_6__.ConsensusCommon.schnorrSignatureLength ||\n    (0,_encoding_js__WEBPACK_IMPORTED_MODULE_5__.isValidSignatureEncodingDER)(signature);\nconst opCheckDataSig = ({ secp256k1, sha256, }) => (state) => \n// eslint-disable-next-line complexity\n(0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.useThreeStackItems)(state, (nextState, [signature, message, publicKey]) => {\n    if (!isValidSignatureEncodingBCHRaw(signature)) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.invalidSignatureEncoding, `Data signature: ${(0,_format_format_js__WEBPACK_IMPORTED_MODULE_7__.binToHex)(signature)}`);\n    }\n    if (!(0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_3__.isValidPublicKeyEncoding)(publicKey)) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.invalidPublicKeyEncoding);\n    }\n    const digest = sha256.hash(message);\n    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n    nextState.signedMessages.push({ digest, message });\n    const useSchnorr = signature.length === _consensus_js__WEBPACK_IMPORTED_MODULE_6__.ConsensusCommon.schnorrSignatureLength;\n    const success = useSchnorr\n        ? secp256k1.verifySignatureSchnorr(signature, publicKey, digest)\n        : secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n    return !success && signature.length !== 0\n        ? (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.nonNullSignatureFailure)\n        : (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_3__.booleanToVmNumber)(success));\n});\nconst opCheckDataSigVerify = ({ secp256k1, sha256, } = { secp256k1: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1, sha256: _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256 }) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.combineOperations)(opCheckDataSig({ secp256k1, sha256 }), _flow_control_js__WEBPACK_IMPORTED_MODULE_9__.opVerify);\nconst opReverseBytes = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.useOneStackItem)(state, (nextState, [item]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, item.slice().reverse()));\n//# sourceMappingURL=crypto.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/crypto.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/encoding.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/encoding.js ***!
  \********************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decodeBitcoinSignature\": () => (/* binding */ decodeBitcoinSignature),\n/* harmony export */   \"isValidSignatureEncodingBCHTransaction\": () => (/* binding */ isValidSignatureEncodingBCHTransaction),\n/* harmony export */   \"isValidSignatureEncodingDER\": () => (/* binding */ isValidSignatureEncodingDER)\n/* harmony export */ });\n/* harmony import */ var _consensus_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consensus.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/consensus.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_consensus_js__WEBPACK_IMPORTED_MODULE_0__]);\n_consensus_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst isNegative = (value) => \n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n(value & 128 /* Mask.negative */) !== 0;\nconst hasUnnecessaryPadding = (length, firstByte, secondByte\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n) => length > 1 && firstByte === 0 && !isNegative(secondByte);\nconst isValidInteger = (signature, tagIndex, length, valueIndex\n// eslint-disable-next-line max-params\n) => signature[tagIndex] === 2 /* ASN1.integerTagType */ &&\n    length !== 0 &&\n    !isNegative(signature[valueIndex]) &&\n    !hasUnnecessaryPadding(length, signature[valueIndex], signature[valueIndex + 1]);\n/**\n * Validate a DER-encoded signature.\n *\n * @remarks\n * This function is consensus-critical since BIP66, but differs from the BIP66\n * specification in that it does not validate the existence of a signing\n * serialization type byte at the end of the signature (to support\n * OP_CHECKDATASIG). To validate a bitcoin-encoded signature (including null\n * signatures), use {@link isValidSignatureEncodingBCHTransaction}.\n *\n * @privateRemarks\n * From the Bitcoin ABC C++ implementation:\n *\n * Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n * total-length: 1-byte length descriptor of everything that follows,\n * excluding the sighash byte.\n * R-length: 1-byte length descriptor of the R value that follows.\n * R: arbitrary-length big-endian encoded R value. It must use the\n * shortest possible encoding for a positive integers (which means no null\n * bytes at the start, except a single one when the next byte has its highest\n * bit set).\n * S-length: 1-byte length descriptor of the S value that follows.\n * S: arbitrary-length big-endian encoded S value. The same rules apply.\n */\n// eslint-disable-next-line complexity\nconst isValidSignatureEncodingDER = (signature) => {\n    const correctLengthRange = signature.length > 8 /* DER.minimumLength */ &&\n        signature.length < 72 /* DER.maximumLength */;\n    const correctSequenceTagType = signature[0 /* DER.sequenceTagIndex */] === 48 /* ASN1.sequenceTagType */;\n    const correctSequenceLength = signature[1 /* DER.sequenceLengthIndex */] ===\n        signature.length - 2 /* DER.sequenceMetadataBytes */;\n    const rLength = signature[3 /* DER.rLengthIndex */];\n    if (rLength === undefined) {\n        return false;\n    }\n    const consistentRLength = rLength <= signature.length - 7 /* DER.minimumNonRValueBytes */;\n    const rIsValid = isValidInteger(signature, 2 /* DER.rTagIndex */, rLength, 4 /* DER.rValueIndex */);\n    const sTagIndex = 4 /* DER.rValueIndex */ + rLength; // eslint-disable-line @typescript-eslint/restrict-plus-operands\n    const sLengthIndex = sTagIndex + 1;\n    const sLength = signature[sLengthIndex];\n    if (sLength === undefined) {\n        return false;\n    }\n    const sValueIndex = sLengthIndex + 1;\n    const consistentSLength = sValueIndex + sLength === signature.length;\n    const sIsValid = isValidInteger(signature, sTagIndex, sLength, sValueIndex);\n    return (correctLengthRange &&\n        correctSequenceTagType &&\n        correctSequenceLength &&\n        consistentRLength &&\n        rIsValid &&\n        consistentSLength &&\n        sIsValid);\n};\n/**\n * Validate the encoding of a transaction signature, including a signing\n * serialization type byte (A.K.A. \"sighash\" byte).\n *\n * @param transactionSignature - the full transaction signature\n */\nconst isValidSignatureEncodingBCHTransaction = (transactionSignature, validSigningSerializationTypes) => transactionSignature.length === 0 ||\n    (validSigningSerializationTypes.includes(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    transactionSignature[transactionSignature.length - 1]) &&\n        (transactionSignature.length ===\n            _consensus_js__WEBPACK_IMPORTED_MODULE_0__.ConsensusCommon.schnorrSignatureLength + 1 ||\n            isValidSignatureEncodingDER(transactionSignature.slice(0, transactionSignature.length - 1))));\n/**\n * Split a bitcoin-encoded signature into a signature and signing serialization\n * type.\n *\n * While a bitcoin-encoded signature only includes a single byte to encode the\n * signing serialization type, a 3-byte forkId can be appended to the signing\n * serialization to provide replay-protection between different forks. (See\n * Bitcoin Cash's Replay Protected Sighash spec for details.)\n *\n * @param encodedSignature - a signature that passes\n * {@link isValidSignatureEncodingBCHTransaction}\n */\nconst decodeBitcoinSignature = (encodedSignature) => ({\n    signature: encodedSignature.slice(0, -1),\n    signingSerializationType: encodedSignature.slice(-1),\n});\n//# sourceMappingURL=encoding.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/encoding.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AuthenticationErrorCommon\": () => (/* binding */ AuthenticationErrorCommon),\n/* harmony export */   \"applyError\": () => (/* binding */ applyError)\n/* harmony export */ });\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/error.js\");\n\nvar AuthenticationErrorCommon;\n(function (AuthenticationErrorCommon) {\n    AuthenticationErrorCommon[\"calledReserved\"] = \"Program called an unassigned, reserved operation.\";\n    AuthenticationErrorCommon[\"calledReturn\"] = \"Program called an OP_RETURN operation.\";\n    AuthenticationErrorCommon[\"calledUpgradableNop\"] = \"Program called a disallowed upgradable non-operation (OP_NOP1-OP_NOP10).\";\n    AuthenticationErrorCommon[\"checkSequenceUnavailable\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation, but OP_CHECKSEQUENCEVERIFY requires transaction version 2 or higher.\";\n    AuthenticationErrorCommon[\"disabledOpcode\"] = \"Program contains a disabled opcode.\";\n    AuthenticationErrorCommon[\"divisionByZero\"] = \"Program attempted to divide a number by zero.\";\n    AuthenticationErrorCommon[\"emptyAlternateStack\"] = \"Tried to read from an empty alternate stack.\";\n    AuthenticationErrorCommon[\"emptyStack\"] = \"Tried to read from an empty stack.\";\n    AuthenticationErrorCommon[\"exceededMaximumBytecodeLengthLocking\"] = \"The provided locking bytecode exceeds the maximum bytecode length (10,000 bytes).\";\n    AuthenticationErrorCommon[\"exceededMaximumBytecodeLengthUnlocking\"] = \"The provided unlocking bytecode exceeds the maximum bytecode length (10,000 bytes).\";\n    AuthenticationErrorCommon[\"exceededMaximumVmNumberLength\"] = \"Program attempted an OP_BIN2NUM operation on a byte sequence that cannot be encoded within the maximum VM Number length.\";\n    AuthenticationErrorCommon[\"exceededMaximumStackDepth\"] = \"Program exceeded the maximum stack depth (1,000 items).\";\n    AuthenticationErrorCommon[\"exceededMaximumStackItemLength\"] = \"Program attempted to push a stack item that exceeded the maximum stack item length (520 bytes).\";\n    AuthenticationErrorCommon[\"exceededMaximumOperationCount\"] = \"Program exceeded the maximum operation count (201 operations).\";\n    AuthenticationErrorCommon[\"exceedsMaximumMultisigPublicKeyCount\"] = \"Program called an OP_CHECKMULTISIG that exceeds the maximum public key count (20 public keys).\";\n    AuthenticationErrorCommon[\"failedVerify\"] = \"Program failed an OP_VERIFY operation.\";\n    AuthenticationErrorCommon[\"invalidStackIndex\"] = \"Tried to read from an invalid stack index.\";\n    AuthenticationErrorCommon[\"incompatibleLocktimeType\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY operation with an incompatible locktime type. The transaction locktime and required locktime must both refer to either a block height or a block time.\";\n    AuthenticationErrorCommon[\"incompatibleSequenceType\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation with an incompatible sequence type flag. The input sequence number and required sequence number must both use the same sequence locktime type.\";\n    AuthenticationErrorCommon[\"insufficientLength\"] = \"Program called an OP_NUM2BIN operation with an insufficient byte length to re-encode the provided number.\";\n    AuthenticationErrorCommon[\"insufficientPublicKeys\"] = \"Program called an OP_CHECKMULTISIG operation that requires signatures from more public keys than are provided.\";\n    AuthenticationErrorCommon[\"invalidNaturalNumber\"] = \"Invalid input: the key/signature count inputs for OP_CHECKMULTISIG require a natural number (n > 0).\";\n    AuthenticationErrorCommon[\"invalidProtocolBugValue\"] = \"The OP_CHECKMULTISIG protocol bug value must be a VM Number 0 (to comply with the \\\"NULLDUMMY\\\" rule).\";\n    AuthenticationErrorCommon[\"invalidPublicKeyEncoding\"] = \"Encountered an improperly encoded public key.\";\n    AuthenticationErrorCommon[\"invalidVmNumber\"] = \"Invalid input: this operation requires a valid VM Number.\";\n    AuthenticationErrorCommon[\"invalidSignatureEncoding\"] = \"Encountered an improperly encoded signature.\";\n    AuthenticationErrorCommon[\"invalidSplitIndex\"] = \"Program called an OP_SPLIT operation with an invalid index.\";\n    AuthenticationErrorCommon[\"invalidTransactionInputIndex\"] = \"Program attempted to read from an invalid transaction input index.\";\n    AuthenticationErrorCommon[\"invalidTransactionOutputIndex\"] = \"Program attempted to read from an invalid transaction output index.\";\n    AuthenticationErrorCommon[\"invalidTransactionUtxoIndex\"] = \"Program attempted to read from an invalid transaction UTXO index.\";\n    AuthenticationErrorCommon[\"locktimeDisabled\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY operation, but locktime is disabled for this transaction.\";\n    AuthenticationErrorCommon[\"mismatchedBitwiseOperandLength\"] = \"Program attempted a bitwise operation on operands of different lengths.\";\n    AuthenticationErrorCommon[\"malformedLockingBytecode\"] = \"The provided locking bytecode is malformed.\";\n    AuthenticationErrorCommon[\"malformedP2shBytecode\"] = \"Redeem bytecode was malformed prior to P2SH evaluation.\";\n    AuthenticationErrorCommon[\"malformedPush\"] = \"Program must be long enough to push the requested number of bytes.\";\n    AuthenticationErrorCommon[\"malformedUnlockingBytecode\"] = \"The provided unlocking bytecode is malformed.\";\n    AuthenticationErrorCommon[\"negativeLocktime\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY or OP_CHECKSEQUENCEVERIFY operation with a negative locktime.\";\n    AuthenticationErrorCommon[\"nonEmptyControlStack\"] = \"The active bytecode completed with a non-empty control stack (missing `OP_ENDIF`).\";\n    AuthenticationErrorCommon[\"nonMinimalPush\"] = \"Push operations must use the smallest possible encoding.\";\n    AuthenticationErrorCommon[\"nonNullSignatureFailure\"] = \"Program failed a signature verification with a non-null signature (violating the \\\"NULLFAIL\\\" rule).\";\n    AuthenticationErrorCommon[\"overflowsVmNumberRange\"] = \"Program attempted an arithmetic operation which exceeds the range of VM Numbers.\";\n    AuthenticationErrorCommon[\"requiresCleanStack\"] = \"Program completed with an unexpected number of items on the stack (must be exactly 1).\";\n    AuthenticationErrorCommon[\"requiresPushOnly\"] = \"Unlocking bytecode may contain only push operations.\";\n    AuthenticationErrorCommon[\"schnorrSizedSignatureInCheckMultiSig\"] = \"Program used a schnorr-sized signature (65 bytes) in an OP_CHECKMULTISIG operation.\";\n    AuthenticationErrorCommon[\"unexpectedElse\"] = \"Encountered an OP_ELSE outside of an OP_IF ... OP_ENDIF block.\";\n    AuthenticationErrorCommon[\"unexpectedEndIf\"] = \"Encountered an OP_ENDIF that is not following a matching OP_IF.\";\n    AuthenticationErrorCommon[\"unknownOpcode\"] = \"Called an unknown opcode.\";\n    AuthenticationErrorCommon[\"unmatchedSequenceDisable\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation requiring the disable flag, but the input's sequence number is missing the disable flag.\";\n    AuthenticationErrorCommon[\"unsatisfiedLocktime\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY operation that requires a locktime greater than the transaction's locktime.\";\n    AuthenticationErrorCommon[\"unsatisfiedSequenceNumber\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation that requires a sequence number greater than the input's sequence number.\";\n    AuthenticationErrorCommon[\"unsuccessfulEvaluation\"] = \"Unsuccessful evaluation: completed with a non-truthy value on top of the stack.\";\n})(AuthenticationErrorCommon || (AuthenticationErrorCommon = {}));\n/**\n * Applies the `error` to a `state`.\n *\n * @remarks\n * If the state already has an error, this method does not override it.\n * (Evaluation should end after the first encountered error, so further errors\n * aren't relevant.)\n */\nconst applyError = (state, errorType, errorDetails) => ({\n    ...state,\n    error: state.error === undefined\n        ? (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.formatError)(errorType, errorDetails)\n        : state.error,\n});\n//# sourceMappingURL=errors.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/flow-control.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/flow-control.js ***!
  \************************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"opElse\": () => (/* binding */ opElse),\n/* harmony export */   \"opEndIf\": () => (/* binding */ opEndIf),\n/* harmony export */   \"opIf\": () => (/* binding */ opIf),\n/* harmony export */   \"opNotIf\": () => (/* binding */ opNotIf),\n/* harmony export */   \"opReturn\": () => (/* binding */ opReturn),\n/* harmony export */   \"opVerify\": () => (/* binding */ opVerify),\n/* harmony export */   \"reservedOperation\": () => (/* binding */ reservedOperation)\n/* harmony export */ });\n/* harmony import */ var _combinators_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combinators.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js\");\n/* harmony import */ var _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instruction-sets-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_combinators_js__WEBPACK_IMPORTED_MODULE_0__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_combinators_js__WEBPACK_IMPORTED_MODULE_0__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst opVerify = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState, [item]) => (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.stackItemIsTruthy)(item)\n    ? nextState\n    : (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_2__.AuthenticationErrorCommon.failedVerify));\nconst reservedOperation = (state) => (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_2__.AuthenticationErrorCommon.calledReserved);\nconst opReturn = (state) => (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_2__.AuthenticationErrorCommon.calledReturn);\nconst opIf = (state) => {\n    if (state.controlStack.every((item) => item)) {\n        return (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState, [item]) => {\n            // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n            nextState.controlStack.push((0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.stackItemIsTruthy)(item));\n            return state;\n        });\n    }\n    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n    state.controlStack.push(false);\n    return state;\n};\n/**\n * Note, `OP_NOTIF` is not completely equivalent to `OP_NOT OP_IF`. `OP_NOT`\n * operates on a VM Number (as the inverse of `OP_0NOTEQUAL`), while `OP_NOTIF`\n * checks the \"truthy-ness\" of a stack item like `OP_IF`.\n */\nconst opNotIf = (state) => {\n    if (state.controlStack.every((item) => item)) {\n        return (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState, [item]) => {\n            // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n            nextState.controlStack.push(!(0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.stackItemIsTruthy)(item));\n            return state;\n        });\n    }\n    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n    state.controlStack.push(false);\n    return state;\n};\nconst opEndIf = (state) => {\n    // eslint-disable-next-line functional/immutable-data\n    const element = state.controlStack.pop();\n    if (element === undefined) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_2__.AuthenticationErrorCommon.unexpectedEndIf);\n    }\n    return state;\n};\nconst opElse = (state) => {\n    const top = state.controlStack[state.controlStack.length - 1];\n    if (top === undefined) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_2__.AuthenticationErrorCommon.unexpectedElse);\n    }\n    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n    state.controlStack[state.controlStack.length - 1] = !top;\n    return state;\n};\n//# sourceMappingURL=flow-control.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/flow-control.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/format.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/format.js ***!
  \******************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"opBin2Num\": () => (/* binding */ opBin2Num),\n/* harmony export */   \"opCat\": () => (/* binding */ opCat),\n/* harmony export */   \"opNum2Bin\": () => (/* binding */ opNum2Bin),\n/* harmony export */   \"opSplit\": () => (/* binding */ opSplit)\n/* harmony export */ });\n/* unused harmony export padMinimallyEncodedVmNumber */\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _combinators_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combinators.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js\");\n/* harmony import */ var _consensus_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./consensus.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/consensus.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js\");\n/* harmony import */ var _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instruction-sets-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_combinators_js__WEBPACK_IMPORTED_MODULE_0__, _consensus_js__WEBPACK_IMPORTED_MODULE_3__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_4__]);\n([_combinators_js__WEBPACK_IMPORTED_MODULE_0__, _consensus_js__WEBPACK_IMPORTED_MODULE_3__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nconst opCat = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [a, b]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackChecked)(nextState, (0,_format_format_js__WEBPACK_IMPORTED_MODULE_1__.flattenBinArray)([a, b])));\nconst opSplit = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneVmNumber)(state, (nextState, value) => {\n    const index = Number(value);\n    return (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(nextState, (finalState, [item]) => index < 0 || index > item.length\n        ? (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.applyError)(finalState, _errors_js__WEBPACK_IMPORTED_MODULE_2__.AuthenticationErrorCommon.invalidSplitIndex)\n        : (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(finalState, item.slice(0, index), item.slice(index)));\n});\n/**\n * Pad a minimally-encoded VM number for `OP_NUM2BIN`.\n */\nconst padMinimallyEncodedVmNumber = (vmNumber, length) => {\n    // eslint-disable-next-line functional/no-let\n    let signBit = 0 /* Constants.positiveSign */;\n    // eslint-disable-next-line functional/no-conditional-statement\n    if (vmNumber.length > 0) {\n        // eslint-disable-next-line functional/no-expression-statement, no-bitwise, @typescript-eslint/no-non-null-assertion\n        signBit = vmNumber[vmNumber.length - 1] & 128 /* Constants.negativeSign */;\n        // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data\n        vmNumber[vmNumber.length - 1] &= 128 /* Constants.negativeSign */ - 1;\n    }\n    const result = Array.from(vmNumber);\n    // eslint-disable-next-line functional/no-loop-statement\n    while (result.length < length - 1) {\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n        result.push(0);\n    }\n    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n    result.push(signBit);\n    return Uint8Array.from(result);\n};\nconst opNum2Bin = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneVmNumber)(state, (nextState, value) => {\n    const targetLength = Number(value);\n    return targetLength > _consensus_js__WEBPACK_IMPORTED_MODULE_3__.ConsensusCommon.maximumStackItemLength\n        ? (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.applyError)(nextState, `${_errors_js__WEBPACK_IMPORTED_MODULE_2__.AuthenticationErrorCommon.exceededMaximumStackItemLength} Item length: ${targetLength} bytes.`)\n        : (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneVmNumber)(nextState, (finalState, [target]) => {\n            const minimallyEncoded = (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToVmNumber)(target);\n            return minimallyEncoded.length > targetLength\n                ? (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.applyError)(finalState, _errors_js__WEBPACK_IMPORTED_MODULE_2__.AuthenticationErrorCommon.insufficientLength)\n                : minimallyEncoded.length === targetLength\n                    ? (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(finalState, minimallyEncoded)\n                    : (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(finalState, padMinimallyEncodedVmNumber(minimallyEncoded, targetLength));\n        }, {\n            maximumVmNumberByteLength: \n            // TODO: is this right?\n            _consensus_js__WEBPACK_IMPORTED_MODULE_3__.ConsensusCommon.maximumStackItemLength,\n            requireMinimalEncoding: false,\n        });\n});\nconst opBin2Num = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneVmNumber)(state, (nextState, [target]) => {\n    const minimallyEncoded = (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToVmNumber)(target);\n    return minimallyEncoded.length > _consensus_js__WEBPACK_IMPORTED_MODULE_3__.ConsensusCommon.maximumVmNumberLength\n        ? (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_2__.AuthenticationErrorCommon.exceededMaximumVmNumberLength)\n        : (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, minimallyEncoded);\n}, {\n    // TODO: is this right?\n    maximumVmNumberByteLength: _consensus_js__WEBPACK_IMPORTED_MODULE_3__.ConsensusCommon.maximumStackItemLength,\n    requireMinimalEncoding: false,\n});\n//# sourceMappingURL=format.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/format.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/inspection.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/inspection.js ***!
  \**********************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"opActiveBytecode\": () => (/* binding */ opActiveBytecode),\n/* harmony export */   \"opInputBytecode\": () => (/* binding */ opInputBytecode),\n/* harmony export */   \"opInputIndex\": () => (/* binding */ opInputIndex),\n/* harmony export */   \"opInputSequenceNumber\": () => (/* binding */ opInputSequenceNumber),\n/* harmony export */   \"opOutpointIndex\": () => (/* binding */ opOutpointIndex),\n/* harmony export */   \"opOutpointTxHash\": () => (/* binding */ opOutpointTxHash),\n/* harmony export */   \"opOutputBytecode\": () => (/* binding */ opOutputBytecode),\n/* harmony export */   \"opOutputValue\": () => (/* binding */ opOutputValue),\n/* harmony export */   \"opTxInputCount\": () => (/* binding */ opTxInputCount),\n/* harmony export */   \"opTxLocktime\": () => (/* binding */ opTxLocktime),\n/* harmony export */   \"opTxOutputCount\": () => (/* binding */ opTxOutputCount),\n/* harmony export */   \"opTxVersion\": () => (/* binding */ opTxVersion),\n/* harmony export */   \"opUtxoBytecode\": () => (/* binding */ opUtxoBytecode),\n/* harmony export */   \"opUtxoValue\": () => (/* binding */ opUtxoValue),\n/* harmony export */   \"useTransactionOutput\": () => (/* binding */ useTransactionOutput),\n/* harmony export */   \"useTransactionUtxo\": () => (/* binding */ useTransactionUtxo)\n/* harmony export */ });\n/* unused harmony export useTransactionInput */\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/number.js\");\n/* harmony import */ var _combinators_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combinators.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js\");\n/* harmony import */ var _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instruction-sets-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_combinators_js__WEBPACK_IMPORTED_MODULE_0__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_combinators_js__WEBPACK_IMPORTED_MODULE_0__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nconst opInputIndex = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackVmNumberChecked)(state, BigInt(state.program.inputIndex));\nconst opActiveBytecode = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackChecked)(state, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.encodeAuthenticationInstructions)(state.instructions.slice(state.lastCodeSeparator + 1)));\nconst opTxVersion = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackVmNumberChecked)(state, BigInt((0,_format_format_js__WEBPACK_IMPORTED_MODULE_2__.int32UnsignedToSigned)(state.program.transaction.version)));\nconst opTxInputCount = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackVmNumberChecked)(state, BigInt(state.program.transaction.inputs.length));\nconst opTxOutputCount = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackVmNumberChecked)(state, BigInt(state.program.transaction.outputs.length));\nconst opTxLocktime = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackVmNumberChecked)(state, BigInt(state.program.transaction.locktime));\nconst useTransactionUtxo = (state, operation) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneVmNumber)(state, (nextState, [index]) => {\n    const utxo = nextState.program.sourceOutputs[Number(index)];\n    if (utxo === undefined) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.invalidTransactionUtxoIndex);\n    }\n    return operation(state, [utxo]);\n});\nconst opUtxoValue = (state) => useTransactionUtxo(state, (nextState, [utxo]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackVmNumberChecked)(nextState, utxo.valueSatoshis));\nconst opUtxoBytecode = (state) => useTransactionUtxo(state, (nextState, [utxo]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackChecked)(nextState, utxo.lockingBytecode.slice()));\nconst useTransactionInput = (state, operation) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneVmNumber)(state, (nextState, [index]) => {\n    const input = nextState.program.transaction.inputs[Number(index)];\n    if (input === undefined) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.invalidTransactionInputIndex);\n    }\n    return operation(state, [input]);\n});\nconst opOutpointTxHash = (state) => useTransactionInput(state, (nextState, [input]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackChecked)(nextState, input.outpointTransactionHash.slice().reverse()));\nconst opOutpointIndex = (state) => useTransactionInput(state, (nextState, [input]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackVmNumberChecked)(nextState, BigInt(input.outpointIndex)));\nconst opInputBytecode = (state) => useTransactionInput(state, (nextState, [input]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackChecked)(nextState, input.unlockingBytecode.slice()));\nconst opInputSequenceNumber = (state) => useTransactionInput(state, (nextState, [input]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackVmNumberChecked)(nextState, BigInt(input.sequenceNumber)));\nconst useTransactionOutput = (state, operation) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneVmNumber)(state, (nextState, [index]) => {\n    const input = nextState.program.transaction.outputs[Number(index)];\n    if (input === undefined) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.invalidTransactionOutputIndex);\n    }\n    return operation(state, [input]);\n});\nconst opOutputValue = (state) => useTransactionOutput(state, (nextState, [output]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackVmNumberChecked)(nextState, output.valueSatoshis));\nconst opOutputBytecode = (state) => useTransactionOutput(state, (nextState, [output]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStackChecked)(nextState, output.lockingBytecode.slice()));\n//# sourceMappingURL=inspection.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/inspection.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js":
/*!**********************************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js ***!
  \**********************************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"authenticationInstructionIsMalformed\": () => (/* binding */ authenticationInstructionIsMalformed),\n/* harmony export */   \"authenticationInstructionsAreMalformed\": () => (/* binding */ authenticationInstructionsAreMalformed),\n/* harmony export */   \"bigIntToVmNumber\": () => (/* binding */ bigIntToVmNumber),\n/* harmony export */   \"booleanToVmNumber\": () => (/* binding */ booleanToVmNumber),\n/* harmony export */   \"cloneAuthenticationInstruction\": () => (/* binding */ cloneAuthenticationInstruction),\n/* harmony export */   \"decodeAuthenticationInstructions\": () => (/* binding */ decodeAuthenticationInstructions),\n/* harmony export */   \"encodeAuthenticationInstructionMalformed\": () => (/* binding */ encodeAuthenticationInstructionMalformed),\n/* harmony export */   \"encodeAuthenticationInstructions\": () => (/* binding */ encodeAuthenticationInstructions),\n/* harmony export */   \"generateBytecodeMap\": () => (/* binding */ generateBytecodeMap),\n/* harmony export */   \"getDustThreshold\": () => (/* binding */ getDustThreshold),\n/* harmony export */   \"isArbitraryDataOutput\": () => (/* binding */ isArbitraryDataOutput),\n/* harmony export */   \"isDustOutput\": () => (/* binding */ isDustOutput),\n/* harmony export */   \"isPushOnly\": () => (/* binding */ isPushOnly),\n/* harmony export */   \"isStandardOutputBytecode2023\": () => (/* binding */ isStandardOutputBytecode2023),\n/* harmony export */   \"isValidPublicKeyEncoding\": () => (/* binding */ isValidPublicKeyEncoding),\n/* harmony export */   \"isVmNumberError\": () => (/* binding */ isVmNumberError),\n/* harmony export */   \"isWitnessProgram\": () => (/* binding */ isWitnessProgram),\n/* harmony export */   \"stackItemIsTruthy\": () => (/* binding */ stackItemIsTruthy),\n/* harmony export */   \"vmNumberToBigInt\": () => (/* binding */ vmNumberToBigInt)\n/* harmony export */ });\n/* unused harmony exports authenticationInstructionsArePushInstructions, decodeLittleEndianNumber, opcodeToPushLength, decodeAuthenticationInstruction, disassembleAuthenticationInstructionMalformed, disassembleAuthenticationInstruction, disassembleAuthenticationInstructionMaybeMalformed, disassembleAuthenticationInstructionsMaybeMalformed, disassembleBytecode, disassembleBytecodeBCH, disassembleBytecodeBTC, encodeAuthenticationInstruction, encodeAuthenticationInstructionMaybeMalformed, encodeAuthenticationInstructionsMaybeMalformed, VmNumberError, isPushOperation, isPushOnlyAccurate, getMinimumFee, isValidUncompressedPublicKeyEncoding, isValidCompressedPublicKeyEncoding, pushNumberOpcodeToNumber, isSimpleMultisig, isStandardMultisig, isStandardOutputBytecode */\n/* harmony import */ var _address_address_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../address/address.js */ \"../../node_modules/@bitauth/libauth/build/lib/address/locking-bytecode.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/number.js\");\n/* harmony import */ var _message_message_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../message/message.js */ \"../../node_modules/@bitauth/libauth/build/lib/message/transaction-encoding.js\");\n/* harmony import */ var _bch_2023_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bch/2023/bch-2023-opcodes.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-opcodes.js\");\n/* harmony import */ var _btc_btc_opcodes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../btc/btc-opcodes.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/btc/btc-opcodes.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_message_message_js__WEBPACK_IMPORTED_MODULE_4__, _address_address_js__WEBPACK_IMPORTED_MODULE_5__]);\n([_message_message_js__WEBPACK_IMPORTED_MODULE_4__, _address_address_js__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n/**\n * A type-guard that checks if the provided instruction is malformed.\n * @param instruction - the instruction to check\n */\nconst authenticationInstructionIsMalformed = (instruction) => 'malformed' in instruction;\n/**\n * A type-guard that checks if the final instruction in the provided array of\n * instructions is malformed. (Only the final instruction can be malformed.)\n * @param instructions - the array of instructions to check\n */\nconst authenticationInstructionsAreMalformed = (instructions) => instructions.length > 0 &&\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    authenticationInstructionIsMalformed(instructions[instructions.length - 1]);\nconst authenticationInstructionsArePushInstructions = (instructions) => instructions.every((instruction) => 'data' in instruction);\nconst uint8Bytes = 1;\nconst uint16Bytes = 2;\nconst uint32Bytes = 4;\n/**\n * Decode a little endian number of `length` from virtual machine `bytecode`\n * beginning at `index`.\n */\nconst decodeLittleEndianNumber = (bytecode, index, length) => {\n    const view = new DataView(bytecode.buffer, index, length);\n    const readAsLittleEndian = true;\n    return length === uint8Bytes\n        ? view.getUint8(0)\n        : length === uint16Bytes\n            ? view.getUint16(0, readAsLittleEndian)\n            : view.getUint32(0, readAsLittleEndian);\n};\n/**\n * Returns the number of bytes used to indicate the length of the push in this\n * operation.\n * @param opcode - an opcode between 0x00 and 0xff\n */\nconst opcodeToPushLength = (opcode) => ({\n    [76 /* CommonPushOpcodes.OP_PUSHDATA_1 */]: uint8Bytes,\n    [77 /* CommonPushOpcodes.OP_PUSHDATA_2 */]: uint16Bytes,\n    [78 /* CommonPushOpcodes.OP_PUSHDATA_4 */]: uint32Bytes,\n}[opcode] ?? 0);\n/**\n * Decode one instruction from the provided virtual machine bytecode.\n *\n * Returns an object with an `instruction` referencing a\n * {@link AuthenticationInstructionMaybeMalformed}, and a `nextIndex` indicating\n * the next index from which to read. If the next index is greater than or equal\n * to the length of the bytecode, the bytecode has been fully decoded.\n *\n * The final {@link AuthenticationInstructionMaybeMalformed} in the bytecode may\n * be malformed if 1) the final operation is a push and 2) too few bytes remain\n * for the push operation to complete.\n *\n * @param bytecode - the virtual machine bytecode from which to read the next\n * instruction\n * @param index - the index from which to begin reading\n */\n// eslint-disable-next-line complexity\nconst decodeAuthenticationInstruction = (bytecode, index) => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const opcode = bytecode[index];\n    if (opcode > 78 /* CommonPushOpcodes.OP_PUSHDATA_4 */) {\n        return {\n            instruction: {\n                opcode,\n            },\n            nextIndex: index + 1,\n        };\n    }\n    const lengthBytes = opcodeToPushLength(opcode);\n    if (lengthBytes !== 0 && index + lengthBytes >= bytecode.length) {\n        const sliceStart = index + 1;\n        const sliceEnd = sliceStart + lengthBytes;\n        return {\n            instruction: {\n                expectedLengthBytes: lengthBytes,\n                length: bytecode.slice(sliceStart, sliceEnd),\n                malformed: true,\n                opcode,\n            },\n            nextIndex: sliceEnd,\n        };\n    }\n    const dataBytes = lengthBytes === 0\n        ? opcode\n        : decodeLittleEndianNumber(bytecode, index + 1, lengthBytes);\n    const dataStart = index + 1 + lengthBytes;\n    const dataEnd = dataStart + dataBytes;\n    return {\n        instruction: {\n            data: bytecode.slice(dataStart, dataEnd),\n            ...(dataEnd > bytecode.length\n                ? {\n                    expectedDataBytes: dataEnd - dataStart,\n                    malformed: true,\n                }\n                : undefined),\n            opcode,\n        },\n        nextIndex: dataEnd,\n    };\n};\n/**\n * @param instruction - the {@link AuthenticationInstruction} to clone.\n * @returns A copy of the provided {@link AuthenticationInstruction}.\n */\nconst cloneAuthenticationInstruction = (instruction) => ({\n    ...('data' in instruction ? { data: instruction.data } : {}),\n    opcode: instruction.opcode,\n});\n/**\n * Decode authentication virtual machine bytecode (`lockingBytecode` or\n * `unlockingBytecode`) into {@link AuthenticationInstructionsMaybeMalformed}.\n * The method {@link authenticationInstructionsAreMalformed} can be used to\n * check if these instructions include a malformed instruction. If not, they are\n * valid {@link AuthenticationInstructions}.\n *\n * @param bytecode - the authentication virtual machine bytecode to decode\n */\nconst decodeAuthenticationInstructions = (bytecode) => {\n    const instructions = [];\n    // eslint-disable-next-line functional/no-let\n    let i = 0;\n    // eslint-disable-next-line functional/no-loop-statement\n    while (i < bytecode.length) {\n        const { instruction, nextIndex } = decodeAuthenticationInstruction(bytecode, i);\n        // eslint-disable-next-line functional/no-expression-statement\n        i = nextIndex;\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n        instructions.push(instruction);\n    }\n    return instructions;\n};\n/**\n * OP_0 is the only single-word push. All other push instructions will\n * disassemble to multiple ASM words. (OP_1-OP_16 are handled like normal\n * operations.)\n */\nconst isMultiWordPush = (opcode) => opcode !== 0 /* CommonPushOpcodes.OP_0 */;\nconst formatAsmPushHex = (data) => data.length > 0 ? `0x${(0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.binToHex)(data)}` : '';\nconst formatMissingBytesAsm = (missing) => `[missing ${missing} byte${missing === 1 ? '' : 's'}]`;\nconst hasMalformedLength = (instruction) => 'length' in instruction;\nconst isPushData = (pushOpcode) => pushOpcode >= 76 /* CommonPushOpcodes.OP_PUSHDATA_1 */;\n/**\n * Disassemble a malformed authentication instruction into a string description.\n * @param opcodes - a mapping of possible opcodes to their string representation\n * @param instruction - the {@link AuthenticationInstructionMalformed} to\n * disassemble\n */\nconst disassembleAuthenticationInstructionMalformed = (opcodes, instruction) => `${opcodes[instruction.opcode] ?? 'OP_UNKNOWN'} ${hasMalformedLength(instruction)\n    ? `${formatAsmPushHex(instruction.length)}${formatMissingBytesAsm(instruction.expectedLengthBytes - instruction.length.length)}`\n    : `${isPushData(instruction.opcode)\n        ? `${instruction.expectedDataBytes} `\n        : ''}${formatAsmPushHex(instruction.data)}${formatMissingBytesAsm(instruction.expectedDataBytes - instruction.data.length)}`}`;\n/**\n * Disassemble a properly-formed authentication instruction into a string\n * description.\n * @param opcodes - a mapping of possible opcodes to their string representation\n * @param instruction - the instruction to disassemble\n */\nconst disassembleAuthenticationInstruction = (opcodes, instruction) => `${opcodes[instruction.opcode] ?? 'OP_UNKNOWN'}${'data' in instruction && isMultiWordPush(instruction.opcode)\n    ? ` ${isPushData(instruction.opcode) ? `${instruction.data.length} ` : ''}${formatAsmPushHex(instruction.data)}`\n    : ''}`;\n/**\n * Disassemble a single {@link AuthenticationInstructionMaybeMalformed} into its\n * ASM representation.\n *\n * @param opcodes - a mapping of possible opcodes to their string representation\n * @param instruction - the instruction to disassemble\n */\nconst disassembleAuthenticationInstructionMaybeMalformed = (opcodes, instruction) => authenticationInstructionIsMalformed(instruction)\n    ? disassembleAuthenticationInstructionMalformed(opcodes, instruction)\n    : disassembleAuthenticationInstruction(opcodes, instruction);\n/**\n * Disassemble an array of {@link AuthenticationInstructionMaybeMalformed}\n * (including potentially malformed instructions) into its ASM representation.\n *\n * This method supports disassembling an array including multiple\n * {@link AuthenticationInstructionMaybeMalformed}s, rather than the more\n * constrained {@link AuthenticationInstructionsMaybeMalformed} (may only\n * include one malformed instruction as the last item in the array).\n *\n * @param opcodes - a mapping of possible opcodes to their string representation\n * @param instructions - the array of instructions to disassemble\n */\nconst disassembleAuthenticationInstructionsMaybeMalformed = (opcodes, instructions) => instructions\n    .map((instruction) => disassembleAuthenticationInstructionMaybeMalformed(opcodes, instruction))\n    .join(' ');\n/**\n * Disassemble authentication bytecode into a lossless ASM representation. (All\n * push operations are represented with the same opcodes used in the bytecode,\n * even when non-minimally encoded.)\n *\n * @param opcodes - a mapping of possible opcodes to their string representation\n * @param bytecode - the authentication bytecode to disassemble\n */\nconst disassembleBytecode = (opcodes, bytecode) => disassembleAuthenticationInstructionsMaybeMalformed(opcodes, decodeAuthenticationInstructions(bytecode));\n/**\n * Disassemble BCH authentication bytecode into its ASM representation.\n *\n * Note, this method automatically uses the latest BCH instruction set. To\n * manually select an instruction set, use {@link disassembleBytecode}.\n *\n * @param bytecode - the virtual machine bytecode to disassemble\n */\nconst disassembleBytecodeBCH = (bytecode) => disassembleAuthenticationInstructionsMaybeMalformed(_bch_2023_bch_2023_opcodes_js__WEBPACK_IMPORTED_MODULE_1__.OpcodesBCH, decodeAuthenticationInstructions(bytecode));\n/**\n * Disassemble BTC authentication bytecode into its ASM representation.\n *\n * Note, this method automatically uses the latest BTC instruction set. To\n * manually select an instruction set, use {@link disassembleBytecode}.\n *\n * @param bytecode - the virtual machine bytecode to disassemble\n */\nconst disassembleBytecodeBTC = (bytecode) => disassembleAuthenticationInstructionsMaybeMalformed(_btc_btc_opcodes_js__WEBPACK_IMPORTED_MODULE_2__.OpcodesBTC, decodeAuthenticationInstructions(bytecode));\n/**\n * Create an object where each key is an opcode identifier and each value is\n * the bytecode value (`Uint8Array`) it represents.\n * @param opcodes - An opcode enum, e.g. {@link OpcodesBCH}\n */\nconst generateBytecodeMap = (opcodes) => Object.entries(opcodes)\n    .filter((entry) => typeof entry[1] === 'number')\n    .reduce((identifiers, pair) => ({\n    ...identifiers,\n    [pair[0]]: Uint8Array.of(pair[1]),\n}), {});\nconst getInstructionLengthBytes = (instruction) => {\n    const { opcode } = instruction;\n    const expectedLength = opcodeToPushLength(opcode);\n    return expectedLength === uint8Bytes\n        ? Uint8Array.of(instruction.data.length)\n        : expectedLength === uint16Bytes\n            ? (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.numberToBinUint16LE)(instruction.data.length)\n            : (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.numberToBinUint32LE)(instruction.data.length);\n};\n/**\n * Re-encode a valid authentication instruction.\n * @param instruction - the instruction to encode\n */\nconst encodeAuthenticationInstruction = (instruction) => Uint8Array.from([\n    instruction.opcode,\n    ...('data' in instruction\n        ? [\n            ...(isPushData(instruction.opcode)\n                ? getInstructionLengthBytes(instruction)\n                : []),\n            ...instruction.data,\n        ]\n        : []),\n]);\n/**\n * Re-encode a malformed authentication instruction.\n * @param instruction - the {@link AuthenticationInstructionMalformed} to encode\n */\nconst encodeAuthenticationInstructionMalformed = (instruction) => {\n    const { opcode } = instruction;\n    if (hasMalformedLength(instruction)) {\n        return Uint8Array.from([opcode, ...instruction.length]);\n    }\n    if (isPushData(opcode)) {\n        return Uint8Array.from([\n            opcode,\n            ...(opcode === 76 /* CommonPushOpcodes.OP_PUSHDATA_1 */\n                ? Uint8Array.of(instruction.expectedDataBytes)\n                : opcode === 77 /* CommonPushOpcodes.OP_PUSHDATA_2 */\n                    ? (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.numberToBinUint16LE)(instruction.expectedDataBytes)\n                    : (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.numberToBinUint32LE)(instruction.expectedDataBytes)),\n            ...instruction.data,\n        ]);\n    }\n    return Uint8Array.from([opcode, ...instruction.data]);\n};\n/**\n * Re-encode a potentially-malformed authentication instruction.\n * @param instruction - the {@link AuthenticationInstructionMaybeMalformed}\n * to encode\n */\nconst encodeAuthenticationInstructionMaybeMalformed = (instruction) => authenticationInstructionIsMalformed(instruction)\n    ? encodeAuthenticationInstructionMalformed(instruction)\n    : encodeAuthenticationInstruction(instruction);\n/**\n * Re-encode an array of valid authentication instructions.\n * @param instructions - the array of valid instructions to encode\n */\nconst encodeAuthenticationInstructions = (instructions) => (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(instructions.map(encodeAuthenticationInstruction));\n/**\n * Re-encode an array of potentially-malformed authentication instructions.\n * @param instructions - the array of\n * {@link AuthenticationInstructionMaybeMalformed}s to encode\n */\nconst encodeAuthenticationInstructionsMaybeMalformed = (instructions) => (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(instructions.map(encodeAuthenticationInstructionMaybeMalformed));\nvar VmNumberError;\n(function (VmNumberError) {\n    VmNumberError[\"outOfRange\"] = \"Failed to decode VM Number: overflows VM Number range.\";\n    VmNumberError[\"requiresMinimal\"] = \"Failed to decode VM Number: the number is not minimally-encoded.\";\n})(VmNumberError || (VmNumberError = {}));\nconst isVmNumberError = (value) => value === VmNumberError.outOfRange || value === VmNumberError.requiresMinimal;\nconst typicalMaximumVmNumberByteLength = 8;\n/**\n * This method attempts to decode a VM Number, a format in which numeric values\n * are represented on the stack. (The Satoshi implementation calls this\n * `CScriptNum`.)\n *\n * If `bytes` is a valid VM Number, this method returns the represented number\n * in BigInt format. If `bytes` is not valid, a {@link VmNumberError}\n * is returned.\n *\n * All common operations accepting numeric parameters or pushing numeric values\n * to the stack currently use the VM Number format. The binary format of numbers\n * wouldn't be important if they could only be operated on by arithmetic\n * operators, but since the results of these operations may become input to\n * other operations (e.g. hashing), the specific representation is consensus-\n * critical.\n *\n * @param bytes - a Uint8Array from the stack\n */\n// eslint-disable-next-line complexity\nconst vmNumberToBigInt = (bytes, { maximumVmNumberByteLength = typicalMaximumVmNumberByteLength, requireMinimalEncoding = true, } = {\n    maximumVmNumberByteLength: typicalMaximumVmNumberByteLength,\n    requireMinimalEncoding: true,\n}) => {\n    if (bytes.length === 0) {\n        return 0n;\n    }\n    if (bytes.length > maximumVmNumberByteLength) {\n        return VmNumberError.outOfRange;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const mostSignificantByte = bytes[bytes.length - 1];\n    const secondMostSignificantByte = bytes[bytes.length - 1 - 1];\n    const allButTheSignBit = 127;\n    const justTheSignBit = 128;\n    if (requireMinimalEncoding &&\n        // eslint-disable-next-line no-bitwise\n        (mostSignificantByte & allButTheSignBit) === 0 &&\n        // eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n        (bytes.length <= 1 || (secondMostSignificantByte & justTheSignBit) === 0)) {\n        return VmNumberError.requiresMinimal;\n    }\n    const bitsPerByte = 8;\n    const signFlippingByte = 0x80;\n    // eslint-disable-next-line functional/no-let\n    let result = 0n;\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus\n    for (let byte = 0; byte < bytes.length; byte++) {\n        // eslint-disable-next-line functional/no-expression-statement,  no-bitwise, @typescript-eslint/no-non-null-assertion\n        result |= BigInt(bytes[byte]) << BigInt(byte * bitsPerByte);\n    }\n    /* eslint-disable no-bitwise */\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const isNegative = (bytes[bytes.length - 1] & signFlippingByte) !== 0;\n    return isNegative\n        ? -(result &\n            ~(BigInt(signFlippingByte) << BigInt(bitsPerByte * (bytes.length - 1))))\n        : result;\n    /* eslint-enable no-bitwise */\n};\n/**\n * Convert a BigInt into the VM Number format. See {@link vmNumberToBigInt} for\n * more information.\n *\n * @param integer - the BigInt to encode as a VM Number\n */\n// eslint-disable-next-line complexity\nconst bigIntToVmNumber = (integer) => {\n    if (integer === 0n) {\n        return new Uint8Array();\n    }\n    const bytes = [];\n    const isNegative = integer < 0;\n    const byteStates = 0xff;\n    const bitsPerByte = 8;\n    // eslint-disable-next-line functional/no-let\n    let remaining = isNegative ? -integer : integer;\n    // eslint-disable-next-line functional/no-loop-statement\n    while (remaining > 0) {\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data, no-bitwise\n        bytes.push(Number(remaining & BigInt(byteStates)));\n        // eslint-disable-next-line functional/no-expression-statement, no-bitwise\n        remaining >>= BigInt(bitsPerByte);\n    }\n    const signFlippingByte = 0x80;\n    // eslint-disable-next-line no-bitwise, functional/no-conditional-statement, @typescript-eslint/no-non-null-assertion\n    if ((bytes[bytes.length - 1] & signFlippingByte) > 0) {\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n        bytes.push(isNegative ? signFlippingByte : 0x00);\n        // eslint-disable-next-line functional/no-conditional-statement\n    }\n    else if (isNegative) {\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data, no-bitwise\n        bytes[bytes.length - 1] |= signFlippingByte;\n    }\n    return new Uint8Array(bytes);\n};\n/**\n * Returns true if the provided stack item is \"truthy\" in the sense required\n * by several operations (anything but zero and \"negative zero\").\n *\n * The Satoshi implementation calls this method `CastToBool`.\n *\n * @param item - the stack item to check for truthiness\n */\nconst stackItemIsTruthy = (item) => {\n    const signFlippingByte = 0x80;\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus\n    for (let i = 0; i < item.length; i++) {\n        if (item[i] !== 0) {\n            if (i === item.length - 1 && item[i] === signFlippingByte) {\n                return false;\n            }\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Convert a boolean into VM Number format (the type used to express\n * boolean values emitted by several operations).\n *\n * @param value - the boolean value to convert\n */\nconst booleanToVmNumber = (value) => value ? bigIntToVmNumber(1n) : bigIntToVmNumber(0n);\n/**\n * From C++ implementation:\n * Note that IsPushOnly() *does* consider OP_RESERVED to be a push-type\n * opcode, however execution of OP_RESERVED fails, so it's not relevant to\n * P2SH/BIP62 as the scriptSig would fail prior to the P2SH special\n * validation code being executed.\n */\nconst isPushOperation = (opcode) => opcode <= 96 /* Opcodes.OP_16 */;\nconst isPushOnly = (bytecode) => {\n    const instructions = decodeAuthenticationInstructions(bytecode);\n    return instructions.every((instruction) => isPushOperation(instruction.opcode));\n};\nconst isPushOnlyAccurate = (bytecode) => {\n    const instructions = decodeAuthenticationInstructions(bytecode);\n    return (!authenticationInstructionsAreMalformed(instructions) &&\n        authenticationInstructionsArePushInstructions(instructions));\n};\n/**\n * Test if the provided locking bytecode is an arbitrary data output.\n * A.K.A. `TX_NULL_DATA`, \"data carrier\", OP_RETURN output\n * @param lockingBytecode - the locking bytecode to test\n */\nconst isArbitraryDataOutput = (lockingBytecode) => lockingBytecode.length >= 1 &&\n    lockingBytecode[0] === 106 /* Opcodes.OP_RETURN */ &&\n    isPushOnly(lockingBytecode.slice(1));\n/**\n * Given a number of bytes and a fee rate in satoshis-per-kilobyte, return the\n * minimum required fee. This calculation in important for standardness in dust\n * threshold calculation.\n *\n * @param length - the number of bytes for which the fee is to be paid\n * @param feeRateSatsPerKb - the fee rate in satoshis per 1000 bytes\n */\nconst getMinimumFee = (length, feeRateSatsPerKb) => {\n    if (length < 1n)\n        return 0n;\n    const truncated = (length * feeRateSatsPerKb) / BigInt(1000 /* Dust.bytesPerKb */);\n    return truncated === 0n ? 1n : truncated;\n};\n/**\n * Given an {@link Output} and (optionally) a dust relay fee in\n * satoshis-per-kilobyte, return the minimum satoshi value for this output to\n * not be considered a \"dust output\". **For nodes to relay or mine a transaction\n * with this output, the output must have a satoshi value greater than or equal\n * to this threshold.**\n *\n * By standardness, if an output is expected to cost more than 1/3 of it's value\n * in fees to spend, it is considered dust. When calculating the expected fee,\n * the input size is assumed to be (at least) the size of a typical P2PKH input\n * spent using a 72-byte ECDSA signature, 148 bytes:\n * - Outpoint transaction hash: 32 bytes\n * - Outpoint index: 4 bytes\n * - Unlocking bytecode length: 1 byte\n * - Push of 72-byte ECDSA signature: 72 + 1 byte\n * - Push of public key: 33 + 1 byte\n * - Sequence number: 4 bytes\n *\n * The encoded length of the serialized output is added to 148 bytes, and the\n * dust threshold for the output is 3 times the minimum fee for the total bytes.\n * For a P2PKH output (34 bytes) and the standard 1000 sat/Kb dust relay fee,\n * this results in a dust limit of `546` satoshis (`(34+148)*3*1000/1000`).\n *\n * Note, arbitrary data outputs are not required to meet the dust limit as\n * they are provably unspendable and can be pruned from the UTXO set.\n *\n * @param output - the output to test\n * @param dustRelayFeeSatPerKb - the \"dust relay fee\", defaults to `1000n`\n */\nconst getDustThreshold = (output, dustRelayFeeSatPerKb = BigInt(1000 /* Dust.standardDustRelayFee */)) => {\n    if (isArbitraryDataOutput(output.lockingBytecode)) {\n        return 0n;\n    }\n    const encodedOutputLength = (0,_message_message_js__WEBPACK_IMPORTED_MODULE_4__.encodeTransactionOutput)(output).length;\n    const expectedTotalLength = encodedOutputLength + 148 /* Dust.p2pkhInputLength */;\n    return (BigInt(3 /* Dust.minimumFeeMultiple */) *\n        getMinimumFee(BigInt(expectedTotalLength), dustRelayFeeSatPerKb));\n};\n/**\n * Given an {@link Output} and (optionally) a dust relay fee in\n * satoshis-per-kilobyte, return `true` if the provided output is considered\n * a \"dust output\", or `false` otherwise.\n *\n * @param output - the output to test\n * @param dustRelayFeeSatPerKb - the \"dust relay fee\", defaults to `1000n`\n */\nconst isDustOutput = (output, dustRelayFeeSatPerKb = BigInt(1000 /* Dust.standardDustRelayFee */)) => output.valueSatoshis < getDustThreshold(output, dustRelayFeeSatPerKb);\nconst isValidUncompressedPublicKeyEncoding = (publicKey) => publicKey.length === 65 /* PublicKey.uncompressedByteLength */ &&\n    publicKey[0] === 4 /* PublicKey.uncompressedHeaderByte */;\nconst isValidCompressedPublicKeyEncoding = (publicKey) => publicKey.length === 33 /* PublicKey.compressedByteLength */ &&\n    (publicKey[0] === 2 /* PublicKey.compressedHeaderByteEven */ ||\n        publicKey[0] === 3 /* PublicKey.compressedHeaderByteOdd */);\nconst isValidPublicKeyEncoding = (publicKey) => isValidCompressedPublicKeyEncoding(publicKey) ||\n    isValidUncompressedPublicKeyEncoding(publicKey);\n// eslint-disable-next-line complexity\nconst pushNumberOpcodeToNumber = (opcode) => {\n    if (opcode === 0 /* Opcodes.OP_0 */) {\n        return 0;\n    }\n    if (opcode === 79 /* Opcodes.OP_1NEGATE */) {\n        return -1;\n    }\n    if (!Number.isInteger(opcode) ||\n        opcode < 81 /* Opcodes.OP_1 */ ||\n        opcode > 96 /* Opcodes.OP_16 */) {\n        return false;\n    }\n    return opcode - 80 /* Opcodes.OP_RESERVED */;\n};\n// eslint-disable-next-line complexity\nconst isSimpleMultisig = (lockingBytecode) => {\n    const instructions = decodeAuthenticationInstructions(lockingBytecode);\n    if (authenticationInstructionsAreMalformed(instructions)) {\n        return false;\n    }\n    const lastIndex = instructions.length - 1;\n    if (instructions.length < 4 /* Multisig.minimumInstructions */ ||\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        instructions[lastIndex].opcode !== 174 /* Opcodes.OP_CHECKMULTISIG */) {\n        return false;\n    }\n    /**\n     * The required count of signers (the `m` in `m-of-n`).\n     */\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const m = pushNumberOpcodeToNumber(instructions[0].opcode);\n    /**\n     * The total count of signers (the `n` in `m-of-n`).\n     */\n    const n = pushNumberOpcodeToNumber(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    instructions[lastIndex - 1].opcode);\n    if (n === false || m === false) {\n        return false;\n    }\n    const publicKeyInstructions = instructions.slice(1 /* Multisig.keyStart */, -2 /* Multisig.keyEnd */);\n    if (!authenticationInstructionsArePushInstructions(publicKeyInstructions)) {\n        return false;\n    }\n    const publicKeys = publicKeyInstructions.map((instruction) => instruction.data);\n    if (publicKeys.some((key) => !isValidPublicKeyEncoding(key))) {\n        return false;\n    }\n    return { m, n, publicKeys };\n};\n// eslint-disable-next-line complexity\nconst isStandardMultisig = (lockingBytecode) => {\n    const multisigProperties = isSimpleMultisig(lockingBytecode);\n    if (multisigProperties === false) {\n        return false;\n    }\n    const { m, n } = multisigProperties;\n    if (n < 1 || n > 3 /* Multisig.maximumStandardN */ || m < 1 || m > n) {\n        return false;\n    }\n    return true;\n};\nconst isStandardOutputBytecode = (lockingBytecode) => (0,_address_address_js__WEBPACK_IMPORTED_MODULE_5__.isPayToPublicKeyHash)(lockingBytecode) ||\n    (0,_address_address_js__WEBPACK_IMPORTED_MODULE_5__.isPayToScriptHash20)(lockingBytecode) ||\n    (0,_address_address_js__WEBPACK_IMPORTED_MODULE_5__.isPayToPublicKey)(lockingBytecode) ||\n    isArbitraryDataOutput(lockingBytecode) ||\n    isStandardMultisig(lockingBytecode);\n// eslint-disable-next-line complexity\nconst isStandardOutputBytecode2023 = (lockingBytecode) => (0,_address_address_js__WEBPACK_IMPORTED_MODULE_5__.isPayToPublicKeyHash)(lockingBytecode) ||\n    (0,_address_address_js__WEBPACK_IMPORTED_MODULE_5__.isPayToScriptHash20)(lockingBytecode) ||\n    (0,_address_address_js__WEBPACK_IMPORTED_MODULE_5__.isPayToScriptHash32)(lockingBytecode) ||\n    (0,_address_address_js__WEBPACK_IMPORTED_MODULE_5__.isPayToPublicKey)(lockingBytecode) ||\n    isArbitraryDataOutput(lockingBytecode) ||\n    isStandardMultisig(lockingBytecode);\n/**\n * Test a stack item for the SegWit Recovery Rules activated in `BCH_2019_05`.\n *\n * @param bytecode - the stack item to test\n */\n// eslint-disable-next-line complexity\nconst isWitnessProgram = (bytecode) => {\n    const correctLength = bytecode.length >= 4 /* SegWit.minimumLength */ &&\n        bytecode.length <= 42 /* SegWit.maximumLength */;\n    const validVersionPush = bytecode[0] === 0 /* SegWit.OP_0 */ ||\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        (bytecode[0] >= 81 /* SegWit.OP_1 */ && bytecode[0] <= 96 /* SegWit.OP_16 */);\n    const correctLengthByte = \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    bytecode[1] + 2 /* SegWit.versionAndLengthBytes */ === bytecode.length;\n    return correctLength && validVersionPush && correctLengthByte;\n};\n//# sourceMappingURL=instruction-sets-utils.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/nop.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/nop.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"disabledOperation\": () => (/* binding */ disabledOperation),\n/* harmony export */   \"opNop\": () => (/* binding */ opNop),\n/* harmony export */   \"opNopDisallowed\": () => (/* binding */ opNopDisallowed)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js\");\n\nconst opNop = (state) => state;\nconst opNopDisallowed = (state) => (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.calledUpgradableNop);\n/**\n * \"Disabled\" operations are explicitly forbidden from occurring anywhere in VM\n * bytecode, even within an unexecuted branch.\n */\nconst disabledOperation = (state) => (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.unknownOpcode);\n//# sourceMappingURL=nop.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/nop.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/push.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/push.js ***!
  \****************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"encodeDataPush\": () => (/* binding */ encodeDataPush),\n/* harmony export */   \"pushNumberOperation\": () => (/* binding */ pushNumberOperation),\n/* harmony export */   \"pushOperation\": () => (/* binding */ pushOperation)\n/* harmony export */ });\n/* unused harmony export isMinimalDataPush */\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/number.js\");\n/* harmony import */ var _combinators_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./combinators.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js\");\n/* harmony import */ var _consensus_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./consensus.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/consensus.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js\");\n/* harmony import */ var _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instruction-sets-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_consensus_js__WEBPACK_IMPORTED_MODULE_1__, _combinators_js__WEBPACK_IMPORTED_MODULE_3__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_4__]);\n([_consensus_js__WEBPACK_IMPORTED_MODULE_1__, _combinators_js__WEBPACK_IMPORTED_MODULE_3__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n/**\n * Returns the minimal bytecode required to push the provided `data` to the\n * stack.\n *\n * @remarks\n * This method conservatively encodes a `Uint8Array` as a data push. For VM\n * Numbers that can be pushed using a single opcode (-1 through 16), the\n * equivalent bytecode value is returned. Other `data` values will be prefixed\n * with the proper opcode and push length bytes (if necessary) to create the\n * minimal push instruction.\n *\n * Note, while some single-byte VM Number pushes will be minimally-encoded by\n * this method, all larger inputs will be encoded as-is (it cannot be assumed\n * that inputs are intended to be used as VM Numbers). To encode the push of a\n * VM Number, minimally-encode the number before passing it to this\n * method, e.g.:\n * `encodeDataPush(bigIntToVmNumber(decodeVmNumber(nonMinimalNumber)))`.\n *\n * The maximum `bytecode` length that can be encoded for a push in the Bitcoin\n * system is `4294967295` (~4GB). This method assumes a smaller input – if\n * `bytecode` has the potential to be longer, it should be checked (and the\n * error handled) prior to calling this method.\n *\n * @param data - the Uint8Array to push to the stack\n */\n// eslint-disable-next-line complexity\nconst encodeDataPush = (data) => data.length <= 75 /* PushOperationConstants.maximumPushByteOperationSize */\n    ? data.length === 0\n        ? Uint8Array.of(0)\n        : data.length === 1\n            ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                data[0] !== 0 && data[0] <= 16 /* PushOperationConstants.pushNumberOpcodes */\n                    ? Uint8Array.of(\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    data[0] + 80 /* PushOperationConstants.pushNumberOpcodesOffset */)\n                    : data[0] === 129 /* PushOperationConstants.negativeOne */\n                        ? Uint8Array.of(79 /* PushOperationConstants.OP_1NEGATE */)\n                        : Uint8Array.from([1, ...data])\n            : Uint8Array.from([data.length, ...data])\n    : data.length <= 255 /* PushOperationConstants.maximumPushData1Size */\n        ? Uint8Array.from([\n            76 /* PushOperationConstants.OP_PUSHDATA_1 */,\n            data.length,\n            ...data,\n        ])\n        : data.length <= 65535 /* PushOperationConstants.maximumPushData2Size */\n            ? Uint8Array.from([\n                77 /* PushOperationConstants.OP_PUSHDATA_2 */,\n                ...(0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint16LE)(data.length),\n                ...data,\n            ])\n            : Uint8Array.from([\n                78 /* PushOperationConstants.OP_PUSHDATA_4 */,\n                ...(0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(data.length),\n                ...data,\n            ]);\n/**\n * Returns true if the provided `data` is minimally-encoded by the provided\n * `opcode`.\n * @param opcode - the opcode used to push `data`\n * @param data - the contents of the push\n */\n// eslint-disable-next-line complexity\nconst isMinimalDataPush = (opcode, data) => {\n    if (data.length === 0) {\n        return opcode === 0 /* PushOperationConstants.OP_0 */;\n    }\n    if (data.length === 1) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        if (data[0] >= 1 && data[0] <= 16 /* PushOperationConstants.pushNumberOpcodes */) {\n            return (\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            opcode === data[0] + 80 /* PushOperationConstants.pushNumberOpcodesOffset */);\n        }\n        if (data[0] === 129 /* PushOperationConstants.negativeOne */) {\n            return opcode === 79 /* PushOperationConstants.OP_1NEGATE */;\n        }\n        return true;\n    }\n    if (data.length <= 75 /* PushOperationConstants.maximumPushByteOperationSize */) {\n        return opcode === data.length;\n    }\n    if (data.length <= 255 /* PushOperationConstants.maximumPushData1Size */) {\n        return opcode === 76 /* PushOperationConstants.OP_PUSHDATA_1 */;\n    }\n    if (data.length <= 65535 /* PushOperationConstants.maximumPushData2Size */) {\n        return opcode === 77 /* PushOperationConstants.OP_PUSHDATA_2 */;\n    }\n    if (data.length <= 4294967295 /* PushOperationConstants.maximumPushData4Size */) {\n        return opcode === 78 /* PushOperationConstants.OP_PUSHDATA_4 */;\n    }\n    return false;\n};\nconst executionIsActive = (state) => state.controlStack.every((item) => item);\n// TODO: add tests that verify the order of operations below (are non-minimal pushes OK inside unexecuted conditionals?)\nconst pushOperation = (maximumPushSize = _consensus_js__WEBPACK_IMPORTED_MODULE_1__.ConsensusCommon.maximumStackItemLength) => (state) => {\n    const instruction = state.instructions[state.ip];\n    return instruction.data.length > maximumPushSize\n        ? (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.applyError)(state, `${_errors_js__WEBPACK_IMPORTED_MODULE_2__.AuthenticationErrorCommon.exceededMaximumStackItemLength} Item length: ${instruction.data.length} bytes.`)\n        : executionIsActive(state)\n            ? isMinimalDataPush(instruction.opcode, instruction.data)\n                ? (0,_combinators_js__WEBPACK_IMPORTED_MODULE_3__.pushToStack)(state, instruction.data)\n                : (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_2__.AuthenticationErrorCommon.nonMinimalPush)\n            : state;\n};\n/**\n * @param number - the number that is pushed to the stack by this operation.\n * @returns an operation that pushes a number to the stack.\n */\nconst pushNumberOperation = (number) => {\n    const value = (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToVmNumber)(BigInt(number));\n    return (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_3__.pushToStack)(state, value);\n};\n//# sourceMappingURL=push.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/push.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/signing-serialization.js":
/*!*********************************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/signing-serialization.js ***!
  \*********************************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SigningSerializationFlag\": () => (/* binding */ SigningSerializationFlag),\n/* harmony export */   \"SigningSerializationTypeBCH\": () => (/* binding */ SigningSerializationTypeBCH),\n/* harmony export */   \"generateSigningSerializationBCH\": () => (/* binding */ generateSigningSerializationBCH),\n/* harmony export */   \"generateSigningSerializationComponentsBCH\": () => (/* binding */ generateSigningSerializationComponentsBCH)\n/* harmony export */ });\n/* unused harmony exports SigningSerializationType, hashPrevouts, hashUtxos, hashSequence, hashOutputs, encodeSigningSerializationBCH, isLegacySigningSerialization */\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js\");\n/* harmony import */ var _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../crypto/crypto.js */ \"../../node_modules/@bitauth/libauth/build/lib/crypto/combinations.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/number.js\");\n/* harmony import */ var _message_message_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../message/message.js */ \"../../node_modules/@bitauth/libauth/build/lib/message/transaction-encoding.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__, _message_message_js__WEBPACK_IMPORTED_MODULE_4__]);\n([_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__, _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__, _message_message_js__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n/**\n * A.K.A. `sighash` flags\n */\nvar SigningSerializationFlag;\n(function (SigningSerializationFlag) {\n    /**\n     * A.K.A. `SIGHASH_ALL`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"allOutputs\"] = 1] = \"allOutputs\";\n    /**\n     * A.K.A `SIGHASH_NONE`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"noOutputs\"] = 2] = \"noOutputs\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"correspondingOutput\"] = 3] = \"correspondingOutput\";\n    /**\n     * A.K.A. `SIGHASH_UTXOS`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"utxos\"] = 32] = \"utxos\";\n    SigningSerializationFlag[SigningSerializationFlag[\"forkId\"] = 64] = \"forkId\";\n    /**\n     * A.K.A `ANYONE_CAN_PAY`/`SIGHASH_ANYONECANPAY`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"singleInput\"] = 128] = \"singleInput\";\n})(SigningSerializationFlag || (SigningSerializationFlag = {}));\n/* eslint-disable no-bitwise, @typescript-eslint/prefer-literal-enum-member */\nvar SigningSerializationType;\n(function (SigningSerializationType) {\n    SigningSerializationType[SigningSerializationType[\"allOutputs\"] = 65] = \"allOutputs\";\n    SigningSerializationType[SigningSerializationType[\"allOutputsAllUtxos\"] = 97] = \"allOutputsAllUtxos\";\n    SigningSerializationType[SigningSerializationType[\"allOutputsSingleInput\"] = 193] = \"allOutputsSingleInput\";\n    SigningSerializationType[SigningSerializationType[\"correspondingOutput\"] = 67] = \"correspondingOutput\";\n    SigningSerializationType[SigningSerializationType[\"correspondingOutputAllUtxos\"] = 99] = \"correspondingOutputAllUtxos\";\n    SigningSerializationType[SigningSerializationType[\"correspondingOutputSingleInput\"] = 195] = \"correspondingOutputSingleInput\";\n    SigningSerializationType[SigningSerializationType[\"noOutputs\"] = 66] = \"noOutputs\";\n    SigningSerializationType[SigningSerializationType[\"noOutputsAllUtxos\"] = 98] = \"noOutputsAllUtxos\";\n    SigningSerializationType[SigningSerializationType[\"noOutputsSingleInput\"] = 194] = \"noOutputsSingleInput\";\n})(SigningSerializationType || (SigningSerializationType = {}));\n/* eslint-enable no-bitwise, @typescript-eslint/prefer-literal-enum-member */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst SigningSerializationTypeBCH = SigningSerializationType;\nconst match = (type, flag) => \n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n(type[0] & flag) !== 0;\nconst equals = (type, flag\n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n) => (type[0] & 31 /* Internal.mask5Bits */) === flag;\nconst shouldSerializeSingleInput = (type) => match(type, SigningSerializationFlag.singleInput);\nconst shouldSerializeCorrespondingOutput = (type) => equals(type, SigningSerializationFlag.correspondingOutput);\nconst shouldSerializeNoOutputs = (type) => equals(type, SigningSerializationFlag.noOutputs);\nconst shouldSerializeUtxos = (type) => match(type, SigningSerializationFlag.utxos);\nconst emptyHash = () => new Uint8Array(32 /* Internal.sha256HashByteLength */).fill(0);\n/**\n * Return the proper `hashPrevouts` value for a given a signing serialization\n * type.\n */\nconst hashPrevouts = ({ signingSerializationType, transactionOutpoints, }, sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256) => shouldSerializeSingleInput(signingSerializationType)\n    ? emptyHash()\n    : (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256)(transactionOutpoints, sha256);\n/**\n * Return the proper `hashUtxos` value for a given a signing serialization\n * type.\n */\nconst hashUtxos = ({ signingSerializationType, transactionUtxos, }, sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256) => shouldSerializeUtxos(signingSerializationType)\n    ? (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256)(transactionUtxos, sha256)\n    : Uint8Array.of();\n/**\n * Return the proper `hashSequence` value for a given a signing serialization\n * type.\n */\nconst hashSequence = ({ signingSerializationType, transactionSequenceNumbers, }, sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256) => !shouldSerializeSingleInput(signingSerializationType) &&\n    !shouldSerializeCorrespondingOutput(signingSerializationType) &&\n    !shouldSerializeNoOutputs(signingSerializationType)\n    ? (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256)(transactionSequenceNumbers, sha256)\n    : emptyHash();\n/**\n * Return the proper `hashOutputs` value for a given a signing serialization\n * type.\n */\nconst hashOutputs = ({ correspondingOutput, signingSerializationType, transactionOutputs, }, sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256) => !shouldSerializeCorrespondingOutput(signingSerializationType) &&\n    !shouldSerializeNoOutputs(signingSerializationType)\n    ? (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256)(transactionOutputs, sha256)\n    : shouldSerializeCorrespondingOutput(signingSerializationType)\n        ? correspondingOutput === undefined\n            ? emptyHash()\n            : (0,_crypto_crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256)(correspondingOutput, sha256)\n        : emptyHash();\n/**\n * Encode the signature-protected properties of a transaction following the\n * algorithm required by the `signingSerializationType` of a signature.\n *\n * Note: When validating transactions with multiple signatures,\n * performance-critical applications should use a memoized sha256 implementation\n * to avoid re-computing hashes.\n */\nconst encodeSigningSerializationBCH = ({ correspondingOutput, coveredBytecode, forkId = new Uint8Array([0, 0, 0]), locktime, outpointIndex, outpointTransactionHash, outputTokenPrefix, outputValue, sequenceNumber, signingSerializationType, transactionOutpoints, transactionOutputs, transactionSequenceNumbers, transactionUtxos, version, }, sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256) => (0,_format_format_js__WEBPACK_IMPORTED_MODULE_2__.flattenBinArray)([\n    (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.numberToBinUint32LE)(version),\n    hashPrevouts({ signingSerializationType, transactionOutpoints }, sha256),\n    hashUtxos({ signingSerializationType, transactionUtxos }, sha256),\n    hashSequence({\n        signingSerializationType,\n        transactionSequenceNumbers,\n    }, sha256),\n    outpointTransactionHash.slice().reverse(),\n    (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.numberToBinUint32LE)(outpointIndex),\n    outputTokenPrefix,\n    (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.bigIntToCompactSize)(BigInt(coveredBytecode.length)),\n    coveredBytecode,\n    outputValue,\n    (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.numberToBinUint32LE)(sequenceNumber),\n    hashOutputs({\n        correspondingOutput,\n        signingSerializationType,\n        transactionOutputs,\n    }, sha256),\n    (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.numberToBinUint32LE)(locktime),\n    signingSerializationType,\n    forkId,\n]);\n/**\n * Generate the encoded components of a BCH signing serialization from\n * compilation context.\n */\nconst generateSigningSerializationComponentsBCH = (context) => ({\n    correspondingOutput: context.inputIndex < context.transaction.outputs.length\n        ? (0,_message_message_js__WEBPACK_IMPORTED_MODULE_4__.encodeTransactionOutput)(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        context.transaction.outputs[context.inputIndex])\n        : undefined,\n    locktime: context.transaction.locktime,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    outpointIndex: context.transaction.inputs[context.inputIndex].outpointIndex,\n    outpointTransactionHash: \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    context.transaction.inputs[context.inputIndex].outpointTransactionHash,\n    outputTokenPrefix: (0,_message_message_js__WEBPACK_IMPORTED_MODULE_4__.encodeTokenPrefix)(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    context.sourceOutputs[context.inputIndex].token),\n    outputValue: (0,_format_format_js__WEBPACK_IMPORTED_MODULE_3__.valueSatoshisToBin)(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    context.sourceOutputs[context.inputIndex].valueSatoshis),\n    sequenceNumber: \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    context.transaction.inputs[context.inputIndex].sequenceNumber,\n    transactionOutpoints: (0,_message_message_js__WEBPACK_IMPORTED_MODULE_4__.encodeTransactionOutpoints)(context.transaction.inputs),\n    transactionOutputs: (0,_message_message_js__WEBPACK_IMPORTED_MODULE_4__.encodeTransactionOutputsForSigning)(context.transaction.outputs),\n    transactionSequenceNumbers: (0,_message_message_js__WEBPACK_IMPORTED_MODULE_4__.encodeTransactionInputSequenceNumbersForSigning)(context.transaction.inputs),\n    transactionUtxos: (0,_message_message_js__WEBPACK_IMPORTED_MODULE_4__.encodeTransactionOutputsForSigning)(context.sourceOutputs),\n    version: context.transaction.version,\n});\n/**\n * Generate the signing serialization for a particular transaction input\n * following the algorithm required by the provided `signingSerializationType`.\n *\n * Note: When validating transactions with multiple signatures,\n * performance-critical applications should use a memoized sha256 implementation\n * to avoid re-computing hashes.\n */\nconst generateSigningSerializationBCH = (context, { coveredBytecode, signingSerializationType, }, sha256 = _crypto_crypto_js__WEBPACK_IMPORTED_MODULE_0__.sha256) => encodeSigningSerializationBCH({\n    ...generateSigningSerializationComponentsBCH(context),\n    coveredBytecode,\n    signingSerializationType,\n}, sha256);\n/**\n * @param signingSerializationType - the 32-bit number indicating the signing\n * serialization algorithm to use\n */\nconst isLegacySigningSerialization = (signingSerializationType) => {\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n    const forkValue = signingSerializationType >> 8;\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n    const newForkValue = (forkValue ^ 0xdead) | 0xff0000;\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n    const sighashType = (newForkValue << 8) | (signingSerializationType & 0xff);\n    // eslint-disable-next-line no-bitwise\n    return (sighashType & SigningSerializationFlag.forkId) === 0;\n};\n//# sourceMappingURL=signing-serialization.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/signing-serialization.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/stack.js":
/*!*****************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/stack.js ***!
  \*****************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"op2Drop\": () => (/* binding */ op2Drop),\n/* harmony export */   \"op2Dup\": () => (/* binding */ op2Dup),\n/* harmony export */   \"op2Over\": () => (/* binding */ op2Over),\n/* harmony export */   \"op2Rot\": () => (/* binding */ op2Rot),\n/* harmony export */   \"op2Swap\": () => (/* binding */ op2Swap),\n/* harmony export */   \"op3Dup\": () => (/* binding */ op3Dup),\n/* harmony export */   \"opDepth\": () => (/* binding */ opDepth),\n/* harmony export */   \"opDrop\": () => (/* binding */ opDrop),\n/* harmony export */   \"opDup\": () => (/* binding */ opDup),\n/* harmony export */   \"opFromAltStack\": () => (/* binding */ opFromAltStack),\n/* harmony export */   \"opIfDup\": () => (/* binding */ opIfDup),\n/* harmony export */   \"opNip\": () => (/* binding */ opNip),\n/* harmony export */   \"opOver\": () => (/* binding */ opOver),\n/* harmony export */   \"opPick\": () => (/* binding */ opPick),\n/* harmony export */   \"opRoll\": () => (/* binding */ opRoll),\n/* harmony export */   \"opRot\": () => (/* binding */ opRot),\n/* harmony export */   \"opSize\": () => (/* binding */ opSize),\n/* harmony export */   \"opSwap\": () => (/* binding */ opSwap),\n/* harmony export */   \"opToAltStack\": () => (/* binding */ opToAltStack),\n/* harmony export */   \"opTuck\": () => (/* binding */ opTuck)\n/* harmony export */ });\n/* harmony import */ var _combinators_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combinators.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js\");\n/* harmony import */ var _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./instruction-sets-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_combinators_js__WEBPACK_IMPORTED_MODULE_0__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_combinators_js__WEBPACK_IMPORTED_MODULE_0__, _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst opToAltStack = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState, [item]) => {\n    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n    nextState.alternateStack.push(item);\n    return nextState;\n});\nconst opFromAltStack = (state) => {\n    // eslint-disable-next-line functional/immutable-data\n    const item = state.alternateStack.pop();\n    if (item === undefined) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.emptyAlternateStack);\n    }\n    return (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(state, item);\n};\nconst op2Drop = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState) => nextState);\nconst op2Dup = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [a, b]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, a, b, a.slice(), b.slice()));\nconst op3Dup = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useThreeStackItems)(state, (nextState, [a, b, c]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, a, b, c, a.slice(), b.slice(), c.slice()));\nconst op2Over = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useFourStackItems)(state, (nextState, [a, b, c, d]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, a, b, c, d, a.slice(), b.slice()));\nconst op2Rot = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useSixStackItems)(state, (nextState, [a, b, c, d, e, f]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, c, d, e, f, a, b));\nconst op2Swap = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useFourStackItems)(state, (nextState, [a, b, c, d]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, c, d, a, b));\nconst opIfDup = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState, [item]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, ...((0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_2__.stackItemIsTruthy)(item) ? [item, item.slice()] : [item])));\nconst opDepth = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(state, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_2__.bigIntToVmNumber)(BigInt(state.stack.length)));\nconst opDrop = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState) => nextState);\nconst opDup = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState, [item]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, item, item.slice()));\nconst opNip = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [, b]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, b));\nconst opOver = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [a, b]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, a, b, a.slice()));\nconst opPick = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneVmNumber)(state, (nextState, depth) => {\n    const item = nextState.stack[nextState.stack.length - 1 - Number(depth)];\n    if (item === undefined) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.invalidStackIndex);\n    }\n    return (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, item.slice());\n});\nconst opRoll = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneVmNumber)(state, (nextState, depth) => {\n    const index = nextState.stack.length - 1 - Number(depth);\n    if (index < 0 || index > nextState.stack.length - 1) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.invalidStackIndex);\n    }\n    // eslint-disable-next-line functional/immutable-data, @typescript-eslint/no-non-null-assertion\n    return (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, nextState.stack.splice(index, 1)[0]);\n});\nconst opRot = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useThreeStackItems)(state, (nextState, [a, b, c]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, b, c, a));\nconst opSwap = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [a, b]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, b, a));\nconst opTuck = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [a, b]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, b.slice(), a, b));\nconst opSize = (state) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState, [item]) => (0,_combinators_js__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, item, (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_2__.bigIntToVmNumber)(BigInt(item.length))));\n//# sourceMappingURL=stack.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/stack.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/time.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/time.js ***!
  \****************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"opCheckLockTimeVerify\": () => (/* binding */ opCheckLockTimeVerify),\n/* harmony export */   \"opCheckSequenceVerify\": () => (/* binding */ opCheckSequenceVerify)\n/* harmony export */ });\n/* unused harmony export useLocktime */\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js\");\n/* harmony import */ var _instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instruction-sets-utils.js */ \"../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__]);\n_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst useLocktime = (state, operation) => {\n    const item = state.stack[state.stack.length - 1];\n    if (item === undefined) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.emptyStack);\n    }\n    const decodedLocktime = (0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.vmNumberToBigInt)(item, {\n        maximumVmNumberByteLength: 5 /* Constants.locktimeVmNumberByteLength */,\n        requireMinimalEncoding: true,\n    });\n    if ((0,_instruction_sets_utils_js__WEBPACK_IMPORTED_MODULE_1__.isVmNumberError)(decodedLocktime)) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.invalidVmNumber);\n    }\n    const locktime = Number(decodedLocktime);\n    if (locktime < 0) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(state, _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.negativeLocktime);\n    }\n    return operation(state, locktime);\n};\nconst locktimeTypesAreCompatible = (locktime, requiredLocktime) => (locktime < 500000000 /* Constants.locktimeThreshold */ &&\n    requiredLocktime < 500000000 /* Constants.locktimeThreshold */) ||\n    (locktime >= 500000000 /* Constants.locktimeThreshold */ &&\n        requiredLocktime >= 500000000 /* Constants.locktimeThreshold */);\nconst opCheckLockTimeVerify = (state) => useLocktime(state, (nextState, requiredLocktime) => {\n    if (!locktimeTypesAreCompatible(nextState.program.transaction.locktime, requiredLocktime)) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.incompatibleLocktimeType);\n    }\n    if (requiredLocktime > nextState.program.transaction.locktime) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.unsatisfiedLocktime);\n    }\n    const { sequenceNumber } = \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    nextState.program.transaction.inputs[nextState.program.inputIndex];\n    if (sequenceNumber === 4294967295 /* Constants.locktimeDisablingSequenceNumber */) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.locktimeDisabled);\n    }\n    return nextState;\n});\n// eslint-disable-next-line no-bitwise\nconst includesFlag = (value, flag) => (value & flag) !== 0;\nconst opCheckSequenceVerify = (state) => useLocktime(state, \n// eslint-disable-next-line complexity\n(nextState, requiredSequence) => {\n    const { sequenceNumber } = \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    nextState.program.transaction.inputs[nextState.program.inputIndex];\n    const sequenceLocktimeDisabled = includesFlag(requiredSequence, 2147483648 /* Constants.sequenceLocktimeDisableFlag */);\n    if (sequenceLocktimeDisabled) {\n        return nextState;\n    }\n    if (nextState.program.transaction.version <\n        2 /* Constants.sequenceLocktimeTransactionVersionMinimum */) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.checkSequenceUnavailable);\n    }\n    if (includesFlag(sequenceNumber, 2147483648 /* Constants.sequenceLocktimeDisableFlag */)) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.unmatchedSequenceDisable);\n    }\n    if (includesFlag(requiredSequence, 4194304 /* Constants.sequenceLocktimeTypeFlag */) !==\n        includesFlag(sequenceNumber, 4194304 /* Constants.sequenceLocktimeTypeFlag */)) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.incompatibleSequenceType);\n    }\n    if (\n    // eslint-disable-next-line no-bitwise\n    (requiredSequence & 65535 /* Constants.sequenceLocktimeMask */) >\n        // eslint-disable-next-line no-bitwise\n        (sequenceNumber & 65535 /* Constants.sequenceLocktimeMask */)) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyError)(nextState, _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.unsatisfiedSequenceNumber);\n    }\n    return nextState;\n});\n//# sourceMappingURL=time.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/time.js?");

/***/ }),

/***/ "../../node_modules/@bitauth/libauth/build/lib/vm/virtual-machine.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@bitauth/libauth/build/lib/vm/virtual-machine.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAuthenticationVirtualMachine\": () => (/* binding */ createAuthenticationVirtualMachine)\n/* harmony export */ });\n/* harmony import */ var _format_format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/format.js */ \"../../node_modules/@bitauth/libauth/build/lib/format/hex.js\");\n\n/**\n * Create an {@link AuthenticationVirtualMachine} to evaluate authentication\n * programs constructed from operations in the `instructionSet`.\n * @param instructionSet - an {@link InstructionSet}\n */\nconst createAuthenticationVirtualMachine = (instructionSet) => {\n    const availableOpcodes = 256;\n    const operators = (0,_format_format_js__WEBPACK_IMPORTED_MODULE_0__.range)(availableOpcodes).map((codepoint) => instructionSet.operations[codepoint] === undefined\n        ? instructionSet.undefined\n        : instructionSet.operations[codepoint]);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const getCodepoint = (state) => state.instructions[state.ip];\n    const after = (state) => {\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n        state.ip += 1;\n        return state;\n    };\n    const getOperation = (state) => \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    operators[getCodepoint(state).opcode];\n    const noOp = ((state) => state);\n    const stateEvery = instructionSet.every ?? noOp;\n    const stateStepMutate = (state) => {\n        const operator = getOperation(state);\n        return after(stateEvery(operator(state)));\n    };\n    const stateContinue = instructionSet.continue;\n    /**\n     * When we get real tail call optimization, this can be replaced\n     * with recursion.\n     */\n    const untilComplete = (state, stepFunction) => {\n        // eslint-disable-next-line functional/no-loop-statement\n        while (stateContinue(state)) {\n            // eslint-disable-next-line functional/no-expression-statement, no-param-reassign\n            state = stepFunction(state);\n        }\n        return state;\n    };\n    const stateClone = instructionSet.clone;\n    const { success } = instructionSet;\n    const stateEvaluate = (state) => untilComplete(stateClone(state), stateStepMutate);\n    const stateDebugStep = (state) => {\n        const operator = getOperation(state);\n        return after(stateEvery(operator(stateClone(state))));\n    };\n    const stateDebug = (state) => {\n        const trace = [];\n        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n        trace.push(state);\n        // eslint-disable-next-line functional/no-expression-statement\n        untilComplete(state, (currentState) => {\n            const nextState = stateDebugStep(currentState);\n            // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n            trace.push(nextState);\n            return nextState;\n        });\n        return trace;\n    };\n    const stateStep = (state) => stateStepMutate(stateClone(state));\n    const evaluate = (program) => instructionSet.evaluate(program, stateEvaluate);\n    const debug = (program) => {\n        const results = [];\n        const proxyDebug = (state) => {\n            const debugResult = stateDebug(state);\n            // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data\n            results.push(...debugResult);\n            return debugResult[debugResult.length - 1] ?? state;\n        };\n        const finalResult = instructionSet.evaluate(program, proxyDebug);\n        return [...results, finalResult];\n    };\n    const verify = (resolvedTransaction) => instructionSet.verify(resolvedTransaction, evaluate, success);\n    return {\n        debug,\n        evaluate,\n        stateClone,\n        stateContinue,\n        stateDebug,\n        stateEvaluate,\n        stateStep,\n        stateStepMutate,\n        stateSuccess: success,\n        verify,\n    };\n};\n//# sourceMappingURL=virtual-machine.js.map\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/@bitauth/libauth/build/lib/vm/virtual-machine.js?");

/***/ }),

/***/ "../../node_modules/async-mutex/index.mjs":
/*!************************************************!*\
  !*** ../../node_modules/async-mutex/index.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Mutex\": () => (/* binding */ Mutex)\n/* harmony export */ });\n/* unused harmony exports E_ALREADY_LOCKED, E_CANCELED, E_TIMEOUT, Semaphore, tryAcquire, withTimeout */\nconst E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter$2 = ( false) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_maxConcurrency, _cancelError = E_CANCELED) {\n        this._maxConcurrency = _maxConcurrency;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        this._waiters = [];\n        if (_maxConcurrency <= 0) {\n            throw new Error('semaphore must be initialized to a positive value');\n        }\n        this._value = _maxConcurrency;\n    }\n    acquire() {\n        const locked = this.isLocked();\n        const ticketPromise = new Promise((resolve, reject) => this._queue.push({ resolve, reject }));\n        if (!locked)\n            this._dispatch();\n        return ticketPromise;\n    }\n    runExclusive(callback) {\n        return __awaiter$2(this, void 0, void 0, function* () {\n            const [value, release] = yield this.acquire();\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    waitForUnlock() {\n        return __awaiter$2(this, void 0, void 0, function* () {\n            if (!this.isLocked()) {\n                return Promise.resolve();\n            }\n            const waitPromise = new Promise((resolve) => this._waiters.push({ resolve }));\n            return waitPromise;\n        });\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n    release() {\n        if (this._maxConcurrency > 1) {\n            throw new Error('this method is unavailable on semaphores with concurrency > 1; use the scoped release returned by acquire instead');\n        }\n        if (this._currentReleaser) {\n            const releaser = this._currentReleaser;\n            this._currentReleaser = undefined;\n            releaser();\n        }\n    }\n    cancel() {\n        this._queue.forEach((ticket) => ticket.reject(this._cancelError));\n        this._queue = [];\n    }\n    _dispatch() {\n        const nextTicket = this._queue.shift();\n        if (!nextTicket)\n            return;\n        let released = false;\n        this._currentReleaser = () => {\n            if (released)\n                return;\n            released = true;\n            this._value++;\n            this._resolveWaiters();\n            this._dispatch();\n        };\n        nextTicket.resolve([this._value--, this._currentReleaser]);\n    }\n    _resolveWaiters() {\n        this._waiters.forEach((waiter) => waiter.resolve());\n        this._waiters = [];\n    }\n}\n\nvar __awaiter$1 = ( false) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, void 0, void 0, function* () {\n            const [, releaser] = yield this._semaphore.acquire();\n            return releaser;\n        });\n    }\n    runExclusive(callback) {\n        return this._semaphore.runExclusive(() => callback());\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    waitForUnlock() {\n        return this._semaphore.waitForUnlock();\n    }\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n    release() {\n        this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter = ( false) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: () => new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            let isTimeout = false;\n            const handle = setTimeout(() => {\n                isTimeout = true;\n                reject(timeoutError);\n            }, timeout);\n            try {\n                const ticket = yield sync.acquire();\n                if (isTimeout) {\n                    const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                    release();\n                }\n                else {\n                    clearTimeout(handle);\n                    resolve(ticket);\n                }\n            }\n            catch (e) {\n                if (!isTimeout) {\n                    clearTimeout(handle);\n                    reject(e);\n                }\n            }\n        })),\n        runExclusive(callback) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire();\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n        release() {\n            sync.release();\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        waitForUnlock: () => sync.waitForUnlock(),\n        isLocked: () => sync.isLocked(),\n    };\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\n\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/async-mutex/index.mjs?");

/***/ }),

/***/ "../../node_modules/dexie/dist/modern/dexie.mjs":
/*!******************************************************!*\
  !*** ../../node_modules/dexie/dist/modern/dexie.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Dexie$1)\n/* harmony export */ });\n/* unused harmony exports Dexie, RangeSet, liveQuery, mergeRanges, rangesOverlap */\n/*\n * Dexie.js - a minimalistic wrapper for IndexedDB\n * ===============================================\n *\n * By David Fahlander, david.fahlander@gmail.com\n *\n * Version 3.2.2, Wed Apr 27 2022\n *\n * https://dexie.org\n *\n * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/\n */\n \nconst _global = typeof globalThis !== 'undefined' ? globalThis :\n    typeof self !== 'undefined' ? self :\n        typeof window !== 'undefined' ? window :\n            global;\n\nconst keys = Object.keys;\nconst isArray = Array.isArray;\nif (typeof Promise !== 'undefined' && !_global.Promise) {\n    _global.Promise = Promise;\n}\nfunction extend(obj, extension) {\n    if (typeof extension !== 'object')\n        return obj;\n    keys(extension).forEach(function (key) {\n        obj[key] = extension[key];\n    });\n    return obj;\n}\nconst getProto = Object.getPrototypeOf;\nconst _hasOwn = {}.hasOwnProperty;\nfunction hasOwn(obj, prop) {\n    return _hasOwn.call(obj, prop);\n}\nfunction props(proto, extension) {\n    if (typeof extension === 'function')\n        extension = extension(getProto(proto));\n    (typeof Reflect === \"undefined\" ? keys : Reflect.ownKeys)(extension).forEach(key => {\n        setProp(proto, key, extension[key]);\n    });\n}\nconst defineProperty = Object.defineProperty;\nfunction setProp(obj, prop, functionOrGetSet, options) {\n    defineProperty(obj, prop, extend(functionOrGetSet && hasOwn(functionOrGetSet, \"get\") && typeof functionOrGetSet.get === 'function' ?\n        { get: functionOrGetSet.get, set: functionOrGetSet.set, configurable: true } :\n        { value: functionOrGetSet, configurable: true, writable: true }, options));\n}\nfunction derive(Child) {\n    return {\n        from: function (Parent) {\n            Child.prototype = Object.create(Parent.prototype);\n            setProp(Child.prototype, \"constructor\", Child);\n            return {\n                extend: props.bind(null, Child.prototype)\n            };\n        }\n    };\n}\nconst getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nfunction getPropertyDescriptor(obj, prop) {\n    const pd = getOwnPropertyDescriptor(obj, prop);\n    let proto;\n    return pd || (proto = getProto(obj)) && getPropertyDescriptor(proto, prop);\n}\nconst _slice = [].slice;\nfunction slice(args, start, end) {\n    return _slice.call(args, start, end);\n}\nfunction override(origFunc, overridedFactory) {\n    return overridedFactory(origFunc);\n}\nfunction assert(b) {\n    if (!b)\n        throw new Error(\"Assertion Failed\");\n}\nfunction asap$1(fn) {\n    if (_global.setImmediate)\n        setImmediate(fn);\n    else\n        setTimeout(fn, 0);\n}\nfunction arrayToObject(array, extractor) {\n    return array.reduce((result, item, i) => {\n        var nameAndValue = extractor(item, i);\n        if (nameAndValue)\n            result[nameAndValue[0]] = nameAndValue[1];\n        return result;\n    }, {});\n}\nfunction tryCatch(fn, onerror, args) {\n    try {\n        fn.apply(null, args);\n    }\n    catch (ex) {\n        onerror && onerror(ex);\n    }\n}\nfunction getByKeyPath(obj, keyPath) {\n    if (hasOwn(obj, keyPath))\n        return obj[keyPath];\n    if (!keyPath)\n        return obj;\n    if (typeof keyPath !== 'string') {\n        var rv = [];\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            var val = getByKeyPath(obj, keyPath[i]);\n            rv.push(val);\n        }\n        return rv;\n    }\n    var period = keyPath.indexOf('.');\n    if (period !== -1) {\n        var innerObj = obj[keyPath.substr(0, period)];\n        return innerObj === undefined ? undefined : getByKeyPath(innerObj, keyPath.substr(period + 1));\n    }\n    return undefined;\n}\nfunction setByKeyPath(obj, keyPath, value) {\n    if (!obj || keyPath === undefined)\n        return;\n    if ('isFrozen' in Object && Object.isFrozen(obj))\n        return;\n    if (typeof keyPath !== 'string' && 'length' in keyPath) {\n        assert(typeof value !== 'string' && 'length' in value);\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            setByKeyPath(obj, keyPath[i], value[i]);\n        }\n    }\n    else {\n        var period = keyPath.indexOf('.');\n        if (period !== -1) {\n            var currentKeyPath = keyPath.substr(0, period);\n            var remainingKeyPath = keyPath.substr(period + 1);\n            if (remainingKeyPath === \"\")\n                if (value === undefined) {\n                    if (isArray(obj) && !isNaN(parseInt(currentKeyPath)))\n                        obj.splice(currentKeyPath, 1);\n                    else\n                        delete obj[currentKeyPath];\n                }\n                else\n                    obj[currentKeyPath] = value;\n            else {\n                var innerObj = obj[currentKeyPath];\n                if (!innerObj || !hasOwn(obj, currentKeyPath))\n                    innerObj = (obj[currentKeyPath] = {});\n                setByKeyPath(innerObj, remainingKeyPath, value);\n            }\n        }\n        else {\n            if (value === undefined) {\n                if (isArray(obj) && !isNaN(parseInt(keyPath)))\n                    obj.splice(keyPath, 1);\n                else\n                    delete obj[keyPath];\n            }\n            else\n                obj[keyPath] = value;\n        }\n    }\n}\nfunction delByKeyPath(obj, keyPath) {\n    if (typeof keyPath === 'string')\n        setByKeyPath(obj, keyPath, undefined);\n    else if ('length' in keyPath)\n        [].map.call(keyPath, function (kp) {\n            setByKeyPath(obj, kp, undefined);\n        });\n}\nfunction shallowClone(obj) {\n    var rv = {};\n    for (var m in obj) {\n        if (hasOwn(obj, m))\n            rv[m] = obj[m];\n    }\n    return rv;\n}\nconst concat = [].concat;\nfunction flatten(a) {\n    return concat.apply([], a);\n}\nconst intrinsicTypeNames = \"Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey\"\n    .split(',').concat(flatten([8, 16, 32, 64].map(num => [\"Int\", \"Uint\", \"Float\"].map(t => t + num + \"Array\")))).filter(t => _global[t]);\nconst intrinsicTypes = intrinsicTypeNames.map(t => _global[t]);\narrayToObject(intrinsicTypeNames, x => [x, true]);\nlet circularRefs = null;\nfunction deepClone(any) {\n    circularRefs = typeof WeakMap !== 'undefined' && new WeakMap();\n    const rv = innerDeepClone(any);\n    circularRefs = null;\n    return rv;\n}\nfunction innerDeepClone(any) {\n    if (!any || typeof any !== 'object')\n        return any;\n    let rv = circularRefs && circularRefs.get(any);\n    if (rv)\n        return rv;\n    if (isArray(any)) {\n        rv = [];\n        circularRefs && circularRefs.set(any, rv);\n        for (var i = 0, l = any.length; i < l; ++i) {\n            rv.push(innerDeepClone(any[i]));\n        }\n    }\n    else if (intrinsicTypes.indexOf(any.constructor) >= 0) {\n        rv = any;\n    }\n    else {\n        const proto = getProto(any);\n        rv = proto === Object.prototype ? {} : Object.create(proto);\n        circularRefs && circularRefs.set(any, rv);\n        for (var prop in any) {\n            if (hasOwn(any, prop)) {\n                rv[prop] = innerDeepClone(any[prop]);\n            }\n        }\n    }\n    return rv;\n}\nconst { toString } = {};\nfunction toStringTag(o) {\n    return toString.call(o).slice(8, -1);\n}\nconst iteratorSymbol = typeof Symbol !== 'undefined' ?\n    Symbol.iterator :\n    '@@iterator';\nconst getIteratorOf = typeof iteratorSymbol === \"symbol\" ? function (x) {\n    var i;\n    return x != null && (i = x[iteratorSymbol]) && i.apply(x);\n} : function () { return null; };\nconst NO_CHAR_ARRAY = {};\nfunction getArrayOf(arrayLike) {\n    var i, a, x, it;\n    if (arguments.length === 1) {\n        if (isArray(arrayLike))\n            return arrayLike.slice();\n        if (this === NO_CHAR_ARRAY && typeof arrayLike === 'string')\n            return [arrayLike];\n        if ((it = getIteratorOf(arrayLike))) {\n            a = [];\n            while ((x = it.next()), !x.done)\n                a.push(x.value);\n            return a;\n        }\n        if (arrayLike == null)\n            return [arrayLike];\n        i = arrayLike.length;\n        if (typeof i === 'number') {\n            a = new Array(i);\n            while (i--)\n                a[i] = arrayLike[i];\n            return a;\n        }\n        return [arrayLike];\n    }\n    i = arguments.length;\n    a = new Array(i);\n    while (i--)\n        a[i] = arguments[i];\n    return a;\n}\nconst isAsyncFunction = typeof Symbol !== 'undefined'\n    ? (fn) => fn[Symbol.toStringTag] === 'AsyncFunction'\n    : () => false;\n\nvar debug = typeof location !== 'undefined' &&\n    /^(http|https):\\/\\/(localhost|127\\.0\\.0\\.1)/.test(location.href);\nfunction setDebug(value, filter) {\n    debug = value;\n    libraryFilter = filter;\n}\nvar libraryFilter = () => true;\nconst NEEDS_THROW_FOR_STACK = !new Error(\"\").stack;\nfunction getErrorWithStack() {\n    if (NEEDS_THROW_FOR_STACK)\n        try {\n            getErrorWithStack.arguments;\n            throw new Error();\n        }\n        catch (e) {\n            return e;\n        }\n    return new Error();\n}\nfunction prettyStack(exception, numIgnoredFrames) {\n    var stack = exception.stack;\n    if (!stack)\n        return \"\";\n    numIgnoredFrames = (numIgnoredFrames || 0);\n    if (stack.indexOf(exception.name) === 0)\n        numIgnoredFrames += (exception.name + exception.message).split('\\n').length;\n    return stack.split('\\n')\n        .slice(numIgnoredFrames)\n        .filter(libraryFilter)\n        .map(frame => \"\\n\" + frame)\n        .join('');\n}\n\nvar dexieErrorNames = [\n    'Modify',\n    'Bulk',\n    'OpenFailed',\n    'VersionChange',\n    'Schema',\n    'Upgrade',\n    'InvalidTable',\n    'MissingAPI',\n    'NoSuchDatabase',\n    'InvalidArgument',\n    'SubTransaction',\n    'Unsupported',\n    'Internal',\n    'DatabaseClosed',\n    'PrematureCommit',\n    'ForeignAwait'\n];\nvar idbDomErrorNames = [\n    'Unknown',\n    'Constraint',\n    'Data',\n    'TransactionInactive',\n    'ReadOnly',\n    'Version',\n    'NotFound',\n    'InvalidState',\n    'InvalidAccess',\n    'Abort',\n    'Timeout',\n    'QuotaExceeded',\n    'Syntax',\n    'DataClone'\n];\nvar errorList = dexieErrorNames.concat(idbDomErrorNames);\nvar defaultTexts = {\n    VersionChanged: \"Database version changed by other database connection\",\n    DatabaseClosed: \"Database has been closed\",\n    Abort: \"Transaction aborted\",\n    TransactionInactive: \"Transaction has already completed or failed\",\n    MissingAPI: \"IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb\"\n};\nfunction DexieError(name, msg) {\n    this._e = getErrorWithStack();\n    this.name = name;\n    this.message = msg;\n}\nderive(DexieError).from(Error).extend({\n    stack: {\n        get: function () {\n            return this._stack ||\n                (this._stack = this.name + \": \" + this.message + prettyStack(this._e, 2));\n        }\n    },\n    toString: function () { return this.name + \": \" + this.message; }\n});\nfunction getMultiErrorMessage(msg, failures) {\n    return msg + \". Errors: \" + Object.keys(failures)\n        .map(key => failures[key].toString())\n        .filter((v, i, s) => s.indexOf(v) === i)\n        .join('\\n');\n}\nfunction ModifyError(msg, failures, successCount, failedKeys) {\n    this._e = getErrorWithStack();\n    this.failures = failures;\n    this.failedKeys = failedKeys;\n    this.successCount = successCount;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(ModifyError).from(DexieError);\nfunction BulkError(msg, failures) {\n    this._e = getErrorWithStack();\n    this.name = \"BulkError\";\n    this.failures = Object.keys(failures).map(pos => failures[pos]);\n    this.failuresByPos = failures;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(BulkError).from(DexieError);\nvar errnames = errorList.reduce((obj, name) => (obj[name] = name + \"Error\", obj), {});\nconst BaseException = DexieError;\nvar exceptions = errorList.reduce((obj, name) => {\n    var fullName = name + \"Error\";\n    function DexieError(msgOrInner, inner) {\n        this._e = getErrorWithStack();\n        this.name = fullName;\n        if (!msgOrInner) {\n            this.message = defaultTexts[name] || fullName;\n            this.inner = null;\n        }\n        else if (typeof msgOrInner === 'string') {\n            this.message = `${msgOrInner}${!inner ? '' : '\\n ' + inner}`;\n            this.inner = inner || null;\n        }\n        else if (typeof msgOrInner === 'object') {\n            this.message = `${msgOrInner.name} ${msgOrInner.message}`;\n            this.inner = msgOrInner;\n        }\n    }\n    derive(DexieError).from(BaseException);\n    obj[name] = DexieError;\n    return obj;\n}, {});\nexceptions.Syntax = SyntaxError;\nexceptions.Type = TypeError;\nexceptions.Range = RangeError;\nvar exceptionMap = idbDomErrorNames.reduce((obj, name) => {\n    obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfunction mapError(domError, message) {\n    if (!domError || domError instanceof DexieError || domError instanceof TypeError || domError instanceof SyntaxError || !domError.name || !exceptionMap[domError.name])\n        return domError;\n    var rv = new exceptionMap[domError.name](message || domError.message, domError);\n    if (\"stack\" in domError) {\n        setProp(rv, \"stack\", { get: function () {\n                return this.inner.stack;\n            } });\n    }\n    return rv;\n}\nvar fullNameExceptions = errorList.reduce((obj, name) => {\n    if ([\"Syntax\", \"Type\", \"Range\"].indexOf(name) === -1)\n        obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfullNameExceptions.ModifyError = ModifyError;\nfullNameExceptions.DexieError = DexieError;\nfullNameExceptions.BulkError = BulkError;\n\nfunction nop() { }\nfunction mirror(val) { return val; }\nfunction pureFunctionChain(f1, f2) {\n    if (f1 == null || f1 === mirror)\n        return f2;\n    return function (val) {\n        return f2(f1(val));\n    };\n}\nfunction callBoth(on1, on2) {\n    return function () {\n        on1.apply(this, arguments);\n        on2.apply(this, arguments);\n    };\n}\nfunction hookCreatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res !== undefined)\n            arguments[0] = res;\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res2 !== undefined ? res2 : res;\n    };\n}\nfunction hookDeletingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        f1.apply(this, arguments);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = this.onerror = null;\n        f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n    };\n}\nfunction hookUpdatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function (modifications) {\n        var res = f1.apply(this, arguments);\n        extend(modifications, res);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res === undefined ?\n            (res2 === undefined ? undefined : res2) :\n            (extend(res, res2));\n    };\n}\nfunction reverseStoppableEventChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        if (f2.apply(this, arguments) === false)\n            return false;\n        return f1.apply(this, arguments);\n    };\n}\nfunction promisableChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res && typeof res.then === 'function') {\n            var thiz = this, i = arguments.length, args = new Array(i);\n            while (i--)\n                args[i] = arguments[i];\n            return res.then(function () {\n                return f2.apply(thiz, args);\n            });\n        }\n        return f2.apply(this, arguments);\n    };\n}\n\nvar INTERNAL = {};\nconst LONG_STACKS_CLIP_LIMIT = 100,\nMAX_LONG_STACKS = 20, ZONE_ECHO_LIMIT = 100, [resolvedNativePromise, nativePromiseProto, resolvedGlobalPromise] = typeof Promise === 'undefined' ?\n    [] :\n    (() => {\n        let globalP = Promise.resolve();\n        if (typeof crypto === 'undefined' || !crypto.subtle)\n            return [globalP, getProto(globalP), globalP];\n        const nativeP = crypto.subtle.digest(\"SHA-512\", new Uint8Array([0]));\n        return [\n            nativeP,\n            getProto(nativeP),\n            globalP\n        ];\n    })(), nativePromiseThen = nativePromiseProto && nativePromiseProto.then;\nconst NativePromise = resolvedNativePromise && resolvedNativePromise.constructor;\nconst patchGlobalPromise = !!resolvedGlobalPromise;\nvar stack_being_generated = false;\nvar schedulePhysicalTick = resolvedGlobalPromise ?\n    () => { resolvedGlobalPromise.then(physicalTick); }\n    :\n        _global.setImmediate ?\n            setImmediate.bind(null, physicalTick) :\n            _global.MutationObserver ?\n                () => {\n                    var hiddenDiv = document.createElement(\"div\");\n                    (new MutationObserver(() => {\n                        physicalTick();\n                        hiddenDiv = null;\n                    })).observe(hiddenDiv, { attributes: true });\n                    hiddenDiv.setAttribute('i', '1');\n                } :\n                () => { setTimeout(physicalTick, 0); };\nvar asap = function (callback, args) {\n    microtickQueue.push([callback, args]);\n    if (needsNewPhysicalTick) {\n        schedulePhysicalTick();\n        needsNewPhysicalTick = false;\n    }\n};\nvar isOutsideMicroTick = true,\nneedsNewPhysicalTick = true,\nunhandledErrors = [],\nrejectingErrors = [],\ncurrentFulfiller = null, rejectionMapper = mirror;\nvar globalPSD = {\n    id: 'global',\n    global: true,\n    ref: 0,\n    unhandleds: [],\n    onunhandled: globalError,\n    pgp: false,\n    env: {},\n    finalize: function () {\n        this.unhandleds.forEach(uh => {\n            try {\n                globalError(uh[0], uh[1]);\n            }\n            catch (e) { }\n        });\n    }\n};\nvar PSD = globalPSD;\nvar microtickQueue = [];\nvar numScheduledCalls = 0;\nvar tickFinalizers = [];\nfunction DexiePromise(fn) {\n    if (typeof this !== 'object')\n        throw new TypeError('Promises must be constructed via new');\n    this._listeners = [];\n    this.onuncatched = nop;\n    this._lib = false;\n    var psd = (this._PSD = PSD);\n    if (debug) {\n        this._stackHolder = getErrorWithStack();\n        this._prev = null;\n        this._numPrev = 0;\n    }\n    if (typeof fn !== 'function') {\n        if (fn !== INTERNAL)\n            throw new TypeError('Not a function');\n        this._state = arguments[1];\n        this._value = arguments[2];\n        if (this._state === false)\n            handleRejection(this, this._value);\n        return;\n    }\n    this._state = null;\n    this._value = null;\n    ++psd.ref;\n    executePromiseTask(this, fn);\n}\nconst thenProp = {\n    get: function () {\n        var psd = PSD, microTaskId = totalEchoes;\n        function then(onFulfilled, onRejected) {\n            var possibleAwait = !psd.global && (psd !== PSD || microTaskId !== totalEchoes);\n            const cleanup = possibleAwait && !decrementExpectedAwaits();\n            var rv = new DexiePromise((resolve, reject) => {\n                propagateToListener(this, new Listener(nativeAwaitCompatibleWrap(onFulfilled, psd, possibleAwait, cleanup), nativeAwaitCompatibleWrap(onRejected, psd, possibleAwait, cleanup), resolve, reject, psd));\n            });\n            debug && linkToPreviousPromise(rv, this);\n            return rv;\n        }\n        then.prototype = INTERNAL;\n        return then;\n    },\n    set: function (value) {\n        setProp(this, 'then', value && value.prototype === INTERNAL ?\n            thenProp :\n            {\n                get: function () {\n                    return value;\n                },\n                set: thenProp.set\n            });\n    }\n};\nprops(DexiePromise.prototype, {\n    then: thenProp,\n    _then: function (onFulfilled, onRejected) {\n        propagateToListener(this, new Listener(null, null, onFulfilled, onRejected, PSD));\n    },\n    catch: function (onRejected) {\n        if (arguments.length === 1)\n            return this.then(null, onRejected);\n        var type = arguments[0], handler = arguments[1];\n        return typeof type === 'function' ? this.then(null, err =>\n        err instanceof type ? handler(err) : PromiseReject(err))\n            : this.then(null, err =>\n            err && err.name === type ? handler(err) : PromiseReject(err));\n    },\n    finally: function (onFinally) {\n        return this.then(value => {\n            onFinally();\n            return value;\n        }, err => {\n            onFinally();\n            return PromiseReject(err);\n        });\n    },\n    stack: {\n        get: function () {\n            if (this._stack)\n                return this._stack;\n            try {\n                stack_being_generated = true;\n                var stacks = getStack(this, [], MAX_LONG_STACKS);\n                var stack = stacks.join(\"\\nFrom previous: \");\n                if (this._state !== null)\n                    this._stack = stack;\n                return stack;\n            }\n            finally {\n                stack_being_generated = false;\n            }\n        }\n    },\n    timeout: function (ms, msg) {\n        return ms < Infinity ?\n            new DexiePromise((resolve, reject) => {\n                var handle = setTimeout(() => reject(new exceptions.Timeout(msg)), ms);\n                this.then(resolve, reject).finally(clearTimeout.bind(null, handle));\n            }) : this;\n    }\n});\nif (typeof Symbol !== 'undefined' && Symbol.toStringTag)\n    setProp(DexiePromise.prototype, Symbol.toStringTag, 'Dexie.Promise');\nglobalPSD.env = snapShot();\nfunction Listener(onFulfilled, onRejected, resolve, reject, zone) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.resolve = resolve;\n    this.reject = reject;\n    this.psd = zone;\n}\nprops(DexiePromise, {\n    all: function () {\n        var values = getArrayOf.apply(null, arguments)\n            .map(onPossibleParallellAsync);\n        return new DexiePromise(function (resolve, reject) {\n            if (values.length === 0)\n                resolve([]);\n            var remaining = values.length;\n            values.forEach((a, i) => DexiePromise.resolve(a).then(x => {\n                values[i] = x;\n                if (!--remaining)\n                    resolve(values);\n            }, reject));\n        });\n    },\n    resolve: value => {\n        if (value instanceof DexiePromise)\n            return value;\n        if (value && typeof value.then === 'function')\n            return new DexiePromise((resolve, reject) => {\n                value.then(resolve, reject);\n            });\n        var rv = new DexiePromise(INTERNAL, true, value);\n        linkToPreviousPromise(rv, currentFulfiller);\n        return rv;\n    },\n    reject: PromiseReject,\n    race: function () {\n        var values = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n        return new DexiePromise((resolve, reject) => {\n            values.map(value => DexiePromise.resolve(value).then(resolve, reject));\n        });\n    },\n    PSD: {\n        get: () => PSD,\n        set: value => PSD = value\n    },\n    totalEchoes: { get: () => totalEchoes },\n    newPSD: newScope,\n    usePSD: usePSD,\n    scheduler: {\n        get: () => asap,\n        set: value => { asap = value; }\n    },\n    rejectionMapper: {\n        get: () => rejectionMapper,\n        set: value => { rejectionMapper = value; }\n    },\n    follow: (fn, zoneProps) => {\n        return new DexiePromise((resolve, reject) => {\n            return newScope((resolve, reject) => {\n                var psd = PSD;\n                psd.unhandleds = [];\n                psd.onunhandled = reject;\n                psd.finalize = callBoth(function () {\n                    run_at_end_of_this_or_next_physical_tick(() => {\n                        this.unhandleds.length === 0 ? resolve() : reject(this.unhandleds[0]);\n                    });\n                }, psd.finalize);\n                fn();\n            }, zoneProps, resolve, reject);\n        });\n    }\n});\nif (NativePromise) {\n    if (NativePromise.allSettled)\n        setProp(DexiePromise, \"allSettled\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise(resolve => {\n                if (possiblePromises.length === 0)\n                    resolve([]);\n                let remaining = possiblePromises.length;\n                const results = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => results[i] = { status: \"fulfilled\", value }, reason => results[i] = { status: \"rejected\", reason })\n                    .then(() => --remaining || resolve(results)));\n            });\n        });\n    if (NativePromise.any && typeof AggregateError !== 'undefined')\n        setProp(DexiePromise, \"any\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise((resolve, reject) => {\n                if (possiblePromises.length === 0)\n                    reject(new AggregateError([]));\n                let remaining = possiblePromises.length;\n                const failures = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => resolve(value), failure => {\n                    failures[i] = failure;\n                    if (!--remaining)\n                        reject(new AggregateError(failures));\n                }));\n            });\n        });\n}\nfunction executePromiseTask(promise, fn) {\n    try {\n        fn(value => {\n            if (promise._state !== null)\n                return;\n            if (value === promise)\n                throw new TypeError('A promise cannot be resolved with itself.');\n            var shouldExecuteTick = promise._lib && beginMicroTickScope();\n            if (value && typeof value.then === 'function') {\n                executePromiseTask(promise, (resolve, reject) => {\n                    value instanceof DexiePromise ?\n                        value._then(resolve, reject) :\n                        value.then(resolve, reject);\n                });\n            }\n            else {\n                promise._state = true;\n                promise._value = value;\n                propagateAllListeners(promise);\n            }\n            if (shouldExecuteTick)\n                endMicroTickScope();\n        }, handleRejection.bind(null, promise));\n    }\n    catch (ex) {\n        handleRejection(promise, ex);\n    }\n}\nfunction handleRejection(promise, reason) {\n    rejectingErrors.push(reason);\n    if (promise._state !== null)\n        return;\n    var shouldExecuteTick = promise._lib && beginMicroTickScope();\n    reason = rejectionMapper(reason);\n    promise._state = false;\n    promise._value = reason;\n    debug && reason !== null && typeof reason === 'object' && !reason._promise && tryCatch(() => {\n        var origProp = getPropertyDescriptor(reason, \"stack\");\n        reason._promise = promise;\n        setProp(reason, \"stack\", {\n            get: () => stack_being_generated ?\n                origProp && (origProp.get ?\n                    origProp.get.apply(reason) :\n                    origProp.value) :\n                promise.stack\n        });\n    });\n    addPossiblyUnhandledError(promise);\n    propagateAllListeners(promise);\n    if (shouldExecuteTick)\n        endMicroTickScope();\n}\nfunction propagateAllListeners(promise) {\n    var listeners = promise._listeners;\n    promise._listeners = [];\n    for (var i = 0, len = listeners.length; i < len; ++i) {\n        propagateToListener(promise, listeners[i]);\n    }\n    var psd = promise._PSD;\n    --psd.ref || psd.finalize();\n    if (numScheduledCalls === 0) {\n        ++numScheduledCalls;\n        asap(() => {\n            if (--numScheduledCalls === 0)\n                finalizePhysicalTick();\n        }, []);\n    }\n}\nfunction propagateToListener(promise, listener) {\n    if (promise._state === null) {\n        promise._listeners.push(listener);\n        return;\n    }\n    var cb = promise._state ? listener.onFulfilled : listener.onRejected;\n    if (cb === null) {\n        return (promise._state ? listener.resolve : listener.reject)(promise._value);\n    }\n    ++listener.psd.ref;\n    ++numScheduledCalls;\n    asap(callListener, [cb, promise, listener]);\n}\nfunction callListener(cb, promise, listener) {\n    try {\n        currentFulfiller = promise;\n        var ret, value = promise._value;\n        if (promise._state) {\n            ret = cb(value);\n        }\n        else {\n            if (rejectingErrors.length)\n                rejectingErrors = [];\n            ret = cb(value);\n            if (rejectingErrors.indexOf(value) === -1)\n                markErrorAsHandled(promise);\n        }\n        listener.resolve(ret);\n    }\n    catch (e) {\n        listener.reject(e);\n    }\n    finally {\n        currentFulfiller = null;\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n        --listener.psd.ref || listener.psd.finalize();\n    }\n}\nfunction getStack(promise, stacks, limit) {\n    if (stacks.length === limit)\n        return stacks;\n    var stack = \"\";\n    if (promise._state === false) {\n        var failure = promise._value, errorName, message;\n        if (failure != null) {\n            errorName = failure.name || \"Error\";\n            message = failure.message || failure;\n            stack = prettyStack(failure, 0);\n        }\n        else {\n            errorName = failure;\n            message = \"\";\n        }\n        stacks.push(errorName + (message ? \": \" + message : \"\") + stack);\n    }\n    if (debug) {\n        stack = prettyStack(promise._stackHolder, 2);\n        if (stack && stacks.indexOf(stack) === -1)\n            stacks.push(stack);\n        if (promise._prev)\n            getStack(promise._prev, stacks, limit);\n    }\n    return stacks;\n}\nfunction linkToPreviousPromise(promise, prev) {\n    var numPrev = prev ? prev._numPrev + 1 : 0;\n    if (numPrev < LONG_STACKS_CLIP_LIMIT) {\n        promise._prev = prev;\n        promise._numPrev = numPrev;\n    }\n}\nfunction physicalTick() {\n    beginMicroTickScope() && endMicroTickScope();\n}\nfunction beginMicroTickScope() {\n    var wasRootExec = isOutsideMicroTick;\n    isOutsideMicroTick = false;\n    needsNewPhysicalTick = false;\n    return wasRootExec;\n}\nfunction endMicroTickScope() {\n    var callbacks, i, l;\n    do {\n        while (microtickQueue.length > 0) {\n            callbacks = microtickQueue;\n            microtickQueue = [];\n            l = callbacks.length;\n            for (i = 0; i < l; ++i) {\n                var item = callbacks[i];\n                item[0].apply(null, item[1]);\n            }\n        }\n    } while (microtickQueue.length > 0);\n    isOutsideMicroTick = true;\n    needsNewPhysicalTick = true;\n}\nfunction finalizePhysicalTick() {\n    var unhandledErrs = unhandledErrors;\n    unhandledErrors = [];\n    unhandledErrs.forEach(p => {\n        p._PSD.onunhandled.call(null, p._value, p);\n    });\n    var finalizers = tickFinalizers.slice(0);\n    var i = finalizers.length;\n    while (i)\n        finalizers[--i]();\n}\nfunction run_at_end_of_this_or_next_physical_tick(fn) {\n    function finalizer() {\n        fn();\n        tickFinalizers.splice(tickFinalizers.indexOf(finalizer), 1);\n    }\n    tickFinalizers.push(finalizer);\n    ++numScheduledCalls;\n    asap(() => {\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n    }, []);\n}\nfunction addPossiblyUnhandledError(promise) {\n    if (!unhandledErrors.some(p => p._value === promise._value))\n        unhandledErrors.push(promise);\n}\nfunction markErrorAsHandled(promise) {\n    var i = unhandledErrors.length;\n    while (i)\n        if (unhandledErrors[--i]._value === promise._value) {\n            unhandledErrors.splice(i, 1);\n            return;\n        }\n}\nfunction PromiseReject(reason) {\n    return new DexiePromise(INTERNAL, false, reason);\n}\nfunction wrap(fn, errorCatcher) {\n    var psd = PSD;\n    return function () {\n        var wasRootExec = beginMicroTickScope(), outerScope = PSD;\n        try {\n            switchToZone(psd, true);\n            return fn.apply(this, arguments);\n        }\n        catch (e) {\n            errorCatcher && errorCatcher(e);\n        }\n        finally {\n            switchToZone(outerScope, false);\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    };\n}\nconst task = { awaits: 0, echoes: 0, id: 0 };\nvar taskCounter = 0;\nvar zoneStack = [];\nvar zoneEchoes = 0;\nvar totalEchoes = 0;\nvar zone_id_counter = 0;\nfunction newScope(fn, props, a1, a2) {\n    var parent = PSD, psd = Object.create(parent);\n    psd.parent = parent;\n    psd.ref = 0;\n    psd.global = false;\n    psd.id = ++zone_id_counter;\n    var globalEnv = globalPSD.env;\n    psd.env = patchGlobalPromise ? {\n        Promise: DexiePromise,\n        PromiseProp: { value: DexiePromise, configurable: true, writable: true },\n        all: DexiePromise.all,\n        race: DexiePromise.race,\n        allSettled: DexiePromise.allSettled,\n        any: DexiePromise.any,\n        resolve: DexiePromise.resolve,\n        reject: DexiePromise.reject,\n        nthen: getPatchedPromiseThen(globalEnv.nthen, psd),\n        gthen: getPatchedPromiseThen(globalEnv.gthen, psd)\n    } : {};\n    if (props)\n        extend(psd, props);\n    ++parent.ref;\n    psd.finalize = function () {\n        --this.parent.ref || this.parent.finalize();\n    };\n    var rv = usePSD(psd, fn, a1, a2);\n    if (psd.ref === 0)\n        psd.finalize();\n    return rv;\n}\nfunction incrementExpectedAwaits() {\n    if (!task.id)\n        task.id = ++taskCounter;\n    ++task.awaits;\n    task.echoes += ZONE_ECHO_LIMIT;\n    return task.id;\n}\nfunction decrementExpectedAwaits() {\n    if (!task.awaits)\n        return false;\n    if (--task.awaits === 0)\n        task.id = 0;\n    task.echoes = task.awaits * ZONE_ECHO_LIMIT;\n    return true;\n}\nif (('' + nativePromiseThen).indexOf('[native code]') === -1) {\n    incrementExpectedAwaits = decrementExpectedAwaits = nop;\n}\nfunction onPossibleParallellAsync(possiblePromise) {\n    if (task.echoes && possiblePromise && possiblePromise.constructor === NativePromise) {\n        incrementExpectedAwaits();\n        return possiblePromise.then(x => {\n            decrementExpectedAwaits();\n            return x;\n        }, e => {\n            decrementExpectedAwaits();\n            return rejection(e);\n        });\n    }\n    return possiblePromise;\n}\nfunction zoneEnterEcho(targetZone) {\n    ++totalEchoes;\n    if (!task.echoes || --task.echoes === 0) {\n        task.echoes = task.id = 0;\n    }\n    zoneStack.push(PSD);\n    switchToZone(targetZone, true);\n}\nfunction zoneLeaveEcho() {\n    var zone = zoneStack[zoneStack.length - 1];\n    zoneStack.pop();\n    switchToZone(zone, false);\n}\nfunction switchToZone(targetZone, bEnteringZone) {\n    var currentZone = PSD;\n    if (bEnteringZone ? task.echoes && (!zoneEchoes++ || targetZone !== PSD) : zoneEchoes && (!--zoneEchoes || targetZone !== PSD)) {\n        enqueueNativeMicroTask(bEnteringZone ? zoneEnterEcho.bind(null, targetZone) : zoneLeaveEcho);\n    }\n    if (targetZone === PSD)\n        return;\n    PSD = targetZone;\n    if (currentZone === globalPSD)\n        globalPSD.env = snapShot();\n    if (patchGlobalPromise) {\n        var GlobalPromise = globalPSD.env.Promise;\n        var targetEnv = targetZone.env;\n        nativePromiseProto.then = targetEnv.nthen;\n        GlobalPromise.prototype.then = targetEnv.gthen;\n        if (currentZone.global || targetZone.global) {\n            Object.defineProperty(_global, 'Promise', targetEnv.PromiseProp);\n            GlobalPromise.all = targetEnv.all;\n            GlobalPromise.race = targetEnv.race;\n            GlobalPromise.resolve = targetEnv.resolve;\n            GlobalPromise.reject = targetEnv.reject;\n            if (targetEnv.allSettled)\n                GlobalPromise.allSettled = targetEnv.allSettled;\n            if (targetEnv.any)\n                GlobalPromise.any = targetEnv.any;\n        }\n    }\n}\nfunction snapShot() {\n    var GlobalPromise = _global.Promise;\n    return patchGlobalPromise ? {\n        Promise: GlobalPromise,\n        PromiseProp: Object.getOwnPropertyDescriptor(_global, \"Promise\"),\n        all: GlobalPromise.all,\n        race: GlobalPromise.race,\n        allSettled: GlobalPromise.allSettled,\n        any: GlobalPromise.any,\n        resolve: GlobalPromise.resolve,\n        reject: GlobalPromise.reject,\n        nthen: nativePromiseProto.then,\n        gthen: GlobalPromise.prototype.then\n    } : {};\n}\nfunction usePSD(psd, fn, a1, a2, a3) {\n    var outerScope = PSD;\n    try {\n        switchToZone(psd, true);\n        return fn(a1, a2, a3);\n    }\n    finally {\n        switchToZone(outerScope, false);\n    }\n}\nfunction enqueueNativeMicroTask(job) {\n    nativePromiseThen.call(resolvedNativePromise, job);\n}\nfunction nativeAwaitCompatibleWrap(fn, zone, possibleAwait, cleanup) {\n    return typeof fn !== 'function' ? fn : function () {\n        var outerZone = PSD;\n        if (possibleAwait)\n            incrementExpectedAwaits();\n        switchToZone(zone, true);\n        try {\n            return fn.apply(this, arguments);\n        }\n        finally {\n            switchToZone(outerZone, false);\n            if (cleanup)\n                enqueueNativeMicroTask(decrementExpectedAwaits);\n        }\n    };\n}\nfunction getPatchedPromiseThen(origThen, zone) {\n    return function (onResolved, onRejected) {\n        return origThen.call(this, nativeAwaitCompatibleWrap(onResolved, zone), nativeAwaitCompatibleWrap(onRejected, zone));\n    };\n}\nconst UNHANDLEDREJECTION = \"unhandledrejection\";\nfunction globalError(err, promise) {\n    var rv;\n    try {\n        rv = promise.onuncatched(err);\n    }\n    catch (e) { }\n    if (rv !== false)\n        try {\n            var event, eventData = { promise: promise, reason: err };\n            if (_global.document && document.createEvent) {\n                event = document.createEvent('Event');\n                event.initEvent(UNHANDLEDREJECTION, true, true);\n                extend(event, eventData);\n            }\n            else if (_global.CustomEvent) {\n                event = new CustomEvent(UNHANDLEDREJECTION, { detail: eventData });\n                extend(event, eventData);\n            }\n            if (event && _global.dispatchEvent) {\n                dispatchEvent(event);\n                if (!_global.PromiseRejectionEvent && _global.onunhandledrejection)\n                    try {\n                        _global.onunhandledrejection(event);\n                    }\n                    catch (_) { }\n            }\n            if (debug && event && !event.defaultPrevented) {\n                console.warn(`Unhandled rejection: ${err.stack || err}`);\n            }\n        }\n        catch (e) { }\n}\nvar rejection = DexiePromise.reject;\n\nfunction tempTransaction(db, mode, storeNames, fn) {\n    if (!db.idbdb || (!db._state.openComplete && (!PSD.letThrough && !db._vip))) {\n        if (db._state.openComplete) {\n            return rejection(new exceptions.DatabaseClosed(db._state.dbOpenError));\n        }\n        if (!db._state.isBeingOpened) {\n            if (!db._options.autoOpen)\n                return rejection(new exceptions.DatabaseClosed());\n            db.open().catch(nop);\n        }\n        return db._state.dbReadyPromise.then(() => tempTransaction(db, mode, storeNames, fn));\n    }\n    else {\n        var trans = db._createTransaction(mode, storeNames, db._dbSchema);\n        try {\n            trans.create();\n            db._state.PR1398_maxLoop = 3;\n        }\n        catch (ex) {\n            if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                console.warn('Dexie: Need to reopen db');\n                db._close();\n                return db.open().then(() => tempTransaction(db, mode, storeNames, fn));\n            }\n            return rejection(ex);\n        }\n        return trans._promise(mode, (resolve, reject) => {\n            return newScope(() => {\n                PSD.trans = trans;\n                return fn(resolve, reject, trans);\n            });\n        }).then(result => {\n            return trans._completion.then(() => result);\n        });\n    }\n}\n\nconst DEXIE_VERSION = '3.2.2';\nconst maxString = String.fromCharCode(65535);\nconst minKey = -Infinity;\nconst INVALID_KEY_ARGUMENT = \"Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.\";\nconst STRING_EXPECTED = \"String expected.\";\nconst connections = [];\nconst isIEOrEdge = typeof navigator !== 'undefined' && /(MSIE|Trident|Edge)/.test(navigator.userAgent);\nconst hasIEDeleteObjectStoreBug = isIEOrEdge;\nconst hangsOnDeleteLargeKeyRange = isIEOrEdge;\nconst dexieStackFrameFilter = frame => !/(dexie\\.js|dexie\\.min\\.js)/.test(frame);\nconst DBNAMES_DB = '__dbnames';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\nfunction combine(filter1, filter2) {\n    return filter1 ?\n        filter2 ?\n            function () { return filter1.apply(this, arguments) && filter2.apply(this, arguments); } :\n            filter1 :\n        filter2;\n}\n\nconst AnyRange = {\n    type: 3 ,\n    lower: -Infinity,\n    lowerOpen: false,\n    upper: [[]],\n    upperOpen: false\n};\n\nfunction workaroundForUndefinedPrimKey(keyPath) {\n    return typeof keyPath === \"string\" && !/\\./.test(keyPath)\n        ? (obj) => {\n            if (obj[keyPath] === undefined && (keyPath in obj)) {\n                obj = deepClone(obj);\n                delete obj[keyPath];\n            }\n            return obj;\n        }\n        : (obj) => obj;\n}\n\nclass Table {\n    _trans(mode, fn, writeLocked) {\n        const trans = this._tx || PSD.trans;\n        const tableName = this.name;\n        function checkTableInTransaction(resolve, reject, trans) {\n            if (!trans.schema[tableName])\n                throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n            return fn(trans.idbtrans, trans);\n        }\n        const wasRootExec = beginMicroTickScope();\n        try {\n            return trans && trans.db === this.db ?\n                trans === PSD.trans ?\n                    trans._promise(mode, checkTableInTransaction, writeLocked) :\n                    newScope(() => trans._promise(mode, checkTableInTransaction, writeLocked), { trans: trans, transless: PSD.transless || PSD }) :\n                tempTransaction(this.db, mode, [this.name], checkTableInTransaction);\n        }\n        finally {\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    }\n    get(keyOrCrit, cb) {\n        if (keyOrCrit && keyOrCrit.constructor === Object)\n            return this.where(keyOrCrit).first(cb);\n        return this._trans('readonly', (trans) => {\n            return this.core.get({ trans, key: keyOrCrit })\n                .then(res => this.hook.reading.fire(res));\n        }).then(cb);\n    }\n    where(indexOrCrit) {\n        if (typeof indexOrCrit === 'string')\n            return new this.db.WhereClause(this, indexOrCrit);\n        if (isArray(indexOrCrit))\n            return new this.db.WhereClause(this, `[${indexOrCrit.join('+')}]`);\n        const keyPaths = keys(indexOrCrit);\n        if (keyPaths.length === 1)\n            return this\n                .where(keyPaths[0])\n                .equals(indexOrCrit[keyPaths[0]]);\n        const compoundIndex = this.schema.indexes.concat(this.schema.primKey).filter(ix => ix.compound &&\n            keyPaths.every(keyPath => ix.keyPath.indexOf(keyPath) >= 0) &&\n            ix.keyPath.every(keyPath => keyPaths.indexOf(keyPath) >= 0))[0];\n        if (compoundIndex && this.db._maxKey !== maxString)\n            return this\n                .where(compoundIndex.name)\n                .equals(compoundIndex.keyPath.map(kp => indexOrCrit[kp]));\n        if (!compoundIndex && debug)\n            console.warn(`The query ${JSON.stringify(indexOrCrit)} on ${this.name} would benefit of a ` +\n                `compound index [${keyPaths.join('+')}]`);\n        const { idxByName } = this.schema;\n        const idb = this.db._deps.indexedDB;\n        function equals(a, b) {\n            try {\n                return idb.cmp(a, b) === 0;\n            }\n            catch (e) {\n                return false;\n            }\n        }\n        const [idx, filterFunction] = keyPaths.reduce(([prevIndex, prevFilterFn], keyPath) => {\n            const index = idxByName[keyPath];\n            const value = indexOrCrit[keyPath];\n            return [\n                prevIndex || index,\n                prevIndex || !index ?\n                    combine(prevFilterFn, index && index.multi ?\n                        x => {\n                            const prop = getByKeyPath(x, keyPath);\n                            return isArray(prop) && prop.some(item => equals(value, item));\n                        } : x => equals(value, getByKeyPath(x, keyPath)))\n                    : prevFilterFn\n            ];\n        }, [null, null]);\n        return idx ?\n            this.where(idx.name).equals(indexOrCrit[idx.keyPath])\n                .filter(filterFunction) :\n            compoundIndex ?\n                this.filter(filterFunction) :\n                this.where(keyPaths).equals('');\n    }\n    filter(filterFunction) {\n        return this.toCollection().and(filterFunction);\n    }\n    count(thenShortcut) {\n        return this.toCollection().count(thenShortcut);\n    }\n    offset(offset) {\n        return this.toCollection().offset(offset);\n    }\n    limit(numRows) {\n        return this.toCollection().limit(numRows);\n    }\n    each(callback) {\n        return this.toCollection().each(callback);\n    }\n    toArray(thenShortcut) {\n        return this.toCollection().toArray(thenShortcut);\n    }\n    toCollection() {\n        return new this.db.Collection(new this.db.WhereClause(this));\n    }\n    orderBy(index) {\n        return new this.db.Collection(new this.db.WhereClause(this, isArray(index) ?\n            `[${index.join('+')}]` :\n            index));\n    }\n    reverse() {\n        return this.toCollection().reverse();\n    }\n    mapToClass(constructor) {\n        this.schema.mappedClass = constructor;\n        const readHook = obj => {\n            if (!obj)\n                return obj;\n            const res = Object.create(constructor.prototype);\n            for (var m in obj)\n                if (hasOwn(obj, m))\n                    try {\n                        res[m] = obj[m];\n                    }\n                    catch (_) { }\n            return res;\n        };\n        if (this.schema.readHook) {\n            this.hook.reading.unsubscribe(this.schema.readHook);\n        }\n        this.schema.readHook = readHook;\n        this.hook(\"reading\", readHook);\n        return constructor;\n    }\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return this.mapToClass(Class);\n    }\n    add(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'add', keys: key != null ? [key] : null, values: [objToAdd] });\n        }).then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    update(keyOrObject, modifications) {\n        if (typeof keyOrObject === 'object' && !isArray(keyOrObject)) {\n            const key = getByKeyPath(keyOrObject, this.schema.primKey.keyPath);\n            if (key === undefined)\n                return rejection(new exceptions.InvalidArgument(\"Given object does not contain its primary key\"));\n            try {\n                if (typeof modifications !== \"function\") {\n                    keys(modifications).forEach(keyPath => {\n                        setByKeyPath(keyOrObject, keyPath, modifications[keyPath]);\n                    });\n                }\n                else {\n                    modifications(keyOrObject, { value: keyOrObject, primKey: key });\n                }\n            }\n            catch (_a) {\n            }\n            return this.where(\":id\").equals(key).modify(modifications);\n        }\n        else {\n            return this.where(\":id\").equals(keyOrObject).modify(modifications);\n        }\n    }\n    put(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'put', values: [objToAdd], keys: key != null ? [key] : null }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    delete(key) {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'delete', keys: [key] }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    clear() {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'deleteRange', range: AnyRange }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    bulkGet(keys) {\n        return this._trans('readonly', trans => {\n            return this.core.getMany({\n                keys,\n                trans\n            }).then(result => result.map(res => this.hook.reading.fire(res)));\n        });\n    }\n    bulkAdd(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkAdd(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToAdd = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'add', keys: keys, values: objectsToAdd, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkAdd(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkPut(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkPut(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToPut = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'put', keys: keys, values: objectsToPut, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkPut(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkDelete(keys) {\n        const numKeys = keys.length;\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'delete', keys: keys });\n        }).then(({ numFailures, lastResult, failures }) => {\n            if (numFailures === 0)\n                return lastResult;\n            throw new BulkError(`${this.name}.bulkDelete(): ${numFailures} of ${numKeys} operations failed`, failures);\n        });\n    }\n}\n\nfunction Events(ctx) {\n    var evs = {};\n    var rv = function (eventName, subscriber) {\n        if (subscriber) {\n            var i = arguments.length, args = new Array(i - 1);\n            while (--i)\n                args[i - 1] = arguments[i];\n            evs[eventName].subscribe.apply(null, args);\n            return ctx;\n        }\n        else if (typeof (eventName) === 'string') {\n            return evs[eventName];\n        }\n    };\n    rv.addEventType = add;\n    for (var i = 1, l = arguments.length; i < l; ++i) {\n        add(arguments[i]);\n    }\n    return rv;\n    function add(eventName, chainFunction, defaultFunction) {\n        if (typeof eventName === 'object')\n            return addConfiguredEvents(eventName);\n        if (!chainFunction)\n            chainFunction = reverseStoppableEventChain;\n        if (!defaultFunction)\n            defaultFunction = nop;\n        var context = {\n            subscribers: [],\n            fire: defaultFunction,\n            subscribe: function (cb) {\n                if (context.subscribers.indexOf(cb) === -1) {\n                    context.subscribers.push(cb);\n                    context.fire = chainFunction(context.fire, cb);\n                }\n            },\n            unsubscribe: function (cb) {\n                context.subscribers = context.subscribers.filter(function (fn) { return fn !== cb; });\n                context.fire = context.subscribers.reduce(chainFunction, defaultFunction);\n            }\n        };\n        evs[eventName] = rv[eventName] = context;\n        return context;\n    }\n    function addConfiguredEvents(cfg) {\n        keys(cfg).forEach(function (eventName) {\n            var args = cfg[eventName];\n            if (isArray(args)) {\n                add(eventName, cfg[eventName][0], cfg[eventName][1]);\n            }\n            else if (args === 'asap') {\n                var context = add(eventName, mirror, function fire() {\n                    var i = arguments.length, args = new Array(i);\n                    while (i--)\n                        args[i] = arguments[i];\n                    context.subscribers.forEach(function (fn) {\n                        asap$1(function fireEvent() {\n                            fn.apply(null, args);\n                        });\n                    });\n                });\n            }\n            else\n                throw new exceptions.InvalidArgument(\"Invalid event config\");\n        });\n    }\n}\n\nfunction makeClassConstructor(prototype, constructor) {\n    derive(constructor).from({ prototype });\n    return constructor;\n}\n\nfunction createTableConstructor(db) {\n    return makeClassConstructor(Table.prototype, function Table(name, tableSchema, trans) {\n        this.db = db;\n        this._tx = trans;\n        this.name = name;\n        this.schema = tableSchema;\n        this.hook = db._allTables[name] ? db._allTables[name].hook : Events(null, {\n            \"creating\": [hookCreatingChain, nop],\n            \"reading\": [pureFunctionChain, mirror],\n            \"updating\": [hookUpdatingChain, nop],\n            \"deleting\": [hookDeletingChain, nop]\n        });\n    });\n}\n\nfunction isPlainKeyRange(ctx, ignoreLimitFilter) {\n    return !(ctx.filter || ctx.algorithm || ctx.or) &&\n        (ignoreLimitFilter ? ctx.justLimit : !ctx.replayFilter);\n}\nfunction addFilter(ctx, fn) {\n    ctx.filter = combine(ctx.filter, fn);\n}\nfunction addReplayFilter(ctx, factory, isLimitFilter) {\n    var curr = ctx.replayFilter;\n    ctx.replayFilter = curr ? () => combine(curr(), factory()) : factory;\n    ctx.justLimit = isLimitFilter && !curr;\n}\nfunction addMatchFilter(ctx, fn) {\n    ctx.isMatch = combine(ctx.isMatch, fn);\n}\nfunction getIndexOrStore(ctx, coreSchema) {\n    if (ctx.isPrimKey)\n        return coreSchema.primaryKey;\n    const index = coreSchema.getIndexByKeyPath(ctx.index);\n    if (!index)\n        throw new exceptions.Schema(\"KeyPath \" + ctx.index + \" on object store \" + coreSchema.name + \" is not indexed\");\n    return index;\n}\nfunction openCursor(ctx, coreTable, trans) {\n    const index = getIndexOrStore(ctx, coreTable.schema);\n    return coreTable.openCursor({\n        trans,\n        values: !ctx.keysOnly,\n        reverse: ctx.dir === 'prev',\n        unique: !!ctx.unique,\n        query: {\n            index,\n            range: ctx.range\n        }\n    });\n}\nfunction iter(ctx, fn, coreTrans, coreTable) {\n    const filter = ctx.replayFilter ? combine(ctx.filter, ctx.replayFilter()) : ctx.filter;\n    if (!ctx.or) {\n        return iterate(openCursor(ctx, coreTable, coreTrans), combine(ctx.algorithm, filter), fn, !ctx.keysOnly && ctx.valueMapper);\n    }\n    else {\n        const set = {};\n        const union = (item, cursor, advance) => {\n            if (!filter || filter(cursor, advance, result => cursor.stop(result), err => cursor.fail(err))) {\n                var primaryKey = cursor.primaryKey;\n                var key = '' + primaryKey;\n                if (key === '[object ArrayBuffer]')\n                    key = '' + new Uint8Array(primaryKey);\n                if (!hasOwn(set, key)) {\n                    set[key] = true;\n                    fn(item, cursor, advance);\n                }\n            }\n        };\n        return Promise.all([\n            ctx.or._iterate(union, coreTrans),\n            iterate(openCursor(ctx, coreTable, coreTrans), ctx.algorithm, union, !ctx.keysOnly && ctx.valueMapper)\n        ]);\n    }\n}\nfunction iterate(cursorPromise, filter, fn, valueMapper) {\n    var mappedFn = valueMapper ? (x, c, a) => fn(valueMapper(x), c, a) : fn;\n    var wrappedFn = wrap(mappedFn);\n    return cursorPromise.then(cursor => {\n        if (cursor) {\n            return cursor.start(() => {\n                var c = () => cursor.continue();\n                if (!filter || filter(cursor, advancer => c = advancer, val => { cursor.stop(val); c = nop; }, e => { cursor.fail(e); c = nop; }))\n                    wrappedFn(cursor.value, cursor, advancer => c = advancer);\n                c();\n            });\n        }\n    });\n}\n\nfunction cmp(a, b) {\n    try {\n        const ta = type(a);\n        const tb = type(b);\n        if (ta !== tb) {\n            if (ta === 'Array')\n                return 1;\n            if (tb === 'Array')\n                return -1;\n            if (ta === 'binary')\n                return 1;\n            if (tb === 'binary')\n                return -1;\n            if (ta === 'string')\n                return 1;\n            if (tb === 'string')\n                return -1;\n            if (ta === 'Date')\n                return 1;\n            if (tb !== 'Date')\n                return NaN;\n            return -1;\n        }\n        switch (ta) {\n            case 'number':\n            case 'Date':\n            case 'string':\n                return a > b ? 1 : a < b ? -1 : 0;\n            case 'binary': {\n                return compareUint8Arrays(getUint8Array(a), getUint8Array(b));\n            }\n            case 'Array':\n                return compareArrays(a, b);\n        }\n    }\n    catch (_a) { }\n    return NaN;\n}\nfunction compareArrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        const res = cmp(a[i], b[i]);\n        if (res !== 0)\n            return res;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction compareUint8Arrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        if (a[i] !== b[i])\n            return a[i] < b[i] ? -1 : 1;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction type(x) {\n    const t = typeof x;\n    if (t !== 'object')\n        return t;\n    if (ArrayBuffer.isView(x))\n        return 'binary';\n    const tsTag = toStringTag(x);\n    return tsTag === 'ArrayBuffer' ? 'binary' : tsTag;\n}\nfunction getUint8Array(a) {\n    if (a instanceof Uint8Array)\n        return a;\n    if (ArrayBuffer.isView(a))\n        return new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    return new Uint8Array(a);\n}\n\nclass Collection {\n    _read(fn, cb) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readonly', fn).then(cb);\n    }\n    _write(fn) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readwrite', fn, \"locked\");\n    }\n    _addAlgorithm(fn) {\n        var ctx = this._ctx;\n        ctx.algorithm = combine(ctx.algorithm, fn);\n    }\n    _iterate(fn, coreTrans) {\n        return iter(this._ctx, fn, coreTrans, this._ctx.table.core);\n    }\n    clone(props) {\n        var rv = Object.create(this.constructor.prototype), ctx = Object.create(this._ctx);\n        if (props)\n            extend(ctx, props);\n        rv._ctx = ctx;\n        return rv;\n    }\n    raw() {\n        this._ctx.valueMapper = null;\n        return this;\n    }\n    each(fn) {\n        var ctx = this._ctx;\n        return this._read(trans => iter(ctx, fn, trans, ctx.table.core));\n    }\n    count(cb) {\n        return this._read(trans => {\n            const ctx = this._ctx;\n            const coreTable = ctx.table.core;\n            if (isPlainKeyRange(ctx, true)) {\n                return coreTable.count({\n                    trans,\n                    query: {\n                        index: getIndexOrStore(ctx, coreTable.schema),\n                        range: ctx.range\n                    }\n                }).then(count => Math.min(count, ctx.limit));\n            }\n            else {\n                var count = 0;\n                return iter(ctx, () => { ++count; return false; }, trans, coreTable)\n                    .then(() => count);\n            }\n        }).then(cb);\n    }\n    sortBy(keyPath, cb) {\n        const parts = keyPath.split('.').reverse(), lastPart = parts[0], lastIndex = parts.length - 1;\n        function getval(obj, i) {\n            if (i)\n                return getval(obj[parts[i]], i - 1);\n            return obj[lastPart];\n        }\n        var order = this._ctx.dir === \"next\" ? 1 : -1;\n        function sorter(a, b) {\n            var aVal = getval(a, lastIndex), bVal = getval(b, lastIndex);\n            return aVal < bVal ? -order : aVal > bVal ? order : 0;\n        }\n        return this.toArray(function (a) {\n            return a.sort(sorter);\n        }).then(cb);\n    }\n    toArray(cb) {\n        return this._read(trans => {\n            var ctx = this._ctx;\n            if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n                const { valueMapper } = ctx;\n                const index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    limit: ctx.limit,\n                    values: true,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                }).then(({ result }) => valueMapper ? result.map(valueMapper) : result);\n            }\n            else {\n                const a = [];\n                return iter(ctx, item => a.push(item), trans, ctx.table.core).then(() => a);\n            }\n        }, cb);\n    }\n    offset(offset) {\n        var ctx = this._ctx;\n        if (offset <= 0)\n            return this;\n        ctx.offset += offset;\n        if (isPlainKeyRange(ctx)) {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return (cursor, advance) => {\n                    if (offsetLeft === 0)\n                        return true;\n                    if (offsetLeft === 1) {\n                        --offsetLeft;\n                        return false;\n                    }\n                    advance(() => {\n                        cursor.advance(offsetLeft);\n                        offsetLeft = 0;\n                    });\n                    return false;\n                };\n            });\n        }\n        else {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return () => (--offsetLeft < 0);\n            });\n        }\n        return this;\n    }\n    limit(numRows) {\n        this._ctx.limit = Math.min(this._ctx.limit, numRows);\n        addReplayFilter(this._ctx, () => {\n            var rowsLeft = numRows;\n            return function (cursor, advance, resolve) {\n                if (--rowsLeft <= 0)\n                    advance(resolve);\n                return rowsLeft >= 0;\n            };\n        }, true);\n        return this;\n    }\n    until(filterFunction, bIncludeStopEntry) {\n        addFilter(this._ctx, function (cursor, advance, resolve) {\n            if (filterFunction(cursor.value)) {\n                advance(resolve);\n                return bIncludeStopEntry;\n            }\n            else {\n                return true;\n            }\n        });\n        return this;\n    }\n    first(cb) {\n        return this.limit(1).toArray(function (a) { return a[0]; }).then(cb);\n    }\n    last(cb) {\n        return this.reverse().first(cb);\n    }\n    filter(filterFunction) {\n        addFilter(this._ctx, function (cursor) {\n            return filterFunction(cursor.value);\n        });\n        addMatchFilter(this._ctx, filterFunction);\n        return this;\n    }\n    and(filter) {\n        return this.filter(filter);\n    }\n    or(indexName) {\n        return new this.db.WhereClause(this._ctx.table, indexName, this);\n    }\n    reverse() {\n        this._ctx.dir = (this._ctx.dir === \"prev\" ? \"next\" : \"prev\");\n        if (this._ondirectionchange)\n            this._ondirectionchange(this._ctx.dir);\n        return this;\n    }\n    desc() {\n        return this.reverse();\n    }\n    eachKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.key, cursor); });\n    }\n    eachUniqueKey(cb) {\n        this._ctx.unique = \"unique\";\n        return this.eachKey(cb);\n    }\n    eachPrimaryKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.primaryKey, cursor); });\n    }\n    keys(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.key);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    primaryKeys(cb) {\n        var ctx = this._ctx;\n        if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n            return this._read(trans => {\n                var index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    values: false,\n                    limit: ctx.limit,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                });\n            }).then(({ result }) => result).then(cb);\n        }\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.primaryKey);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    uniqueKeys(cb) {\n        this._ctx.unique = \"unique\";\n        return this.keys(cb);\n    }\n    firstKey(cb) {\n        return this.limit(1).keys(function (a) { return a[0]; }).then(cb);\n    }\n    lastKey(cb) {\n        return this.reverse().firstKey(cb);\n    }\n    distinct() {\n        var ctx = this._ctx, idx = ctx.index && ctx.table.schema.idxByName[ctx.index];\n        if (!idx || !idx.multi)\n            return this;\n        var set = {};\n        addFilter(this._ctx, function (cursor) {\n            var strKey = cursor.primaryKey.toString();\n            var found = hasOwn(set, strKey);\n            set[strKey] = true;\n            return !found;\n        });\n        return this;\n    }\n    modify(changes) {\n        var ctx = this._ctx;\n        return this._write(trans => {\n            var modifyer;\n            if (typeof changes === 'function') {\n                modifyer = changes;\n            }\n            else {\n                var keyPaths = keys(changes);\n                var numKeys = keyPaths.length;\n                modifyer = function (item) {\n                    var anythingModified = false;\n                    for (var i = 0; i < numKeys; ++i) {\n                        var keyPath = keyPaths[i], val = changes[keyPath];\n                        if (getByKeyPath(item, keyPath) !== val) {\n                            setByKeyPath(item, keyPath, val);\n                            anythingModified = true;\n                        }\n                    }\n                    return anythingModified;\n                };\n            }\n            const coreTable = ctx.table.core;\n            const { outbound, extractKey } = coreTable.schema.primaryKey;\n            const limit = this.db._options.modifyChunkSize || 200;\n            const totalFailures = [];\n            let successCount = 0;\n            const failedKeys = [];\n            const applyMutateResult = (expectedCount, res) => {\n                const { failures, numFailures } = res;\n                successCount += expectedCount - numFailures;\n                for (let pos of keys(failures)) {\n                    totalFailures.push(failures[pos]);\n                }\n            };\n            return this.clone().primaryKeys().then(keys => {\n                const nextChunk = (offset) => {\n                    const count = Math.min(limit, keys.length - offset);\n                    return coreTable.getMany({\n                        trans,\n                        keys: keys.slice(offset, offset + count),\n                        cache: \"immutable\"\n                    }).then(values => {\n                        const addValues = [];\n                        const putValues = [];\n                        const putKeys = outbound ? [] : null;\n                        const deleteKeys = [];\n                        for (let i = 0; i < count; ++i) {\n                            const origValue = values[i];\n                            const ctx = {\n                                value: deepClone(origValue),\n                                primKey: keys[offset + i]\n                            };\n                            if (modifyer.call(ctx, ctx.value, ctx) !== false) {\n                                if (ctx.value == null) {\n                                    deleteKeys.push(keys[offset + i]);\n                                }\n                                else if (!outbound && cmp(extractKey(origValue), extractKey(ctx.value)) !== 0) {\n                                    deleteKeys.push(keys[offset + i]);\n                                    addValues.push(ctx.value);\n                                }\n                                else {\n                                    putValues.push(ctx.value);\n                                    if (outbound)\n                                        putKeys.push(keys[offset + i]);\n                                }\n                            }\n                        }\n                        const criteria = isPlainKeyRange(ctx) &&\n                            ctx.limit === Infinity &&\n                            (typeof changes !== 'function' || changes === deleteCallback) && {\n                            index: ctx.index,\n                            range: ctx.range\n                        };\n                        return Promise.resolve(addValues.length > 0 &&\n                            coreTable.mutate({ trans, type: 'add', values: addValues })\n                                .then(res => {\n                                for (let pos in res.failures) {\n                                    deleteKeys.splice(parseInt(pos), 1);\n                                }\n                                applyMutateResult(addValues.length, res);\n                            })).then(() => (putValues.length > 0 || (criteria && typeof changes === 'object')) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'put',\n                                keys: putKeys,\n                                values: putValues,\n                                criteria,\n                                changeSpec: typeof changes !== 'function'\n                                    && changes\n                            }).then(res => applyMutateResult(putValues.length, res))).then(() => (deleteKeys.length > 0 || (criteria && changes === deleteCallback)) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'delete',\n                                keys: deleteKeys,\n                                criteria\n                            }).then(res => applyMutateResult(deleteKeys.length, res))).then(() => {\n                            return keys.length > offset + count && nextChunk(offset + limit);\n                        });\n                    });\n                };\n                return nextChunk(0).then(() => {\n                    if (totalFailures.length > 0)\n                        throw new ModifyError(\"Error modifying one or more objects\", totalFailures, successCount, failedKeys);\n                    return keys.length;\n                });\n            });\n        });\n    }\n    delete() {\n        var ctx = this._ctx, range = ctx.range;\n        if (isPlainKeyRange(ctx) &&\n            ((ctx.isPrimKey && !hangsOnDeleteLargeKeyRange) || range.type === 3 ))\n         {\n            return this._write(trans => {\n                const { primaryKey } = ctx.table.core.schema;\n                const coreRange = range;\n                return ctx.table.core.count({ trans, query: { index: primaryKey, range: coreRange } }).then(count => {\n                    return ctx.table.core.mutate({ trans, type: 'deleteRange', range: coreRange })\n                        .then(({ failures, lastResult, results, numFailures }) => {\n                        if (numFailures)\n                            throw new ModifyError(\"Could not delete some values\", Object.keys(failures).map(pos => failures[pos]), count - numFailures);\n                        return count - numFailures;\n                    });\n                });\n            });\n        }\n        return this.modify(deleteCallback);\n    }\n}\nconst deleteCallback = (value, ctx) => ctx.value = null;\n\nfunction createCollectionConstructor(db) {\n    return makeClassConstructor(Collection.prototype, function Collection(whereClause, keyRangeGenerator) {\n        this.db = db;\n        let keyRange = AnyRange, error = null;\n        if (keyRangeGenerator)\n            try {\n                keyRange = keyRangeGenerator();\n            }\n            catch (ex) {\n                error = ex;\n            }\n        const whereCtx = whereClause._ctx;\n        const table = whereCtx.table;\n        const readingHook = table.hook.reading.fire;\n        this._ctx = {\n            table: table,\n            index: whereCtx.index,\n            isPrimKey: (!whereCtx.index || (table.schema.primKey.keyPath && whereCtx.index === table.schema.primKey.name)),\n            range: keyRange,\n            keysOnly: false,\n            dir: \"next\",\n            unique: \"\",\n            algorithm: null,\n            filter: null,\n            replayFilter: null,\n            justLimit: true,\n            isMatch: null,\n            offset: 0,\n            limit: Infinity,\n            error: error,\n            or: whereCtx.or,\n            valueMapper: readingHook !== mirror ? readingHook : null\n        };\n    });\n}\n\nfunction simpleCompare(a, b) {\n    return a < b ? -1 : a === b ? 0 : 1;\n}\nfunction simpleCompareReverse(a, b) {\n    return a > b ? -1 : a === b ? 0 : 1;\n}\n\nfunction fail(collectionOrWhereClause, err, T) {\n    var collection = collectionOrWhereClause instanceof WhereClause ?\n        new collectionOrWhereClause.Collection(collectionOrWhereClause) :\n        collectionOrWhereClause;\n    collection._ctx.error = T ? new T(err) : new TypeError(err);\n    return collection;\n}\nfunction emptyCollection(whereClause) {\n    return new whereClause.Collection(whereClause, () => rangeEqual(\"\")).limit(0);\n}\nfunction upperFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toUpperCase() :\n        (s) => s.toLowerCase();\n}\nfunction lowerFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toLowerCase() :\n        (s) => s.toUpperCase();\n}\nfunction nextCasing(key, lowerKey, upperNeedle, lowerNeedle, cmp, dir) {\n    var length = Math.min(key.length, lowerNeedle.length);\n    var llp = -1;\n    for (var i = 0; i < length; ++i) {\n        var lwrKeyChar = lowerKey[i];\n        if (lwrKeyChar !== lowerNeedle[i]) {\n            if (cmp(key[i], upperNeedle[i]) < 0)\n                return key.substr(0, i) + upperNeedle[i] + upperNeedle.substr(i + 1);\n            if (cmp(key[i], lowerNeedle[i]) < 0)\n                return key.substr(0, i) + lowerNeedle[i] + upperNeedle.substr(i + 1);\n            if (llp >= 0)\n                return key.substr(0, llp) + lowerKey[llp] + upperNeedle.substr(llp + 1);\n            return null;\n        }\n        if (cmp(key[i], lwrKeyChar) < 0)\n            llp = i;\n    }\n    if (length < lowerNeedle.length && dir === \"next\")\n        return key + upperNeedle.substr(key.length);\n    if (length < key.length && dir === \"prev\")\n        return key.substr(0, upperNeedle.length);\n    return (llp < 0 ? null : key.substr(0, llp) + lowerNeedle[llp] + upperNeedle.substr(llp + 1));\n}\nfunction addIgnoreCaseAlgorithm(whereClause, match, needles, suffix) {\n    var upper, lower, compare, upperNeedles, lowerNeedles, direction, nextKeySuffix, needlesLen = needles.length;\n    if (!needles.every(s => typeof s === 'string')) {\n        return fail(whereClause, STRING_EXPECTED);\n    }\n    function initDirection(dir) {\n        upper = upperFactory(dir);\n        lower = lowerFactory(dir);\n        compare = (dir === \"next\" ? simpleCompare : simpleCompareReverse);\n        var needleBounds = needles.map(function (needle) {\n            return { lower: lower(needle), upper: upper(needle) };\n        }).sort(function (a, b) {\n            return compare(a.lower, b.lower);\n        });\n        upperNeedles = needleBounds.map(function (nb) { return nb.upper; });\n        lowerNeedles = needleBounds.map(function (nb) { return nb.lower; });\n        direction = dir;\n        nextKeySuffix = (dir === \"next\" ? \"\" : suffix);\n    }\n    initDirection(\"next\");\n    var c = new whereClause.Collection(whereClause, () => createRange(upperNeedles[0], lowerNeedles[needlesLen - 1] + suffix));\n    c._ondirectionchange = function (direction) {\n        initDirection(direction);\n    };\n    var firstPossibleNeedle = 0;\n    c._addAlgorithm(function (cursor, advance, resolve) {\n        var key = cursor.key;\n        if (typeof key !== 'string')\n            return false;\n        var lowerKey = lower(key);\n        if (match(lowerKey, lowerNeedles, firstPossibleNeedle)) {\n            return true;\n        }\n        else {\n            var lowestPossibleCasing = null;\n            for (var i = firstPossibleNeedle; i < needlesLen; ++i) {\n                var casing = nextCasing(key, lowerKey, upperNeedles[i], lowerNeedles[i], compare, direction);\n                if (casing === null && lowestPossibleCasing === null)\n                    firstPossibleNeedle = i + 1;\n                else if (lowestPossibleCasing === null || compare(lowestPossibleCasing, casing) > 0) {\n                    lowestPossibleCasing = casing;\n                }\n            }\n            if (lowestPossibleCasing !== null) {\n                advance(function () { cursor.continue(lowestPossibleCasing + nextKeySuffix); });\n            }\n            else {\n                advance(resolve);\n            }\n            return false;\n        }\n    });\n    return c;\n}\nfunction createRange(lower, upper, lowerOpen, upperOpen) {\n    return {\n        type: 2 ,\n        lower,\n        upper,\n        lowerOpen,\n        upperOpen\n    };\n}\nfunction rangeEqual(value) {\n    return {\n        type: 1 ,\n        lower: value,\n        upper: value\n    };\n}\n\nclass WhereClause {\n    get Collection() {\n        return this._ctx.table.db.Collection;\n    }\n    between(lower, upper, includeLower, includeUpper) {\n        includeLower = includeLower !== false;\n        includeUpper = includeUpper === true;\n        try {\n            if ((this._cmp(lower, upper) > 0) ||\n                (this._cmp(lower, upper) === 0 && (includeLower || includeUpper) && !(includeLower && includeUpper)))\n                return emptyCollection(this);\n            return new this.Collection(this, () => createRange(lower, upper, !includeLower, !includeUpper));\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n    }\n    equals(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => rangeEqual(value));\n    }\n    above(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, true));\n    }\n    aboveOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, false));\n    }\n    below(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value, false, true));\n    }\n    belowOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value));\n    }\n    startsWith(str) {\n        if (typeof str !== 'string')\n            return fail(this, STRING_EXPECTED);\n        return this.between(str, str + maxString, true, true);\n    }\n    startsWithIgnoreCase(str) {\n        if (str === \"\")\n            return this.startsWith(str);\n        return addIgnoreCaseAlgorithm(this, (x, a) => x.indexOf(a[0]) === 0, [str], maxString);\n    }\n    equalsIgnoreCase(str) {\n        return addIgnoreCaseAlgorithm(this, (x, a) => x === a[0], [str], \"\");\n    }\n    anyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.indexOf(x) !== -1, set, \"\");\n    }\n    startsWithAnyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.some(n => x.indexOf(n) === 0), set, maxString);\n    }\n    anyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        let compare = this._cmp;\n        try {\n            set.sort(compare);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        const c = new this.Collection(this, () => createRange(set[0], set[set.length - 1]));\n        c._ondirectionchange = direction => {\n            compare = (direction === \"next\" ?\n                this._ascending :\n                this._descending);\n            set.sort(compare);\n        };\n        let i = 0;\n        c._addAlgorithm((cursor, advance, resolve) => {\n            const key = cursor.key;\n            while (compare(key, set[i]) > 0) {\n                ++i;\n                if (i === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (compare(key, set[i]) === 0) {\n                return true;\n            }\n            else {\n                advance(() => { cursor.continue(set[i]); });\n                return false;\n            }\n        });\n        return c;\n    }\n    notEqual(value) {\n        return this.inAnyRange([[minKey, value], [value, this.db._maxKey]], { includeLowers: false, includeUppers: false });\n    }\n    noneOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return new this.Collection(this);\n        try {\n            set.sort(this._ascending);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        const ranges = set.reduce((res, val) => res ?\n            res.concat([[res[res.length - 1][1], val]]) :\n            [[minKey, val]], null);\n        ranges.push([set[set.length - 1], this.db._maxKey]);\n        return this.inAnyRange(ranges, { includeLowers: false, includeUppers: false });\n    }\n    inAnyRange(ranges, options) {\n        const cmp = this._cmp, ascending = this._ascending, descending = this._descending, min = this._min, max = this._max;\n        if (ranges.length === 0)\n            return emptyCollection(this);\n        if (!ranges.every(range => range[0] !== undefined &&\n            range[1] !== undefined &&\n            ascending(range[0], range[1]) <= 0)) {\n            return fail(this, \"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower\", exceptions.InvalidArgument);\n        }\n        const includeLowers = !options || options.includeLowers !== false;\n        const includeUppers = options && options.includeUppers === true;\n        function addRange(ranges, newRange) {\n            let i = 0, l = ranges.length;\n            for (; i < l; ++i) {\n                const range = ranges[i];\n                if (cmp(newRange[0], range[1]) < 0 && cmp(newRange[1], range[0]) > 0) {\n                    range[0] = min(range[0], newRange[0]);\n                    range[1] = max(range[1], newRange[1]);\n                    break;\n                }\n            }\n            if (i === l)\n                ranges.push(newRange);\n            return ranges;\n        }\n        let sortDirection = ascending;\n        function rangeSorter(a, b) { return sortDirection(a[0], b[0]); }\n        let set;\n        try {\n            set = ranges.reduce(addRange, []);\n            set.sort(rangeSorter);\n        }\n        catch (ex) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        let rangePos = 0;\n        const keyIsBeyondCurrentEntry = includeUppers ?\n            key => ascending(key, set[rangePos][1]) > 0 :\n            key => ascending(key, set[rangePos][1]) >= 0;\n        const keyIsBeforeCurrentEntry = includeLowers ?\n            key => descending(key, set[rangePos][0]) > 0 :\n            key => descending(key, set[rangePos][0]) >= 0;\n        function keyWithinCurrentRange(key) {\n            return !keyIsBeyondCurrentEntry(key) && !keyIsBeforeCurrentEntry(key);\n        }\n        let checkKey = keyIsBeyondCurrentEntry;\n        const c = new this.Collection(this, () => createRange(set[0][0], set[set.length - 1][1], !includeLowers, !includeUppers));\n        c._ondirectionchange = direction => {\n            if (direction === \"next\") {\n                checkKey = keyIsBeyondCurrentEntry;\n                sortDirection = ascending;\n            }\n            else {\n                checkKey = keyIsBeforeCurrentEntry;\n                sortDirection = descending;\n            }\n            set.sort(rangeSorter);\n        };\n        c._addAlgorithm((cursor, advance, resolve) => {\n            var key = cursor.key;\n            while (checkKey(key)) {\n                ++rangePos;\n                if (rangePos === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (keyWithinCurrentRange(key)) {\n                return true;\n            }\n            else if (this._cmp(key, set[rangePos][1]) === 0 || this._cmp(key, set[rangePos][0]) === 0) {\n                return false;\n            }\n            else {\n                advance(() => {\n                    if (sortDirection === ascending)\n                        cursor.continue(set[rangePos][0]);\n                    else\n                        cursor.continue(set[rangePos][1]);\n                });\n                return false;\n            }\n        });\n        return c;\n    }\n    startsWithAnyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (!set.every(s => typeof s === 'string')) {\n            return fail(this, \"startsWithAnyOf() only works with strings\");\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        return this.inAnyRange(set.map((str) => [str, str + maxString]));\n    }\n}\n\nfunction createWhereClauseConstructor(db) {\n    return makeClassConstructor(WhereClause.prototype, function WhereClause(table, index, orCollection) {\n        this.db = db;\n        this._ctx = {\n            table: table,\n            index: index === \":id\" ? null : index,\n            or: orCollection\n        };\n        const indexedDB = db._deps.indexedDB;\n        if (!indexedDB)\n            throw new exceptions.MissingAPI();\n        this._cmp = this._ascending = indexedDB.cmp.bind(indexedDB);\n        this._descending = (a, b) => indexedDB.cmp(b, a);\n        this._max = (a, b) => indexedDB.cmp(a, b) > 0 ? a : b;\n        this._min = (a, b) => indexedDB.cmp(a, b) < 0 ? a : b;\n        this._IDBKeyRange = db._deps.IDBKeyRange;\n    });\n}\n\nfunction eventRejectHandler(reject) {\n    return wrap(function (event) {\n        preventDefault(event);\n        reject(event.target.error);\n        return false;\n    });\n}\nfunction preventDefault(event) {\n    if (event.stopPropagation)\n        event.stopPropagation();\n    if (event.preventDefault)\n        event.preventDefault();\n}\n\nconst DEXIE_STORAGE_MUTATED_EVENT_NAME = 'storagemutated';\nconst STORAGE_MUTATED_DOM_EVENT_NAME = 'x-storagemutated-1';\nconst globalEvents = Events(null, DEXIE_STORAGE_MUTATED_EVENT_NAME);\n\nclass Transaction {\n    _lock() {\n        assert(!PSD.global);\n        ++this._reculock;\n        if (this._reculock === 1 && !PSD.global)\n            PSD.lockOwnerFor = this;\n        return this;\n    }\n    _unlock() {\n        assert(!PSD.global);\n        if (--this._reculock === 0) {\n            if (!PSD.global)\n                PSD.lockOwnerFor = null;\n            while (this._blockedFuncs.length > 0 && !this._locked()) {\n                var fnAndPSD = this._blockedFuncs.shift();\n                try {\n                    usePSD(fnAndPSD[1], fnAndPSD[0]);\n                }\n                catch (e) { }\n            }\n        }\n        return this;\n    }\n    _locked() {\n        return this._reculock && PSD.lockOwnerFor !== this;\n    }\n    create(idbtrans) {\n        if (!this.mode)\n            return this;\n        const idbdb = this.db.idbdb;\n        const dbOpenError = this.db._state.dbOpenError;\n        assert(!this.idbtrans);\n        if (!idbtrans && !idbdb) {\n            switch (dbOpenError && dbOpenError.name) {\n                case \"DatabaseClosedError\":\n                    throw new exceptions.DatabaseClosed(dbOpenError);\n                case \"MissingAPIError\":\n                    throw new exceptions.MissingAPI(dbOpenError.message, dbOpenError);\n                default:\n                    throw new exceptions.OpenFailed(dbOpenError);\n            }\n        }\n        if (!this.active)\n            throw new exceptions.TransactionInactive();\n        assert(this._completion._state === null);\n        idbtrans = this.idbtrans = idbtrans ||\n            (this.db.core\n                ? this.db.core.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability })\n                : idbdb.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability }));\n        idbtrans.onerror = wrap(ev => {\n            preventDefault(ev);\n            this._reject(idbtrans.error);\n        });\n        idbtrans.onabort = wrap(ev => {\n            preventDefault(ev);\n            this.active && this._reject(new exceptions.Abort(idbtrans.error));\n            this.active = false;\n            this.on(\"abort\").fire(ev);\n        });\n        idbtrans.oncomplete = wrap(() => {\n            this.active = false;\n            this._resolve();\n            if ('mutatedParts' in idbtrans) {\n                globalEvents.storagemutated.fire(idbtrans[\"mutatedParts\"]);\n            }\n        });\n        return this;\n    }\n    _promise(mode, fn, bWriteLock) {\n        if (mode === 'readwrite' && this.mode !== 'readwrite')\n            return rejection(new exceptions.ReadOnly(\"Transaction is readonly\"));\n        if (!this.active)\n            return rejection(new exceptions.TransactionInactive());\n        if (this._locked()) {\n            return new DexiePromise((resolve, reject) => {\n                this._blockedFuncs.push([() => {\n                        this._promise(mode, fn, bWriteLock).then(resolve, reject);\n                    }, PSD]);\n            });\n        }\n        else if (bWriteLock) {\n            return newScope(() => {\n                var p = new DexiePromise((resolve, reject) => {\n                    this._lock();\n                    const rv = fn(resolve, reject, this);\n                    if (rv && rv.then)\n                        rv.then(resolve, reject);\n                });\n                p.finally(() => this._unlock());\n                p._lib = true;\n                return p;\n            });\n        }\n        else {\n            var p = new DexiePromise((resolve, reject) => {\n                var rv = fn(resolve, reject, this);\n                if (rv && rv.then)\n                    rv.then(resolve, reject);\n            });\n            p._lib = true;\n            return p;\n        }\n    }\n    _root() {\n        return this.parent ? this.parent._root() : this;\n    }\n    waitFor(promiseLike) {\n        var root = this._root();\n        const promise = DexiePromise.resolve(promiseLike);\n        if (root._waitingFor) {\n            root._waitingFor = root._waitingFor.then(() => promise);\n        }\n        else {\n            root._waitingFor = promise;\n            root._waitingQueue = [];\n            var store = root.idbtrans.objectStore(root.storeNames[0]);\n            (function spin() {\n                ++root._spinCount;\n                while (root._waitingQueue.length)\n                    (root._waitingQueue.shift())();\n                if (root._waitingFor)\n                    store.get(-Infinity).onsuccess = spin;\n            }());\n        }\n        var currentWaitPromise = root._waitingFor;\n        return new DexiePromise((resolve, reject) => {\n            promise.then(res => root._waitingQueue.push(wrap(resolve.bind(null, res))), err => root._waitingQueue.push(wrap(reject.bind(null, err)))).finally(() => {\n                if (root._waitingFor === currentWaitPromise) {\n                    root._waitingFor = null;\n                }\n            });\n        });\n    }\n    abort() {\n        if (this.active) {\n            this.active = false;\n            if (this.idbtrans)\n                this.idbtrans.abort();\n            this._reject(new exceptions.Abort());\n        }\n    }\n    table(tableName) {\n        const memoizedTables = (this._memoizedTables || (this._memoizedTables = {}));\n        if (hasOwn(memoizedTables, tableName))\n            return memoizedTables[tableName];\n        const tableSchema = this.schema[tableName];\n        if (!tableSchema) {\n            throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n        }\n        const transactionBoundTable = new this.db.Table(tableName, tableSchema, this);\n        transactionBoundTable.core = this.db.core.table(tableName);\n        memoizedTables[tableName] = transactionBoundTable;\n        return transactionBoundTable;\n    }\n}\n\nfunction createTransactionConstructor(db) {\n    return makeClassConstructor(Transaction.prototype, function Transaction(mode, storeNames, dbschema, chromeTransactionDurability, parent) {\n        this.db = db;\n        this.mode = mode;\n        this.storeNames = storeNames;\n        this.schema = dbschema;\n        this.chromeTransactionDurability = chromeTransactionDurability;\n        this.idbtrans = null;\n        this.on = Events(this, \"complete\", \"error\", \"abort\");\n        this.parent = parent || null;\n        this.active = true;\n        this._reculock = 0;\n        this._blockedFuncs = [];\n        this._resolve = null;\n        this._reject = null;\n        this._waitingFor = null;\n        this._waitingQueue = null;\n        this._spinCount = 0;\n        this._completion = new DexiePromise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this._completion.then(() => {\n            this.active = false;\n            this.on.complete.fire();\n        }, e => {\n            var wasActive = this.active;\n            this.active = false;\n            this.on.error.fire(e);\n            this.parent ?\n                this.parent._reject(e) :\n                wasActive && this.idbtrans && this.idbtrans.abort();\n            return rejection(e);\n        });\n    });\n}\n\nfunction createIndexSpec(name, keyPath, unique, multi, auto, compound, isPrimKey) {\n    return {\n        name,\n        keyPath,\n        unique,\n        multi,\n        auto,\n        compound,\n        src: (unique && !isPrimKey ? '&' : '') + (multi ? '*' : '') + (auto ? \"++\" : \"\") + nameFromKeyPath(keyPath)\n    };\n}\nfunction nameFromKeyPath(keyPath) {\n    return typeof keyPath === 'string' ?\n        keyPath :\n        keyPath ? ('[' + [].join.call(keyPath, '+') + ']') : \"\";\n}\n\nfunction createTableSchema(name, primKey, indexes) {\n    return {\n        name,\n        primKey,\n        indexes,\n        mappedClass: null,\n        idxByName: arrayToObject(indexes, index => [index.name, index])\n    };\n}\n\nfunction safariMultiStoreFix(storeNames) {\n    return storeNames.length === 1 ? storeNames[0] : storeNames;\n}\nlet getMaxKey = (IdbKeyRange) => {\n    try {\n        IdbKeyRange.only([[]]);\n        getMaxKey = () => [[]];\n        return [[]];\n    }\n    catch (e) {\n        getMaxKey = () => maxString;\n        return maxString;\n    }\n};\n\nfunction getKeyExtractor(keyPath) {\n    if (keyPath == null) {\n        return () => undefined;\n    }\n    else if (typeof keyPath === 'string') {\n        return getSinglePathKeyExtractor(keyPath);\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\nfunction getSinglePathKeyExtractor(keyPath) {\n    const split = keyPath.split('.');\n    if (split.length === 1) {\n        return obj => obj[keyPath];\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\n\nfunction arrayify(arrayLike) {\n    return [].slice.call(arrayLike);\n}\nlet _id_counter = 0;\nfunction getKeyPathAlias(keyPath) {\n    return keyPath == null ?\n        \":id\" :\n        typeof keyPath === 'string' ?\n            keyPath :\n            `[${keyPath.join('+')}]`;\n}\nfunction createDBCore(db, IdbKeyRange, tmpTrans) {\n    function extractSchema(db, trans) {\n        const tables = arrayify(db.objectStoreNames);\n        return {\n            schema: {\n                name: db.name,\n                tables: tables.map(table => trans.objectStore(table)).map(store => {\n                    const { keyPath, autoIncrement } = store;\n                    const compound = isArray(keyPath);\n                    const outbound = keyPath == null;\n                    const indexByKeyPath = {};\n                    const result = {\n                        name: store.name,\n                        primaryKey: {\n                            name: null,\n                            isPrimaryKey: true,\n                            outbound,\n                            compound,\n                            keyPath,\n                            autoIncrement,\n                            unique: true,\n                            extractKey: getKeyExtractor(keyPath)\n                        },\n                        indexes: arrayify(store.indexNames).map(indexName => store.index(indexName))\n                            .map(index => {\n                            const { name, unique, multiEntry, keyPath } = index;\n                            const compound = isArray(keyPath);\n                            const result = {\n                                name,\n                                compound,\n                                keyPath,\n                                unique,\n                                multiEntry,\n                                extractKey: getKeyExtractor(keyPath)\n                            };\n                            indexByKeyPath[getKeyPathAlias(keyPath)] = result;\n                            return result;\n                        }),\n                        getIndexByKeyPath: (keyPath) => indexByKeyPath[getKeyPathAlias(keyPath)]\n                    };\n                    indexByKeyPath[\":id\"] = result.primaryKey;\n                    if (keyPath != null) {\n                        indexByKeyPath[getKeyPathAlias(keyPath)] = result.primaryKey;\n                    }\n                    return result;\n                })\n            },\n            hasGetAll: tables.length > 0 && ('getAll' in trans.objectStore(tables[0])) &&\n                !(typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n                    !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n                    [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604)\n        };\n    }\n    function makeIDBKeyRange(range) {\n        if (range.type === 3 )\n            return null;\n        if (range.type === 4 )\n            throw new Error(\"Cannot convert never type to IDBKeyRange\");\n        const { lower, upper, lowerOpen, upperOpen } = range;\n        const idbRange = lower === undefined ?\n            upper === undefined ?\n                null :\n                IdbKeyRange.upperBound(upper, !!upperOpen) :\n            upper === undefined ?\n                IdbKeyRange.lowerBound(lower, !!lowerOpen) :\n                IdbKeyRange.bound(lower, upper, !!lowerOpen, !!upperOpen);\n        return idbRange;\n    }\n    function createDbCoreTable(tableSchema) {\n        const tableName = tableSchema.name;\n        function mutate({ trans, type, keys, values, range }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const store = trans.objectStore(tableName);\n                const outbound = store.keyPath == null;\n                const isAddOrPut = type === \"put\" || type === \"add\";\n                if (!isAddOrPut && type !== 'delete' && type !== 'deleteRange')\n                    throw new Error(\"Invalid operation type: \" + type);\n                const { length } = keys || values || { length: 1 };\n                if (keys && values && keys.length !== values.length) {\n                    throw new Error(\"Given keys array must have same length as given values array.\");\n                }\n                if (length === 0)\n                    return resolve({ numFailures: 0, failures: {}, results: [], lastResult: undefined });\n                let req;\n                const reqs = [];\n                const failures = [];\n                let numFailures = 0;\n                const errorHandler = event => {\n                    ++numFailures;\n                    preventDefault(event);\n                };\n                if (type === 'deleteRange') {\n                    if (range.type === 4 )\n                        return resolve({ numFailures, failures, results: [], lastResult: undefined });\n                    if (range.type === 3 )\n                        reqs.push(req = store.clear());\n                    else\n                        reqs.push(req = store.delete(makeIDBKeyRange(range)));\n                }\n                else {\n                    const [args1, args2] = isAddOrPut ?\n                        outbound ?\n                            [values, keys] :\n                            [values, null] :\n                        [keys, null];\n                    if (isAddOrPut) {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = (args2 && args2[i] !== undefined ?\n                                store[type](args1[i], args2[i]) :\n                                store[type](args1[i])));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = store[type](args1[i]));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                }\n                const done = event => {\n                    const lastResult = event.target.result;\n                    reqs.forEach((req, i) => req.error != null && (failures[i] = req.error));\n                    resolve({\n                        numFailures,\n                        failures,\n                        results: type === \"delete\" ? keys : reqs.map(req => req.result),\n                        lastResult\n                    });\n                };\n                req.onerror = event => {\n                    errorHandler(event);\n                    done(event);\n                };\n                req.onsuccess = done;\n            });\n        }\n        function openCursor({ trans, values, query, reverse, unique }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const { index, range } = query;\n                const store = trans.objectStore(tableName);\n                const source = index.isPrimaryKey ?\n                    store :\n                    store.index(index.name);\n                const direction = reverse ?\n                    unique ?\n                        \"prevunique\" :\n                        \"prev\" :\n                    unique ?\n                        \"nextunique\" :\n                        \"next\";\n                const req = values || !('openKeyCursor' in source) ?\n                    source.openCursor(makeIDBKeyRange(range), direction) :\n                    source.openKeyCursor(makeIDBKeyRange(range), direction);\n                req.onerror = eventRejectHandler(reject);\n                req.onsuccess = wrap(ev => {\n                    const cursor = req.result;\n                    if (!cursor) {\n                        resolve(null);\n                        return;\n                    }\n                    cursor.___id = ++_id_counter;\n                    cursor.done = false;\n                    const _cursorContinue = cursor.continue.bind(cursor);\n                    let _cursorContinuePrimaryKey = cursor.continuePrimaryKey;\n                    if (_cursorContinuePrimaryKey)\n                        _cursorContinuePrimaryKey = _cursorContinuePrimaryKey.bind(cursor);\n                    const _cursorAdvance = cursor.advance.bind(cursor);\n                    const doThrowCursorIsNotStarted = () => { throw new Error(\"Cursor not started\"); };\n                    const doThrowCursorIsStopped = () => { throw new Error(\"Cursor not stopped\"); };\n                    cursor.trans = trans;\n                    cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsNotStarted;\n                    cursor.fail = wrap(reject);\n                    cursor.next = function () {\n                        let gotOne = 1;\n                        return this.start(() => gotOne-- ? this.continue() : this.stop()).then(() => this);\n                    };\n                    cursor.start = (callback) => {\n                        const iterationPromise = new Promise((resolveIteration, rejectIteration) => {\n                            resolveIteration = wrap(resolveIteration);\n                            req.onerror = eventRejectHandler(rejectIteration);\n                            cursor.fail = rejectIteration;\n                            cursor.stop = value => {\n                                cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsStopped;\n                                resolveIteration(value);\n                            };\n                        });\n                        const guardedCallback = () => {\n                            if (req.result) {\n                                try {\n                                    callback();\n                                }\n                                catch (err) {\n                                    cursor.fail(err);\n                                }\n                            }\n                            else {\n                                cursor.done = true;\n                                cursor.start = () => { throw new Error(\"Cursor behind last entry\"); };\n                                cursor.stop();\n                            }\n                        };\n                        req.onsuccess = wrap(ev => {\n                            req.onsuccess = guardedCallback;\n                            guardedCallback();\n                        });\n                        cursor.continue = _cursorContinue;\n                        cursor.continuePrimaryKey = _cursorContinuePrimaryKey;\n                        cursor.advance = _cursorAdvance;\n                        guardedCallback();\n                        return iterationPromise;\n                    };\n                    resolve(cursor);\n                }, reject);\n            });\n        }\n        function query(hasGetAll) {\n            return (request) => {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const { trans, values, limit, query } = request;\n                    const nonInfinitLimit = limit === Infinity ? undefined : limit;\n                    const { index, range } = query;\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    if (limit === 0)\n                        return resolve({ result: [] });\n                    if (hasGetAll) {\n                        const req = values ?\n                            source.getAll(idbKeyRange, nonInfinitLimit) :\n                            source.getAllKeys(idbKeyRange, nonInfinitLimit);\n                        req.onsuccess = event => resolve({ result: event.target.result });\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                    else {\n                        let count = 0;\n                        const req = values || !('openKeyCursor' in source) ?\n                            source.openCursor(idbKeyRange) :\n                            source.openKeyCursor(idbKeyRange);\n                        const result = [];\n                        req.onsuccess = event => {\n                            const cursor = req.result;\n                            if (!cursor)\n                                return resolve({ result });\n                            result.push(values ? cursor.value : cursor.primaryKey);\n                            if (++count === limit)\n                                return resolve({ result });\n                            cursor.continue();\n                        };\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                });\n            };\n        }\n        return {\n            name: tableName,\n            schema: tableSchema,\n            mutate,\n            getMany({ trans, keys }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const length = keys.length;\n                    const result = new Array(length);\n                    let keyCount = 0;\n                    let callbackCount = 0;\n                    let req;\n                    const successHandler = event => {\n                        const req = event.target;\n                        if ((result[req._pos] = req.result) != null)\n                            ;\n                        if (++callbackCount === keyCount)\n                            resolve(result);\n                    };\n                    const errorHandler = eventRejectHandler(reject);\n                    for (let i = 0; i < length; ++i) {\n                        const key = keys[i];\n                        if (key != null) {\n                            req = store.get(keys[i]);\n                            req._pos = i;\n                            req.onsuccess = successHandler;\n                            req.onerror = errorHandler;\n                            ++keyCount;\n                        }\n                    }\n                    if (keyCount === 0)\n                        resolve(result);\n                });\n            },\n            get({ trans, key }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const req = store.get(key);\n                    req.onsuccess = event => resolve(event.target.result);\n                    req.onerror = eventRejectHandler(reject);\n                });\n            },\n            query: query(hasGetAll),\n            openCursor,\n            count({ query, trans }) {\n                const { index, range } = query;\n                return new Promise((resolve, reject) => {\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    const req = idbKeyRange ? source.count(idbKeyRange) : source.count();\n                    req.onsuccess = wrap(ev => resolve(ev.target.result));\n                    req.onerror = eventRejectHandler(reject);\n                });\n            }\n        };\n    }\n    const { schema, hasGetAll } = extractSchema(db, tmpTrans);\n    const tables = schema.tables.map(tableSchema => createDbCoreTable(tableSchema));\n    const tableMap = {};\n    tables.forEach(table => tableMap[table.name] = table);\n    return {\n        stack: \"dbcore\",\n        transaction: db.transaction.bind(db),\n        table(name) {\n            const result = tableMap[name];\n            if (!result)\n                throw new Error(`Table '${name}' not found`);\n            return tableMap[name];\n        },\n        MIN_KEY: -Infinity,\n        MAX_KEY: getMaxKey(IdbKeyRange),\n        schema\n    };\n}\n\nfunction createMiddlewareStack(stackImpl, middlewares) {\n    return middlewares.reduce((down, { create }) => ({ ...down, ...create(down) }), stackImpl);\n}\nfunction createMiddlewareStacks(middlewares, idbdb, { IDBKeyRange, indexedDB }, tmpTrans) {\n    const dbcore = createMiddlewareStack(createDBCore(idbdb, IDBKeyRange, tmpTrans), middlewares.dbcore);\n    return {\n        dbcore\n    };\n}\nfunction generateMiddlewareStacks({ _novip: db }, tmpTrans) {\n    const idbdb = tmpTrans.db;\n    const stacks = createMiddlewareStacks(db._middlewares, idbdb, db._deps, tmpTrans);\n    db.core = stacks.dbcore;\n    db.tables.forEach(table => {\n        const tableName = table.name;\n        if (db.core.schema.tables.some(tbl => tbl.name === tableName)) {\n            table.core = db.core.table(tableName);\n            if (db[tableName] instanceof db.Table) {\n                db[tableName].core = table.core;\n            }\n        }\n    });\n}\n\nfunction setApiOnPlace({ _novip: db }, objs, tableNames, dbschema) {\n    tableNames.forEach(tableName => {\n        const schema = dbschema[tableName];\n        objs.forEach(obj => {\n            const propDesc = getPropertyDescriptor(obj, tableName);\n            if (!propDesc || (\"value\" in propDesc && propDesc.value === undefined)) {\n                if (obj === db.Transaction.prototype || obj instanceof db.Transaction) {\n                    setProp(obj, tableName, {\n                        get() { return this.table(tableName); },\n                        set(value) {\n                            defineProperty(this, tableName, { value, writable: true, configurable: true, enumerable: true });\n                        }\n                    });\n                }\n                else {\n                    obj[tableName] = new db.Table(tableName, schema);\n                }\n            }\n        });\n    });\n}\nfunction removeTablesApi({ _novip: db }, objs) {\n    objs.forEach(obj => {\n        for (let key in obj) {\n            if (obj[key] instanceof db.Table)\n                delete obj[key];\n        }\n    });\n}\nfunction lowerVersionFirst(a, b) {\n    return a._cfg.version - b._cfg.version;\n}\nfunction runUpgraders(db, oldVersion, idbUpgradeTrans, reject) {\n    const globalSchema = db._dbSchema;\n    const trans = db._createTransaction('readwrite', db._storeNames, globalSchema);\n    trans.create(idbUpgradeTrans);\n    trans._completion.catch(reject);\n    const rejectTransaction = trans._reject.bind(trans);\n    const transless = PSD.transless || PSD;\n    newScope(() => {\n        PSD.trans = trans;\n        PSD.transless = transless;\n        if (oldVersion === 0) {\n            keys(globalSchema).forEach(tableName => {\n                createTable(idbUpgradeTrans, tableName, globalSchema[tableName].primKey, globalSchema[tableName].indexes);\n            });\n            generateMiddlewareStacks(db, idbUpgradeTrans);\n            DexiePromise.follow(() => db.on.populate.fire(trans)).catch(rejectTransaction);\n        }\n        else\n            updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans).catch(rejectTransaction);\n    });\n}\nfunction updateTablesAndIndexes({ _novip: db }, oldVersion, trans, idbUpgradeTrans) {\n    const queue = [];\n    const versions = db._versions;\n    let globalSchema = db._dbSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n    let anyContentUpgraderHasRun = false;\n    const versToRun = versions.filter(v => v._cfg.version >= oldVersion);\n    versToRun.forEach(version => {\n        queue.push(() => {\n            const oldSchema = globalSchema;\n            const newSchema = version._cfg.dbschema;\n            adjustToExistingIndexNames(db, oldSchema, idbUpgradeTrans);\n            adjustToExistingIndexNames(db, newSchema, idbUpgradeTrans);\n            globalSchema = db._dbSchema = newSchema;\n            const diff = getSchemaDiff(oldSchema, newSchema);\n            diff.add.forEach(tuple => {\n                createTable(idbUpgradeTrans, tuple[0], tuple[1].primKey, tuple[1].indexes);\n            });\n            diff.change.forEach(change => {\n                if (change.recreate) {\n                    throw new exceptions.Upgrade(\"Not yet support for changing primary key\");\n                }\n                else {\n                    const store = idbUpgradeTrans.objectStore(change.name);\n                    change.add.forEach(idx => addIndex(store, idx));\n                    change.change.forEach(idx => {\n                        store.deleteIndex(idx.name);\n                        addIndex(store, idx);\n                    });\n                    change.del.forEach(idxName => store.deleteIndex(idxName));\n                }\n            });\n            const contentUpgrade = version._cfg.contentUpgrade;\n            if (contentUpgrade && version._cfg.version > oldVersion) {\n                generateMiddlewareStacks(db, idbUpgradeTrans);\n                trans._memoizedTables = {};\n                anyContentUpgraderHasRun = true;\n                let upgradeSchema = shallowClone(newSchema);\n                diff.del.forEach(table => {\n                    upgradeSchema[table] = oldSchema[table];\n                });\n                removeTablesApi(db, [db.Transaction.prototype]);\n                setApiOnPlace(db, [db.Transaction.prototype], keys(upgradeSchema), upgradeSchema);\n                trans.schema = upgradeSchema;\n                const contentUpgradeIsAsync = isAsyncFunction(contentUpgrade);\n                if (contentUpgradeIsAsync) {\n                    incrementExpectedAwaits();\n                }\n                let returnValue;\n                const promiseFollowed = DexiePromise.follow(() => {\n                    returnValue = contentUpgrade(trans);\n                    if (returnValue) {\n                        if (contentUpgradeIsAsync) {\n                            var decrementor = decrementExpectedAwaits.bind(null, null);\n                            returnValue.then(decrementor, decrementor);\n                        }\n                    }\n                });\n                return (returnValue && typeof returnValue.then === 'function' ?\n                    DexiePromise.resolve(returnValue) : promiseFollowed.then(() => returnValue));\n            }\n        });\n        queue.push(idbtrans => {\n            if (!anyContentUpgraderHasRun || !hasIEDeleteObjectStoreBug) {\n                const newSchema = version._cfg.dbschema;\n                deleteRemovedTables(newSchema, idbtrans);\n            }\n            removeTablesApi(db, [db.Transaction.prototype]);\n            setApiOnPlace(db, [db.Transaction.prototype], db._storeNames, db._dbSchema);\n            trans.schema = db._dbSchema;\n        });\n    });\n    function runQueue() {\n        return queue.length ? DexiePromise.resolve(queue.shift()(trans.idbtrans)).then(runQueue) :\n            DexiePromise.resolve();\n    }\n    return runQueue().then(() => {\n        createMissingTables(globalSchema, idbUpgradeTrans);\n    });\n}\nfunction getSchemaDiff(oldSchema, newSchema) {\n    const diff = {\n        del: [],\n        add: [],\n        change: []\n    };\n    let table;\n    for (table in oldSchema) {\n        if (!newSchema[table])\n            diff.del.push(table);\n    }\n    for (table in newSchema) {\n        const oldDef = oldSchema[table], newDef = newSchema[table];\n        if (!oldDef) {\n            diff.add.push([table, newDef]);\n        }\n        else {\n            const change = {\n                name: table,\n                def: newDef,\n                recreate: false,\n                del: [],\n                add: [],\n                change: []\n            };\n            if ((\n            '' + (oldDef.primKey.keyPath || '')) !== ('' + (newDef.primKey.keyPath || '')) ||\n                (oldDef.primKey.auto !== newDef.primKey.auto && !isIEOrEdge))\n             {\n                change.recreate = true;\n                diff.change.push(change);\n            }\n            else {\n                const oldIndexes = oldDef.idxByName;\n                const newIndexes = newDef.idxByName;\n                let idxName;\n                for (idxName in oldIndexes) {\n                    if (!newIndexes[idxName])\n                        change.del.push(idxName);\n                }\n                for (idxName in newIndexes) {\n                    const oldIdx = oldIndexes[idxName], newIdx = newIndexes[idxName];\n                    if (!oldIdx)\n                        change.add.push(newIdx);\n                    else if (oldIdx.src !== newIdx.src)\n                        change.change.push(newIdx);\n                }\n                if (change.del.length > 0 || change.add.length > 0 || change.change.length > 0) {\n                    diff.change.push(change);\n                }\n            }\n        }\n    }\n    return diff;\n}\nfunction createTable(idbtrans, tableName, primKey, indexes) {\n    const store = idbtrans.db.createObjectStore(tableName, primKey.keyPath ?\n        { keyPath: primKey.keyPath, autoIncrement: primKey.auto } :\n        { autoIncrement: primKey.auto });\n    indexes.forEach(idx => addIndex(store, idx));\n    return store;\n}\nfunction createMissingTables(newSchema, idbtrans) {\n    keys(newSchema).forEach(tableName => {\n        if (!idbtrans.db.objectStoreNames.contains(tableName)) {\n            createTable(idbtrans, tableName, newSchema[tableName].primKey, newSchema[tableName].indexes);\n        }\n    });\n}\nfunction deleteRemovedTables(newSchema, idbtrans) {\n    [].slice.call(idbtrans.db.objectStoreNames).forEach(storeName => newSchema[storeName] == null && idbtrans.db.deleteObjectStore(storeName));\n}\nfunction addIndex(store, idx) {\n    store.createIndex(idx.name, idx.keyPath, { unique: idx.unique, multiEntry: idx.multi });\n}\nfunction buildGlobalSchema(db, idbdb, tmpTrans) {\n    const globalSchema = {};\n    const dbStoreNames = slice(idbdb.objectStoreNames, 0);\n    dbStoreNames.forEach(storeName => {\n        const store = tmpTrans.objectStore(storeName);\n        let keyPath = store.keyPath;\n        const primKey = createIndexSpec(nameFromKeyPath(keyPath), keyPath || \"\", false, false, !!store.autoIncrement, keyPath && typeof keyPath !== \"string\", true);\n        const indexes = [];\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const idbindex = store.index(store.indexNames[j]);\n            keyPath = idbindex.keyPath;\n            var index = createIndexSpec(idbindex.name, keyPath, !!idbindex.unique, !!idbindex.multiEntry, false, keyPath && typeof keyPath !== \"string\", false);\n            indexes.push(index);\n        }\n        globalSchema[storeName] = createTableSchema(storeName, primKey, indexes);\n    });\n    return globalSchema;\n}\nfunction readGlobalSchema({ _novip: db }, idbdb, tmpTrans) {\n    db.verno = idbdb.version / 10;\n    const globalSchema = db._dbSchema = buildGlobalSchema(db, idbdb, tmpTrans);\n    db._storeNames = slice(idbdb.objectStoreNames, 0);\n    setApiOnPlace(db, [db._allTables], keys(globalSchema), globalSchema);\n}\nfunction verifyInstalledSchema(db, tmpTrans) {\n    const installedSchema = buildGlobalSchema(db, db.idbdb, tmpTrans);\n    const diff = getSchemaDiff(installedSchema, db._dbSchema);\n    return !(diff.add.length || diff.change.some(ch => ch.add.length || ch.change.length));\n}\nfunction adjustToExistingIndexNames({ _novip: db }, schema, idbtrans) {\n    const storeNames = idbtrans.db.objectStoreNames;\n    for (let i = 0; i < storeNames.length; ++i) {\n        const storeName = storeNames[i];\n        const store = idbtrans.objectStore(storeName);\n        db._hasGetAll = 'getAll' in store;\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const indexName = store.indexNames[j];\n            const keyPath = store.index(indexName).keyPath;\n            const dexieName = typeof keyPath === 'string' ? keyPath : \"[\" + slice(keyPath).join('+') + \"]\";\n            if (schema[storeName]) {\n                const indexSpec = schema[storeName].idxByName[dexieName];\n                if (indexSpec) {\n                    indexSpec.name = indexName;\n                    delete schema[storeName].idxByName[dexieName];\n                    schema[storeName].idxByName[indexName] = indexSpec;\n                }\n            }\n        }\n    }\n    if (typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n        !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n        _global.WorkerGlobalScope && _global instanceof _global.WorkerGlobalScope &&\n        [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604) {\n        db._hasGetAll = false;\n    }\n}\nfunction parseIndexSyntax(primKeyAndIndexes) {\n    return primKeyAndIndexes.split(',').map((index, indexNum) => {\n        index = index.trim();\n        const name = index.replace(/([&*]|\\+\\+)/g, \"\");\n        const keyPath = /^\\[/.test(name) ? name.match(/^\\[(.*)\\]$/)[1].split('+') : name;\n        return createIndexSpec(name, keyPath || null, /\\&/.test(index), /\\*/.test(index), /\\+\\+/.test(index), isArray(keyPath), indexNum === 0);\n    });\n}\n\nclass Version {\n    _parseStoresSpec(stores, outSchema) {\n        keys(stores).forEach(tableName => {\n            if (stores[tableName] !== null) {\n                var indexes = parseIndexSyntax(stores[tableName]);\n                var primKey = indexes.shift();\n                if (primKey.multi)\n                    throw new exceptions.Schema(\"Primary key cannot be multi-valued\");\n                indexes.forEach(idx => {\n                    if (idx.auto)\n                        throw new exceptions.Schema(\"Only primary key can be marked as autoIncrement (++)\");\n                    if (!idx.keyPath)\n                        throw new exceptions.Schema(\"Index must have a name and cannot be an empty string\");\n                });\n                outSchema[tableName] = createTableSchema(tableName, primKey, indexes);\n            }\n        });\n    }\n    stores(stores) {\n        const db = this.db;\n        this._cfg.storesSource = this._cfg.storesSource ?\n            extend(this._cfg.storesSource, stores) :\n            stores;\n        const versions = db._versions;\n        const storesSpec = {};\n        let dbschema = {};\n        versions.forEach(version => {\n            extend(storesSpec, version._cfg.storesSource);\n            dbschema = (version._cfg.dbschema = {});\n            version._parseStoresSpec(storesSpec, dbschema);\n        });\n        db._dbSchema = dbschema;\n        removeTablesApi(db, [db._allTables, db, db.Transaction.prototype]);\n        setApiOnPlace(db, [db._allTables, db, db.Transaction.prototype, this._cfg.tables], keys(dbschema), dbschema);\n        db._storeNames = keys(dbschema);\n        return this;\n    }\n    upgrade(upgradeFunction) {\n        this._cfg.contentUpgrade = promisableChain(this._cfg.contentUpgrade || nop, upgradeFunction);\n        return this;\n    }\n}\n\nfunction createVersionConstructor(db) {\n    return makeClassConstructor(Version.prototype, function Version(versionNumber) {\n        this.db = db;\n        this._cfg = {\n            version: versionNumber,\n            storesSource: null,\n            dbschema: {},\n            tables: {},\n            contentUpgrade: null\n        };\n    });\n}\n\nfunction getDbNamesTable(indexedDB, IDBKeyRange) {\n    let dbNamesDB = indexedDB[\"_dbNamesDB\"];\n    if (!dbNamesDB) {\n        dbNamesDB = indexedDB[\"_dbNamesDB\"] = new Dexie$1(DBNAMES_DB, {\n            addons: [],\n            indexedDB,\n            IDBKeyRange,\n        });\n        dbNamesDB.version(1).stores({ dbnames: \"name\" });\n    }\n    return dbNamesDB.table(\"dbnames\");\n}\nfunction hasDatabasesNative(indexedDB) {\n    return indexedDB && typeof indexedDB.databases === \"function\";\n}\nfunction getDatabaseNames({ indexedDB, IDBKeyRange, }) {\n    return hasDatabasesNative(indexedDB)\n        ? Promise.resolve(indexedDB.databases()).then((infos) => infos\n            .map((info) => info.name)\n            .filter((name) => name !== DBNAMES_DB))\n        : getDbNamesTable(indexedDB, IDBKeyRange).toCollection().primaryKeys();\n}\nfunction _onDatabaseCreated({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).put({ name }).catch(nop);\n}\nfunction _onDatabaseDeleted({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).delete(name).catch(nop);\n}\n\nfunction vip(fn) {\n    return newScope(function () {\n        PSD.letThrough = true;\n        return fn();\n    });\n}\n\nfunction idbReady() {\n    var isSafari = !navigator.userAgentData &&\n        /Safari\\//.test(navigator.userAgent) &&\n        !/Chrom(e|ium)\\//.test(navigator.userAgent);\n    if (!isSafari || !indexedDB.databases)\n        return Promise.resolve();\n    var intervalId;\n    return new Promise(function (resolve) {\n        var tryIdb = function () { return indexedDB.databases().finally(resolve); };\n        intervalId = setInterval(tryIdb, 100);\n        tryIdb();\n    }).finally(function () { return clearInterval(intervalId); });\n}\n\nfunction dexieOpen(db) {\n    const state = db._state;\n    const { indexedDB } = db._deps;\n    if (state.isBeingOpened || db.idbdb)\n        return state.dbReadyPromise.then(() => state.dbOpenError ?\n            rejection(state.dbOpenError) :\n            db);\n    debug && (state.openCanceller._stackHolder = getErrorWithStack());\n    state.isBeingOpened = true;\n    state.dbOpenError = null;\n    state.openComplete = false;\n    const openCanceller = state.openCanceller;\n    function throwIfCancelled() {\n        if (state.openCanceller !== openCanceller)\n            throw new exceptions.DatabaseClosed('db.open() was cancelled');\n    }\n    let resolveDbReady = state.dbReadyResolve,\n    upgradeTransaction = null, wasCreated = false;\n    return DexiePromise.race([openCanceller, (typeof navigator === 'undefined' ? DexiePromise.resolve() : idbReady()).then(() => new DexiePromise((resolve, reject) => {\n            throwIfCancelled();\n            if (!indexedDB)\n                throw new exceptions.MissingAPI();\n            const dbName = db.name;\n            const req = state.autoSchema ?\n                indexedDB.open(dbName) :\n                indexedDB.open(dbName, Math.round(db.verno * 10));\n            if (!req)\n                throw new exceptions.MissingAPI();\n            req.onerror = eventRejectHandler(reject);\n            req.onblocked = wrap(db._fireOnBlocked);\n            req.onupgradeneeded = wrap(e => {\n                upgradeTransaction = req.transaction;\n                if (state.autoSchema && !db._options.allowEmptyDB) {\n                    req.onerror = preventDefault;\n                    upgradeTransaction.abort();\n                    req.result.close();\n                    const delreq = indexedDB.deleteDatabase(dbName);\n                    delreq.onsuccess = delreq.onerror = wrap(() => {\n                        reject(new exceptions.NoSuchDatabase(`Database ${dbName} doesnt exist`));\n                    });\n                }\n                else {\n                    upgradeTransaction.onerror = eventRejectHandler(reject);\n                    var oldVer = e.oldVersion > Math.pow(2, 62) ? 0 : e.oldVersion;\n                    wasCreated = oldVer < 1;\n                    db._novip.idbdb = req.result;\n                    runUpgraders(db, oldVer / 10, upgradeTransaction, reject);\n                }\n            }, reject);\n            req.onsuccess = wrap(() => {\n                upgradeTransaction = null;\n                const idbdb = db._novip.idbdb = req.result;\n                const objectStoreNames = slice(idbdb.objectStoreNames);\n                if (objectStoreNames.length > 0)\n                    try {\n                        const tmpTrans = idbdb.transaction(safariMultiStoreFix(objectStoreNames), 'readonly');\n                        if (state.autoSchema)\n                            readGlobalSchema(db, idbdb, tmpTrans);\n                        else {\n                            adjustToExistingIndexNames(db, db._dbSchema, tmpTrans);\n                            if (!verifyInstalledSchema(db, tmpTrans)) {\n                                console.warn(`Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Some queries may fail.`);\n                            }\n                        }\n                        generateMiddlewareStacks(db, tmpTrans);\n                    }\n                    catch (e) {\n                    }\n                connections.push(db);\n                idbdb.onversionchange = wrap(ev => {\n                    state.vcFired = true;\n                    db.on(\"versionchange\").fire(ev);\n                });\n                idbdb.onclose = wrap(ev => {\n                    db.on(\"close\").fire(ev);\n                });\n                if (wasCreated)\n                    _onDatabaseCreated(db._deps, dbName);\n                resolve();\n            }, reject);\n        }))]).then(() => {\n        throwIfCancelled();\n        state.onReadyBeingFired = [];\n        return DexiePromise.resolve(vip(() => db.on.ready.fire(db.vip))).then(function fireRemainders() {\n            if (state.onReadyBeingFired.length > 0) {\n                let remainders = state.onReadyBeingFired.reduce(promisableChain, nop);\n                state.onReadyBeingFired = [];\n                return DexiePromise.resolve(vip(() => remainders(db.vip))).then(fireRemainders);\n            }\n        });\n    }).finally(() => {\n        state.onReadyBeingFired = null;\n        state.isBeingOpened = false;\n    }).then(() => {\n        return db;\n    }).catch(err => {\n        state.dbOpenError = err;\n        try {\n            upgradeTransaction && upgradeTransaction.abort();\n        }\n        catch (_a) { }\n        if (openCanceller === state.openCanceller) {\n            db._close();\n        }\n        return rejection(err);\n    }).finally(() => {\n        state.openComplete = true;\n        resolveDbReady();\n    });\n}\n\nfunction awaitIterator(iterator) {\n    var callNext = result => iterator.next(result), doThrow = error => iterator.throw(error), onSuccess = step(callNext), onError = step(doThrow);\n    function step(getNext) {\n        return (val) => {\n            var next = getNext(val), value = next.value;\n            return next.done ? value :\n                (!value || typeof value.then !== 'function' ?\n                    isArray(value) ? Promise.all(value).then(onSuccess, onError) : onSuccess(value) :\n                    value.then(onSuccess, onError));\n        };\n    }\n    return step(callNext)();\n}\n\nfunction extractTransactionArgs(mode, _tableArgs_, scopeFunc) {\n    var i = arguments.length;\n    if (i < 2)\n        throw new exceptions.InvalidArgument(\"Too few arguments\");\n    var args = new Array(i - 1);\n    while (--i)\n        args[i - 1] = arguments[i];\n    scopeFunc = args.pop();\n    var tables = flatten(args);\n    return [mode, tables, scopeFunc];\n}\nfunction enterTransactionScope(db, mode, storeNames, parentTransaction, scopeFunc) {\n    return DexiePromise.resolve().then(() => {\n        const transless = PSD.transless || PSD;\n        const trans = db._createTransaction(mode, storeNames, db._dbSchema, parentTransaction);\n        const zoneProps = {\n            trans: trans,\n            transless: transless\n        };\n        if (parentTransaction) {\n            trans.idbtrans = parentTransaction.idbtrans;\n        }\n        else {\n            try {\n                trans.create();\n                db._state.PR1398_maxLoop = 3;\n            }\n            catch (ex) {\n                if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                    console.warn('Dexie: Need to reopen db');\n                    db._close();\n                    return db.open().then(() => enterTransactionScope(db, mode, storeNames, null, scopeFunc));\n                }\n                return rejection(ex);\n            }\n        }\n        const scopeFuncIsAsync = isAsyncFunction(scopeFunc);\n        if (scopeFuncIsAsync) {\n            incrementExpectedAwaits();\n        }\n        let returnValue;\n        const promiseFollowed = DexiePromise.follow(() => {\n            returnValue = scopeFunc.call(trans, trans);\n            if (returnValue) {\n                if (scopeFuncIsAsync) {\n                    var decrementor = decrementExpectedAwaits.bind(null, null);\n                    returnValue.then(decrementor, decrementor);\n                }\n                else if (typeof returnValue.next === 'function' && typeof returnValue.throw === 'function') {\n                    returnValue = awaitIterator(returnValue);\n                }\n            }\n        }, zoneProps);\n        return (returnValue && typeof returnValue.then === 'function' ?\n            DexiePromise.resolve(returnValue).then(x => trans.active ?\n                x\n                : rejection(new exceptions.PrematureCommit(\"Transaction committed too early. See http://bit.ly/2kdckMn\")))\n            : promiseFollowed.then(() => returnValue)).then(x => {\n            if (parentTransaction)\n                trans._resolve();\n            return trans._completion.then(() => x);\n        }).catch(e => {\n            trans._reject(e);\n            return rejection(e);\n        });\n    });\n}\n\nfunction pad(a, value, count) {\n    const result = isArray(a) ? a.slice() : [a];\n    for (let i = 0; i < count; ++i)\n        result.push(value);\n    return result;\n}\nfunction createVirtualIndexMiddleware(down) {\n    return {\n        ...down,\n        table(tableName) {\n            const table = down.table(tableName);\n            const { schema } = table;\n            const indexLookup = {};\n            const allVirtualIndexes = [];\n            function addVirtualIndexes(keyPath, keyTail, lowLevelIndex) {\n                const keyPathAlias = getKeyPathAlias(keyPath);\n                const indexList = (indexLookup[keyPathAlias] = indexLookup[keyPathAlias] || []);\n                const keyLength = keyPath == null ? 0 : typeof keyPath === 'string' ? 1 : keyPath.length;\n                const isVirtual = keyTail > 0;\n                const virtualIndex = {\n                    ...lowLevelIndex,\n                    isVirtual,\n                    keyTail,\n                    keyLength,\n                    extractKey: getKeyExtractor(keyPath),\n                    unique: !isVirtual && lowLevelIndex.unique\n                };\n                indexList.push(virtualIndex);\n                if (!virtualIndex.isPrimaryKey) {\n                    allVirtualIndexes.push(virtualIndex);\n                }\n                if (keyLength > 1) {\n                    const virtualKeyPath = keyLength === 2 ?\n                        keyPath[0] :\n                        keyPath.slice(0, keyLength - 1);\n                    addVirtualIndexes(virtualKeyPath, keyTail + 1, lowLevelIndex);\n                }\n                indexList.sort((a, b) => a.keyTail - b.keyTail);\n                return virtualIndex;\n            }\n            const primaryKey = addVirtualIndexes(schema.primaryKey.keyPath, 0, schema.primaryKey);\n            indexLookup[\":id\"] = [primaryKey];\n            for (const index of schema.indexes) {\n                addVirtualIndexes(index.keyPath, 0, index);\n            }\n            function findBestIndex(keyPath) {\n                const result = indexLookup[getKeyPathAlias(keyPath)];\n                return result && result[0];\n            }\n            function translateRange(range, keyTail) {\n                return {\n                    type: range.type === 1  ?\n                        2  :\n                        range.type,\n                    lower: pad(range.lower, range.lowerOpen ? down.MAX_KEY : down.MIN_KEY, keyTail),\n                    lowerOpen: true,\n                    upper: pad(range.upper, range.upperOpen ? down.MIN_KEY : down.MAX_KEY, keyTail),\n                    upperOpen: true\n                };\n            }\n            function translateRequest(req) {\n                const index = req.query.index;\n                return index.isVirtual ? {\n                    ...req,\n                    query: {\n                        index,\n                        range: translateRange(req.query.range, index.keyTail)\n                    }\n                } : req;\n            }\n            const result = {\n                ...table,\n                schema: {\n                    ...schema,\n                    primaryKey,\n                    indexes: allVirtualIndexes,\n                    getIndexByKeyPath: findBestIndex\n                },\n                count(req) {\n                    return table.count(translateRequest(req));\n                },\n                query(req) {\n                    return table.query(translateRequest(req));\n                },\n                openCursor(req) {\n                    const { keyTail, isVirtual, keyLength } = req.query.index;\n                    if (!isVirtual)\n                        return table.openCursor(req);\n                    function createVirtualCursor(cursor) {\n                        function _continue(key) {\n                            key != null ?\n                                cursor.continue(pad(key, req.reverse ? down.MAX_KEY : down.MIN_KEY, keyTail)) :\n                                req.unique ?\n                                    cursor.continue(cursor.key.slice(0, keyLength)\n                                        .concat(req.reverse\n                                        ? down.MIN_KEY\n                                        : down.MAX_KEY, keyTail)) :\n                                    cursor.continue();\n                        }\n                        const virtualCursor = Object.create(cursor, {\n                            continue: { value: _continue },\n                            continuePrimaryKey: {\n                                value(key, primaryKey) {\n                                    cursor.continuePrimaryKey(pad(key, down.MAX_KEY, keyTail), primaryKey);\n                                }\n                            },\n                            primaryKey: {\n                                get() {\n                                    return cursor.primaryKey;\n                                }\n                            },\n                            key: {\n                                get() {\n                                    const key = cursor.key;\n                                    return keyLength === 1 ?\n                                        key[0] :\n                                        key.slice(0, keyLength);\n                                }\n                            },\n                            value: {\n                                get() {\n                                    return cursor.value;\n                                }\n                            }\n                        });\n                        return virtualCursor;\n                    }\n                    return table.openCursor(translateRequest(req))\n                        .then(cursor => cursor && createVirtualCursor(cursor));\n                }\n            };\n            return result;\n        }\n    };\n}\nconst virtualIndexMiddleware = {\n    stack: \"dbcore\",\n    name: \"VirtualIndexMiddleware\",\n    level: 1,\n    create: createVirtualIndexMiddleware\n};\n\nfunction getObjectDiff(a, b, rv, prfx) {\n    rv = rv || {};\n    prfx = prfx || '';\n    keys(a).forEach((prop) => {\n        if (!hasOwn(b, prop)) {\n            rv[prfx + prop] = undefined;\n        }\n        else {\n            var ap = a[prop], bp = b[prop];\n            if (typeof ap === 'object' && typeof bp === 'object' && ap && bp) {\n                const apTypeName = toStringTag(ap);\n                const bpTypeName = toStringTag(bp);\n                if (apTypeName !== bpTypeName) {\n                    rv[prfx + prop] = b[prop];\n                }\n                else if (apTypeName === 'Object') {\n                    getObjectDiff(ap, bp, rv, prfx + prop + '.');\n                }\n                else if (ap !== bp) {\n                    rv[prfx + prop] = b[prop];\n                }\n            }\n            else if (ap !== bp)\n                rv[prfx + prop] = b[prop];\n        }\n    });\n    keys(b).forEach((prop) => {\n        if (!hasOwn(a, prop)) {\n            rv[prfx + prop] = b[prop];\n        }\n    });\n    return rv;\n}\n\nfunction getEffectiveKeys(primaryKey, req) {\n    if (req.type === 'delete')\n        return req.keys;\n    return req.keys || req.values.map(primaryKey.extractKey);\n}\n\nconst hooksMiddleware = {\n    stack: \"dbcore\",\n    name: \"HooksMiddleware\",\n    level: 2,\n    create: (downCore) => ({\n        ...downCore,\n        table(tableName) {\n            const downTable = downCore.table(tableName);\n            const { primaryKey } = downTable.schema;\n            const tableMiddleware = {\n                ...downTable,\n                mutate(req) {\n                    const dxTrans = PSD.trans;\n                    const { deleting, creating, updating } = dxTrans.table(tableName).hook;\n                    switch (req.type) {\n                        case 'add':\n                            if (creating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'put':\n                            if (creating.fire === nop && updating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'delete':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'deleteRange':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => deleteRange(req), true);\n                    }\n                    return downTable.mutate(req);\n                    function addPutOrDelete(req) {\n                        const dxTrans = PSD.trans;\n                        const keys = req.keys || getEffectiveKeys(primaryKey, req);\n                        if (!keys)\n                            throw new Error(\"Keys missing\");\n                        req = req.type === 'add' || req.type === 'put' ?\n                            { ...req, keys } :\n                            { ...req };\n                        if (req.type !== 'delete')\n                            req.values = [...req.values];\n                        if (req.keys)\n                            req.keys = [...req.keys];\n                        return getExistingValues(downTable, req, keys).then(existingValues => {\n                            const contexts = keys.map((key, i) => {\n                                const existingValue = existingValues[i];\n                                const ctx = { onerror: null, onsuccess: null };\n                                if (req.type === 'delete') {\n                                    deleting.fire.call(ctx, key, existingValue, dxTrans);\n                                }\n                                else if (req.type === 'add' || existingValue === undefined) {\n                                    const generatedPrimaryKey = creating.fire.call(ctx, key, req.values[i], dxTrans);\n                                    if (key == null && generatedPrimaryKey != null) {\n                                        key = generatedPrimaryKey;\n                                        req.keys[i] = key;\n                                        if (!primaryKey.outbound) {\n                                            setByKeyPath(req.values[i], primaryKey.keyPath, key);\n                                        }\n                                    }\n                                }\n                                else {\n                                    const objectDiff = getObjectDiff(existingValue, req.values[i]);\n                                    const additionalChanges = updating.fire.call(ctx, objectDiff, key, existingValue, dxTrans);\n                                    if (additionalChanges) {\n                                        const requestedValue = req.values[i];\n                                        Object.keys(additionalChanges).forEach(keyPath => {\n                                            if (hasOwn(requestedValue, keyPath)) {\n                                                requestedValue[keyPath] = additionalChanges[keyPath];\n                                            }\n                                            else {\n                                                setByKeyPath(requestedValue, keyPath, additionalChanges[keyPath]);\n                                            }\n                                        });\n                                    }\n                                }\n                                return ctx;\n                            });\n                            return downTable.mutate(req).then(({ failures, results, numFailures, lastResult }) => {\n                                for (let i = 0; i < keys.length; ++i) {\n                                    const primKey = results ? results[i] : keys[i];\n                                    const ctx = contexts[i];\n                                    if (primKey == null) {\n                                        ctx.onerror && ctx.onerror(failures[i]);\n                                    }\n                                    else {\n                                        ctx.onsuccess && ctx.onsuccess(req.type === 'put' && existingValues[i] ?\n                                            req.values[i] :\n                                            primKey\n                                        );\n                                    }\n                                }\n                                return { failures, results, numFailures, lastResult };\n                            }).catch(error => {\n                                contexts.forEach(ctx => ctx.onerror && ctx.onerror(error));\n                                return Promise.reject(error);\n                            });\n                        });\n                    }\n                    function deleteRange(req) {\n                        return deleteNextChunk(req.trans, req.range, 10000);\n                    }\n                    function deleteNextChunk(trans, range, limit) {\n                        return downTable.query({ trans, values: false, query: { index: primaryKey, range }, limit })\n                            .then(({ result }) => {\n                            return addPutOrDelete({ type: 'delete', keys: result, trans }).then(res => {\n                                if (res.numFailures > 0)\n                                    return Promise.reject(res.failures[0]);\n                                if (result.length < limit) {\n                                    return { failures: [], numFailures: 0, lastResult: undefined };\n                                }\n                                else {\n                                    return deleteNextChunk(trans, { ...range, lower: result[result.length - 1], lowerOpen: true }, limit);\n                                }\n                            });\n                        });\n                    }\n                }\n            };\n            return tableMiddleware;\n        },\n    })\n};\nfunction getExistingValues(table, req, effectiveKeys) {\n    return req.type === \"add\"\n        ? Promise.resolve([])\n        : table.getMany({ trans: req.trans, keys: effectiveKeys, cache: \"immutable\" });\n}\n\nfunction getFromTransactionCache(keys, cache, clone) {\n    try {\n        if (!cache)\n            return null;\n        if (cache.keys.length < keys.length)\n            return null;\n        const result = [];\n        for (let i = 0, j = 0; i < cache.keys.length && j < keys.length; ++i) {\n            if (cmp(cache.keys[i], keys[j]) !== 0)\n                continue;\n            result.push(clone ? deepClone(cache.values[i]) : cache.values[i]);\n            ++j;\n        }\n        return result.length === keys.length ? result : null;\n    }\n    catch (_a) {\n        return null;\n    }\n}\nconst cacheExistingValuesMiddleware = {\n    stack: \"dbcore\",\n    level: -1,\n    create: (core) => {\n        return {\n            table: (tableName) => {\n                const table = core.table(tableName);\n                return {\n                    ...table,\n                    getMany: (req) => {\n                        if (!req.cache) {\n                            return table.getMany(req);\n                        }\n                        const cachedResult = getFromTransactionCache(req.keys, req.trans[\"_cache\"], req.cache === \"clone\");\n                        if (cachedResult) {\n                            return DexiePromise.resolve(cachedResult);\n                        }\n                        return table.getMany(req).then((res) => {\n                            req.trans[\"_cache\"] = {\n                                keys: req.keys,\n                                values: req.cache === \"clone\" ? deepClone(res) : res,\n                            };\n                            return res;\n                        });\n                    },\n                    mutate: (req) => {\n                        if (req.type !== \"add\")\n                            req.trans[\"_cache\"] = null;\n                        return table.mutate(req);\n                    },\n                };\n            },\n        };\n    },\n};\n\nfunction isEmptyRange(node) {\n    return !(\"from\" in node);\n}\nconst RangeSet = function (fromOrTree, to) {\n    if (this) {\n        extend(this, arguments.length ? { d: 1, from: fromOrTree, to: arguments.length > 1 ? to : fromOrTree } : { d: 0 });\n    }\n    else {\n        const rv = new RangeSet();\n        if (fromOrTree && (\"d\" in fromOrTree)) {\n            extend(rv, fromOrTree);\n        }\n        return rv;\n    }\n};\nprops(RangeSet.prototype, {\n    add(rangeSet) {\n        mergeRanges(this, rangeSet);\n        return this;\n    },\n    addKey(key) {\n        addRange(this, key, key);\n        return this;\n    },\n    addKeys(keys) {\n        keys.forEach(key => addRange(this, key, key));\n        return this;\n    },\n    [iteratorSymbol]() {\n        return getRangeSetIterator(this);\n    }\n});\nfunction addRange(target, from, to) {\n    const diff = cmp(from, to);\n    if (isNaN(diff))\n        return;\n    if (diff > 0)\n        throw RangeError();\n    if (isEmptyRange(target))\n        return extend(target, { from, to, d: 1 });\n    const left = target.l;\n    const right = target.r;\n    if (cmp(to, target.from) < 0) {\n        left\n            ? addRange(left, from, to)\n            : (target.l = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.to) > 0) {\n        right\n            ? addRange(right, from, to)\n            : (target.r = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.from) < 0) {\n        target.from = from;\n        target.l = null;\n        target.d = right ? right.d + 1 : 1;\n    }\n    if (cmp(to, target.to) > 0) {\n        target.to = to;\n        target.r = null;\n        target.d = target.l ? target.l.d + 1 : 1;\n    }\n    const rightWasCutOff = !target.r;\n    if (left && !target.l) {\n        mergeRanges(target, left);\n    }\n    if (right && rightWasCutOff) {\n        mergeRanges(target, right);\n    }\n}\nfunction mergeRanges(target, newSet) {\n    function _addRangeSet(target, { from, to, l, r }) {\n        addRange(target, from, to);\n        if (l)\n            _addRangeSet(target, l);\n        if (r)\n            _addRangeSet(target, r);\n    }\n    if (!isEmptyRange(newSet))\n        _addRangeSet(target, newSet);\n}\nfunction rangesOverlap(rangeSet1, rangeSet2) {\n    const i1 = getRangeSetIterator(rangeSet2);\n    let nextResult1 = i1.next();\n    if (nextResult1.done)\n        return false;\n    let a = nextResult1.value;\n    const i2 = getRangeSetIterator(rangeSet1);\n    let nextResult2 = i2.next(a.from);\n    let b = nextResult2.value;\n    while (!nextResult1.done && !nextResult2.done) {\n        if (cmp(b.from, a.to) <= 0 && cmp(b.to, a.from) >= 0)\n            return true;\n        cmp(a.from, b.from) < 0\n            ? (a = (nextResult1 = i1.next(b.from)).value)\n            : (b = (nextResult2 = i2.next(a.from)).value);\n    }\n    return false;\n}\nfunction getRangeSetIterator(node) {\n    let state = isEmptyRange(node) ? null : { s: 0, n: node };\n    return {\n        next(key) {\n            const keyProvided = arguments.length > 0;\n            while (state) {\n                switch (state.s) {\n                    case 0:\n                        state.s = 1;\n                        if (keyProvided) {\n                            while (state.n.l && cmp(key, state.n.from) < 0)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                        else {\n                            while (state.n.l)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                    case 1:\n                        state.s = 2;\n                        if (!keyProvided || cmp(key, state.n.to) <= 0)\n                            return { value: state.n, done: false };\n                    case 2:\n                        if (state.n.r) {\n                            state.s = 3;\n                            state = { up: state, n: state.n.r, s: 0 };\n                            continue;\n                        }\n                    case 3:\n                        state = state.up;\n                }\n            }\n            return { done: true };\n        },\n    };\n}\nfunction rebalance(target) {\n    var _a, _b;\n    const diff = (((_a = target.r) === null || _a === void 0 ? void 0 : _a.d) || 0) - (((_b = target.l) === null || _b === void 0 ? void 0 : _b.d) || 0);\n    const r = diff > 1 ? \"r\" : diff < -1 ? \"l\" : \"\";\n    if (r) {\n        const l = r === \"r\" ? \"l\" : \"r\";\n        const rootClone = { ...target };\n        const oldRootRight = target[r];\n        target.from = oldRootRight.from;\n        target.to = oldRootRight.to;\n        target[r] = oldRootRight[r];\n        rootClone[r] = oldRootRight[l];\n        target[l] = rootClone;\n        rootClone.d = computeDepth(rootClone);\n    }\n    target.d = computeDepth(target);\n}\nfunction computeDepth({ r, l }) {\n    return (r ? (l ? Math.max(r.d, l.d) : r.d) : l ? l.d : 0) + 1;\n}\n\nconst observabilityMiddleware = {\n    stack: \"dbcore\",\n    level: 0,\n    create: (core) => {\n        const dbName = core.schema.name;\n        const FULL_RANGE = new RangeSet(core.MIN_KEY, core.MAX_KEY);\n        return {\n            ...core,\n            table: (tableName) => {\n                const table = core.table(tableName);\n                const { schema } = table;\n                const { primaryKey } = schema;\n                const { extractKey, outbound } = primaryKey;\n                const tableClone = {\n                    ...table,\n                    mutate: (req) => {\n                        const trans = req.trans;\n                        const mutatedParts = trans.mutatedParts || (trans.mutatedParts = {});\n                        const getRangeSet = (indexName) => {\n                            const part = `idb://${dbName}/${tableName}/${indexName}`;\n                            return (mutatedParts[part] ||\n                                (mutatedParts[part] = new RangeSet()));\n                        };\n                        const pkRangeSet = getRangeSet(\"\");\n                        const delsRangeSet = getRangeSet(\":dels\");\n                        const { type } = req;\n                        let [keys, newObjs] = req.type === \"deleteRange\"\n                            ? [req.range]\n                            : req.type === \"delete\"\n                                ? [req.keys]\n                                : req.values.length < 50\n                                    ? [[], req.values]\n                                    : [];\n                        const oldCache = req.trans[\"_cache\"];\n                        return table.mutate(req).then((res) => {\n                            if (isArray(keys)) {\n                                if (type !== \"delete\")\n                                    keys = res.results;\n                                pkRangeSet.addKeys(keys);\n                                const oldObjs = getFromTransactionCache(keys, oldCache);\n                                if (!oldObjs && type !== \"add\") {\n                                    delsRangeSet.addKeys(keys);\n                                }\n                                if (oldObjs || newObjs) {\n                                    trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs);\n                                }\n                            }\n                            else if (keys) {\n                                const range = { from: keys.lower, to: keys.upper };\n                                delsRangeSet.add(range);\n                                pkRangeSet.add(range);\n                            }\n                            else {\n                                pkRangeSet.add(FULL_RANGE);\n                                delsRangeSet.add(FULL_RANGE);\n                                schema.indexes.forEach(idx => getRangeSet(idx.name).add(FULL_RANGE));\n                            }\n                            return res;\n                        });\n                    },\n                };\n                const getRange = ({ query: { index, range }, }) => {\n                    var _a, _b;\n                    return [\n                        index,\n                        new RangeSet((_a = range.lower) !== null && _a !== void 0 ? _a : core.MIN_KEY, (_b = range.upper) !== null && _b !== void 0 ? _b : core.MAX_KEY),\n                    ];\n                };\n                const readSubscribers = {\n                    get: (req) => [primaryKey, new RangeSet(req.key)],\n                    getMany: (req) => [primaryKey, new RangeSet().addKeys(req.keys)],\n                    count: getRange,\n                    query: getRange,\n                    openCursor: getRange,\n                };\n                keys(readSubscribers).forEach(method => {\n                    tableClone[method] = function (req) {\n                        const { subscr } = PSD;\n                        if (subscr) {\n                            const getRangeSet = (indexName) => {\n                                const part = `idb://${dbName}/${tableName}/${indexName}`;\n                                return (subscr[part] ||\n                                    (subscr[part] = new RangeSet()));\n                            };\n                            const pkRangeSet = getRangeSet(\"\");\n                            const delsRangeSet = getRangeSet(\":dels\");\n                            const [queriedIndex, queriedRanges] = readSubscribers[method](req);\n                            getRangeSet(queriedIndex.name || \"\").add(queriedRanges);\n                            if (!queriedIndex.isPrimaryKey) {\n                                if (method === \"count\") {\n                                    delsRangeSet.add(FULL_RANGE);\n                                }\n                                else {\n                                    const keysPromise = method === \"query\" &&\n                                        outbound &&\n                                        req.values &&\n                                        table.query({\n                                            ...req,\n                                            values: false,\n                                        });\n                                    return table[method].apply(this, arguments).then((res) => {\n                                        if (method === \"query\") {\n                                            if (outbound && req.values) {\n                                                return keysPromise.then(({ result: resultingKeys }) => {\n                                                    pkRangeSet.addKeys(resultingKeys);\n                                                    return res;\n                                                });\n                                            }\n                                            const pKeys = req.values\n                                                ? res.result.map(extractKey)\n                                                : res.result;\n                                            if (req.values) {\n                                                pkRangeSet.addKeys(pKeys);\n                                            }\n                                            else {\n                                                delsRangeSet.addKeys(pKeys);\n                                            }\n                                        }\n                                        else if (method === \"openCursor\") {\n                                            const cursor = res;\n                                            const wantValues = req.values;\n                                            return (cursor &&\n                                                Object.create(cursor, {\n                                                    key: {\n                                                        get() {\n                                                            delsRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.key;\n                                                        },\n                                                    },\n                                                    primaryKey: {\n                                                        get() {\n                                                            const pkey = cursor.primaryKey;\n                                                            delsRangeSet.addKey(pkey);\n                                                            return pkey;\n                                                        },\n                                                    },\n                                                    value: {\n                                                        get() {\n                                                            wantValues && pkRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.value;\n                                                        },\n                                                    },\n                                                }));\n                                        }\n                                        return res;\n                                    });\n                                }\n                            }\n                        }\n                        return table[method].apply(this, arguments);\n                    };\n                });\n                return tableClone;\n            },\n        };\n    },\n};\nfunction trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs) {\n    function addAffectedIndex(ix) {\n        const rangeSet = getRangeSet(ix.name || \"\");\n        function extractKey(obj) {\n            return obj != null ? ix.extractKey(obj) : null;\n        }\n        const addKeyOrKeys = (key) => ix.multiEntry && isArray(key)\n            ? key.forEach(key => rangeSet.addKey(key))\n            : rangeSet.addKey(key);\n        (oldObjs || newObjs).forEach((_, i) => {\n            const oldKey = oldObjs && extractKey(oldObjs[i]);\n            const newKey = newObjs && extractKey(newObjs[i]);\n            if (cmp(oldKey, newKey) !== 0) {\n                if (oldKey != null)\n                    addKeyOrKeys(oldKey);\n                if (newKey != null)\n                    addKeyOrKeys(newKey);\n            }\n        });\n    }\n    schema.indexes.forEach(addAffectedIndex);\n}\n\nclass Dexie$1 {\n    constructor(name, options) {\n        this._middlewares = {};\n        this.verno = 0;\n        const deps = Dexie$1.dependencies;\n        this._options = options = {\n            addons: Dexie$1.addons,\n            autoOpen: true,\n            indexedDB: deps.indexedDB,\n            IDBKeyRange: deps.IDBKeyRange,\n            ...options\n        };\n        this._deps = {\n            indexedDB: options.indexedDB,\n            IDBKeyRange: options.IDBKeyRange\n        };\n        const { addons, } = options;\n        this._dbSchema = {};\n        this._versions = [];\n        this._storeNames = [];\n        this._allTables = {};\n        this.idbdb = null;\n        this._novip = this;\n        const state = {\n            dbOpenError: null,\n            isBeingOpened: false,\n            onReadyBeingFired: null,\n            openComplete: false,\n            dbReadyResolve: nop,\n            dbReadyPromise: null,\n            cancelOpen: nop,\n            openCanceller: null,\n            autoSchema: true,\n            PR1398_maxLoop: 3\n        };\n        state.dbReadyPromise = new DexiePromise(resolve => {\n            state.dbReadyResolve = resolve;\n        });\n        state.openCanceller = new DexiePromise((_, reject) => {\n            state.cancelOpen = reject;\n        });\n        this._state = state;\n        this.name = name;\n        this.on = Events(this, \"populate\", \"blocked\", \"versionchange\", \"close\", { ready: [promisableChain, nop] });\n        this.on.ready.subscribe = override(this.on.ready.subscribe, subscribe => {\n            return (subscriber, bSticky) => {\n                Dexie$1.vip(() => {\n                    const state = this._state;\n                    if (state.openComplete) {\n                        if (!state.dbOpenError)\n                            DexiePromise.resolve().then(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else if (state.onReadyBeingFired) {\n                        state.onReadyBeingFired.push(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else {\n                        subscribe(subscriber);\n                        const db = this;\n                        if (!bSticky)\n                            subscribe(function unsubscribe() {\n                                db.on.ready.unsubscribe(subscriber);\n                                db.on.ready.unsubscribe(unsubscribe);\n                            });\n                    }\n                });\n            };\n        });\n        this.Collection = createCollectionConstructor(this);\n        this.Table = createTableConstructor(this);\n        this.Transaction = createTransactionConstructor(this);\n        this.Version = createVersionConstructor(this);\n        this.WhereClause = createWhereClauseConstructor(this);\n        this.on(\"versionchange\", ev => {\n            if (ev.newVersion > 0)\n                console.warn(`Another connection wants to upgrade database '${this.name}'. Closing db now to resume the upgrade.`);\n            else\n                console.warn(`Another connection wants to delete database '${this.name}'. Closing db now to resume the delete request.`);\n            this.close();\n        });\n        this.on(\"blocked\", ev => {\n            if (!ev.newVersion || ev.newVersion < ev.oldVersion)\n                console.warn(`Dexie.delete('${this.name}') was blocked`);\n            else\n                console.warn(`Upgrade '${this.name}' blocked by other connection holding version ${ev.oldVersion / 10}`);\n        });\n        this._maxKey = getMaxKey(options.IDBKeyRange);\n        this._createTransaction = (mode, storeNames, dbschema, parentTransaction) => new this.Transaction(mode, storeNames, dbschema, this._options.chromeTransactionDurability, parentTransaction);\n        this._fireOnBlocked = ev => {\n            this.on(\"blocked\").fire(ev);\n            connections\n                .filter(c => c.name === this.name && c !== this && !c._state.vcFired)\n                .map(c => c.on(\"versionchange\").fire(ev));\n        };\n        this.use(virtualIndexMiddleware);\n        this.use(hooksMiddleware);\n        this.use(observabilityMiddleware);\n        this.use(cacheExistingValuesMiddleware);\n        this.vip = Object.create(this, { _vip: { value: true } });\n        addons.forEach(addon => addon(this));\n    }\n    version(versionNumber) {\n        if (isNaN(versionNumber) || versionNumber < 0.1)\n            throw new exceptions.Type(`Given version is not a positive number`);\n        versionNumber = Math.round(versionNumber * 10) / 10;\n        if (this.idbdb || this._state.isBeingOpened)\n            throw new exceptions.Schema(\"Cannot add version when database is open\");\n        this.verno = Math.max(this.verno, versionNumber);\n        const versions = this._versions;\n        var versionInstance = versions.filter(v => v._cfg.version === versionNumber)[0];\n        if (versionInstance)\n            return versionInstance;\n        versionInstance = new this.Version(versionNumber);\n        versions.push(versionInstance);\n        versions.sort(lowerVersionFirst);\n        versionInstance.stores({});\n        this._state.autoSchema = false;\n        return versionInstance;\n    }\n    _whenReady(fn) {\n        return (this.idbdb && (this._state.openComplete || PSD.letThrough || this._vip)) ? fn() : new DexiePromise((resolve, reject) => {\n            if (this._state.openComplete) {\n                return reject(new exceptions.DatabaseClosed(this._state.dbOpenError));\n            }\n            if (!this._state.isBeingOpened) {\n                if (!this._options.autoOpen) {\n                    reject(new exceptions.DatabaseClosed());\n                    return;\n                }\n                this.open().catch(nop);\n            }\n            this._state.dbReadyPromise.then(resolve, reject);\n        }).then(fn);\n    }\n    use({ stack, create, level, name }) {\n        if (name)\n            this.unuse({ stack, name });\n        const middlewares = this._middlewares[stack] || (this._middlewares[stack] = []);\n        middlewares.push({ stack, create, level: level == null ? 10 : level, name });\n        middlewares.sort((a, b) => a.level - b.level);\n        return this;\n    }\n    unuse({ stack, name, create }) {\n        if (stack && this._middlewares[stack]) {\n            this._middlewares[stack] = this._middlewares[stack].filter(mw => create ? mw.create !== create :\n                name ? mw.name !== name :\n                    false);\n        }\n        return this;\n    }\n    open() {\n        return dexieOpen(this);\n    }\n    _close() {\n        const state = this._state;\n        const idx = connections.indexOf(this);\n        if (idx >= 0)\n            connections.splice(idx, 1);\n        if (this.idbdb) {\n            try {\n                this.idbdb.close();\n            }\n            catch (e) { }\n            this._novip.idbdb = null;\n        }\n        state.dbReadyPromise = new DexiePromise(resolve => {\n            state.dbReadyResolve = resolve;\n        });\n        state.openCanceller = new DexiePromise((_, reject) => {\n            state.cancelOpen = reject;\n        });\n    }\n    close() {\n        this._close();\n        const state = this._state;\n        this._options.autoOpen = false;\n        state.dbOpenError = new exceptions.DatabaseClosed();\n        if (state.isBeingOpened)\n            state.cancelOpen(state.dbOpenError);\n    }\n    delete() {\n        const hasArguments = arguments.length > 0;\n        const state = this._state;\n        return new DexiePromise((resolve, reject) => {\n            const doDelete = () => {\n                this.close();\n                var req = this._deps.indexedDB.deleteDatabase(this.name);\n                req.onsuccess = wrap(() => {\n                    _onDatabaseDeleted(this._deps, this.name);\n                    resolve();\n                });\n                req.onerror = eventRejectHandler(reject);\n                req.onblocked = this._fireOnBlocked;\n            };\n            if (hasArguments)\n                throw new exceptions.InvalidArgument(\"Arguments not allowed in db.delete()\");\n            if (state.isBeingOpened) {\n                state.dbReadyPromise.then(doDelete);\n            }\n            else {\n                doDelete();\n            }\n        });\n    }\n    backendDB() {\n        return this.idbdb;\n    }\n    isOpen() {\n        return this.idbdb !== null;\n    }\n    hasBeenClosed() {\n        const dbOpenError = this._state.dbOpenError;\n        return dbOpenError && (dbOpenError.name === 'DatabaseClosed');\n    }\n    hasFailed() {\n        return this._state.dbOpenError !== null;\n    }\n    dynamicallyOpened() {\n        return this._state.autoSchema;\n    }\n    get tables() {\n        return keys(this._allTables).map(name => this._allTables[name]);\n    }\n    transaction() {\n        const args = extractTransactionArgs.apply(this, arguments);\n        return this._transaction.apply(this, args);\n    }\n    _transaction(mode, tables, scopeFunc) {\n        let parentTransaction = PSD.trans;\n        if (!parentTransaction || parentTransaction.db !== this || mode.indexOf('!') !== -1)\n            parentTransaction = null;\n        const onlyIfCompatible = mode.indexOf('?') !== -1;\n        mode = mode.replace('!', '').replace('?', '');\n        let idbMode, storeNames;\n        try {\n            storeNames = tables.map(table => {\n                var storeName = table instanceof this.Table ? table.name : table;\n                if (typeof storeName !== 'string')\n                    throw new TypeError(\"Invalid table argument to Dexie.transaction(). Only Table or String are allowed\");\n                return storeName;\n            });\n            if (mode == \"r\" || mode === READONLY)\n                idbMode = READONLY;\n            else if (mode == \"rw\" || mode == READWRITE)\n                idbMode = READWRITE;\n            else\n                throw new exceptions.InvalidArgument(\"Invalid transaction mode: \" + mode);\n            if (parentTransaction) {\n                if (parentTransaction.mode === READONLY && idbMode === READWRITE) {\n                    if (onlyIfCompatible) {\n                        parentTransaction = null;\n                    }\n                    else\n                        throw new exceptions.SubTransaction(\"Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY\");\n                }\n                if (parentTransaction) {\n                    storeNames.forEach(storeName => {\n                        if (parentTransaction && parentTransaction.storeNames.indexOf(storeName) === -1) {\n                            if (onlyIfCompatible) {\n                                parentTransaction = null;\n                            }\n                            else\n                                throw new exceptions.SubTransaction(\"Table \" + storeName +\n                                    \" not included in parent transaction.\");\n                        }\n                    });\n                }\n                if (onlyIfCompatible && parentTransaction && !parentTransaction.active) {\n                    parentTransaction = null;\n                }\n            }\n        }\n        catch (e) {\n            return parentTransaction ?\n                parentTransaction._promise(null, (_, reject) => { reject(e); }) :\n                rejection(e);\n        }\n        const enterTransaction = enterTransactionScope.bind(null, this, idbMode, storeNames, parentTransaction, scopeFunc);\n        return (parentTransaction ?\n            parentTransaction._promise(idbMode, enterTransaction, \"lock\") :\n            PSD.trans ?\n                usePSD(PSD.transless, () => this._whenReady(enterTransaction)) :\n                this._whenReady(enterTransaction));\n    }\n    table(tableName) {\n        if (!hasOwn(this._allTables, tableName)) {\n            throw new exceptions.InvalidTable(`Table ${tableName} does not exist`);\n        }\n        return this._allTables[tableName];\n    }\n}\n\nconst symbolObservable = typeof Symbol !== \"undefined\" && \"observable\" in Symbol\n    ? Symbol.observable\n    : \"@@observable\";\nclass Observable {\n    constructor(subscribe) {\n        this._subscribe = subscribe;\n    }\n    subscribe(x, error, complete) {\n        return this._subscribe(!x || typeof x === \"function\" ? { next: x, error, complete } : x);\n    }\n    [symbolObservable]() {\n        return this;\n    }\n}\n\nfunction extendObservabilitySet(target, newSet) {\n    keys(newSet).forEach(part => {\n        const rangeSet = target[part] || (target[part] = new RangeSet());\n        mergeRanges(rangeSet, newSet[part]);\n    });\n    return target;\n}\n\nfunction liveQuery(querier) {\n    return new Observable((observer) => {\n        const scopeFuncIsAsync = isAsyncFunction(querier);\n        function execute(subscr) {\n            if (scopeFuncIsAsync) {\n                incrementExpectedAwaits();\n            }\n            const exec = () => newScope(querier, { subscr, trans: null });\n            const rv = PSD.trans\n                ?\n                    usePSD(PSD.transless, exec)\n                : exec();\n            if (scopeFuncIsAsync) {\n                rv.then(decrementExpectedAwaits, decrementExpectedAwaits);\n            }\n            return rv;\n        }\n        let closed = false;\n        let accumMuts = {};\n        let currentObs = {};\n        const subscription = {\n            get closed() {\n                return closed;\n            },\n            unsubscribe: () => {\n                closed = true;\n                globalEvents.storagemutated.unsubscribe(mutationListener);\n            },\n        };\n        observer.start && observer.start(subscription);\n        let querying = false, startedListening = false;\n        function shouldNotify() {\n            return keys(currentObs).some((key) => accumMuts[key] && rangesOverlap(accumMuts[key], currentObs[key]));\n        }\n        const mutationListener = (parts) => {\n            extendObservabilitySet(accumMuts, parts);\n            if (shouldNotify()) {\n                doQuery();\n            }\n        };\n        const doQuery = () => {\n            if (querying || closed)\n                return;\n            accumMuts = {};\n            const subscr = {};\n            const ret = execute(subscr);\n            if (!startedListening) {\n                globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, mutationListener);\n                startedListening = true;\n            }\n            querying = true;\n            Promise.resolve(ret).then((result) => {\n                querying = false;\n                if (closed)\n                    return;\n                if (shouldNotify()) {\n                    doQuery();\n                }\n                else {\n                    accumMuts = {};\n                    currentObs = subscr;\n                    observer.next && observer.next(result);\n                }\n            }, (err) => {\n                querying = false;\n                observer.error && observer.error(err);\n                subscription.unsubscribe();\n            });\n        };\n        doQuery();\n        return subscription;\n    });\n}\n\nlet domDeps;\ntry {\n    domDeps = {\n        indexedDB: _global.indexedDB || _global.mozIndexedDB || _global.webkitIndexedDB || _global.msIndexedDB,\n        IDBKeyRange: _global.IDBKeyRange || _global.webkitIDBKeyRange\n    };\n}\ncatch (e) {\n    domDeps = { indexedDB: null, IDBKeyRange: null };\n}\n\nconst Dexie = Dexie$1;\nprops(Dexie, {\n    ...fullNameExceptions,\n    delete(databaseName) {\n        const db = new Dexie(databaseName, { addons: [] });\n        return db.delete();\n    },\n    exists(name) {\n        return new Dexie(name, { addons: [] }).open().then(db => {\n            db.close();\n            return true;\n        }).catch('NoSuchDatabaseError', () => false);\n    },\n    getDatabaseNames(cb) {\n        try {\n            return getDatabaseNames(Dexie.dependencies).then(cb);\n        }\n        catch (_a) {\n            return rejection(new exceptions.MissingAPI());\n        }\n    },\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return Class;\n    },\n    ignoreTransaction(scopeFunc) {\n        return PSD.trans ?\n            usePSD(PSD.transless, scopeFunc) :\n            scopeFunc();\n    },\n    vip,\n    async: function (generatorFn) {\n        return function () {\n            try {\n                var rv = awaitIterator(generatorFn.apply(this, arguments));\n                if (!rv || typeof rv.then !== 'function')\n                    return DexiePromise.resolve(rv);\n                return rv;\n            }\n            catch (e) {\n                return rejection(e);\n            }\n        };\n    },\n    spawn: function (generatorFn, args, thiz) {\n        try {\n            var rv = awaitIterator(generatorFn.apply(thiz, args || []));\n            if (!rv || typeof rv.then !== 'function')\n                return DexiePromise.resolve(rv);\n            return rv;\n        }\n        catch (e) {\n            return rejection(e);\n        }\n    },\n    currentTransaction: {\n        get: () => PSD.trans || null\n    },\n    waitFor: function (promiseOrFunction, optionalTimeout) {\n        const promise = DexiePromise.resolve(typeof promiseOrFunction === 'function' ?\n            Dexie.ignoreTransaction(promiseOrFunction) :\n            promiseOrFunction)\n            .timeout(optionalTimeout || 60000);\n        return PSD.trans ?\n            PSD.trans.waitFor(promise) :\n            promise;\n    },\n    Promise: DexiePromise,\n    debug: {\n        get: () => debug,\n        set: value => {\n            setDebug(value, value === 'dexie' ? () => true : dexieStackFrameFilter);\n        }\n    },\n    derive: derive,\n    extend: extend,\n    props: props,\n    override: override,\n    Events: Events,\n    on: globalEvents,\n    liveQuery,\n    extendObservabilitySet,\n    getByKeyPath: getByKeyPath,\n    setByKeyPath: setByKeyPath,\n    delByKeyPath: delByKeyPath,\n    shallowClone: shallowClone,\n    deepClone: deepClone,\n    getObjectDiff: getObjectDiff,\n    cmp,\n    asap: asap$1,\n    minKey: minKey,\n    addons: [],\n    connections: connections,\n    errnames: errnames,\n    dependencies: domDeps,\n    semVer: DEXIE_VERSION,\n    version: DEXIE_VERSION.split('.')\n        .map(n => parseInt(n))\n        .reduce((p, c, i) => p + (c / Math.pow(10, i * 2))),\n});\nDexie.maxKey = getMaxKey(Dexie.dependencies.IDBKeyRange);\n\nif (typeof dispatchEvent !== 'undefined' && typeof addEventListener !== 'undefined') {\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, updatedParts => {\n        if (!propagatingLocally) {\n            let event;\n            if (isIEOrEdge) {\n                event = document.createEvent('CustomEvent');\n                event.initCustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, true, true, updatedParts);\n            }\n            else {\n                event = new CustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, {\n                    detail: updatedParts\n                });\n            }\n            propagatingLocally = true;\n            dispatchEvent(event);\n            propagatingLocally = false;\n        }\n    });\n    addEventListener(STORAGE_MUTATED_DOM_EVENT_NAME, ({ detail }) => {\n        if (!propagatingLocally) {\n            propagateLocally(detail);\n        }\n    });\n}\nfunction propagateLocally(updateParts) {\n    let wasMe = propagatingLocally;\n    try {\n        propagatingLocally = true;\n        globalEvents.storagemutated.fire(updateParts);\n    }\n    finally {\n        propagatingLocally = wasMe;\n    }\n}\nlet propagatingLocally = false;\n\nif (typeof BroadcastChannel !== 'undefined') {\n    const bc = new BroadcastChannel(STORAGE_MUTATED_DOM_EVENT_NAME);\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, (changedParts) => {\n        if (!propagatingLocally) {\n            bc.postMessage(changedParts);\n        }\n    });\n    bc.onmessage = (ev) => {\n        if (ev.data)\n            propagateLocally(ev.data);\n    };\n}\nelse if (typeof self !== 'undefined' && typeof navigator !== 'undefined') {\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, (changedParts) => {\n        try {\n            if (!propagatingLocally) {\n                if (typeof localStorage !== 'undefined') {\n                    localStorage.setItem(STORAGE_MUTATED_DOM_EVENT_NAME, JSON.stringify({\n                        trig: Math.random(),\n                        changedParts,\n                    }));\n                }\n                if (typeof self['clients'] === 'object') {\n                    [...self['clients'].matchAll({ includeUncontrolled: true })].forEach((client) => client.postMessage({\n                        type: STORAGE_MUTATED_DOM_EVENT_NAME,\n                        changedParts,\n                    }));\n                }\n            }\n        }\n        catch (_a) { }\n    });\n    if (typeof addEventListener !== 'undefined') {\n        addEventListener('storage', (ev) => {\n            if (ev.key === STORAGE_MUTATED_DOM_EVENT_NAME) {\n                const data = JSON.parse(ev.newValue);\n                if (data)\n                    propagateLocally(data.changedParts);\n            }\n        });\n    }\n    const swContainer = self.document && navigator.serviceWorker;\n    if (swContainer) {\n        swContainer.addEventListener('message', propagateMessageLocally);\n    }\n}\nfunction propagateMessageLocally({ data }) {\n    if (data && data.type === STORAGE_MUTATED_DOM_EVENT_NAME) {\n        propagateLocally(data.changedParts);\n    }\n}\n\nDexiePromise.rejectionMapper = mapError;\nsetDebug(debug, dexieStackFrameFilter);\n\n\n//# sourceMappingURL=dexie.mjs.map\n\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/dexie/dist/modern/dexie.mjs?");

/***/ }),

/***/ "../../node_modules/axios/package.json":
/*!*********************************************!*\
  !*** ../../node_modules/axios/package.json ***!
  \*********************************************/
/***/ ((module) => {

eval("module.exports = JSON.parse('{\"name\":\"axios\",\"version\":\"0.21.4\",\"description\":\"Promise based HTTP client for the browser and node.js\",\"main\":\"index.js\",\"scripts\":{\"test\":\"grunt test\",\"start\":\"node ./sandbox/server.js\",\"build\":\"NODE_ENV=production grunt build\",\"preversion\":\"npm test\",\"version\":\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\",\"postversion\":\"git push && git push --tags\",\"examples\":\"node ./examples/server.js\",\"coveralls\":\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\",\"fix\":\"eslint --fix lib/**/*.js\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/axios/axios.git\"},\"keywords\":[\"xhr\",\"http\",\"ajax\",\"promise\",\"node\"],\"author\":\"Matt Zabriskie\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/axios/axios/issues\"},\"homepage\":\"https://axios-http.com\",\"devDependencies\":{\"coveralls\":\"^3.0.0\",\"es6-promise\":\"^4.2.4\",\"grunt\":\"^1.3.0\",\"grunt-banner\":\"^0.6.0\",\"grunt-cli\":\"^1.2.0\",\"grunt-contrib-clean\":\"^1.1.0\",\"grunt-contrib-watch\":\"^1.0.0\",\"grunt-eslint\":\"^23.0.0\",\"grunt-karma\":\"^4.0.0\",\"grunt-mocha-test\":\"^0.13.3\",\"grunt-ts\":\"^6.0.0-beta.19\",\"grunt-webpack\":\"^4.0.2\",\"istanbul-instrumenter-loader\":\"^1.0.0\",\"jasmine-core\":\"^2.4.1\",\"karma\":\"^6.3.2\",\"karma-chrome-launcher\":\"^3.1.0\",\"karma-firefox-launcher\":\"^2.1.0\",\"karma-jasmine\":\"^1.1.1\",\"karma-jasmine-ajax\":\"^0.1.13\",\"karma-safari-launcher\":\"^1.0.0\",\"karma-sauce-launcher\":\"^4.3.6\",\"karma-sinon\":\"^1.0.5\",\"karma-sourcemap-loader\":\"^0.3.8\",\"karma-webpack\":\"^4.0.2\",\"load-grunt-tasks\":\"^3.5.2\",\"minimist\":\"^1.2.0\",\"mocha\":\"^8.2.1\",\"sinon\":\"^4.5.0\",\"terser-webpack-plugin\":\"^4.2.3\",\"typescript\":\"^4.0.5\",\"url-search-params\":\"^0.10.0\",\"webpack\":\"^4.44.2\",\"webpack-dev-server\":\"^3.11.0\"},\"browser\":{\"./lib/adapters/http.js\":\"./lib/adapters/xhr.js\"},\"jsdelivr\":\"dist/axios.min.js\",\"unpkg\":\"dist/axios.min.js\",\"typings\":\"./index.d.ts\",\"dependencies\":{\"follow-redirects\":\"^1.14.0\"},\"bundlesize\":[{\"path\":\"./dist/axios.min.js\",\"threshold\":\"5kB\"}]}');\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/axios/package.json?");

/***/ }),

/***/ "../../node_modules/bip39/src/wordlists/english.json":
/*!***********************************************************!*\
  !*** ../../node_modules/bip39/src/wordlists/english.json ***!
  \***********************************************************/
/***/ ((module) => {

eval("module.exports = JSON.parse('[\"abandon\",\"ability\",\"able\",\"about\",\"above\",\"absent\",\"absorb\",\"abstract\",\"absurd\",\"abuse\",\"access\",\"accident\",\"account\",\"accuse\",\"achieve\",\"acid\",\"acoustic\",\"acquire\",\"across\",\"act\",\"action\",\"actor\",\"actress\",\"actual\",\"adapt\",\"add\",\"addict\",\"address\",\"adjust\",\"admit\",\"adult\",\"advance\",\"advice\",\"aerobic\",\"affair\",\"afford\",\"afraid\",\"again\",\"age\",\"agent\",\"agree\",\"ahead\",\"aim\",\"air\",\"airport\",\"aisle\",\"alarm\",\"album\",\"alcohol\",\"alert\",\"alien\",\"all\",\"alley\",\"allow\",\"almost\",\"alone\",\"alpha\",\"already\",\"also\",\"alter\",\"always\",\"amateur\",\"amazing\",\"among\",\"amount\",\"amused\",\"analyst\",\"anchor\",\"ancient\",\"anger\",\"angle\",\"angry\",\"animal\",\"ankle\",\"announce\",\"annual\",\"another\",\"answer\",\"antenna\",\"antique\",\"anxiety\",\"any\",\"apart\",\"apology\",\"appear\",\"apple\",\"approve\",\"april\",\"arch\",\"arctic\",\"area\",\"arena\",\"argue\",\"arm\",\"armed\",\"armor\",\"army\",\"around\",\"arrange\",\"arrest\",\"arrive\",\"arrow\",\"art\",\"artefact\",\"artist\",\"artwork\",\"ask\",\"aspect\",\"assault\",\"asset\",\"assist\",\"assume\",\"asthma\",\"athlete\",\"atom\",\"attack\",\"attend\",\"attitude\",\"attract\",\"auction\",\"audit\",\"august\",\"aunt\",\"author\",\"auto\",\"autumn\",\"average\",\"avocado\",\"avoid\",\"awake\",\"aware\",\"away\",\"awesome\",\"awful\",\"awkward\",\"axis\",\"baby\",\"bachelor\",\"bacon\",\"badge\",\"bag\",\"balance\",\"balcony\",\"ball\",\"bamboo\",\"banana\",\"banner\",\"bar\",\"barely\",\"bargain\",\"barrel\",\"base\",\"basic\",\"basket\",\"battle\",\"beach\",\"bean\",\"beauty\",\"because\",\"become\",\"beef\",\"before\",\"begin\",\"behave\",\"behind\",\"believe\",\"below\",\"belt\",\"bench\",\"benefit\",\"best\",\"betray\",\"better\",\"between\",\"beyond\",\"bicycle\",\"bid\",\"bike\",\"bind\",\"biology\",\"bird\",\"birth\",\"bitter\",\"black\",\"blade\",\"blame\",\"blanket\",\"blast\",\"bleak\",\"bless\",\"blind\",\"blood\",\"blossom\",\"blouse\",\"blue\",\"blur\",\"blush\",\"board\",\"boat\",\"body\",\"boil\",\"bomb\",\"bone\",\"bonus\",\"book\",\"boost\",\"border\",\"boring\",\"borrow\",\"boss\",\"bottom\",\"bounce\",\"box\",\"boy\",\"bracket\",\"brain\",\"brand\",\"brass\",\"brave\",\"bread\",\"breeze\",\"brick\",\"bridge\",\"brief\",\"bright\",\"bring\",\"brisk\",\"broccoli\",\"broken\",\"bronze\",\"broom\",\"brother\",\"brown\",\"brush\",\"bubble\",\"buddy\",\"budget\",\"buffalo\",\"build\",\"bulb\",\"bulk\",\"bullet\",\"bundle\",\"bunker\",\"burden\",\"burger\",\"burst\",\"bus\",\"business\",\"busy\",\"butter\",\"buyer\",\"buzz\",\"cabbage\",\"cabin\",\"cable\",\"cactus\",\"cage\",\"cake\",\"call\",\"calm\",\"camera\",\"camp\",\"can\",\"canal\",\"cancel\",\"candy\",\"cannon\",\"canoe\",\"canvas\",\"canyon\",\"capable\",\"capital\",\"captain\",\"car\",\"carbon\",\"card\",\"cargo\",\"carpet\",\"carry\",\"cart\",\"case\",\"cash\",\"casino\",\"castle\",\"casual\",\"cat\",\"catalog\",\"catch\",\"category\",\"cattle\",\"caught\",\"cause\",\"caution\",\"cave\",\"ceiling\",\"celery\",\"cement\",\"census\",\"century\",\"cereal\",\"certain\",\"chair\",\"chalk\",\"champion\",\"change\",\"chaos\",\"chapter\",\"charge\",\"chase\",\"chat\",\"cheap\",\"check\",\"cheese\",\"chef\",\"cherry\",\"chest\",\"chicken\",\"chief\",\"child\",\"chimney\",\"choice\",\"choose\",\"chronic\",\"chuckle\",\"chunk\",\"churn\",\"cigar\",\"cinnamon\",\"circle\",\"citizen\",\"city\",\"civil\",\"claim\",\"clap\",\"clarify\",\"claw\",\"clay\",\"clean\",\"clerk\",\"clever\",\"click\",\"client\",\"cliff\",\"climb\",\"clinic\",\"clip\",\"clock\",\"clog\",\"close\",\"cloth\",\"cloud\",\"clown\",\"club\",\"clump\",\"cluster\",\"clutch\",\"coach\",\"coast\",\"coconut\",\"code\",\"coffee\",\"coil\",\"coin\",\"collect\",\"color\",\"column\",\"combine\",\"come\",\"comfort\",\"comic\",\"common\",\"company\",\"concert\",\"conduct\",\"confirm\",\"congress\",\"connect\",\"consider\",\"control\",\"convince\",\"cook\",\"cool\",\"copper\",\"copy\",\"coral\",\"core\",\"corn\",\"correct\",\"cost\",\"cotton\",\"couch\",\"country\",\"couple\",\"course\",\"cousin\",\"cover\",\"coyote\",\"crack\",\"cradle\",\"craft\",\"cram\",\"crane\",\"crash\",\"crater\",\"crawl\",\"crazy\",\"cream\",\"credit\",\"creek\",\"crew\",\"cricket\",\"crime\",\"crisp\",\"critic\",\"crop\",\"cross\",\"crouch\",\"crowd\",\"crucial\",\"cruel\",\"cruise\",\"crumble\",\"crunch\",\"crush\",\"cry\",\"crystal\",\"cube\",\"culture\",\"cup\",\"cupboard\",\"curious\",\"current\",\"curtain\",\"curve\",\"cushion\",\"custom\",\"cute\",\"cycle\",\"dad\",\"damage\",\"damp\",\"dance\",\"danger\",\"daring\",\"dash\",\"daughter\",\"dawn\",\"day\",\"deal\",\"debate\",\"debris\",\"decade\",\"december\",\"decide\",\"decline\",\"decorate\",\"decrease\",\"deer\",\"defense\",\"define\",\"defy\",\"degree\",\"delay\",\"deliver\",\"demand\",\"demise\",\"denial\",\"dentist\",\"deny\",\"depart\",\"depend\",\"deposit\",\"depth\",\"deputy\",\"derive\",\"describe\",\"desert\",\"design\",\"desk\",\"despair\",\"destroy\",\"detail\",\"detect\",\"develop\",\"device\",\"devote\",\"diagram\",\"dial\",\"diamond\",\"diary\",\"dice\",\"diesel\",\"diet\",\"differ\",\"digital\",\"dignity\",\"dilemma\",\"dinner\",\"dinosaur\",\"direct\",\"dirt\",\"disagree\",\"discover\",\"disease\",\"dish\",\"dismiss\",\"disorder\",\"display\",\"distance\",\"divert\",\"divide\",\"divorce\",\"dizzy\",\"doctor\",\"document\",\"dog\",\"doll\",\"dolphin\",\"domain\",\"donate\",\"donkey\",\"donor\",\"door\",\"dose\",\"double\",\"dove\",\"draft\",\"dragon\",\"drama\",\"drastic\",\"draw\",\"dream\",\"dress\",\"drift\",\"drill\",\"drink\",\"drip\",\"drive\",\"drop\",\"drum\",\"dry\",\"duck\",\"dumb\",\"dune\",\"during\",\"dust\",\"dutch\",\"duty\",\"dwarf\",\"dynamic\",\"eager\",\"eagle\",\"early\",\"earn\",\"earth\",\"easily\",\"east\",\"easy\",\"echo\",\"ecology\",\"economy\",\"edge\",\"edit\",\"educate\",\"effort\",\"egg\",\"eight\",\"either\",\"elbow\",\"elder\",\"electric\",\"elegant\",\"element\",\"elephant\",\"elevator\",\"elite\",\"else\",\"embark\",\"embody\",\"embrace\",\"emerge\",\"emotion\",\"employ\",\"empower\",\"empty\",\"enable\",\"enact\",\"end\",\"endless\",\"endorse\",\"enemy\",\"energy\",\"enforce\",\"engage\",\"engine\",\"enhance\",\"enjoy\",\"enlist\",\"enough\",\"enrich\",\"enroll\",\"ensure\",\"enter\",\"entire\",\"entry\",\"envelope\",\"episode\",\"equal\",\"equip\",\"era\",\"erase\",\"erode\",\"erosion\",\"error\",\"erupt\",\"escape\",\"essay\",\"essence\",\"estate\",\"eternal\",\"ethics\",\"evidence\",\"evil\",\"evoke\",\"evolve\",\"exact\",\"example\",\"excess\",\"exchange\",\"excite\",\"exclude\",\"excuse\",\"execute\",\"exercise\",\"exhaust\",\"exhibit\",\"exile\",\"exist\",\"exit\",\"exotic\",\"expand\",\"expect\",\"expire\",\"explain\",\"expose\",\"express\",\"extend\",\"extra\",\"eye\",\"eyebrow\",\"fabric\",\"face\",\"faculty\",\"fade\",\"faint\",\"faith\",\"fall\",\"false\",\"fame\",\"family\",\"famous\",\"fan\",\"fancy\",\"fantasy\",\"farm\",\"fashion\",\"fat\",\"fatal\",\"father\",\"fatigue\",\"fault\",\"favorite\",\"feature\",\"february\",\"federal\",\"fee\",\"feed\",\"feel\",\"female\",\"fence\",\"festival\",\"fetch\",\"fever\",\"few\",\"fiber\",\"fiction\",\"field\",\"figure\",\"file\",\"film\",\"filter\",\"final\",\"find\",\"fine\",\"finger\",\"finish\",\"fire\",\"firm\",\"first\",\"fiscal\",\"fish\",\"fit\",\"fitness\",\"fix\",\"flag\",\"flame\",\"flash\",\"flat\",\"flavor\",\"flee\",\"flight\",\"flip\",\"float\",\"flock\",\"floor\",\"flower\",\"fluid\",\"flush\",\"fly\",\"foam\",\"focus\",\"fog\",\"foil\",\"fold\",\"follow\",\"food\",\"foot\",\"force\",\"forest\",\"forget\",\"fork\",\"fortune\",\"forum\",\"forward\",\"fossil\",\"foster\",\"found\",\"fox\",\"fragile\",\"frame\",\"frequent\",\"fresh\",\"friend\",\"fringe\",\"frog\",\"front\",\"frost\",\"frown\",\"frozen\",\"fruit\",\"fuel\",\"fun\",\"funny\",\"furnace\",\"fury\",\"future\",\"gadget\",\"gain\",\"galaxy\",\"gallery\",\"game\",\"gap\",\"garage\",\"garbage\",\"garden\",\"garlic\",\"garment\",\"gas\",\"gasp\",\"gate\",\"gather\",\"gauge\",\"gaze\",\"general\",\"genius\",\"genre\",\"gentle\",\"genuine\",\"gesture\",\"ghost\",\"giant\",\"gift\",\"giggle\",\"ginger\",\"giraffe\",\"girl\",\"give\",\"glad\",\"glance\",\"glare\",\"glass\",\"glide\",\"glimpse\",\"globe\",\"gloom\",\"glory\",\"glove\",\"glow\",\"glue\",\"goat\",\"goddess\",\"gold\",\"good\",\"goose\",\"gorilla\",\"gospel\",\"gossip\",\"govern\",\"gown\",\"grab\",\"grace\",\"grain\",\"grant\",\"grape\",\"grass\",\"gravity\",\"great\",\"green\",\"grid\",\"grief\",\"grit\",\"grocery\",\"group\",\"grow\",\"grunt\",\"guard\",\"guess\",\"guide\",\"guilt\",\"guitar\",\"gun\",\"gym\",\"habit\",\"hair\",\"half\",\"hammer\",\"hamster\",\"hand\",\"happy\",\"harbor\",\"hard\",\"harsh\",\"harvest\",\"hat\",\"have\",\"hawk\",\"hazard\",\"head\",\"health\",\"heart\",\"heavy\",\"hedgehog\",\"height\",\"hello\",\"helmet\",\"help\",\"hen\",\"hero\",\"hidden\",\"high\",\"hill\",\"hint\",\"hip\",\"hire\",\"history\",\"hobby\",\"hockey\",\"hold\",\"hole\",\"holiday\",\"hollow\",\"home\",\"honey\",\"hood\",\"hope\",\"horn\",\"horror\",\"horse\",\"hospital\",\"host\",\"hotel\",\"hour\",\"hover\",\"hub\",\"huge\",\"human\",\"humble\",\"humor\",\"hundred\",\"hungry\",\"hunt\",\"hurdle\",\"hurry\",\"hurt\",\"husband\",\"hybrid\",\"ice\",\"icon\",\"idea\",\"identify\",\"idle\",\"ignore\",\"ill\",\"illegal\",\"illness\",\"image\",\"imitate\",\"immense\",\"immune\",\"impact\",\"impose\",\"improve\",\"impulse\",\"inch\",\"include\",\"income\",\"increase\",\"index\",\"indicate\",\"indoor\",\"industry\",\"infant\",\"inflict\",\"inform\",\"inhale\",\"inherit\",\"initial\",\"inject\",\"injury\",\"inmate\",\"inner\",\"innocent\",\"input\",\"inquiry\",\"insane\",\"insect\",\"inside\",\"inspire\",\"install\",\"intact\",\"interest\",\"into\",\"invest\",\"invite\",\"involve\",\"iron\",\"island\",\"isolate\",\"issue\",\"item\",\"ivory\",\"jacket\",\"jaguar\",\"jar\",\"jazz\",\"jealous\",\"jeans\",\"jelly\",\"jewel\",\"job\",\"join\",\"joke\",\"journey\",\"joy\",\"judge\",\"juice\",\"jump\",\"jungle\",\"junior\",\"junk\",\"just\",\"kangaroo\",\"keen\",\"keep\",\"ketchup\",\"key\",\"kick\",\"kid\",\"kidney\",\"kind\",\"kingdom\",\"kiss\",\"kit\",\"kitchen\",\"kite\",\"kitten\",\"kiwi\",\"knee\",\"knife\",\"knock\",\"know\",\"lab\",\"label\",\"labor\",\"ladder\",\"lady\",\"lake\",\"lamp\",\"language\",\"laptop\",\"large\",\"later\",\"latin\",\"laugh\",\"laundry\",\"lava\",\"law\",\"lawn\",\"lawsuit\",\"layer\",\"lazy\",\"leader\",\"leaf\",\"learn\",\"leave\",\"lecture\",\"left\",\"leg\",\"legal\",\"legend\",\"leisure\",\"lemon\",\"lend\",\"length\",\"lens\",\"leopard\",\"lesson\",\"letter\",\"level\",\"liar\",\"liberty\",\"library\",\"license\",\"life\",\"lift\",\"light\",\"like\",\"limb\",\"limit\",\"link\",\"lion\",\"liquid\",\"list\",\"little\",\"live\",\"lizard\",\"load\",\"loan\",\"lobster\",\"local\",\"lock\",\"logic\",\"lonely\",\"long\",\"loop\",\"lottery\",\"loud\",\"lounge\",\"love\",\"loyal\",\"lucky\",\"luggage\",\"lumber\",\"lunar\",\"lunch\",\"luxury\",\"lyrics\",\"machine\",\"mad\",\"magic\",\"magnet\",\"maid\",\"mail\",\"main\",\"major\",\"make\",\"mammal\",\"man\",\"manage\",\"mandate\",\"mango\",\"mansion\",\"manual\",\"maple\",\"marble\",\"march\",\"margin\",\"marine\",\"market\",\"marriage\",\"mask\",\"mass\",\"master\",\"match\",\"material\",\"math\",\"matrix\",\"matter\",\"maximum\",\"maze\",\"meadow\",\"mean\",\"measure\",\"meat\",\"mechanic\",\"medal\",\"media\",\"melody\",\"melt\",\"member\",\"memory\",\"mention\",\"menu\",\"mercy\",\"merge\",\"merit\",\"merry\",\"mesh\",\"message\",\"metal\",\"method\",\"middle\",\"midnight\",\"milk\",\"million\",\"mimic\",\"mind\",\"minimum\",\"minor\",\"minute\",\"miracle\",\"mirror\",\"misery\",\"miss\",\"mistake\",\"mix\",\"mixed\",\"mixture\",\"mobile\",\"model\",\"modify\",\"mom\",\"moment\",\"monitor\",\"monkey\",\"monster\",\"month\",\"moon\",\"moral\",\"more\",\"morning\",\"mosquito\",\"mother\",\"motion\",\"motor\",\"mountain\",\"mouse\",\"move\",\"movie\",\"much\",\"muffin\",\"mule\",\"multiply\",\"muscle\",\"museum\",\"mushroom\",\"music\",\"must\",\"mutual\",\"myself\",\"mystery\",\"myth\",\"naive\",\"name\",\"napkin\",\"narrow\",\"nasty\",\"nation\",\"nature\",\"near\",\"neck\",\"need\",\"negative\",\"neglect\",\"neither\",\"nephew\",\"nerve\",\"nest\",\"net\",\"network\",\"neutral\",\"never\",\"news\",\"next\",\"nice\",\"night\",\"noble\",\"noise\",\"nominee\",\"noodle\",\"normal\",\"north\",\"nose\",\"notable\",\"note\",\"nothing\",\"notice\",\"novel\",\"now\",\"nuclear\",\"number\",\"nurse\",\"nut\",\"oak\",\"obey\",\"object\",\"oblige\",\"obscure\",\"observe\",\"obtain\",\"obvious\",\"occur\",\"ocean\",\"october\",\"odor\",\"off\",\"offer\",\"office\",\"often\",\"oil\",\"okay\",\"old\",\"olive\",\"olympic\",\"omit\",\"once\",\"one\",\"onion\",\"online\",\"only\",\"open\",\"opera\",\"opinion\",\"oppose\",\"option\",\"orange\",\"orbit\",\"orchard\",\"order\",\"ordinary\",\"organ\",\"orient\",\"original\",\"orphan\",\"ostrich\",\"other\",\"outdoor\",\"outer\",\"output\",\"outside\",\"oval\",\"oven\",\"over\",\"own\",\"owner\",\"oxygen\",\"oyster\",\"ozone\",\"pact\",\"paddle\",\"page\",\"pair\",\"palace\",\"palm\",\"panda\",\"panel\",\"panic\",\"panther\",\"paper\",\"parade\",\"parent\",\"park\",\"parrot\",\"party\",\"pass\",\"patch\",\"path\",\"patient\",\"patrol\",\"pattern\",\"pause\",\"pave\",\"payment\",\"peace\",\"peanut\",\"pear\",\"peasant\",\"pelican\",\"pen\",\"penalty\",\"pencil\",\"people\",\"pepper\",\"perfect\",\"permit\",\"person\",\"pet\",\"phone\",\"photo\",\"phrase\",\"physical\",\"piano\",\"picnic\",\"picture\",\"piece\",\"pig\",\"pigeon\",\"pill\",\"pilot\",\"pink\",\"pioneer\",\"pipe\",\"pistol\",\"pitch\",\"pizza\",\"place\",\"planet\",\"plastic\",\"plate\",\"play\",\"please\",\"pledge\",\"pluck\",\"plug\",\"plunge\",\"poem\",\"poet\",\"point\",\"polar\",\"pole\",\"police\",\"pond\",\"pony\",\"pool\",\"popular\",\"portion\",\"position\",\"possible\",\"post\",\"potato\",\"pottery\",\"poverty\",\"powder\",\"power\",\"practice\",\"praise\",\"predict\",\"prefer\",\"prepare\",\"present\",\"pretty\",\"prevent\",\"price\",\"pride\",\"primary\",\"print\",\"priority\",\"prison\",\"private\",\"prize\",\"problem\",\"process\",\"produce\",\"profit\",\"program\",\"project\",\"promote\",\"proof\",\"property\",\"prosper\",\"protect\",\"proud\",\"provide\",\"public\",\"pudding\",\"pull\",\"pulp\",\"pulse\",\"pumpkin\",\"punch\",\"pupil\",\"puppy\",\"purchase\",\"purity\",\"purpose\",\"purse\",\"push\",\"put\",\"puzzle\",\"pyramid\",\"quality\",\"quantum\",\"quarter\",\"question\",\"quick\",\"quit\",\"quiz\",\"quote\",\"rabbit\",\"raccoon\",\"race\",\"rack\",\"radar\",\"radio\",\"rail\",\"rain\",\"raise\",\"rally\",\"ramp\",\"ranch\",\"random\",\"range\",\"rapid\",\"rare\",\"rate\",\"rather\",\"raven\",\"raw\",\"razor\",\"ready\",\"real\",\"reason\",\"rebel\",\"rebuild\",\"recall\",\"receive\",\"recipe\",\"record\",\"recycle\",\"reduce\",\"reflect\",\"reform\",\"refuse\",\"region\",\"regret\",\"regular\",\"reject\",\"relax\",\"release\",\"relief\",\"rely\",\"remain\",\"remember\",\"remind\",\"remove\",\"render\",\"renew\",\"rent\",\"reopen\",\"repair\",\"repeat\",\"replace\",\"report\",\"require\",\"rescue\",\"resemble\",\"resist\",\"resource\",\"response\",\"result\",\"retire\",\"retreat\",\"return\",\"reunion\",\"reveal\",\"review\",\"reward\",\"rhythm\",\"rib\",\"ribbon\",\"rice\",\"rich\",\"ride\",\"ridge\",\"rifle\",\"right\",\"rigid\",\"ring\",\"riot\",\"ripple\",\"risk\",\"ritual\",\"rival\",\"river\",\"road\",\"roast\",\"robot\",\"robust\",\"rocket\",\"romance\",\"roof\",\"rookie\",\"room\",\"rose\",\"rotate\",\"rough\",\"round\",\"route\",\"royal\",\"rubber\",\"rude\",\"rug\",\"rule\",\"run\",\"runway\",\"rural\",\"sad\",\"saddle\",\"sadness\",\"safe\",\"sail\",\"salad\",\"salmon\",\"salon\",\"salt\",\"salute\",\"same\",\"sample\",\"sand\",\"satisfy\",\"satoshi\",\"sauce\",\"sausage\",\"save\",\"say\",\"scale\",\"scan\",\"scare\",\"scatter\",\"scene\",\"scheme\",\"school\",\"science\",\"scissors\",\"scorpion\",\"scout\",\"scrap\",\"screen\",\"script\",\"scrub\",\"sea\",\"search\",\"season\",\"seat\",\"second\",\"secret\",\"section\",\"security\",\"seed\",\"seek\",\"segment\",\"select\",\"sell\",\"seminar\",\"senior\",\"sense\",\"sentence\",\"series\",\"service\",\"session\",\"settle\",\"setup\",\"seven\",\"shadow\",\"shaft\",\"shallow\",\"share\",\"shed\",\"shell\",\"sheriff\",\"shield\",\"shift\",\"shine\",\"ship\",\"shiver\",\"shock\",\"shoe\",\"shoot\",\"shop\",\"short\",\"shoulder\",\"shove\",\"shrimp\",\"shrug\",\"shuffle\",\"shy\",\"sibling\",\"sick\",\"side\",\"siege\",\"sight\",\"sign\",\"silent\",\"silk\",\"silly\",\"silver\",\"similar\",\"simple\",\"since\",\"sing\",\"siren\",\"sister\",\"situate\",\"six\",\"size\",\"skate\",\"sketch\",\"ski\",\"skill\",\"skin\",\"skirt\",\"skull\",\"slab\",\"slam\",\"sleep\",\"slender\",\"slice\",\"slide\",\"slight\",\"slim\",\"slogan\",\"slot\",\"slow\",\"slush\",\"small\",\"smart\",\"smile\",\"smoke\",\"smooth\",\"snack\",\"snake\",\"snap\",\"sniff\",\"snow\",\"soap\",\"soccer\",\"social\",\"sock\",\"soda\",\"soft\",\"solar\",\"soldier\",\"solid\",\"solution\",\"solve\",\"someone\",\"song\",\"soon\",\"sorry\",\"sort\",\"soul\",\"sound\",\"soup\",\"source\",\"south\",\"space\",\"spare\",\"spatial\",\"spawn\",\"speak\",\"special\",\"speed\",\"spell\",\"spend\",\"sphere\",\"spice\",\"spider\",\"spike\",\"spin\",\"spirit\",\"split\",\"spoil\",\"sponsor\",\"spoon\",\"sport\",\"spot\",\"spray\",\"spread\",\"spring\",\"spy\",\"square\",\"squeeze\",\"squirrel\",\"stable\",\"stadium\",\"staff\",\"stage\",\"stairs\",\"stamp\",\"stand\",\"start\",\"state\",\"stay\",\"steak\",\"steel\",\"stem\",\"step\",\"stereo\",\"stick\",\"still\",\"sting\",\"stock\",\"stomach\",\"stone\",\"stool\",\"story\",\"stove\",\"strategy\",\"street\",\"strike\",\"strong\",\"struggle\",\"student\",\"stuff\",\"stumble\",\"style\",\"subject\",\"submit\",\"subway\",\"success\",\"such\",\"sudden\",\"suffer\",\"sugar\",\"suggest\",\"suit\",\"summer\",\"sun\",\"sunny\",\"sunset\",\"super\",\"supply\",\"supreme\",\"sure\",\"surface\",\"surge\",\"surprise\",\"surround\",\"survey\",\"suspect\",\"sustain\",\"swallow\",\"swamp\",\"swap\",\"swarm\",\"swear\",\"sweet\",\"swift\",\"swim\",\"swing\",\"switch\",\"sword\",\"symbol\",\"symptom\",\"syrup\",\"system\",\"table\",\"tackle\",\"tag\",\"tail\",\"talent\",\"talk\",\"tank\",\"tape\",\"target\",\"task\",\"taste\",\"tattoo\",\"taxi\",\"teach\",\"team\",\"tell\",\"ten\",\"tenant\",\"tennis\",\"tent\",\"term\",\"test\",\"text\",\"thank\",\"that\",\"theme\",\"then\",\"theory\",\"there\",\"they\",\"thing\",\"this\",\"thought\",\"three\",\"thrive\",\"throw\",\"thumb\",\"thunder\",\"ticket\",\"tide\",\"tiger\",\"tilt\",\"timber\",\"time\",\"tiny\",\"tip\",\"tired\",\"tissue\",\"title\",\"toast\",\"tobacco\",\"today\",\"toddler\",\"toe\",\"together\",\"toilet\",\"token\",\"tomato\",\"tomorrow\",\"tone\",\"tongue\",\"tonight\",\"tool\",\"tooth\",\"top\",\"topic\",\"topple\",\"torch\",\"tornado\",\"tortoise\",\"toss\",\"total\",\"tourist\",\"toward\",\"tower\",\"town\",\"toy\",\"track\",\"trade\",\"traffic\",\"tragic\",\"train\",\"transfer\",\"trap\",\"trash\",\"travel\",\"tray\",\"treat\",\"tree\",\"trend\",\"trial\",\"tribe\",\"trick\",\"trigger\",\"trim\",\"trip\",\"trophy\",\"trouble\",\"truck\",\"true\",\"truly\",\"trumpet\",\"trust\",\"truth\",\"try\",\"tube\",\"tuition\",\"tumble\",\"tuna\",\"tunnel\",\"turkey\",\"turn\",\"turtle\",\"twelve\",\"twenty\",\"twice\",\"twin\",\"twist\",\"two\",\"type\",\"typical\",\"ugly\",\"umbrella\",\"unable\",\"unaware\",\"uncle\",\"uncover\",\"under\",\"undo\",\"unfair\",\"unfold\",\"unhappy\",\"uniform\",\"unique\",\"unit\",\"universe\",\"unknown\",\"unlock\",\"until\",\"unusual\",\"unveil\",\"update\",\"upgrade\",\"uphold\",\"upon\",\"upper\",\"upset\",\"urban\",\"urge\",\"usage\",\"use\",\"used\",\"useful\",\"useless\",\"usual\",\"utility\",\"vacant\",\"vacuum\",\"vague\",\"valid\",\"valley\",\"valve\",\"van\",\"vanish\",\"vapor\",\"various\",\"vast\",\"vault\",\"vehicle\",\"velvet\",\"vendor\",\"venture\",\"venue\",\"verb\",\"verify\",\"version\",\"very\",\"vessel\",\"veteran\",\"viable\",\"vibrant\",\"vicious\",\"victory\",\"video\",\"view\",\"village\",\"vintage\",\"violin\",\"virtual\",\"virus\",\"visa\",\"visit\",\"visual\",\"vital\",\"vivid\",\"vocal\",\"voice\",\"void\",\"volcano\",\"volume\",\"vote\",\"voyage\",\"wage\",\"wagon\",\"wait\",\"walk\",\"wall\",\"walnut\",\"want\",\"warfare\",\"warm\",\"warrior\",\"wash\",\"wasp\",\"waste\",\"water\",\"wave\",\"way\",\"wealth\",\"weapon\",\"wear\",\"weasel\",\"weather\",\"web\",\"wedding\",\"weekend\",\"weird\",\"welcome\",\"west\",\"wet\",\"whale\",\"what\",\"wheat\",\"wheel\",\"when\",\"where\",\"whip\",\"whisper\",\"wide\",\"width\",\"wife\",\"wild\",\"will\",\"win\",\"window\",\"wine\",\"wing\",\"wink\",\"winner\",\"winter\",\"wire\",\"wisdom\",\"wise\",\"wish\",\"witness\",\"wolf\",\"woman\",\"wonder\",\"wood\",\"wool\",\"word\",\"work\",\"world\",\"worry\",\"worth\",\"wrap\",\"wreck\",\"wrestle\",\"wrist\",\"write\",\"wrong\",\"yard\",\"year\",\"yellow\",\"you\",\"young\",\"youth\",\"zebra\",\"zero\",\"zone\",\"zoo\"]');\n\n//# sourceURL=webpack://mainnet-js/../../node_modules/bip39/src/wordlists/english.json?");

/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		id: moduleId,
/******/ 		loaded: false,
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Flag the module as loaded
/******/ 	module.loaded = true;
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/async module */
/******/ (() => {
/******/ 	var webpackQueues = typeof Symbol === "function" ? Symbol("webpack queues") : "__webpack_queues__";
/******/ 	var webpackExports = typeof Symbol === "function" ? Symbol("webpack exports") : "__webpack_exports__";
/******/ 	var webpackError = typeof Symbol === "function" ? Symbol("webpack error") : "__webpack_error__";
/******/ 	var resolveQueue = (queue) => {
/******/ 		if(queue && !queue.d) {
/******/ 			queue.d = 1;
/******/ 			queue.forEach((fn) => (fn.r--));
/******/ 			queue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));
/******/ 		}
/******/ 	}
/******/ 	var wrapDeps = (deps) => (deps.map((dep) => {
/******/ 		if(dep !== null && typeof dep === "object") {
/******/ 			if(dep[webpackQueues]) return dep;
/******/ 			if(dep.then) {
/******/ 				var queue = [];
/******/ 				queue.d = 0;
/******/ 				dep.then((r) => {
/******/ 					obj[webpackExports] = r;
/******/ 					resolveQueue(queue);
/******/ 				}, (e) => {
/******/ 					obj[webpackError] = e;
/******/ 					resolveQueue(queue);
/******/ 				});
/******/ 				var obj = {};
/******/ 				obj[webpackQueues] = (fn) => (fn(queue));
/******/ 				return obj;
/******/ 			}
/******/ 		}
/******/ 		var ret = {};
/******/ 		ret[webpackQueues] = x => {};
/******/ 		ret[webpackExports] = dep;
/******/ 		return ret;
/******/ 	}));
/******/ 	__webpack_require__.a = (module, body, hasAwait) => {
/******/ 		var queue;
/******/ 		hasAwait && ((queue = []).d = 1);
/******/ 		var depQueues = new Set();
/******/ 		var exports = module.exports;
/******/ 		var currentDeps;
/******/ 		var outerResolve;
/******/ 		var reject;
/******/ 		var promise = new Promise((resolve, rej) => {
/******/ 			reject = rej;
/******/ 			outerResolve = resolve;
/******/ 		});
/******/ 		promise[webpackExports] = exports;
/******/ 		promise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise["catch"](x => {}));
/******/ 		module.exports = promise;
/******/ 		body((deps) => {
/******/ 			currentDeps = wrapDeps(deps);
/******/ 			var fn;
/******/ 			var getResult = () => (currentDeps.map((d) => {
/******/ 				if(d[webpackError]) throw d[webpackError];
/******/ 				return d[webpackExports];
/******/ 			}))
/******/ 			var promise = new Promise((resolve) => {
/******/ 				fn = () => (resolve(getResult));
/******/ 				fn.r = 0;
/******/ 				var fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));
/******/ 				currentDeps.map((dep) => (dep[webpackQueues](fnQueue)));
/******/ 			});
/******/ 			return fn.r ? promise : getResult();
/******/ 		}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));
/******/ 		queue && (queue.d = 0);
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/compat get default export */
/******/ (() => {
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = (module) => {
/******/ 		var getter = module && module.__esModule ?
/******/ 			() => (module['default']) :
/******/ 			() => (module);
/******/ 		__webpack_require__.d(getter, { a: getter });
/******/ 		return getter;
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/global */
/******/ (() => {
/******/ 	__webpack_require__.g = (function() {
/******/ 		if (typeof globalThis === 'object') return globalThis;
/******/ 		try {
/******/ 			return this || new Function('return this')();
/******/ 		} catch (e) {
/******/ 			if (typeof window === 'object') return window;
/******/ 		}
/******/ 	})();
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/node module decorator */
/******/ (() => {
/******/ 	__webpack_require__.nmd = (module) => {
/******/ 		module.paths = [];
/******/ 		if (!module.children) module.children = [];
/******/ 		return module;
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
/******/ 
/******/ // startup
/******/ // Load entry module and return exports
/******/ // This entry module can't be inlined because the eval devtool is used.
/******/ var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ self.__mainnetPromise = __webpack_exports__;
/******/ 
