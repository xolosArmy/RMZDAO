{"ast":null,"code":"import React,{useState}from\"react\";import WalletConnect from\"@walletconnect/client\";import{QRCodeCanvas}from\"qrcode.react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[walletConnected,setWalletConnected]=useState(false);const[account,setAccount]=useState(null);const[walletConnector,setWalletConnector]=useState(null);const[pairingUri,setPairingUri]=useState(\"\");// Function to connect the wallet\nconst connectWallet=async()=>{const connector=new WalletConnect({bridge:\"https://bridge.walletconnect.org\"// Standard WalletConnect bridge\n});if(!connector.connected){await connector.createSession();setPairingUri(connector.uri);// Set the pairing URI for QR Code\n}// Listen for connection event\nconnector.on(\"connect\",(error,payload)=>{if(error){console.error(\"Error connecting:\",error);return;}const{accounts}=payload.params[0];setAccount(accounts[0]);setWalletConnected(true);});// Listen for disconnection event\nconnector.on(\"disconnect\",error=>{if(error){console.error(\"Error disconnecting:\",error);return;}setWalletConnected(false);setAccount(null);setWalletConnector(null);setPairingUri(\"\");});setWalletConnector(connector);};// Function to disconnect the wallet\nconst disconnectWallet=()=>{if(walletConnector){walletConnector.killSession();}};// Simulate a transaction\nconst sendTransaction=async()=>{if(!walletConnector)return;const txData={to:\"bitcoincash:qq6ne0m5gdp8w9pwy5n2wea65pjv8sc8yx77c3arfr\",value:\"1000\",// Amount in satoshis\ndata:\"\"};try{const result=await walletConnector.sendCustomRequest({method:\"bch_signTransaction\",params:[txData]});console.log(\"Transaction signed:\",result);}catch(error){console.error(\"Error signing transaction:\",error);}};return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\",padding:\"20px\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Xolos $RMZ DAO\"}),!walletConnected?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:connectWallet,style:{padding:\"10px 20px\",fontSize:\"16px\",backgroundColor:\"#4CAF50\",color:\"white\",border:\"none\",borderRadius:\"5px\",cursor:\"pointer\"},children:\"Conectar Billetera\"}),pairingUri&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"20px\"},children:[/*#__PURE__*/_jsx(\"p\",{children:\"Escanea este c\\xF3digo QR con tu billetera Paytaca:\"}),/*#__PURE__*/_jsx(QRCodeCanvas,{value:pairingUri,size:200})]})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Billetera conectada:\"}),\" \",account]}),/*#__PURE__*/_jsx(\"button\",{onClick:disconnectWallet,style:{padding:\"10px 20px\",fontSize:\"16px\",backgroundColor:\"#f44336\",color:\"white\",border:\"none\",borderRadius:\"5px\",cursor:\"pointer\",marginRight:\"10px\"},children:\"Desconectar Billetera\"}),/*#__PURE__*/_jsx(\"button\",{onClick:sendTransaction,style:{padding:\"10px 20px\",fontSize:\"16px\",backgroundColor:\"#008CBA\",color:\"white\",border:\"none\",borderRadius:\"5px\",cursor:\"pointer\"},children:\"Enviar Transacci\\xF3n\"})]})]});};export default App;","map":{"version":3,"names":["React","useState","WalletConnect","QRCodeCanvas","jsx","_jsx","jsxs","_jsxs","App","walletConnected","setWalletConnected","account","setAccount","walletConnector","setWalletConnector","pairingUri","setPairingUri","connectWallet","connector","bridge","connected","createSession","uri","on","error","payload","console","accounts","params","disconnectWallet","killSession","sendTransaction","txData","to","value","data","result","sendCustomRequest","method","log","style","textAlign","padding","children","onClick","fontSize","backgroundColor","color","border","borderRadius","cursor","marginTop","size","marginRight"],"sources":["C:/Users/ferra/Documents/RMZDAO/RMZDAO/rmzdao-ui/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport WalletConnect from \"@walletconnect/client\";\r\nimport { QRCodeCanvas } from \"qrcode.react\";\r\n\r\nconst App = () => {\r\n  const [walletConnected, setWalletConnected] = useState(false);\r\n  const [account, setAccount] = useState(null);\r\n  const [walletConnector, setWalletConnector] = useState(null);\r\n  const [pairingUri, setPairingUri] = useState(\"\");\r\n\r\n  // Function to connect the wallet\r\n  const connectWallet = async () => {\r\n    const connector = new WalletConnect({\r\n      bridge: \"https://bridge.walletconnect.org\", // Standard WalletConnect bridge\r\n    });\r\n\r\n    if (!connector.connected) {\r\n      await connector.createSession();\r\n      setPairingUri(connector.uri); // Set the pairing URI for QR Code\r\n    }\r\n\r\n    // Listen for connection event\r\n    connector.on(\"connect\", (error, payload) => {\r\n      if (error) {\r\n        console.error(\"Error connecting:\", error);\r\n        return;\r\n      }\r\n\r\n      const { accounts } = payload.params[0];\r\n      setAccount(accounts[0]);\r\n      setWalletConnected(true);\r\n    });\r\n\r\n    // Listen for disconnection event\r\n    connector.on(\"disconnect\", (error) => {\r\n      if (error) {\r\n        console.error(\"Error disconnecting:\", error);\r\n        return;\r\n      }\r\n\r\n      setWalletConnected(false);\r\n      setAccount(null);\r\n      setWalletConnector(null);\r\n      setPairingUri(\"\");\r\n    });\r\n\r\n    setWalletConnector(connector);\r\n  };\r\n\r\n  // Function to disconnect the wallet\r\n  const disconnectWallet = () => {\r\n    if (walletConnector) {\r\n      walletConnector.killSession();\r\n    }\r\n  };\r\n\r\n  // Simulate a transaction\r\n  const sendTransaction = async () => {\r\n    if (!walletConnector) return;\r\n\r\n    const txData = {\r\n      to: \"bitcoincash:qq6ne0m5gdp8w9pwy5n2wea65pjv8sc8yx77c3arfr\",\r\n      value: \"1000\", // Amount in satoshis\r\n      data: \"\",\r\n    };\r\n\r\n    try {\r\n      const result = await walletConnector.sendCustomRequest({\r\n        method: \"bch_signTransaction\",\r\n        params: [txData],\r\n      });\r\n      console.log(\"Transaction signed:\", result);\r\n    } catch (error) {\r\n      console.error(\"Error signing transaction:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n      <h1>Xolos $RMZ DAO</h1>\r\n      {!walletConnected ? (\r\n        <div>\r\n          <button\r\n            onClick={connectWallet}\r\n            style={{\r\n              padding: \"10px 20px\",\r\n              fontSize: \"16px\",\r\n              backgroundColor: \"#4CAF50\",\r\n              color: \"white\",\r\n              border: \"none\",\r\n              borderRadius: \"5px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Conectar Billetera\r\n          </button>\r\n          {pairingUri && (\r\n            <div style={{ marginTop: \"20px\" }}>\r\n              <p>Escanea este código QR con tu billetera Paytaca:</p>\r\n              <QRCodeCanvas value={pairingUri} size={200} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p>\r\n            <strong>Billetera conectada:</strong> {account}\r\n          </p>\r\n          <button\r\n            onClick={disconnectWallet}\r\n            style={{\r\n              padding: \"10px 20px\",\r\n              fontSize: \"16px\",\r\n              backgroundColor: \"#f44336\",\r\n              color: \"white\",\r\n              border: \"none\",\r\n              borderRadius: \"5px\",\r\n              cursor: \"pointer\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            Desconectar Billetera\r\n          </button>\r\n          <button\r\n            onClick={sendTransaction}\r\n            style={{\r\n              padding: \"10px 20px\",\r\n              fontSize: \"16px\",\r\n              backgroundColor: \"#008CBA\",\r\n              color: \"white\",\r\n              border: \"none\",\r\n              borderRadius: \"5px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Enviar Transacción\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}